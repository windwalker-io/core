"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_windwalker_io_core"] = self["webpackChunk_windwalker_io_core"] || []).push([["vendors-node_modules_sql-formatter_lib_sqlFormatter_js"],{

/***/ "../../../../../node_modules/sql-formatter/lib/core/Formatter.js":
/*!***********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/Formatter.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nvar _Indentation = _interopRequireDefault(__webpack_require__(/*! ./Indentation */ \"../../../../../node_modules/sql-formatter/lib/core/Indentation.js\"));\n\nvar _InlineBlock = _interopRequireDefault(__webpack_require__(/*! ./InlineBlock */ \"../../../../../node_modules/sql-formatter/lib/core/InlineBlock.js\"));\n\nvar _Params = _interopRequireDefault(__webpack_require__(/*! ./Params */ \"../../../../../node_modules/sql-formatter/lib/core/Params.js\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar _token = __webpack_require__(/*! ./token */ \"../../../../../node_modules/sql-formatter/lib/core/token.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Formatter = /*#__PURE__*/function () {\n  /**\n   * @param {Object} cfg\n   *  @param {String} cfg.language\n   *  @param {String} cfg.indent\n   *  @param {Boolean} cfg.uppercase\n   *  @param {Integer} cfg.linesBetweenQueries\n   *  @param {Object} cfg.params\n   */\n  function Formatter(cfg) {\n    _classCallCheck(this, Formatter);\n\n    this.cfg = cfg;\n    this.indentation = new _Indentation[\"default\"](this.cfg.indent);\n    this.inlineBlock = new _InlineBlock[\"default\"]();\n    this.params = new _Params[\"default\"](this.cfg.params);\n    this.previousReservedToken = {};\n    this.tokens = [];\n    this.index = 0;\n  }\n  /**\n   * SQL Tokenizer for this formatter, provided by subclasses.\n   */\n\n\n  _createClass(Formatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      throw new Error('tokenizer() not implemented by subclass');\n    }\n    /**\n     * Reprocess and modify a token based on parsed context.\n     *\n     * @param {Object} token The token to modify\n     *  @param {String} token.type\n     *  @param {String} token.value\n     * @return {Object} new token or the original\n     *  @return {String} token.type\n     *  @return {String} token.value\n     */\n\n  }, {\n    key: \"tokenOverride\",\n    value: function tokenOverride(token) {\n      // subclasses can override this to modify tokens during formatting\n      return token;\n    }\n    /**\n     * Formats whitespace in a SQL string to make it easier to read.\n     *\n     * @param {String} query The SQL query string\n     * @return {String} formatted query\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(query) {\n      this.tokens = this.tokenizer().tokenize(query);\n      var formattedQuery = this.getFormattedQueryFromTokens();\n      return formattedQuery.trim();\n    }\n  }, {\n    key: \"getFormattedQueryFromTokens\",\n    value: function getFormattedQueryFromTokens() {\n      var _this = this;\n\n      var formattedQuery = '';\n      this.tokens.forEach(function (token, index) {\n        _this.index = index;\n        token = _this.tokenOverride(token);\n\n        if (token.type === _tokenTypes[\"default\"].LINE_COMMENT) {\n          formattedQuery = _this.formatLineComment(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].BLOCK_COMMENT) {\n          formattedQuery = _this.formatBlockComment(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL) {\n          formattedQuery = _this.formatTopLevelReservedWord(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL_NO_INDENT) {\n          formattedQuery = _this.formatTopLevelReservedWordNoIndent(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED_NEWLINE) {\n          formattedQuery = _this.formatNewlineReservedWord(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED) {\n          formattedQuery = _this.formatWithSpaces(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].OPEN_PAREN) {\n          formattedQuery = _this.formatOpeningParentheses(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].CLOSE_PAREN) {\n          formattedQuery = _this.formatClosingParentheses(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].PLACEHOLDER) {\n          formattedQuery = _this.formatPlaceholder(token, formattedQuery);\n        } else if (token.value === ',') {\n          formattedQuery = _this.formatComma(token, formattedQuery);\n        } else if (token.value === ':') {\n          formattedQuery = _this.formatWithSpaceAfter(token, formattedQuery);\n        } else if (token.value === '.') {\n          formattedQuery = _this.formatWithoutSpaces(token, formattedQuery);\n        } else if (token.value === ';') {\n          formattedQuery = _this.formatQuerySeparator(token, formattedQuery);\n        } else {\n          formattedQuery = _this.formatWithSpaces(token, formattedQuery);\n        }\n      });\n      return formattedQuery;\n    }\n  }, {\n    key: \"formatLineComment\",\n    value: function formatLineComment(token, query) {\n      return this.addNewline(query + this.show(token));\n    }\n  }, {\n    key: \"formatBlockComment\",\n    value: function formatBlockComment(token, query) {\n      return this.addNewline(this.addNewline(query) + this.indentComment(token.value));\n    }\n  }, {\n    key: \"indentComment\",\n    value: function indentComment(comment) {\n      return comment.replace(/\\n[\\t ]*/g, '\\n' + this.indentation.getIndent() + ' ');\n    }\n  }, {\n    key: \"formatTopLevelReservedWordNoIndent\",\n    value: function formatTopLevelReservedWordNoIndent(token, query) {\n      this.indentation.decreaseTopLevel();\n      query = this.addNewline(query) + this.equalizeWhitespace(this.show(token));\n      return this.addNewline(query);\n    }\n  }, {\n    key: \"formatTopLevelReservedWord\",\n    value: function formatTopLevelReservedWord(token, query) {\n      this.indentation.decreaseTopLevel();\n      query = this.addNewline(query);\n      this.indentation.increaseTopLevel();\n      query += this.equalizeWhitespace(this.show(token));\n      return this.addNewline(query);\n    }\n  }, {\n    key: \"formatNewlineReservedWord\",\n    value: function formatNewlineReservedWord(token, query) {\n      if ((0, _token.isAnd)(token) && (0, _token.isBetween)(this.tokenLookBehind(2))) {\n        return this.formatWithSpaces(token, query);\n      }\n\n      return this.addNewline(query) + this.equalizeWhitespace(this.show(token)) + ' ';\n    } // Replace any sequence of whitespace characters with single space\n\n  }, {\n    key: \"equalizeWhitespace\",\n    value: function equalizeWhitespace(string) {\n      return string.replace(/[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+/g, ' ');\n    } // Opening parentheses increase the block indent level and start a new line\n\n  }, {\n    key: \"formatOpeningParentheses\",\n    value: function formatOpeningParentheses(token, query) {\n      var _preserveWhitespaceFo, _this$tokenLookBehind;\n\n      // Take out the preceding space unless there was whitespace there in the original query\n      // or another opening parens or line comment\n      var preserveWhitespaceFor = (_preserveWhitespaceFo = {}, _defineProperty(_preserveWhitespaceFo, _tokenTypes[\"default\"].OPEN_PAREN, true), _defineProperty(_preserveWhitespaceFo, _tokenTypes[\"default\"].LINE_COMMENT, true), _defineProperty(_preserveWhitespaceFo, _tokenTypes[\"default\"].OPERATOR, true), _preserveWhitespaceFo);\n\n      if (token.whitespaceBefore.length === 0 && !preserveWhitespaceFor[(_this$tokenLookBehind = this.tokenLookBehind()) === null || _this$tokenLookBehind === void 0 ? void 0 : _this$tokenLookBehind.type]) {\n        query = (0, _utils.trimSpacesEnd)(query);\n      }\n\n      query += this.show(token);\n      this.inlineBlock.beginIfPossible(this.tokens, this.index);\n\n      if (!this.inlineBlock.isActive()) {\n        this.indentation.increaseBlockLevel();\n        query = this.addNewline(query);\n      }\n\n      return query;\n    } // Closing parentheses decrease the block indent level\n\n  }, {\n    key: \"formatClosingParentheses\",\n    value: function formatClosingParentheses(token, query) {\n      if (this.inlineBlock.isActive()) {\n        this.inlineBlock.end();\n        return this.formatWithSpaceAfter(token, query);\n      } else {\n        this.indentation.decreaseBlockLevel();\n        return this.formatWithSpaces(token, this.addNewline(query));\n      }\n    }\n  }, {\n    key: \"formatPlaceholder\",\n    value: function formatPlaceholder(token, query) {\n      return query + this.params.get(token) + ' ';\n    } // Commas start a new line (unless within inline parentheses or SQL \"LIMIT\" clause)\n\n  }, {\n    key: \"formatComma\",\n    value: function formatComma(token, query) {\n      query = (0, _utils.trimSpacesEnd)(query) + this.show(token) + ' ';\n\n      if (this.inlineBlock.isActive()) {\n        return query;\n      } else if ((0, _token.isLimit)(this.previousReservedToken)) {\n        return query;\n      } else {\n        return this.addNewline(query);\n      }\n    }\n  }, {\n    key: \"formatWithSpaceAfter\",\n    value: function formatWithSpaceAfter(token, query) {\n      return (0, _utils.trimSpacesEnd)(query) + this.show(token) + ' ';\n    }\n  }, {\n    key: \"formatWithoutSpaces\",\n    value: function formatWithoutSpaces(token, query) {\n      return (0, _utils.trimSpacesEnd)(query) + this.show(token);\n    }\n  }, {\n    key: \"formatWithSpaces\",\n    value: function formatWithSpaces(token, query) {\n      return query + this.show(token) + ' ';\n    }\n  }, {\n    key: \"formatQuerySeparator\",\n    value: function formatQuerySeparator(token, query) {\n      this.indentation.resetIndentation();\n      return (0, _utils.trimSpacesEnd)(query) + this.show(token) + '\\n'.repeat(this.cfg.linesBetweenQueries || 1);\n    } // Converts token to string (uppercasing it if needed)\n\n  }, {\n    key: \"show\",\n    value: function show(_ref) {\n      var type = _ref.type,\n          value = _ref.value;\n\n      if (this.cfg.uppercase && (type === _tokenTypes[\"default\"].RESERVED || type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL || type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL_NO_INDENT || type === _tokenTypes[\"default\"].RESERVED_NEWLINE || type === _tokenTypes[\"default\"].OPEN_PAREN || type === _tokenTypes[\"default\"].CLOSE_PAREN)) {\n        return value.toUpperCase();\n      } else {\n        return value;\n      }\n    }\n  }, {\n    key: \"addNewline\",\n    value: function addNewline(query) {\n      query = (0, _utils.trimSpacesEnd)(query);\n\n      if (!query.endsWith('\\n')) {\n        query += '\\n';\n      }\n\n      return query + this.indentation.getIndent();\n    }\n  }, {\n    key: \"tokenLookBehind\",\n    value: function tokenLookBehind() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.tokens[this.index - n];\n    }\n  }, {\n    key: \"tokenLookAhead\",\n    value: function tokenLookAhead() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.tokens[this.index + n];\n    }\n  }]);\n\n  return Formatter;\n}();\n\nexports[\"default\"] = Formatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvRm9ybWF0dGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdpbmR3YWxrZXItaW8vY29yZS8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvY29yZS9Gb3JtYXR0ZXIuanM/MzUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3Rva2VuVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Rva2VuVHlwZXNcIikpO1xuXG52YXIgX0luZGVudGF0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9JbmRlbnRhdGlvblwiKSk7XG5cbnZhciBfSW5saW5lQmxvY2sgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0lubGluZUJsb2NrXCIpKTtcblxudmFyIF9QYXJhbXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL1BhcmFtc1wiKSk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG5cbnZhciBfdG9rZW4gPSByZXF1aXJlKFwiLi90b2tlblwiKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxudmFyIEZvcm1hdHRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gY2ZnXG4gICAqICBAcGFyYW0ge1N0cmluZ30gY2ZnLmxhbmd1YWdlXG4gICAqICBAcGFyYW0ge1N0cmluZ30gY2ZnLmluZGVudFxuICAgKiAgQHBhcmFtIHtCb29sZWFufSBjZmcudXBwZXJjYXNlXG4gICAqICBAcGFyYW0ge0ludGVnZXJ9IGNmZy5saW5lc0JldHdlZW5RdWVyaWVzXG4gICAqICBAcGFyYW0ge09iamVjdH0gY2ZnLnBhcmFtc1xuICAgKi9cbiAgZnVuY3Rpb24gRm9ybWF0dGVyKGNmZykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGb3JtYXR0ZXIpO1xuXG4gICAgdGhpcy5jZmcgPSBjZmc7XG4gICAgdGhpcy5pbmRlbnRhdGlvbiA9IG5ldyBfSW5kZW50YXRpb25bXCJkZWZhdWx0XCJdKHRoaXMuY2ZnLmluZGVudCk7XG4gICAgdGhpcy5pbmxpbmVCbG9jayA9IG5ldyBfSW5saW5lQmxvY2tbXCJkZWZhdWx0XCJdKCk7XG4gICAgdGhpcy5wYXJhbXMgPSBuZXcgX1BhcmFtc1tcImRlZmF1bHRcIl0odGhpcy5jZmcucGFyYW1zKTtcbiAgICB0aGlzLnByZXZpb3VzUmVzZXJ2ZWRUb2tlbiA9IHt9O1xuICAgIHRoaXMudG9rZW5zID0gW107XG4gICAgdGhpcy5pbmRleCA9IDA7XG4gIH1cbiAgLyoqXG4gICAqIFNRTCBUb2tlbml6ZXIgZm9yIHRoaXMgZm9ybWF0dGVyLCBwcm92aWRlZCBieSBzdWJjbGFzc2VzLlxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhGb3JtYXR0ZXIsIFt7XG4gICAga2V5OiBcInRva2VuaXplclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2tlbml6ZXIoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Rva2VuaXplcigpIG5vdCBpbXBsZW1lbnRlZCBieSBzdWJjbGFzcycpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXByb2Nlc3MgYW5kIG1vZGlmeSBhIHRva2VuIGJhc2VkIG9uIHBhcnNlZCBjb250ZXh0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHRva2VuIFRoZSB0b2tlbiB0byBtb2RpZnlcbiAgICAgKiAgQHBhcmFtIHtTdHJpbmd9IHRva2VuLnR5cGVcbiAgICAgKiAgQHBhcmFtIHtTdHJpbmd9IHRva2VuLnZhbHVlXG4gICAgICogQHJldHVybiB7T2JqZWN0fSBuZXcgdG9rZW4gb3IgdGhlIG9yaWdpbmFsXG4gICAgICogIEByZXR1cm4ge1N0cmluZ30gdG9rZW4udHlwZVxuICAgICAqICBAcmV0dXJuIHtTdHJpbmd9IHRva2VuLnZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJ0b2tlbk92ZXJyaWRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRva2VuT3ZlcnJpZGUodG9rZW4pIHtcbiAgICAgIC8vIHN1YmNsYXNzZXMgY2FuIG92ZXJyaWRlIHRoaXMgdG8gbW9kaWZ5IHRva2VucyBkdXJpbmcgZm9ybWF0dGluZ1xuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGb3JtYXRzIHdoaXRlc3BhY2UgaW4gYSBTUUwgc3RyaW5nIHRvIG1ha2UgaXQgZWFzaWVyIHRvIHJlYWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcXVlcnkgVGhlIFNRTCBxdWVyeSBzdHJpbmdcbiAgICAgKiBAcmV0dXJuIHtTdHJpbmd9IGZvcm1hdHRlZCBxdWVyeVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZm9ybWF0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdChxdWVyeSkge1xuICAgICAgdGhpcy50b2tlbnMgPSB0aGlzLnRva2VuaXplcigpLnRva2VuaXplKHF1ZXJ5KTtcbiAgICAgIHZhciBmb3JtYXR0ZWRRdWVyeSA9IHRoaXMuZ2V0Rm9ybWF0dGVkUXVlcnlGcm9tVG9rZW5zKCk7XG4gICAgICByZXR1cm4gZm9ybWF0dGVkUXVlcnkudHJpbSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRGb3JtYXR0ZWRRdWVyeUZyb21Ub2tlbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Rm9ybWF0dGVkUXVlcnlGcm9tVG9rZW5zKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGZvcm1hdHRlZFF1ZXJ5ID0gJyc7XG4gICAgICB0aGlzLnRva2Vucy5mb3JFYWNoKGZ1bmN0aW9uICh0b2tlbiwgaW5kZXgpIHtcbiAgICAgICAgX3RoaXMuaW5kZXggPSBpbmRleDtcbiAgICAgICAgdG9rZW4gPSBfdGhpcy50b2tlbk92ZXJyaWRlKHRva2VuKTtcblxuICAgICAgICBpZiAodG9rZW4udHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLkxJTkVfQ09NTUVOVCkge1xuICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5ID0gX3RoaXMuZm9ybWF0TGluZUNvbW1lbnQodG9rZW4sIGZvcm1hdHRlZFF1ZXJ5KTtcbiAgICAgICAgfSBlbHNlIGlmICh0b2tlbi50eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uQkxPQ0tfQ09NTUVOVCkge1xuICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5ID0gX3RoaXMuZm9ybWF0QmxvY2tDb21tZW50KHRva2VuLCBmb3JtYXR0ZWRRdWVyeSk7XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4udHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEX1RPUF9MRVZFTCkge1xuICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5ID0gX3RoaXMuZm9ybWF0VG9wTGV2ZWxSZXNlcnZlZFdvcmQodG9rZW4sIGZvcm1hdHRlZFF1ZXJ5KTtcbiAgICAgICAgICBfdGhpcy5wcmV2aW91c1Jlc2VydmVkVG9rZW4gPSB0b2tlbjtcbiAgICAgICAgfSBlbHNlIGlmICh0b2tlbi50eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRURfVE9QX0xFVkVMX05PX0lOREVOVCkge1xuICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5ID0gX3RoaXMuZm9ybWF0VG9wTGV2ZWxSZXNlcnZlZFdvcmROb0luZGVudCh0b2tlbiwgZm9ybWF0dGVkUXVlcnkpO1xuICAgICAgICAgIF90aGlzLnByZXZpb3VzUmVzZXJ2ZWRUb2tlbiA9IHRva2VuO1xuICAgICAgICB9IGVsc2UgaWYgKHRva2VuLnR5cGUgPT09IF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5SRVNFUlZFRF9ORVdMSU5FKSB7XG4gICAgICAgICAgZm9ybWF0dGVkUXVlcnkgPSBfdGhpcy5mb3JtYXROZXdsaW5lUmVzZXJ2ZWRXb3JkKHRva2VuLCBmb3JtYXR0ZWRRdWVyeSk7XG4gICAgICAgICAgX3RoaXMucHJldmlvdXNSZXNlcnZlZFRva2VuID0gdG9rZW47XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4udHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEKSB7XG4gICAgICAgICAgZm9ybWF0dGVkUXVlcnkgPSBfdGhpcy5mb3JtYXRXaXRoU3BhY2VzKHRva2VuLCBmb3JtYXR0ZWRRdWVyeSk7XG4gICAgICAgICAgX3RoaXMucHJldmlvdXNSZXNlcnZlZFRva2VuID0gdG9rZW47XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4udHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLk9QRU5fUEFSRU4pIHtcbiAgICAgICAgICBmb3JtYXR0ZWRRdWVyeSA9IF90aGlzLmZvcm1hdE9wZW5pbmdQYXJlbnRoZXNlcyh0b2tlbiwgZm9ybWF0dGVkUXVlcnkpO1xuICAgICAgICB9IGVsc2UgaWYgKHRva2VuLnR5cGUgPT09IF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5DTE9TRV9QQVJFTikge1xuICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5ID0gX3RoaXMuZm9ybWF0Q2xvc2luZ1BhcmVudGhlc2VzKHRva2VuLCBmb3JtYXR0ZWRRdWVyeSk7XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4udHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlBMQUNFSE9MREVSKSB7XG4gICAgICAgICAgZm9ybWF0dGVkUXVlcnkgPSBfdGhpcy5mb3JtYXRQbGFjZWhvbGRlcih0b2tlbiwgZm9ybWF0dGVkUXVlcnkpO1xuICAgICAgICB9IGVsc2UgaWYgKHRva2VuLnZhbHVlID09PSAnLCcpIHtcbiAgICAgICAgICBmb3JtYXR0ZWRRdWVyeSA9IF90aGlzLmZvcm1hdENvbW1hKHRva2VuLCBmb3JtYXR0ZWRRdWVyeSk7XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4udmFsdWUgPT09ICc6Jykge1xuICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5ID0gX3RoaXMuZm9ybWF0V2l0aFNwYWNlQWZ0ZXIodG9rZW4sIGZvcm1hdHRlZFF1ZXJ5KTtcbiAgICAgICAgfSBlbHNlIGlmICh0b2tlbi52YWx1ZSA9PT0gJy4nKSB7XG4gICAgICAgICAgZm9ybWF0dGVkUXVlcnkgPSBfdGhpcy5mb3JtYXRXaXRob3V0U3BhY2VzKHRva2VuLCBmb3JtYXR0ZWRRdWVyeSk7XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4udmFsdWUgPT09ICc7Jykge1xuICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5ID0gX3RoaXMuZm9ybWF0UXVlcnlTZXBhcmF0b3IodG9rZW4sIGZvcm1hdHRlZFF1ZXJ5KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmb3JtYXR0ZWRRdWVyeSA9IF90aGlzLmZvcm1hdFdpdGhTcGFjZXModG9rZW4sIGZvcm1hdHRlZFF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZm9ybWF0dGVkUXVlcnk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcm1hdExpbmVDb21tZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdExpbmVDb21tZW50KHRva2VuLCBxdWVyeSkge1xuICAgICAgcmV0dXJuIHRoaXMuYWRkTmV3bGluZShxdWVyeSArIHRoaXMuc2hvdyh0b2tlbikpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRCbG9ja0NvbW1lbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0QmxvY2tDb21tZW50KHRva2VuLCBxdWVyeSkge1xuICAgICAgcmV0dXJuIHRoaXMuYWRkTmV3bGluZSh0aGlzLmFkZE5ld2xpbmUocXVlcnkpICsgdGhpcy5pbmRlbnRDb21tZW50KHRva2VuLnZhbHVlKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImluZGVudENvbW1lbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5kZW50Q29tbWVudChjb21tZW50KSB7XG4gICAgICByZXR1cm4gY29tbWVudC5yZXBsYWNlKC9cXG5bXFx0IF0qL2csICdcXG4nICsgdGhpcy5pbmRlbnRhdGlvbi5nZXRJbmRlbnQoKSArICcgJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcm1hdFRvcExldmVsUmVzZXJ2ZWRXb3JkTm9JbmRlbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0VG9wTGV2ZWxSZXNlcnZlZFdvcmROb0luZGVudCh0b2tlbiwgcXVlcnkpIHtcbiAgICAgIHRoaXMuaW5kZW50YXRpb24uZGVjcmVhc2VUb3BMZXZlbCgpO1xuICAgICAgcXVlcnkgPSB0aGlzLmFkZE5ld2xpbmUocXVlcnkpICsgdGhpcy5lcXVhbGl6ZVdoaXRlc3BhY2UodGhpcy5zaG93KHRva2VuKSk7XG4gICAgICByZXR1cm4gdGhpcy5hZGROZXdsaW5lKHF1ZXJ5KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9ybWF0VG9wTGV2ZWxSZXNlcnZlZFdvcmRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0VG9wTGV2ZWxSZXNlcnZlZFdvcmQodG9rZW4sIHF1ZXJ5KSB7XG4gICAgICB0aGlzLmluZGVudGF0aW9uLmRlY3JlYXNlVG9wTGV2ZWwoKTtcbiAgICAgIHF1ZXJ5ID0gdGhpcy5hZGROZXdsaW5lKHF1ZXJ5KTtcbiAgICAgIHRoaXMuaW5kZW50YXRpb24uaW5jcmVhc2VUb3BMZXZlbCgpO1xuICAgICAgcXVlcnkgKz0gdGhpcy5lcXVhbGl6ZVdoaXRlc3BhY2UodGhpcy5zaG93KHRva2VuKSk7XG4gICAgICByZXR1cm4gdGhpcy5hZGROZXdsaW5lKHF1ZXJ5KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9ybWF0TmV3bGluZVJlc2VydmVkV29yZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXROZXdsaW5lUmVzZXJ2ZWRXb3JkKHRva2VuLCBxdWVyeSkge1xuICAgICAgaWYgKCgwLCBfdG9rZW4uaXNBbmQpKHRva2VuKSAmJiAoMCwgX3Rva2VuLmlzQmV0d2VlbikodGhpcy50b2tlbkxvb2tCZWhpbmQoMikpKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdFdpdGhTcGFjZXModG9rZW4sIHF1ZXJ5KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuYWRkTmV3bGluZShxdWVyeSkgKyB0aGlzLmVxdWFsaXplV2hpdGVzcGFjZSh0aGlzLnNob3codG9rZW4pKSArICcgJztcbiAgICB9IC8vIFJlcGxhY2UgYW55IHNlcXVlbmNlIG9mIHdoaXRlc3BhY2UgY2hhcmFjdGVycyB3aXRoIHNpbmdsZSBzcGFjZVxuXG4gIH0sIHtcbiAgICBrZXk6IFwiZXF1YWxpemVXaGl0ZXNwYWNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVxdWFsaXplV2hpdGVzcGFjZShzdHJpbmcpIHtcbiAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW1xcdC1cXHIgXFx4QTBcXHUxNjgwXFx1MjAwMC1cXHUyMDBBXFx1MjAyOFxcdTIwMjlcXHUyMDJGXFx1MjA1RlxcdTMwMDBcXHVGRUZGXSsvZywgJyAnKTtcbiAgICB9IC8vIE9wZW5pbmcgcGFyZW50aGVzZXMgaW5jcmVhc2UgdGhlIGJsb2NrIGluZGVudCBsZXZlbCBhbmQgc3RhcnQgYSBuZXcgbGluZVxuXG4gIH0sIHtcbiAgICBrZXk6IFwiZm9ybWF0T3BlbmluZ1BhcmVudGhlc2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdE9wZW5pbmdQYXJlbnRoZXNlcyh0b2tlbiwgcXVlcnkpIHtcbiAgICAgIHZhciBfcHJlc2VydmVXaGl0ZXNwYWNlRm8sIF90aGlzJHRva2VuTG9va0JlaGluZDtcblxuICAgICAgLy8gVGFrZSBvdXQgdGhlIHByZWNlZGluZyBzcGFjZSB1bmxlc3MgdGhlcmUgd2FzIHdoaXRlc3BhY2UgdGhlcmUgaW4gdGhlIG9yaWdpbmFsIHF1ZXJ5XG4gICAgICAvLyBvciBhbm90aGVyIG9wZW5pbmcgcGFyZW5zIG9yIGxpbmUgY29tbWVudFxuICAgICAgdmFyIHByZXNlcnZlV2hpdGVzcGFjZUZvciA9IChfcHJlc2VydmVXaGl0ZXNwYWNlRm8gPSB7fSwgX2RlZmluZVByb3BlcnR5KF9wcmVzZXJ2ZVdoaXRlc3BhY2VGbywgX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLk9QRU5fUEFSRU4sIHRydWUpLCBfZGVmaW5lUHJvcGVydHkoX3ByZXNlcnZlV2hpdGVzcGFjZUZvLCBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uTElORV9DT01NRU5ULCB0cnVlKSwgX2RlZmluZVByb3BlcnR5KF9wcmVzZXJ2ZVdoaXRlc3BhY2VGbywgX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLk9QRVJBVE9SLCB0cnVlKSwgX3ByZXNlcnZlV2hpdGVzcGFjZUZvKTtcblxuICAgICAgaWYgKHRva2VuLndoaXRlc3BhY2VCZWZvcmUubGVuZ3RoID09PSAwICYmICFwcmVzZXJ2ZVdoaXRlc3BhY2VGb3JbKF90aGlzJHRva2VuTG9va0JlaGluZCA9IHRoaXMudG9rZW5Mb29rQmVoaW5kKCkpID09PSBudWxsIHx8IF90aGlzJHRva2VuTG9va0JlaGluZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkdG9rZW5Mb29rQmVoaW5kLnR5cGVdKSB7XG4gICAgICAgIHF1ZXJ5ID0gKDAsIF91dGlscy50cmltU3BhY2VzRW5kKShxdWVyeSk7XG4gICAgICB9XG5cbiAgICAgIHF1ZXJ5ICs9IHRoaXMuc2hvdyh0b2tlbik7XG4gICAgICB0aGlzLmlubGluZUJsb2NrLmJlZ2luSWZQb3NzaWJsZSh0aGlzLnRva2VucywgdGhpcy5pbmRleCk7XG5cbiAgICAgIGlmICghdGhpcy5pbmxpbmVCbG9jay5pc0FjdGl2ZSgpKSB7XG4gICAgICAgIHRoaXMuaW5kZW50YXRpb24uaW5jcmVhc2VCbG9ja0xldmVsKCk7XG4gICAgICAgIHF1ZXJ5ID0gdGhpcy5hZGROZXdsaW5lKHF1ZXJ5KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHF1ZXJ5O1xuICAgIH0gLy8gQ2xvc2luZyBwYXJlbnRoZXNlcyBkZWNyZWFzZSB0aGUgYmxvY2sgaW5kZW50IGxldmVsXG5cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRDbG9zaW5nUGFyZW50aGVzZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0Q2xvc2luZ1BhcmVudGhlc2VzKHRva2VuLCBxdWVyeSkge1xuICAgICAgaWYgKHRoaXMuaW5saW5lQmxvY2suaXNBY3RpdmUoKSkge1xuICAgICAgICB0aGlzLmlubGluZUJsb2NrLmVuZCgpO1xuICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXRXaXRoU3BhY2VBZnRlcih0b2tlbiwgcXVlcnkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5pbmRlbnRhdGlvbi5kZWNyZWFzZUJsb2NrTGV2ZWwoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0V2l0aFNwYWNlcyh0b2tlbiwgdGhpcy5hZGROZXdsaW5lKHF1ZXJ5KSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcm1hdFBsYWNlaG9sZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdFBsYWNlaG9sZGVyKHRva2VuLCBxdWVyeSkge1xuICAgICAgcmV0dXJuIHF1ZXJ5ICsgdGhpcy5wYXJhbXMuZ2V0KHRva2VuKSArICcgJztcbiAgICB9IC8vIENvbW1hcyBzdGFydCBhIG5ldyBsaW5lICh1bmxlc3Mgd2l0aGluIGlubGluZSBwYXJlbnRoZXNlcyBvciBTUUwgXCJMSU1JVFwiIGNsYXVzZSlcblxuICB9LCB7XG4gICAga2V5OiBcImZvcm1hdENvbW1hXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdENvbW1hKHRva2VuLCBxdWVyeSkge1xuICAgICAgcXVlcnkgPSAoMCwgX3V0aWxzLnRyaW1TcGFjZXNFbmQpKHF1ZXJ5KSArIHRoaXMuc2hvdyh0b2tlbikgKyAnICc7XG5cbiAgICAgIGlmICh0aGlzLmlubGluZUJsb2NrLmlzQWN0aXZlKCkpIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5O1xuICAgICAgfSBlbHNlIGlmICgoMCwgX3Rva2VuLmlzTGltaXQpKHRoaXMucHJldmlvdXNSZXNlcnZlZFRva2VuKSkge1xuICAgICAgICByZXR1cm4gcXVlcnk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGROZXdsaW5lKHF1ZXJ5KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9ybWF0V2l0aFNwYWNlQWZ0ZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0V2l0aFNwYWNlQWZ0ZXIodG9rZW4sIHF1ZXJ5KSB7XG4gICAgICByZXR1cm4gKDAsIF91dGlscy50cmltU3BhY2VzRW5kKShxdWVyeSkgKyB0aGlzLnNob3codG9rZW4pICsgJyAnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRXaXRob3V0U3BhY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdFdpdGhvdXRTcGFjZXModG9rZW4sIHF1ZXJ5KSB7XG4gICAgICByZXR1cm4gKDAsIF91dGlscy50cmltU3BhY2VzRW5kKShxdWVyeSkgKyB0aGlzLnNob3codG9rZW4pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRXaXRoU3BhY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdFdpdGhTcGFjZXModG9rZW4sIHF1ZXJ5KSB7XG4gICAgICByZXR1cm4gcXVlcnkgKyB0aGlzLnNob3codG9rZW4pICsgJyAnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRRdWVyeVNlcGFyYXRvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRRdWVyeVNlcGFyYXRvcih0b2tlbiwgcXVlcnkpIHtcbiAgICAgIHRoaXMuaW5kZW50YXRpb24ucmVzZXRJbmRlbnRhdGlvbigpO1xuICAgICAgcmV0dXJuICgwLCBfdXRpbHMudHJpbVNwYWNlc0VuZCkocXVlcnkpICsgdGhpcy5zaG93KHRva2VuKSArICdcXG4nLnJlcGVhdCh0aGlzLmNmZy5saW5lc0JldHdlZW5RdWVyaWVzIHx8IDEpO1xuICAgIH0gLy8gQ29udmVydHMgdG9rZW4gdG8gc3RyaW5nICh1cHBlcmNhc2luZyBpdCBpZiBuZWVkZWQpXG5cbiAgfSwge1xuICAgIGtleTogXCJzaG93XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNob3coX3JlZikge1xuICAgICAgdmFyIHR5cGUgPSBfcmVmLnR5cGUsXG4gICAgICAgICAgdmFsdWUgPSBfcmVmLnZhbHVlO1xuXG4gICAgICBpZiAodGhpcy5jZmcudXBwZXJjYXNlICYmICh0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRUQgfHwgdHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEX1RPUF9MRVZFTCB8fCB0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRURfVE9QX0xFVkVMX05PX0lOREVOVCB8fCB0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRURfTkVXTElORSB8fCB0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uT1BFTl9QQVJFTiB8fCB0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uQ0xPU0VfUEFSRU4pKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZS50b1VwcGVyQ2FzZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGROZXdsaW5lXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZE5ld2xpbmUocXVlcnkpIHtcbiAgICAgIHF1ZXJ5ID0gKDAsIF91dGlscy50cmltU3BhY2VzRW5kKShxdWVyeSk7XG5cbiAgICAgIGlmICghcXVlcnkuZW5kc1dpdGgoJ1xcbicpKSB7XG4gICAgICAgIHF1ZXJ5ICs9ICdcXG4nO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcXVlcnkgKyB0aGlzLmluZGVudGF0aW9uLmdldEluZGVudCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0b2tlbkxvb2tCZWhpbmRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9rZW5Mb29rQmVoaW5kKCkge1xuICAgICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDE7XG4gICAgICByZXR1cm4gdGhpcy50b2tlbnNbdGhpcy5pbmRleCAtIG5dO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0b2tlbkxvb2tBaGVhZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2tlbkxvb2tBaGVhZCgpIHtcbiAgICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAxO1xuICAgICAgcmV0dXJuIHRoaXMudG9rZW5zW3RoaXMuaW5kZXggKyBuXTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRm9ybWF0dGVyO1xufSgpO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IEZvcm1hdHRlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/Formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/core/Indentation.js":
/*!*************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/Indentation.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar INDENT_TYPE_TOP_LEVEL = 'top-level';\nvar INDENT_TYPE_BLOCK_LEVEL = 'block-level';\n/**\n * Manages indentation levels.\n *\n * There are two types of indentation levels:\n *\n * - BLOCK_LEVEL : increased by open-parenthesis\n * - TOP_LEVEL : increased by RESERVED_TOP_LEVEL words\n */\n\nvar Indentation = /*#__PURE__*/function () {\n  /**\n   * @param {String} indent Indent value, default is \"  \" (2 spaces)\n   */\n  function Indentation(indent) {\n    _classCallCheck(this, Indentation);\n\n    this.indent = indent || '  ';\n    this.indentTypes = [];\n  }\n  /**\n   * Returns current indentation string.\n   * @return {String}\n   */\n\n\n  _createClass(Indentation, [{\n    key: \"getIndent\",\n    value: function getIndent() {\n      return this.indent.repeat(this.indentTypes.length);\n    }\n    /**\n     * Increases indentation by one top-level indent.\n     */\n\n  }, {\n    key: \"increaseTopLevel\",\n    value: function increaseTopLevel() {\n      this.indentTypes.push(INDENT_TYPE_TOP_LEVEL);\n    }\n    /**\n     * Increases indentation by one block-level indent.\n     */\n\n  }, {\n    key: \"increaseBlockLevel\",\n    value: function increaseBlockLevel() {\n      this.indentTypes.push(INDENT_TYPE_BLOCK_LEVEL);\n    }\n    /**\n     * Decreases indentation by one top-level indent.\n     * Does nothing when the previous indent is not top-level.\n     */\n\n  }, {\n    key: \"decreaseTopLevel\",\n    value: function decreaseTopLevel() {\n      if (this.indentTypes.length > 0 && (0, _utils.last)(this.indentTypes) === INDENT_TYPE_TOP_LEVEL) {\n        this.indentTypes.pop();\n      }\n    }\n    /**\n     * Decreases indentation by one block-level indent.\n     * If there are top-level indents within the block-level indent,\n     * throws away these as well.\n     */\n\n  }, {\n    key: \"decreaseBlockLevel\",\n    value: function decreaseBlockLevel() {\n      while (this.indentTypes.length > 0) {\n        var type = this.indentTypes.pop();\n\n        if (type !== INDENT_TYPE_TOP_LEVEL) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"resetIndentation\",\n    value: function resetIndentation() {\n      this.indentTypes = [];\n    }\n  }]);\n\n  return Indentation;\n}();\n\nexports[\"default\"] = Indentation;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvSW5kZW50YXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2luZHdhbGtlci1pby9jb3JlLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9jb3JlL0luZGVudGF0aW9uLmpzPzU2YzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG52YXIgSU5ERU5UX1RZUEVfVE9QX0xFVkVMID0gJ3RvcC1sZXZlbCc7XG52YXIgSU5ERU5UX1RZUEVfQkxPQ0tfTEVWRUwgPSAnYmxvY2stbGV2ZWwnO1xuLyoqXG4gKiBNYW5hZ2VzIGluZGVudGF0aW9uIGxldmVscy5cbiAqXG4gKiBUaGVyZSBhcmUgdHdvIHR5cGVzIG9mIGluZGVudGF0aW9uIGxldmVsczpcbiAqXG4gKiAtIEJMT0NLX0xFVkVMIDogaW5jcmVhc2VkIGJ5IG9wZW4tcGFyZW50aGVzaXNcbiAqIC0gVE9QX0xFVkVMIDogaW5jcmVhc2VkIGJ5IFJFU0VSVkVEX1RPUF9MRVZFTCB3b3Jkc1xuICovXG5cbnZhciBJbmRlbnRhdGlvbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gaW5kZW50IEluZGVudCB2YWx1ZSwgZGVmYXVsdCBpcyBcIiAgXCIgKDIgc3BhY2VzKVxuICAgKi9cbiAgZnVuY3Rpb24gSW5kZW50YXRpb24oaW5kZW50KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEluZGVudGF0aW9uKTtcblxuICAgIHRoaXMuaW5kZW50ID0gaW5kZW50IHx8ICcgICc7XG4gICAgdGhpcy5pbmRlbnRUeXBlcyA9IFtdO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIGN1cnJlbnQgaW5kZW50YXRpb24gc3RyaW5nLlxuICAgKiBAcmV0dXJuIHtTdHJpbmd9XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKEluZGVudGF0aW9uLCBbe1xuICAgIGtleTogXCJnZXRJbmRlbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0SW5kZW50KCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5kZW50LnJlcGVhdCh0aGlzLmluZGVudFR5cGVzLmxlbmd0aCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEluY3JlYXNlcyBpbmRlbnRhdGlvbiBieSBvbmUgdG9wLWxldmVsIGluZGVudC5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImluY3JlYXNlVG9wTGV2ZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5jcmVhc2VUb3BMZXZlbCgpIHtcbiAgICAgIHRoaXMuaW5kZW50VHlwZXMucHVzaChJTkRFTlRfVFlQRV9UT1BfTEVWRUwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbmNyZWFzZXMgaW5kZW50YXRpb24gYnkgb25lIGJsb2NrLWxldmVsIGluZGVudC5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImluY3JlYXNlQmxvY2tMZXZlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbmNyZWFzZUJsb2NrTGV2ZWwoKSB7XG4gICAgICB0aGlzLmluZGVudFR5cGVzLnB1c2goSU5ERU5UX1RZUEVfQkxPQ0tfTEVWRUwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWNyZWFzZXMgaW5kZW50YXRpb24gYnkgb25lIHRvcC1sZXZlbCBpbmRlbnQuXG4gICAgICogRG9lcyBub3RoaW5nIHdoZW4gdGhlIHByZXZpb3VzIGluZGVudCBpcyBub3QgdG9wLWxldmVsLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZGVjcmVhc2VUb3BMZXZlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZWNyZWFzZVRvcExldmVsKCkge1xuICAgICAgaWYgKHRoaXMuaW5kZW50VHlwZXMubGVuZ3RoID4gMCAmJiAoMCwgX3V0aWxzLmxhc3QpKHRoaXMuaW5kZW50VHlwZXMpID09PSBJTkRFTlRfVFlQRV9UT1BfTEVWRUwpIHtcbiAgICAgICAgdGhpcy5pbmRlbnRUeXBlcy5wb3AoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVjcmVhc2VzIGluZGVudGF0aW9uIGJ5IG9uZSBibG9jay1sZXZlbCBpbmRlbnQuXG4gICAgICogSWYgdGhlcmUgYXJlIHRvcC1sZXZlbCBpbmRlbnRzIHdpdGhpbiB0aGUgYmxvY2stbGV2ZWwgaW5kZW50LFxuICAgICAqIHRocm93cyBhd2F5IHRoZXNlIGFzIHdlbGwuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkZWNyZWFzZUJsb2NrTGV2ZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVjcmVhc2VCbG9ja0xldmVsKCkge1xuICAgICAgd2hpbGUgKHRoaXMuaW5kZW50VHlwZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgdHlwZSA9IHRoaXMuaW5kZW50VHlwZXMucG9wKCk7XG5cbiAgICAgICAgaWYgKHR5cGUgIT09IElOREVOVF9UWVBFX1RPUF9MRVZFTCkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlc2V0SW5kZW50YXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzZXRJbmRlbnRhdGlvbigpIHtcbiAgICAgIHRoaXMuaW5kZW50VHlwZXMgPSBbXTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSW5kZW50YXRpb247XG59KCk7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gSW5kZW50YXRpb247XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/Indentation.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/core/InlineBlock.js":
/*!*************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/InlineBlock.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar INLINE_MAX_LENGTH = 50;\n/**\n * Bookkeeper for inline blocks.\n *\n * Inline blocks are parenthized expressions that are shorter than INLINE_MAX_LENGTH.\n * These blocks are formatted on a single line, unlike longer parenthized\n * expressions where open-parenthesis causes newline and increase of indentation.\n */\n\nvar InlineBlock = /*#__PURE__*/function () {\n  function InlineBlock() {\n    _classCallCheck(this, InlineBlock);\n\n    this.level = 0;\n  }\n  /**\n   * Begins inline block when lookahead through upcoming tokens determines\n   * that the block would be smaller than INLINE_MAX_LENGTH.\n   * @param  {Object[]} tokens Array of all tokens\n   * @param  {Number} index Current token position\n   */\n\n\n  _createClass(InlineBlock, [{\n    key: \"beginIfPossible\",\n    value: function beginIfPossible(tokens, index) {\n      if (this.level === 0 && this.isInlineBlock(tokens, index)) {\n        this.level = 1;\n      } else if (this.level > 0) {\n        this.level++;\n      } else {\n        this.level = 0;\n      }\n    }\n    /**\n     * Finishes current inline block.\n     * There might be several nested ones.\n     */\n\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.level--;\n    }\n    /**\n     * True when inside an inline block\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.level > 0;\n    } // Check if this should be an inline parentheses block\n    // Examples are \"NOW()\", \"COUNT(*)\", \"int(10)\", key(`somecolumn`), DECIMAL(7,2)\n\n  }, {\n    key: \"isInlineBlock\",\n    value: function isInlineBlock(tokens, index) {\n      var length = 0;\n      var level = 0;\n\n      for (var i = index; i < tokens.length; i++) {\n        var token = tokens[i];\n        length += token.value.length; // Overran max length\n\n        if (length > INLINE_MAX_LENGTH) {\n          return false;\n        }\n\n        if (token.type === _tokenTypes[\"default\"].OPEN_PAREN) {\n          level++;\n        } else if (token.type === _tokenTypes[\"default\"].CLOSE_PAREN) {\n          level--;\n\n          if (level === 0) {\n            return true;\n          }\n        }\n\n        if (this.isForbiddenToken(token)) {\n          return false;\n        }\n      }\n\n      return false;\n    } // Reserved words that cause newlines, comments and semicolons\n    // are not allowed inside inline parentheses block\n\n  }, {\n    key: \"isForbiddenToken\",\n    value: function isForbiddenToken(_ref) {\n      var type = _ref.type,\n          value = _ref.value;\n      return type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL || type === _tokenTypes[\"default\"].RESERVED_NEWLINE || type === _tokenTypes[\"default\"].COMMENT || type === _tokenTypes[\"default\"].BLOCK_COMMENT || value === ';';\n    }\n  }]);\n\n  return InlineBlock;\n}();\n\nexports[\"default\"] = InlineBlock;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvSW5saW5lQmxvY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdpbmR3YWxrZXItaW8vY29yZS8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvY29yZS9JbmxpbmVCbG9jay5qcz81NTBmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfdG9rZW5UeXBlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdG9rZW5UeXBlc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbnZhciBJTkxJTkVfTUFYX0xFTkdUSCA9IDUwO1xuLyoqXG4gKiBCb29ra2VlcGVyIGZvciBpbmxpbmUgYmxvY2tzLlxuICpcbiAqIElubGluZSBibG9ja3MgYXJlIHBhcmVudGhpemVkIGV4cHJlc3Npb25zIHRoYXQgYXJlIHNob3J0ZXIgdGhhbiBJTkxJTkVfTUFYX0xFTkdUSC5cbiAqIFRoZXNlIGJsb2NrcyBhcmUgZm9ybWF0dGVkIG9uIGEgc2luZ2xlIGxpbmUsIHVubGlrZSBsb25nZXIgcGFyZW50aGl6ZWRcbiAqIGV4cHJlc3Npb25zIHdoZXJlIG9wZW4tcGFyZW50aGVzaXMgY2F1c2VzIG5ld2xpbmUgYW5kIGluY3JlYXNlIG9mIGluZGVudGF0aW9uLlxuICovXG5cbnZhciBJbmxpbmVCbG9jayA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIElubGluZUJsb2NrKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJbmxpbmVCbG9jayk7XG5cbiAgICB0aGlzLmxldmVsID0gMDtcbiAgfVxuICAvKipcbiAgICogQmVnaW5zIGlubGluZSBibG9jayB3aGVuIGxvb2thaGVhZCB0aHJvdWdoIHVwY29taW5nIHRva2VucyBkZXRlcm1pbmVzXG4gICAqIHRoYXQgdGhlIGJsb2NrIHdvdWxkIGJlIHNtYWxsZXIgdGhhbiBJTkxJTkVfTUFYX0xFTkdUSC5cbiAgICogQHBhcmFtICB7T2JqZWN0W119IHRva2VucyBBcnJheSBvZiBhbGwgdG9rZW5zXG4gICAqIEBwYXJhbSAge051bWJlcn0gaW5kZXggQ3VycmVudCB0b2tlbiBwb3NpdGlvblxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhJbmxpbmVCbG9jaywgW3tcbiAgICBrZXk6IFwiYmVnaW5JZlBvc3NpYmxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJlZ2luSWZQb3NzaWJsZSh0b2tlbnMsIGluZGV4KSB7XG4gICAgICBpZiAodGhpcy5sZXZlbCA9PT0gMCAmJiB0aGlzLmlzSW5saW5lQmxvY2sodG9rZW5zLCBpbmRleCkpIHtcbiAgICAgICAgdGhpcy5sZXZlbCA9IDE7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMubGV2ZWwgPiAwKSB7XG4gICAgICAgIHRoaXMubGV2ZWwrKztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubGV2ZWwgPSAwO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBGaW5pc2hlcyBjdXJyZW50IGlubGluZSBibG9jay5cbiAgICAgKiBUaGVyZSBtaWdodCBiZSBzZXZlcmFsIG5lc3RlZCBvbmVzLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZW5kXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVuZCgpIHtcbiAgICAgIHRoaXMubGV2ZWwtLTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVHJ1ZSB3aGVuIGluc2lkZSBhbiBpbmxpbmUgYmxvY2tcbiAgICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiaXNBY3RpdmVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNBY3RpdmUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5sZXZlbCA+IDA7XG4gICAgfSAvLyBDaGVjayBpZiB0aGlzIHNob3VsZCBiZSBhbiBpbmxpbmUgcGFyZW50aGVzZXMgYmxvY2tcbiAgICAvLyBFeGFtcGxlcyBhcmUgXCJOT1coKVwiLCBcIkNPVU5UKCopXCIsIFwiaW50KDEwKVwiLCBrZXkoYHNvbWVjb2x1bW5gKSwgREVDSU1BTCg3LDIpXG5cbiAgfSwge1xuICAgIGtleTogXCJpc0lubGluZUJsb2NrXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzSW5saW5lQmxvY2sodG9rZW5zLCBpbmRleCkge1xuICAgICAgdmFyIGxlbmd0aCA9IDA7XG4gICAgICB2YXIgbGV2ZWwgPSAwO1xuXG4gICAgICBmb3IgKHZhciBpID0gaW5kZXg7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldO1xuICAgICAgICBsZW5ndGggKz0gdG9rZW4udmFsdWUubGVuZ3RoOyAvLyBPdmVycmFuIG1heCBsZW5ndGhcblxuICAgICAgICBpZiAobGVuZ3RoID4gSU5MSU5FX01BWF9MRU5HVEgpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodG9rZW4udHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLk9QRU5fUEFSRU4pIHtcbiAgICAgICAgICBsZXZlbCsrO1xuICAgICAgICB9IGVsc2UgaWYgKHRva2VuLnR5cGUgPT09IF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5DTE9TRV9QQVJFTikge1xuICAgICAgICAgIGxldmVsLS07XG5cbiAgICAgICAgICBpZiAobGV2ZWwgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmlzRm9yYmlkZGVuVG9rZW4odG9rZW4pKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IC8vIFJlc2VydmVkIHdvcmRzIHRoYXQgY2F1c2UgbmV3bGluZXMsIGNvbW1lbnRzIGFuZCBzZW1pY29sb25zXG4gICAgLy8gYXJlIG5vdCBhbGxvd2VkIGluc2lkZSBpbmxpbmUgcGFyZW50aGVzZXMgYmxvY2tcblxuICB9LCB7XG4gICAga2V5OiBcImlzRm9yYmlkZGVuVG9rZW5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNGb3JiaWRkZW5Ub2tlbihfcmVmKSB7XG4gICAgICB2YXIgdHlwZSA9IF9yZWYudHlwZSxcbiAgICAgICAgICB2YWx1ZSA9IF9yZWYudmFsdWU7XG4gICAgICByZXR1cm4gdHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEX1RPUF9MRVZFTCB8fCB0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRURfTkVXTElORSB8fCB0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uQ09NTUVOVCB8fCB0eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uQkxPQ0tfQ09NTUVOVCB8fCB2YWx1ZSA9PT0gJzsnO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBJbmxpbmVCbG9jaztcbn0oKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBJbmxpbmVCbG9jaztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/InlineBlock.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/core/Params.js":
/*!********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/Params.js ***!
  \********************************************************************/
/***/ ((module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Handles placeholder replacement with given params.\n */\nvar Params = /*#__PURE__*/function () {\n  /**\n   * @param {Object} params\n   */\n  function Params(params) {\n    _classCallCheck(this, Params);\n\n    this.params = params;\n    this.index = 0;\n  }\n  /**\n   * Returns param value that matches given placeholder with param key.\n   * @param {Object} token\n   *   @param {String} token.key Placeholder key\n   *   @param {String} token.value Placeholder value\n   * @return {String} param or token.value when params are missing\n   */\n\n\n  _createClass(Params, [{\n    key: \"get\",\n    value: function get(_ref) {\n      var key = _ref.key,\n          value = _ref.value;\n\n      if (!this.params) {\n        return value;\n      }\n\n      if (key) {\n        return this.params[key];\n      }\n\n      return this.params[this.index++];\n    }\n  }]);\n\n  return Params;\n}();\n\nexports[\"default\"] = Params;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvUGFyYW1zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdpbmR3YWxrZXItaW8vY29yZS8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvY29yZS9QYXJhbXMuanM/Njk0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbi8qKlxuICogSGFuZGxlcyBwbGFjZWhvbGRlciByZXBsYWNlbWVudCB3aXRoIGdpdmVuIHBhcmFtcy5cbiAqL1xudmFyIFBhcmFtcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gICAqL1xuICBmdW5jdGlvbiBQYXJhbXMocGFyYW1zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBhcmFtcyk7XG5cbiAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcbiAgICB0aGlzLmluZGV4ID0gMDtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyBwYXJhbSB2YWx1ZSB0aGF0IG1hdGNoZXMgZ2l2ZW4gcGxhY2Vob2xkZXIgd2l0aCBwYXJhbSBrZXkuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB0b2tlblxuICAgKiAgIEBwYXJhbSB7U3RyaW5nfSB0b2tlbi5rZXkgUGxhY2Vob2xkZXIga2V5XG4gICAqICAgQHBhcmFtIHtTdHJpbmd9IHRva2VuLnZhbHVlIFBsYWNlaG9sZGVyIHZhbHVlXG4gICAqIEByZXR1cm4ge1N0cmluZ30gcGFyYW0gb3IgdG9rZW4udmFsdWUgd2hlbiBwYXJhbXMgYXJlIG1pc3NpbmdcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUGFyYW1zLCBbe1xuICAgIGtleTogXCJnZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0KF9yZWYpIHtcbiAgICAgIHZhciBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgICB2YWx1ZSA9IF9yZWYudmFsdWU7XG5cbiAgICAgIGlmICghdGhpcy5wYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmFtc1trZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5wYXJhbXNbdGhpcy5pbmRleCsrXTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUGFyYW1zO1xufSgpO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IFBhcmFtcztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/Params.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js":
/*!***********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nvar regexFactory = _interopRequireWildcard(__webpack_require__(/*! ./regexFactory */ \"../../../../../node_modules/sql-formatter/lib/core/regexFactory.js\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Tokenizer = /*#__PURE__*/function () {\n  /**\n   * @param {Object} cfg\n   *  @param {String[]} cfg.reservedWords Reserved words in SQL\n   *  @param {String[]} cfg.reservedTopLevelWords Words that are set to new line separately\n   *  @param {String[]} cfg.reservedNewlineWords Words that are set to newline\n   *  @param {String[]} cfg.reservedTopLevelWordsNoIndent Words that are top level but have no indentation\n   *  @param {String[]} cfg.stringTypes String types to enable: \"\", '', ``, [], N''\n   *  @param {String[]} cfg.openParens Opening parentheses to enable, like (, [\n   *  @param {String[]} cfg.closeParens Closing parentheses to enable, like ), ]\n   *  @param {String[]} cfg.indexedPlaceholderTypes Prefixes for indexed placeholders, like ?\n   *  @param {String[]} cfg.namedPlaceholderTypes Prefixes for named placeholders, like @ and :\n   *  @param {String[]} cfg.lineCommentTypes Line comments to enable, like # and --\n   *  @param {String[]} cfg.specialWordChars Special chars that can be found inside of words, like @ and #\n   *  @param {String[]} [cfg.operator] Additional operators to recognize\n   */\n  function Tokenizer(cfg) {\n    _classCallCheck(this, Tokenizer);\n\n    this.WHITESPACE_REGEX = /^([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)/;\n    this.NUMBER_REGEX = /^((\\x2D[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*)?[0-9]+(\\.[0-9]+)?([Ee]\\x2D?[0-9]+(\\.[0-9]+)?)?|0x[0-9A-Fa-f]+|0b[01]+)\\b/;\n    this.OPERATOR_REGEX = regexFactory.createOperatorRegex(['<>', '<=', '>='].concat(_toConsumableArray(cfg.operators || [])));\n    this.BLOCK_COMMENT_REGEX = /^(\\/\\*(?:(?![])[\\s\\S])*?(?:\\*\\/|$))/;\n    this.LINE_COMMENT_REGEX = regexFactory.createLineCommentRegex(cfg.lineCommentTypes);\n    this.RESERVED_TOP_LEVEL_REGEX = regexFactory.createReservedWordRegex(cfg.reservedTopLevelWords);\n    this.RESERVED_TOP_LEVEL_NO_INDENT_REGEX = regexFactory.createReservedWordRegex(cfg.reservedTopLevelWordsNoIndent);\n    this.RESERVED_NEWLINE_REGEX = regexFactory.createReservedWordRegex(cfg.reservedNewlineWords);\n    this.RESERVED_PLAIN_REGEX = regexFactory.createReservedWordRegex(cfg.reservedWords);\n    this.WORD_REGEX = regexFactory.createWordRegex(cfg.specialWordChars);\n    this.STRING_REGEX = regexFactory.createStringRegex(cfg.stringTypes);\n    this.OPEN_PAREN_REGEX = regexFactory.createParenRegex(cfg.openParens);\n    this.CLOSE_PAREN_REGEX = regexFactory.createParenRegex(cfg.closeParens);\n    this.INDEXED_PLACEHOLDER_REGEX = regexFactory.createPlaceholderRegex(cfg.indexedPlaceholderTypes, '[0-9]*');\n    this.IDENT_NAMED_PLACEHOLDER_REGEX = regexFactory.createPlaceholderRegex(cfg.namedPlaceholderTypes, '[a-zA-Z0-9._$]+');\n    this.STRING_NAMED_PLACEHOLDER_REGEX = regexFactory.createPlaceholderRegex(cfg.namedPlaceholderTypes, regexFactory.createStringPattern(cfg.stringTypes));\n  }\n  /**\n   * Takes a SQL string and breaks it into tokens.\n   * Each token is an object with type and value.\n   *\n   * @param {String} input The SQL string\n   * @return {Object[]} tokens An array of tokens.\n   *  @return {String} token.type\n   *  @return {String} token.value\n   *  @return {String} token.whitespaceBefore Preceding whitespace\n   */\n\n\n  _createClass(Tokenizer, [{\n    key: \"tokenize\",\n    value: function tokenize(input) {\n      var tokens = [];\n      var token; // Keep processing the string until it is empty\n\n      while (input.length) {\n        // grab any preceding whitespace\n        var whitespaceBefore = this.getWhitespace(input);\n        input = input.substring(whitespaceBefore.length);\n\n        if (input.length) {\n          // Get the next token and the token type\n          token = this.getNextToken(input, token); // Advance the string\n\n          input = input.substring(token.value.length);\n          tokens.push(_objectSpread(_objectSpread({}, token), {}, {\n            whitespaceBefore: whitespaceBefore\n          }));\n        }\n      }\n\n      return tokens;\n    }\n  }, {\n    key: \"getWhitespace\",\n    value: function getWhitespace(input) {\n      var matches = input.match(this.WHITESPACE_REGEX);\n      return matches ? matches[1] : '';\n    }\n  }, {\n    key: \"getNextToken\",\n    value: function getNextToken(input, previousToken) {\n      return this.getCommentToken(input) || this.getStringToken(input) || this.getOpenParenToken(input) || this.getCloseParenToken(input) || this.getPlaceholderToken(input) || this.getNumberToken(input) || this.getReservedWordToken(input, previousToken) || this.getWordToken(input) || this.getOperatorToken(input);\n    }\n  }, {\n    key: \"getCommentToken\",\n    value: function getCommentToken(input) {\n      return this.getLineCommentToken(input) || this.getBlockCommentToken(input);\n    }\n  }, {\n    key: \"getLineCommentToken\",\n    value: function getLineCommentToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].LINE_COMMENT,\n        regex: this.LINE_COMMENT_REGEX\n      });\n    }\n  }, {\n    key: \"getBlockCommentToken\",\n    value: function getBlockCommentToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].BLOCK_COMMENT,\n        regex: this.BLOCK_COMMENT_REGEX\n      });\n    }\n  }, {\n    key: \"getStringToken\",\n    value: function getStringToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].STRING,\n        regex: this.STRING_REGEX\n      });\n    }\n  }, {\n    key: \"getOpenParenToken\",\n    value: function getOpenParenToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].OPEN_PAREN,\n        regex: this.OPEN_PAREN_REGEX\n      });\n    }\n  }, {\n    key: \"getCloseParenToken\",\n    value: function getCloseParenToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].CLOSE_PAREN,\n        regex: this.CLOSE_PAREN_REGEX\n      });\n    }\n  }, {\n    key: \"getPlaceholderToken\",\n    value: function getPlaceholderToken(input) {\n      return this.getIdentNamedPlaceholderToken(input) || this.getStringNamedPlaceholderToken(input) || this.getIndexedPlaceholderToken(input);\n    }\n  }, {\n    key: \"getIdentNamedPlaceholderToken\",\n    value: function getIdentNamedPlaceholderToken(input) {\n      return this.getPlaceholderTokenWithKey({\n        input: input,\n        regex: this.IDENT_NAMED_PLACEHOLDER_REGEX,\n        parseKey: function parseKey(v) {\n          return v.slice(1);\n        }\n      });\n    }\n  }, {\n    key: \"getStringNamedPlaceholderToken\",\n    value: function getStringNamedPlaceholderToken(input) {\n      var _this = this;\n\n      return this.getPlaceholderTokenWithKey({\n        input: input,\n        regex: this.STRING_NAMED_PLACEHOLDER_REGEX,\n        parseKey: function parseKey(v) {\n          return _this.getEscapedPlaceholderKey({\n            key: v.slice(2, -1),\n            quoteChar: v.slice(-1)\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getIndexedPlaceholderToken\",\n    value: function getIndexedPlaceholderToken(input) {\n      return this.getPlaceholderTokenWithKey({\n        input: input,\n        regex: this.INDEXED_PLACEHOLDER_REGEX,\n        parseKey: function parseKey(v) {\n          return v.slice(1);\n        }\n      });\n    }\n  }, {\n    key: \"getPlaceholderTokenWithKey\",\n    value: function getPlaceholderTokenWithKey(_ref) {\n      var input = _ref.input,\n          regex = _ref.regex,\n          parseKey = _ref.parseKey;\n      var token = this.getTokenOnFirstMatch({\n        input: input,\n        regex: regex,\n        type: _tokenTypes[\"default\"].PLACEHOLDER\n      });\n\n      if (token) {\n        token.key = parseKey(token.value);\n      }\n\n      return token;\n    }\n  }, {\n    key: \"getEscapedPlaceholderKey\",\n    value: function getEscapedPlaceholderKey(_ref2) {\n      var key = _ref2.key,\n          quoteChar = _ref2.quoteChar;\n      return key.replace(new RegExp((0, _utils.escapeRegExp)('\\\\' + quoteChar), 'gu'), quoteChar);\n    } // Decimal, binary, or hex numbers\n\n  }, {\n    key: \"getNumberToken\",\n    value: function getNumberToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].NUMBER,\n        regex: this.NUMBER_REGEX\n      });\n    } // Punctuation and symbols\n\n  }, {\n    key: \"getOperatorToken\",\n    value: function getOperatorToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].OPERATOR,\n        regex: this.OPERATOR_REGEX\n      });\n    }\n  }, {\n    key: \"getReservedWordToken\",\n    value: function getReservedWordToken(input, previousToken) {\n      // A reserved word cannot be preceded by a \".\"\n      // this makes it so in \"mytable.from\", \"from\" is not considered a reserved word\n      if (previousToken && previousToken.value && previousToken.value === '.') {\n        return undefined;\n      }\n\n      return this.getTopLevelReservedToken(input) || this.getNewlineReservedToken(input) || this.getTopLevelReservedTokenNoIndent(input) || this.getPlainReservedToken(input);\n    }\n  }, {\n    key: \"getTopLevelReservedToken\",\n    value: function getTopLevelReservedToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED_TOP_LEVEL,\n        regex: this.RESERVED_TOP_LEVEL_REGEX\n      });\n    }\n  }, {\n    key: \"getNewlineReservedToken\",\n    value: function getNewlineReservedToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED_NEWLINE,\n        regex: this.RESERVED_NEWLINE_REGEX\n      });\n    }\n  }, {\n    key: \"getTopLevelReservedTokenNoIndent\",\n    value: function getTopLevelReservedTokenNoIndent(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED_TOP_LEVEL_NO_INDENT,\n        regex: this.RESERVED_TOP_LEVEL_NO_INDENT_REGEX\n      });\n    }\n  }, {\n    key: \"getPlainReservedToken\",\n    value: function getPlainReservedToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED,\n        regex: this.RESERVED_PLAIN_REGEX\n      });\n    }\n  }, {\n    key: \"getWordToken\",\n    value: function getWordToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].WORD,\n        regex: this.WORD_REGEX\n      });\n    }\n  }, {\n    key: \"getTokenOnFirstMatch\",\n    value: function getTokenOnFirstMatch(_ref3) {\n      var input = _ref3.input,\n          type = _ref3.type,\n          regex = _ref3.regex;\n      var matches = input.match(regex);\n      return matches ? {\n        type: type,\n        value: matches[1]\n      } : undefined;\n    }\n  }]);\n\n  return Tokenizer;\n}();\n\nexports[\"default\"] = Tokenizer;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/core/regexFactory.js":
/*!**************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/regexFactory.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createOperatorRegex = createOperatorRegex;\nexports.createLineCommentRegex = createLineCommentRegex;\nexports.createReservedWordRegex = createReservedWordRegex;\nexports.createWordRegex = createWordRegex;\nexports.createStringRegex = createStringRegex;\nexports.createStringPattern = createStringPattern;\nexports.createParenRegex = createParenRegex;\nexports.createPlaceholderRegex = createPlaceholderRegex;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nfunction createOperatorRegex(multiLetterOperators) {\n  return new RegExp(\"^(\".concat((0, _utils.sortByLengthDesc)(multiLetterOperators).map(_utils.escapeRegExp).join('|'), \"|.)\"), 'u');\n}\n\nfunction createLineCommentRegex(lineCommentTypes) {\n  return new RegExp(\"^((?:\".concat(lineCommentTypes.map(function (c) {\n    return (0, _utils.escapeRegExp)(c);\n  }).join('|'), \").*?)(?:\\r\\n|\\r|\\n|$)\"), 'u');\n}\n\nfunction createReservedWordRegex(reservedWords) {\n  if (reservedWords.length === 0) {\n    return new RegExp(\"^\\b$\", 'u');\n  }\n\n  var reservedWordsPattern = (0, _utils.sortByLengthDesc)(reservedWords).join('|').replace(/ /g, '\\\\s+');\n  return new RegExp(\"^(\".concat(reservedWordsPattern, \")\\\\b\"), 'iu');\n}\n\nfunction createWordRegex() {\n  var specialChars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return new RegExp(\"^([\\\\p{Alphabetic}\\\\p{Mark}\\\\p{Decimal_Number}\\\\p{Connector_Punctuation}\\\\p{Join_Control}\".concat(specialChars.join(''), \"]+)\"), 'u');\n}\n\nfunction createStringRegex(stringTypes) {\n  return new RegExp('^(' + createStringPattern(stringTypes) + ')', 'u');\n} // This enables the following string patterns:\n// 1. backtick quoted string using `` to escape\n// 2. square bracket quoted string (SQL Server) using ]] to escape\n// 3. double quoted string using \"\" or \\\" to escape\n// 4. single quoted string using '' or \\' to escape\n// 5. national character quoted string using N'' or N\\' to escape\n// 6. Unicode single-quoted string using \\' to escape\n// 7. Unicode double-quoted string using \\\" to escape\n// 8. PostgreSQL dollar-quoted strings\n\n\nfunction createStringPattern(stringTypes) {\n  var patterns = {\n    '``': '((`[^`]*($|`))+)',\n    '{}': '((\\\\{[^\\\\}]*($|\\\\}))+)',\n    '[]': '((\\\\[[^\\\\]]*($|\\\\]))(\\\\][^\\\\]]*($|\\\\]))*)',\n    '\"\"': '((\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*(\"|$))+)',\n    \"''\": \"(('[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*('|$))+)\",\n    \"N''\": \"((N'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*('|$))+)\",\n    \"U&''\": \"((U&'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*('|$))+)\",\n    'U&\"\"': '((U&\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*(\"|$))+)',\n    $$: '((?<tag>\\\\$\\\\w*\\\\$)[\\\\s\\\\S]*?(?:\\\\k<tag>|$))'\n  };\n  return stringTypes.map(function (t) {\n    return patterns[t];\n  }).join('|');\n}\n\nfunction createParenRegex(parens) {\n  return new RegExp('^(' + parens.map(escapeParen).join('|') + ')', 'iu');\n}\n\nfunction escapeParen(paren) {\n  if (paren.length === 1) {\n    // A single punctuation character\n    return (0, _utils.escapeRegExp)(paren);\n  } else {\n    // longer word\n    return '\\\\b' + paren + '\\\\b';\n  }\n}\n\nfunction createPlaceholderRegex(types, pattern) {\n  if ((0, _utils.isEmpty)(types)) {\n    return false;\n  }\n\n  var typesRegex = types.map(_utils.escapeRegExp).join('|');\n  return new RegExp(\"^((?:\".concat(typesRegex, \")(?:\").concat(pattern, \"))\"), 'u');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvcmVnZXhGYWN0b3J5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2luZHdhbGtlci1pby9jb3JlLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9jb3JlL3JlZ2V4RmFjdG9yeS5qcz9kMDAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jcmVhdGVPcGVyYXRvclJlZ2V4ID0gY3JlYXRlT3BlcmF0b3JSZWdleDtcbmV4cG9ydHMuY3JlYXRlTGluZUNvbW1lbnRSZWdleCA9IGNyZWF0ZUxpbmVDb21tZW50UmVnZXg7XG5leHBvcnRzLmNyZWF0ZVJlc2VydmVkV29yZFJlZ2V4ID0gY3JlYXRlUmVzZXJ2ZWRXb3JkUmVnZXg7XG5leHBvcnRzLmNyZWF0ZVdvcmRSZWdleCA9IGNyZWF0ZVdvcmRSZWdleDtcbmV4cG9ydHMuY3JlYXRlU3RyaW5nUmVnZXggPSBjcmVhdGVTdHJpbmdSZWdleDtcbmV4cG9ydHMuY3JlYXRlU3RyaW5nUGF0dGVybiA9IGNyZWF0ZVN0cmluZ1BhdHRlcm47XG5leHBvcnRzLmNyZWF0ZVBhcmVuUmVnZXggPSBjcmVhdGVQYXJlblJlZ2V4O1xuZXhwb3J0cy5jcmVhdGVQbGFjZWhvbGRlclJlZ2V4ID0gY3JlYXRlUGxhY2Vob2xkZXJSZWdleDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcblxuZnVuY3Rpb24gY3JlYXRlT3BlcmF0b3JSZWdleChtdWx0aUxldHRlck9wZXJhdG9ycykge1xuICByZXR1cm4gbmV3IFJlZ0V4cChcIl4oXCIuY29uY2F0KCgwLCBfdXRpbHMuc29ydEJ5TGVuZ3RoRGVzYykobXVsdGlMZXR0ZXJPcGVyYXRvcnMpLm1hcChfdXRpbHMuZXNjYXBlUmVnRXhwKS5qb2luKCd8JyksIFwifC4pXCIpLCAndScpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5lQ29tbWVudFJlZ2V4KGxpbmVDb21tZW50VHlwZXMpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeKCg/OlwiLmNvbmNhdChsaW5lQ29tbWVudFR5cGVzLm1hcChmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAoMCwgX3V0aWxzLmVzY2FwZVJlZ0V4cCkoYyk7XG4gIH0pLmpvaW4oJ3wnKSwgXCIpLio/KSg/OlxcclxcbnxcXHJ8XFxufCQpXCIpLCAndScpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZXNlcnZlZFdvcmRSZWdleChyZXNlcnZlZFdvcmRzKSB7XG4gIGlmIChyZXNlcnZlZFdvcmRzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKFwiXlxcYiRcIiwgJ3UnKTtcbiAgfVxuXG4gIHZhciByZXNlcnZlZFdvcmRzUGF0dGVybiA9ICgwLCBfdXRpbHMuc29ydEJ5TGVuZ3RoRGVzYykocmVzZXJ2ZWRXb3Jkcykuam9pbignfCcpLnJlcGxhY2UoLyAvZywgJ1xcXFxzKycpO1xuICByZXR1cm4gbmV3IFJlZ0V4cChcIl4oXCIuY29uY2F0KHJlc2VydmVkV29yZHNQYXR0ZXJuLCBcIilcXFxcYlwiKSwgJ2l1Jyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVdvcmRSZWdleCgpIHtcbiAgdmFyIHNwZWNpYWxDaGFycyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXihbXFxcXHB7QWxwaGFiZXRpY31cXFxccHtNYXJrfVxcXFxwe0RlY2ltYWxfTnVtYmVyfVxcXFxwe0Nvbm5lY3Rvcl9QdW5jdHVhdGlvbn1cXFxccHtKb2luX0NvbnRyb2x9XCIuY29uY2F0KHNwZWNpYWxDaGFycy5qb2luKCcnKSwgXCJdKylcIiksICd1Jyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0cmluZ1JlZ2V4KHN0cmluZ1R5cGVzKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeKCcgKyBjcmVhdGVTdHJpbmdQYXR0ZXJuKHN0cmluZ1R5cGVzKSArICcpJywgJ3UnKTtcbn0gLy8gVGhpcyBlbmFibGVzIHRoZSBmb2xsb3dpbmcgc3RyaW5nIHBhdHRlcm5zOlxuLy8gMS4gYmFja3RpY2sgcXVvdGVkIHN0cmluZyB1c2luZyBgYCB0byBlc2NhcGVcbi8vIDIuIHNxdWFyZSBicmFja2V0IHF1b3RlZCBzdHJpbmcgKFNRTCBTZXJ2ZXIpIHVzaW5nIF1dIHRvIGVzY2FwZVxuLy8gMy4gZG91YmxlIHF1b3RlZCBzdHJpbmcgdXNpbmcgXCJcIiBvciBcXFwiIHRvIGVzY2FwZVxuLy8gNC4gc2luZ2xlIHF1b3RlZCBzdHJpbmcgdXNpbmcgJycgb3IgXFwnIHRvIGVzY2FwZVxuLy8gNS4gbmF0aW9uYWwgY2hhcmFjdGVyIHF1b3RlZCBzdHJpbmcgdXNpbmcgTicnIG9yIE5cXCcgdG8gZXNjYXBlXG4vLyA2LiBVbmljb2RlIHNpbmdsZS1xdW90ZWQgc3RyaW5nIHVzaW5nIFxcJyB0byBlc2NhcGVcbi8vIDcuIFVuaWNvZGUgZG91YmxlLXF1b3RlZCBzdHJpbmcgdXNpbmcgXFxcIiB0byBlc2NhcGVcbi8vIDguIFBvc3RncmVTUUwgZG9sbGFyLXF1b3RlZCBzdHJpbmdzXG5cblxuZnVuY3Rpb24gY3JlYXRlU3RyaW5nUGF0dGVybihzdHJpbmdUeXBlcykge1xuICB2YXIgcGF0dGVybnMgPSB7XG4gICAgJ2BgJzogJygoYFteYF0qKCR8YCkpKyknLFxuICAgICd7fSc6ICcoKFxcXFx7W15cXFxcfV0qKCR8XFxcXH0pKSspJyxcbiAgICAnW10nOiAnKChcXFxcW1teXFxcXF1dKigkfFxcXFxdKSkoXFxcXF1bXlxcXFxdXSooJHxcXFxcXSkpKiknLFxuICAgICdcIlwiJzogJygoXCJbXlwiXFxcXFxcXFxdKig/OlxcXFxcXFxcLlteXCJcXFxcXFxcXF0qKSooXCJ8JCkpKyknLFxuICAgIFwiJydcIjogXCIoKCdbXidcXFxcXFxcXF0qKD86XFxcXFxcXFwuW14nXFxcXFxcXFxdKikqKCd8JCkpKylcIixcbiAgICBcIk4nJ1wiOiBcIigoTidbXidcXFxcXFxcXF0qKD86XFxcXFxcXFwuW14nXFxcXFxcXFxdKikqKCd8JCkpKylcIixcbiAgICBcIlUmJydcIjogXCIoKFUmJ1teJ1xcXFxcXFxcXSooPzpcXFxcXFxcXC5bXidcXFxcXFxcXF0qKSooJ3wkKSkrKVwiLFxuICAgICdVJlwiXCInOiAnKChVJlwiW15cIlxcXFxcXFxcXSooPzpcXFxcXFxcXC5bXlwiXFxcXFxcXFxdKikqKFwifCQpKSspJyxcbiAgICAkJDogJygoPzx0YWc+XFxcXCRcXFxcdypcXFxcJClbXFxcXHNcXFxcU10qPyg/OlxcXFxrPHRhZz58JCkpJ1xuICB9O1xuICByZXR1cm4gc3RyaW5nVHlwZXMubWFwKGZ1bmN0aW9uICh0KSB7XG4gICAgcmV0dXJuIHBhdHRlcm5zW3RdO1xuICB9KS5qb2luKCd8Jyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVBhcmVuUmVnZXgocGFyZW5zKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeKCcgKyBwYXJlbnMubWFwKGVzY2FwZVBhcmVuKS5qb2luKCd8JykgKyAnKScsICdpdScpO1xufVxuXG5mdW5jdGlvbiBlc2NhcGVQYXJlbihwYXJlbikge1xuICBpZiAocGFyZW4ubGVuZ3RoID09PSAxKSB7XG4gICAgLy8gQSBzaW5nbGUgcHVuY3R1YXRpb24gY2hhcmFjdGVyXG4gICAgcmV0dXJuICgwLCBfdXRpbHMuZXNjYXBlUmVnRXhwKShwYXJlbik7XG4gIH0gZWxzZSB7XG4gICAgLy8gbG9uZ2VyIHdvcmRcbiAgICByZXR1cm4gJ1xcXFxiJyArIHBhcmVuICsgJ1xcXFxiJztcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVQbGFjZWhvbGRlclJlZ2V4KHR5cGVzLCBwYXR0ZXJuKSB7XG4gIGlmICgoMCwgX3V0aWxzLmlzRW1wdHkpKHR5cGVzKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciB0eXBlc1JlZ2V4ID0gdHlwZXMubWFwKF91dGlscy5lc2NhcGVSZWdFeHApLmpvaW4oJ3wnKTtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeKCg/OlwiLmNvbmNhdCh0eXBlc1JlZ2V4LCBcIikoPzpcIikuY29uY2F0KHBhdHRlcm4sIFwiKSlcIiksICd1Jyk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/regexFactory.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/core/token.js":
/*!*******************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/token.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.isEnd = exports.isWindow = exports.isBy = exports.isSet = exports.isLimit = exports.isBetween = exports.isAnd = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar isToken = function isToken(type, regex) {\n  return function (token) {\n    return (token === null || token === void 0 ? void 0 : token.type) === type && regex.test(token === null || token === void 0 ? void 0 : token.value);\n  };\n};\n\nvar isAnd = isToken(_tokenTypes[\"default\"].RESERVED_NEWLINE, /^AND$/i);\nexports.isAnd = isAnd;\nvar isBetween = isToken(_tokenTypes[\"default\"].RESERVED, /^BETWEEN$/i);\nexports.isBetween = isBetween;\nvar isLimit = isToken(_tokenTypes[\"default\"].RESERVED_TOP_LEVEL, /^LIMIT$/i);\nexports.isLimit = isLimit;\nvar isSet = isToken(_tokenTypes[\"default\"].RESERVED_TOP_LEVEL, /^[S\\u017F]ET$/i);\nexports.isSet = isSet;\nvar isBy = isToken(_tokenTypes[\"default\"].RESERVED, /^BY$/i);\nexports.isBy = isBy;\nvar isWindow = isToken(_tokenTypes[\"default\"].RESERVED_TOP_LEVEL, /^WINDOW$/i);\nexports.isWindow = isWindow;\nvar isEnd = isToken(_tokenTypes[\"default\"].CLOSE_PAREN, /^END$/i);\nexports.isEnd = isEnd;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvdG9rZW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2luZHdhbGtlci1pby9jb3JlLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9jb3JlL3Rva2VuLmpzP2Q4OGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmlzRW5kID0gZXhwb3J0cy5pc1dpbmRvdyA9IGV4cG9ydHMuaXNCeSA9IGV4cG9ydHMuaXNTZXQgPSBleHBvcnRzLmlzTGltaXQgPSBleHBvcnRzLmlzQmV0d2VlbiA9IGV4cG9ydHMuaXNBbmQgPSB2b2lkIDA7XG5cbnZhciBfdG9rZW5UeXBlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdG9rZW5UeXBlc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG52YXIgaXNUb2tlbiA9IGZ1bmN0aW9uIGlzVG9rZW4odHlwZSwgcmVnZXgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICh0b2tlbikge1xuICAgIHJldHVybiAodG9rZW4gPT09IG51bGwgfHwgdG9rZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRva2VuLnR5cGUpID09PSB0eXBlICYmIHJlZ2V4LnRlc3QodG9rZW4gPT09IG51bGwgfHwgdG9rZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRva2VuLnZhbHVlKTtcbiAgfTtcbn07XG5cbnZhciBpc0FuZCA9IGlzVG9rZW4oX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEX05FV0xJTkUsIC9eQU5EJC9pKTtcbmV4cG9ydHMuaXNBbmQgPSBpc0FuZDtcbnZhciBpc0JldHdlZW4gPSBpc1Rva2VuKF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5SRVNFUlZFRCwgL15CRVRXRUVOJC9pKTtcbmV4cG9ydHMuaXNCZXR3ZWVuID0gaXNCZXR3ZWVuO1xudmFyIGlzTGltaXQgPSBpc1Rva2VuKF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5SRVNFUlZFRF9UT1BfTEVWRUwsIC9eTElNSVQkL2kpO1xuZXhwb3J0cy5pc0xpbWl0ID0gaXNMaW1pdDtcbnZhciBpc1NldCA9IGlzVG9rZW4oX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEX1RPUF9MRVZFTCwgL15bU1xcdTAxN0ZdRVQkL2kpO1xuZXhwb3J0cy5pc1NldCA9IGlzU2V0O1xudmFyIGlzQnkgPSBpc1Rva2VuKF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5SRVNFUlZFRCwgL15CWSQvaSk7XG5leHBvcnRzLmlzQnkgPSBpc0J5O1xudmFyIGlzV2luZG93ID0gaXNUb2tlbihfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRURfVE9QX0xFVkVMLCAvXldJTkRPVyQvaSk7XG5leHBvcnRzLmlzV2luZG93ID0gaXNXaW5kb3c7XG52YXIgaXNFbmQgPSBpc1Rva2VuKF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5DTE9TRV9QQVJFTiwgL15FTkQkL2kpO1xuZXhwb3J0cy5pc0VuZCA9IGlzRW5kOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/token.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js":
/*!************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js ***!
  \************************************************************************/
/***/ ((module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\n/**\n * Constants for token types\n */\nvar _default = {\n  WORD: 'word',\n  STRING: 'string',\n  RESERVED: 'reserved',\n  RESERVED_TOP_LEVEL: 'reserved-top-level',\n  RESERVED_TOP_LEVEL_NO_INDENT: 'reserved-top-level-no-indent',\n  RESERVED_NEWLINE: 'reserved-newline',\n  OPERATOR: 'operator',\n  OPEN_PAREN: 'open-paren',\n  CLOSE_PAREN: 'close-paren',\n  LINE_COMMENT: 'line-comment',\n  BLOCK_COMMENT: 'block-comment',\n  NUMBER: 'number',\n  PLACEHOLDER: 'placeholder'\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvdG9rZW5UeXBlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2luZHdhbGtlci1pby9jb3JlLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9jb3JlL3Rva2VuVHlwZXMuanM/ZWYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG4vKipcbiAqIENvbnN0YW50cyBmb3IgdG9rZW4gdHlwZXNcbiAqL1xudmFyIF9kZWZhdWx0ID0ge1xuICBXT1JEOiAnd29yZCcsXG4gIFNUUklORzogJ3N0cmluZycsXG4gIFJFU0VSVkVEOiAncmVzZXJ2ZWQnLFxuICBSRVNFUlZFRF9UT1BfTEVWRUw6ICdyZXNlcnZlZC10b3AtbGV2ZWwnLFxuICBSRVNFUlZFRF9UT1BfTEVWRUxfTk9fSU5ERU5UOiAncmVzZXJ2ZWQtdG9wLWxldmVsLW5vLWluZGVudCcsXG4gIFJFU0VSVkVEX05FV0xJTkU6ICdyZXNlcnZlZC1uZXdsaW5lJyxcbiAgT1BFUkFUT1I6ICdvcGVyYXRvcicsXG4gIE9QRU5fUEFSRU46ICdvcGVuLXBhcmVuJyxcbiAgQ0xPU0VfUEFSRU46ICdjbG9zZS1wYXJlbicsXG4gIExJTkVfQ09NTUVOVDogJ2xpbmUtY29tbWVudCcsXG4gIEJMT0NLX0NPTU1FTlQ6ICdibG9jay1jb21tZW50JyxcbiAgTlVNQkVSOiAnbnVtYmVyJyxcbiAgUExBQ0VIT0xERVI6ICdwbGFjZWhvbGRlcidcbn07XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/Db2Formatter.js":
/*!*******************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/Db2Formatter.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ABS', 'ACTIVATE', 'ALIAS', 'ALL', 'ALLOCATE', 'ALLOW', 'ALTER', 'ANY', 'ARE', 'ARRAY', 'AS', 'ASC', 'ASENSITIVE', 'ASSOCIATE', 'ASUTIME', 'ASYMMETRIC', 'AT', 'ATOMIC', 'ATTRIBUTES', 'AUDIT', 'AUTHORIZATION', 'AUX', 'AUXILIARY', 'AVG', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOOLEAN', 'BOTH', 'BUFFERPOOL', 'BY', 'CACHE', 'CALL', 'CALLED', 'CAPTURE', 'CARDINALITY', 'CASCADED', 'CASE', 'CAST', 'CCSID', 'CEIL', 'CEILING', 'CHAR', 'CHARACTER', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHECK', 'CLOB', 'CLONE', 'CLOSE', 'CLUSTER', 'COALESCE', 'COLLATE', 'COLLECT', 'COLLECTION', 'COLLID', 'COLUMN', 'COMMENT', 'COMMIT', 'CONCAT', 'CONDITION', 'CONNECT', 'CONNECTION', 'CONSTRAINT', 'CONTAINS', 'CONTINUE', 'CONVERT', 'CORR', 'CORRESPONDING', 'COUNT', 'COUNT_BIG', 'COVAR_POP', 'COVAR_SAMP', 'CREATE', 'CROSS', 'CUBE', 'CUME_DIST', 'CURRENT', 'CURRENT_DATE', 'CURRENT_DEFAULT_TRANSFORM_GROUP', 'CURRENT_LC_CTYPE', 'CURRENT_PATH', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_SERVER', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'CURRENT_TRANSFORM_GROUP_FOR_TYPE', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DATAPARTITIONNAME', 'DATAPARTITIONNUM', 'DATE', 'DAY', 'DAYS', 'DB2GENERAL', 'DB2GENRL', 'DB2SQL', 'DBINFO', 'DBPARTITIONNAME', 'DBPARTITIONNUM', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFAULTS', 'DEFINITION', 'DELETE', 'DENSERANK', 'DENSE_RANK', 'DEREF', 'DESCRIBE', 'DESCRIPTOR', 'DETERMINISTIC', 'DIAGNOSTICS', 'DISABLE', 'DISALLOW', 'DISCONNECT', 'DISTINCT', 'DO', 'DOCUMENT', 'DOUBLE', 'DROP', 'DSSIZE', 'DYNAMIC', 'EACH', 'EDITPROC', 'ELEMENT', 'ELSE', 'ELSEIF', 'ENABLE', 'ENCODING', 'ENCRYPTION', 'END', 'END-EXEC', 'ENDING', 'ERASE', 'ESCAPE', 'EVERY', 'EXCEPTION', 'EXCLUDING', 'EXCLUSIVE', 'EXEC', 'EXECUTE', 'EXISTS', 'EXIT', 'EXP', 'EXPLAIN', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FENCED', 'FETCH', 'FIELDPROC', 'FILE', 'FILTER', 'FINAL', 'FIRST', 'FLOAT', 'FLOOR', 'FOR', 'FOREIGN', 'FREE', 'FULL', 'FUNCTION', 'FUSION', 'GENERAL', 'GENERATED', 'GET', 'GLOBAL', 'GOTO', 'GRANT', 'GRAPHIC', 'GROUP', 'GROUPING', 'HANDLER', 'HASH', 'HASHED_VALUE', 'HINT', 'HOLD', 'HOUR', 'HOURS', 'IDENTITY', 'IF', 'IMMEDIATE', 'IN', 'INCLUDING', 'INCLUSIVE', 'INCREMENT', 'INDEX', 'INDICATOR', 'INDICATORS', 'INF', 'INFINITY', 'INHERIT', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTEGRITY', 'INTERSECTION', 'INTERVAL', 'INTO', 'IS', 'ISOBID', 'ISOLATION', 'ITERATE', 'JAR', 'JAVA', 'KEEP', 'KEY', 'LABEL', 'LANGUAGE', 'LARGE', 'LATERAL', 'LC_CTYPE', 'LEADING', 'LEAVE', 'LEFT', 'LIKE', 'LINKTYPE', 'LN', 'LOCAL', 'LOCALDATE', 'LOCALE', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATOR', 'LOCATORS', 'LOCK', 'LOCKMAX', 'LOCKSIZE', 'LONG', 'LOOP', 'LOWER', 'MAINTAINED', 'MATCH', 'MATERIALIZED', 'MAX', 'MAXVALUE', 'MEMBER', 'MERGE', 'METHOD', 'MICROSECOND', 'MICROSECONDS', 'MIN', 'MINUTE', 'MINUTES', 'MINVALUE', 'MOD', 'MODE', 'MODIFIES', 'MODULE', 'MONTH', 'MONTHS', 'MULTISET', 'NAN', 'NATIONAL', 'NATURAL', 'NCHAR', 'NCLOB', 'NEW', 'NEW_TABLE', 'NEXTVAL', 'NO', 'NOCACHE', 'NOCYCLE', 'NODENAME', 'NODENUMBER', 'NOMAXVALUE', 'NOMINVALUE', 'NONE', 'NOORDER', 'NORMALIZE', 'NORMALIZED', 'NOT', 'NULL', 'NULLIF', 'NULLS', 'NUMERIC', 'NUMPARTS', 'OBID', 'OCTET_LENGTH', 'OF', 'OFFSET', 'OLD', 'OLD_TABLE', 'ON', 'ONLY', 'OPEN', 'OPTIMIZATION', 'OPTIMIZE', 'OPTION', 'ORDER', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERRIDING', 'PACKAGE', 'PADDED', 'PAGESIZE', 'PARAMETER', 'PART', 'PARTITION', 'PARTITIONED', 'PARTITIONING', 'PARTITIONS', 'PASSWORD', 'PATH', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'PIECESIZE', 'PLAN', 'POSITION', 'POWER', 'PRECISION', 'PREPARE', 'PREVVAL', 'PRIMARY', 'PRIQTY', 'PRIVILEGES', 'PROCEDURE', 'PROGRAM', 'PSID', 'PUBLIC', 'QUERY', 'QUERYNO', 'RANGE', 'RANK', 'READ', 'READS', 'REAL', 'RECOVERY', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'REFRESH', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'RELEASE', 'RENAME', 'REPEAT', 'RESET', 'RESIGNAL', 'RESTART', 'RESTRICT', 'RESULT', 'RESULT_SET_LOCATOR', 'RETURN', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUND_CEILING', 'ROUND_DOWN', 'ROUND_FLOOR', 'ROUND_HALF_DOWN', 'ROUND_HALF_EVEN', 'ROUND_HALF_UP', 'ROUND_UP', 'ROUTINE', 'ROW', 'ROWNUMBER', 'ROWS', 'ROWSET', 'ROW_NUMBER', 'RRN', 'RUN', 'SAVEPOINT', 'SCHEMA', 'SCOPE', 'SCRATCHPAD', 'SCROLL', 'SEARCH', 'SECOND', 'SECONDS', 'SECQTY', 'SECURITY', 'SENSITIVE', 'SEQUENCE', 'SESSION', 'SESSION_USER', 'SIGNAL', 'SIMILAR', 'SIMPLE', 'SMALLINT', 'SNAN', 'SOME', 'SOURCE', 'SPECIFIC', 'SPECIFICTYPE', 'SQL', 'SQLEXCEPTION', 'SQLID', 'SQLSTATE', 'SQLWARNING', 'SQRT', 'STACKED', 'STANDARD', 'START', 'STARTING', 'STATEMENT', 'STATIC', 'STATMENT', 'STAY', 'STDDEV_POP', 'STDDEV_SAMP', 'STOGROUP', 'STORES', 'STYLE', 'SUBMULTISET', 'SUBSTRING', 'SUM', 'SUMMARY', 'SYMMETRIC', 'SYNONYM', 'SYSFUN', 'SYSIBM', 'SYSPROC', 'SYSTEM', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'TABLESPACE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSLATE', 'TRANSLATION', 'TREAT', 'TRIGGER', 'TRIM', 'TRUE', 'TRUNCATE', 'TYPE', 'UESCAPE', 'UNDO', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UNTIL', 'UPPER', 'USAGE', 'USER', 'USING', 'VALIDPROC', 'VALUE', 'VARCHAR', 'VARIABLE', 'VARIANT', 'VARYING', 'VAR_POP', 'VAR_SAMP', 'VCAT', 'VERSION', 'VIEW', 'VOLATILE', 'VOLUMES', 'WHEN', 'WHENEVER', 'WHILE', 'WIDTH_BUCKET', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WLM', 'WRITE', 'XMLELEMENT', 'XMLEXISTS', 'XMLNAMESPACES', 'YEAR', 'YEARS'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FETCH FIRST', 'FROM', 'GROUP BY', 'GO', 'HAVING', 'INSERT INTO', 'INTERSECT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'OR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN']; // For reference: https://www.ibm.com/support/knowledgecenter/en/ssw_ibm_i_72/db2/rbafzintro.htm\n\nvar Db2Formatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(Db2Formatter, _Formatter);\n\n  var _super = _createSuper(Db2Formatter);\n\n  function Db2Formatter() {\n    _classCallCheck(this, Db2Formatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Db2Formatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``', '[]'],\n        openParens: ['('],\n        closeParens: [')'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [':'],\n        lineCommentTypes: ['--'],\n        specialWordChars: ['#', '@'],\n        operators: ['**', '!=', '!>', '!>', '||']\n      });\n    }\n  }]);\n\n  return Db2Formatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = Db2Formatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/Db2Formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/MariaDbFormatter.js":
/*!***********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/MariaDbFormatter.js ***!
  \***********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ACCESSIBLE', 'ADD', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'AS', 'ASC', 'ASENSITIVE', 'BEFORE', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOTH', 'BY', 'CALL', 'CASCADE', 'CASE', 'CHANGE', 'CHAR', 'CHARACTER', 'CHECK', 'COLLATE', 'COLUMN', 'CONDITION', 'CONSTRAINT', 'CONTINUE', 'CONVERT', 'CREATE', 'CROSS', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATABASE', 'DATABASES', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELAYED', 'DELETE', 'DESC', 'DESCRIBE', 'DETERMINISTIC', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DO_DOMAIN_IDS', 'DOUBLE', 'DROP', 'DUAL', 'EACH', 'ELSE', 'ELSEIF', 'ENCLOSED', 'ESCAPED', 'EXCEPT', 'EXISTS', 'EXIT', 'EXPLAIN', 'FALSE', 'FETCH', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FOR', 'FORCE', 'FOREIGN', 'FROM', 'FULLTEXT', 'GENERAL', 'GRANT', 'GROUP', 'HAVING', 'HIGH_PRIORITY', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', 'IF', 'IGNORE', 'IGNORE_DOMAIN_IDS', 'IGNORE_SERVER_IDS', 'IN', 'INDEX', 'INFILE', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITERATE', 'JOIN', 'KEY', 'KEYS', 'KILL', 'LEADING', 'LEAVE', 'LEFT', 'LIKE', 'LIMIT', 'LINEAR', 'LINES', 'LOAD', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCK', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', 'MASTER_HEARTBEAT_PERIOD', 'MASTER_SSL_VERIFY_SERVER_CERT', 'MATCH', 'MAXVALUE', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MIDDLEINT', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MOD', 'MODIFIES', 'NATURAL', 'NOT', 'NO_WRITE_TO_BINLOG', 'NULL', 'NUMERIC', 'ON', 'OPTIMIZE', 'OPTION', 'OPTIONALLY', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTFILE', 'OVER', 'PAGE_CHECKSUM', 'PARSE_VCOL_EXPR', 'PARTITION', 'POSITION', 'PRECISION', 'PRIMARY', 'PROCEDURE', 'PURGE', 'RANGE', 'READ', 'READS', 'READ_WRITE', 'REAL', 'RECURSIVE', 'REF_SYSTEM_ID', 'REFERENCES', 'REGEXP', 'RELEASE', 'RENAME', 'REPEAT', 'REPLACE', 'REQUIRE', 'RESIGNAL', 'RESTRICT', 'RETURN', 'RETURNING', 'REVOKE', 'RIGHT', 'RLIKE', 'ROWS', 'SCHEMA', 'SCHEMAS', 'SECOND_MICROSECOND', 'SELECT', 'SENSITIVE', 'SEPARATOR', 'SET', 'SHOW', 'SIGNAL', 'SLOW', 'SMALLINT', 'SPATIAL', 'SPECIFIC', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQL_BIG_RESULT', 'SQL_CALC_FOUND_ROWS', 'SQL_SMALL_RESULT', 'SSL', 'STARTING', 'STATS_AUTO_RECALC', 'STATS_PERSISTENT', 'STATS_SAMPLE_PAGES', 'STRAIGHT_JOIN', 'TABLE', 'TERMINATED', 'THEN', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRAILING', 'TRIGGER', 'TRUE', 'UNDO', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSIGNED', 'UPDATE', 'USAGE', 'USE', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARYING', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WRITE', 'XOR', 'YEAR_MONTH', 'ZEROFILL'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN', // non-standard joins\n'STRAIGHT_JOIN', 'NATURAL LEFT JOIN', 'NATURAL LEFT OUTER JOIN', 'NATURAL RIGHT JOIN', 'NATURAL RIGHT OUTER JOIN']; // For reference: https://mariadb.com/kb/en/sql-statements-structure/\n\nvar MariaDbFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(MariaDbFormatter, _Formatter);\n\n  var _super = _createSuper(MariaDbFormatter);\n\n  function MariaDbFormatter() {\n    _classCallCheck(this, MariaDbFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MariaDbFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: ['``', \"''\", '\"\"'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [],\n        lineCommentTypes: ['--', '#'],\n        specialWordChars: ['@'],\n        operators: [':=', '<<', '>>', '!=', '<>', '<=>', '&&', '||']\n      });\n    }\n  }]);\n\n  return MariaDbFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = MariaDbFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/MariaDbFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/MySqlFormatter.js":
/*!*********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/MySqlFormatter.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ACCESSIBLE', 'ADD', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'AS', 'ASC', 'ASENSITIVE', 'BEFORE', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOTH', 'BY', 'CALL', 'CASCADE', 'CASE', 'CHANGE', 'CHAR', 'CHARACTER', 'CHECK', 'COLLATE', 'COLUMN', 'CONDITION', 'CONSTRAINT', 'CONTINUE', 'CONVERT', 'CREATE', 'CROSS', 'CUBE', 'CUME_DIST', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATABASE', 'DATABASES', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELAYED', 'DELETE', 'DENSE_RANK', 'DESC', 'DESCRIBE', 'DETERMINISTIC', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DOUBLE', 'DROP', 'DUAL', 'EACH', 'ELSE', 'ELSEIF', 'EMPTY', 'ENCLOSED', 'ESCAPED', 'EXCEPT', 'EXISTS', 'EXIT', 'EXPLAIN', 'FALSE', 'FETCH', 'FIRST_VALUE', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FOR', 'FORCE', 'FOREIGN', 'FROM', 'FULLTEXT', 'FUNCTION', 'GENERATED', 'GET', 'GRANT', 'GROUP', 'GROUPING', 'GROUPS', 'HAVING', 'HIGH_PRIORITY', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', 'IF', 'IGNORE', 'IN', 'INDEX', 'INFILE', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', 'INTERVAL', 'INTO', 'IO_AFTER_GTIDS', 'IO_BEFORE_GTIDS', 'IS', 'ITERATE', 'JOIN', 'JSON_TABLE', 'KEY', 'KEYS', 'KILL', 'LAG', 'LAST_VALUE', 'LATERAL', 'LEAD', 'LEADING', 'LEAVE', 'LEFT', 'LIKE', 'LIMIT', 'LINEAR', 'LINES', 'LOAD', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCK', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', 'MASTER_BIND', 'MASTER_SSL_VERIFY_SERVER_CERT', 'MATCH', 'MAXVALUE', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MIDDLEINT', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MOD', 'MODIFIES', 'NATURAL', 'NOT', 'NO_WRITE_TO_BINLOG', 'NTH_VALUE', 'NTILE', 'NULL', 'NUMERIC', 'OF', 'ON', 'OPTIMIZE', 'OPTIMIZER_COSTS', 'OPTION', 'OPTIONALLY', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTFILE', 'OVER', 'PARTITION', 'PERCENT_RANK', 'PRECISION', 'PRIMARY', 'PROCEDURE', 'PURGE', 'RANGE', 'RANK', 'READ', 'READS', 'READ_WRITE', 'REAL', 'RECURSIVE', 'REFERENCES', 'REGEXP', 'RELEASE', 'RENAME', 'REPEAT', 'REPLACE', 'REQUIRE', 'RESIGNAL', 'RESTRICT', 'RETURN', 'REVOKE', 'RIGHT', 'RLIKE', 'ROW', 'ROWS', 'ROW_NUMBER', 'SCHEMA', 'SCHEMAS', 'SECOND_MICROSECOND', 'SELECT', 'SENSITIVE', 'SEPARATOR', 'SET', 'SHOW', 'SIGNAL', 'SMALLINT', 'SPATIAL', 'SPECIFIC', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQL_BIG_RESULT', 'SQL_CALC_FOUND_ROWS', 'SQL_SMALL_RESULT', 'SSL', 'STARTING', 'STORED', 'STRAIGHT_JOIN', 'SYSTEM', 'TABLE', 'TERMINATED', 'THEN', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRAILING', 'TRIGGER', 'TRUE', 'UNDO', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSIGNED', 'UPDATE', 'USAGE', 'USE', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARYING', 'VIRTUAL', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WRITE', 'XOR', 'YEAR_MONTH', 'ZEROFILL'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN', // non-standard joins\n'STRAIGHT_JOIN', 'NATURAL LEFT JOIN', 'NATURAL LEFT OUTER JOIN', 'NATURAL RIGHT JOIN', 'NATURAL RIGHT OUTER JOIN'];\n\nvar MySqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(MySqlFormatter, _Formatter);\n\n  var _super = _createSuper(MySqlFormatter);\n\n  function MySqlFormatter() {\n    _classCallCheck(this, MySqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MySqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: ['``', \"''\", '\"\"'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [],\n        lineCommentTypes: ['--', '#'],\n        specialWordChars: ['@'],\n        operators: [':=', '<<', '>>', '!=', '<>', '<=>', '&&', '||', '->', '->>']\n      });\n    }\n  }]);\n\n  return MySqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = MySqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9NeVNxbEZvcm1hdHRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2luZHdhbGtlci1pby9jb3JlLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvTXlTcWxGb3JtYXR0ZXIuanM/MDg5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfRm9ybWF0dGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL2NvcmUvRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Ub2tlbml6ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9jb3JlL1Rva2VuaXplclwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG52YXIgcmVzZXJ2ZWRXb3JkcyA9IFsnQUNDRVNTSUJMRScsICdBREQnLCAnQUxMJywgJ0FMVEVSJywgJ0FOQUxZWkUnLCAnQU5EJywgJ0FTJywgJ0FTQycsICdBU0VOU0lUSVZFJywgJ0JFRk9SRScsICdCRVRXRUVOJywgJ0JJR0lOVCcsICdCSU5BUlknLCAnQkxPQicsICdCT1RIJywgJ0JZJywgJ0NBTEwnLCAnQ0FTQ0FERScsICdDQVNFJywgJ0NIQU5HRScsICdDSEFSJywgJ0NIQVJBQ1RFUicsICdDSEVDSycsICdDT0xMQVRFJywgJ0NPTFVNTicsICdDT05ESVRJT04nLCAnQ09OU1RSQUlOVCcsICdDT05USU5VRScsICdDT05WRVJUJywgJ0NSRUFURScsICdDUk9TUycsICdDVUJFJywgJ0NVTUVfRElTVCcsICdDVVJSRU5UX0RBVEUnLCAnQ1VSUkVOVF9USU1FJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ0NVUlJFTlRfVVNFUicsICdDVVJTT1InLCAnREFUQUJBU0UnLCAnREFUQUJBU0VTJywgJ0RBWV9IT1VSJywgJ0RBWV9NSUNST1NFQ09ORCcsICdEQVlfTUlOVVRFJywgJ0RBWV9TRUNPTkQnLCAnREVDJywgJ0RFQ0lNQUwnLCAnREVDTEFSRScsICdERUZBVUxUJywgJ0RFTEFZRUQnLCAnREVMRVRFJywgJ0RFTlNFX1JBTksnLCAnREVTQycsICdERVNDUklCRScsICdERVRFUk1JTklTVElDJywgJ0RJU1RJTkNUJywgJ0RJU1RJTkNUUk9XJywgJ0RJVicsICdET1VCTEUnLCAnRFJPUCcsICdEVUFMJywgJ0VBQ0gnLCAnRUxTRScsICdFTFNFSUYnLCAnRU1QVFknLCAnRU5DTE9TRUQnLCAnRVNDQVBFRCcsICdFWENFUFQnLCAnRVhJU1RTJywgJ0VYSVQnLCAnRVhQTEFJTicsICdGQUxTRScsICdGRVRDSCcsICdGSVJTVF9WQUxVRScsICdGTE9BVCcsICdGTE9BVDQnLCAnRkxPQVQ4JywgJ0ZPUicsICdGT1JDRScsICdGT1JFSUdOJywgJ0ZST00nLCAnRlVMTFRFWFQnLCAnRlVOQ1RJT04nLCAnR0VORVJBVEVEJywgJ0dFVCcsICdHUkFOVCcsICdHUk9VUCcsICdHUk9VUElORycsICdHUk9VUFMnLCAnSEFWSU5HJywgJ0hJR0hfUFJJT1JJVFknLCAnSE9VUl9NSUNST1NFQ09ORCcsICdIT1VSX01JTlVURScsICdIT1VSX1NFQ09ORCcsICdJRicsICdJR05PUkUnLCAnSU4nLCAnSU5ERVgnLCAnSU5GSUxFJywgJ0lOTkVSJywgJ0lOT1VUJywgJ0lOU0VOU0lUSVZFJywgJ0lOU0VSVCcsICdJTlQnLCAnSU5UMScsICdJTlQyJywgJ0lOVDMnLCAnSU5UNCcsICdJTlQ4JywgJ0lOVEVHRVInLCAnSU5URVJWQUwnLCAnSU5UTycsICdJT19BRlRFUl9HVElEUycsICdJT19CRUZPUkVfR1RJRFMnLCAnSVMnLCAnSVRFUkFURScsICdKT0lOJywgJ0pTT05fVEFCTEUnLCAnS0VZJywgJ0tFWVMnLCAnS0lMTCcsICdMQUcnLCAnTEFTVF9WQUxVRScsICdMQVRFUkFMJywgJ0xFQUQnLCAnTEVBRElORycsICdMRUFWRScsICdMRUZUJywgJ0xJS0UnLCAnTElNSVQnLCAnTElORUFSJywgJ0xJTkVTJywgJ0xPQUQnLCAnTE9DQUxUSU1FJywgJ0xPQ0FMVElNRVNUQU1QJywgJ0xPQ0snLCAnTE9ORycsICdMT05HQkxPQicsICdMT05HVEVYVCcsICdMT09QJywgJ0xPV19QUklPUklUWScsICdNQVNURVJfQklORCcsICdNQVNURVJfU1NMX1ZFUklGWV9TRVJWRVJfQ0VSVCcsICdNQVRDSCcsICdNQVhWQUxVRScsICdNRURJVU1CTE9CJywgJ01FRElVTUlOVCcsICdNRURJVU1URVhUJywgJ01JRERMRUlOVCcsICdNSU5VVEVfTUlDUk9TRUNPTkQnLCAnTUlOVVRFX1NFQ09ORCcsICdNT0QnLCAnTU9ESUZJRVMnLCAnTkFUVVJBTCcsICdOT1QnLCAnTk9fV1JJVEVfVE9fQklOTE9HJywgJ05USF9WQUxVRScsICdOVElMRScsICdOVUxMJywgJ05VTUVSSUMnLCAnT0YnLCAnT04nLCAnT1BUSU1JWkUnLCAnT1BUSU1JWkVSX0NPU1RTJywgJ09QVElPTicsICdPUFRJT05BTExZJywgJ09SJywgJ09SREVSJywgJ09VVCcsICdPVVRFUicsICdPVVRGSUxFJywgJ09WRVInLCAnUEFSVElUSU9OJywgJ1BFUkNFTlRfUkFOSycsICdQUkVDSVNJT04nLCAnUFJJTUFSWScsICdQUk9DRURVUkUnLCAnUFVSR0UnLCAnUkFOR0UnLCAnUkFOSycsICdSRUFEJywgJ1JFQURTJywgJ1JFQURfV1JJVEUnLCAnUkVBTCcsICdSRUNVUlNJVkUnLCAnUkVGRVJFTkNFUycsICdSRUdFWFAnLCAnUkVMRUFTRScsICdSRU5BTUUnLCAnUkVQRUFUJywgJ1JFUExBQ0UnLCAnUkVRVUlSRScsICdSRVNJR05BTCcsICdSRVNUUklDVCcsICdSRVRVUk4nLCAnUkVWT0tFJywgJ1JJR0hUJywgJ1JMSUtFJywgJ1JPVycsICdST1dTJywgJ1JPV19OVU1CRVInLCAnU0NIRU1BJywgJ1NDSEVNQVMnLCAnU0VDT05EX01JQ1JPU0VDT05EJywgJ1NFTEVDVCcsICdTRU5TSVRJVkUnLCAnU0VQQVJBVE9SJywgJ1NFVCcsICdTSE9XJywgJ1NJR05BTCcsICdTTUFMTElOVCcsICdTUEFUSUFMJywgJ1NQRUNJRklDJywgJ1NRTCcsICdTUUxFWENFUFRJT04nLCAnU1FMU1RBVEUnLCAnU1FMV0FSTklORycsICdTUUxfQklHX1JFU1VMVCcsICdTUUxfQ0FMQ19GT1VORF9ST1dTJywgJ1NRTF9TTUFMTF9SRVNVTFQnLCAnU1NMJywgJ1NUQVJUSU5HJywgJ1NUT1JFRCcsICdTVFJBSUdIVF9KT0lOJywgJ1NZU1RFTScsICdUQUJMRScsICdURVJNSU5BVEVEJywgJ1RIRU4nLCAnVElOWUJMT0InLCAnVElOWUlOVCcsICdUSU5ZVEVYVCcsICdUTycsICdUUkFJTElORycsICdUUklHR0VSJywgJ1RSVUUnLCAnVU5ETycsICdVTklPTicsICdVTklRVUUnLCAnVU5MT0NLJywgJ1VOU0lHTkVEJywgJ1VQREFURScsICdVU0FHRScsICdVU0UnLCAnVVNJTkcnLCAnVVRDX0RBVEUnLCAnVVRDX1RJTUUnLCAnVVRDX1RJTUVTVEFNUCcsICdWQUxVRVMnLCAnVkFSQklOQVJZJywgJ1ZBUkNIQVInLCAnVkFSQ0hBUkFDVEVSJywgJ1ZBUllJTkcnLCAnVklSVFVBTCcsICdXSEVOJywgJ1dIRVJFJywgJ1dISUxFJywgJ1dJTkRPVycsICdXSVRIJywgJ1dSSVRFJywgJ1hPUicsICdZRUFSX01PTlRIJywgJ1pFUk9GSUxMJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzID0gWydBREQnLCAnQUxURVIgQ09MVU1OJywgJ0FMVEVSIFRBQkxFJywgJ0RFTEVURSBGUk9NJywgJ0VYQ0VQVCcsICdGUk9NJywgJ0dST1VQIEJZJywgJ0hBVklORycsICdJTlNFUlQgSU5UTycsICdJTlNFUlQnLCAnTElNSVQnLCAnT1JERVIgQlknLCAnU0VMRUNUJywgJ1NFVCcsICdVUERBVEUnLCAnVkFMVUVTJywgJ1dIRVJFJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzTm9JbmRlbnQgPSBbJ0lOVEVSU0VDVCcsICdJTlRFUlNFQ1QgQUxMJywgJ1VOSU9OJywgJ1VOSU9OIEFMTCddO1xudmFyIHJlc2VydmVkTmV3bGluZVdvcmRzID0gWydBTkQnLCAnRUxTRScsICdPUicsICdXSEVOJywgLy8gam9pbnNcbidKT0lOJywgJ0lOTkVSIEpPSU4nLCAnTEVGVCBKT0lOJywgJ0xFRlQgT1VURVIgSk9JTicsICdSSUdIVCBKT0lOJywgJ1JJR0hUIE9VVEVSIEpPSU4nLCAnQ1JPU1MgSk9JTicsICdOQVRVUkFMIEpPSU4nLCAvLyBub24tc3RhbmRhcmQgam9pbnNcbidTVFJBSUdIVF9KT0lOJywgJ05BVFVSQUwgTEVGVCBKT0lOJywgJ05BVFVSQUwgTEVGVCBPVVRFUiBKT0lOJywgJ05BVFVSQUwgUklHSFQgSk9JTicsICdOQVRVUkFMIFJJR0hUIE9VVEVSIEpPSU4nXTtcblxudmFyIE15U3FsRm9ybWF0dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRm9ybWF0dGVyKSB7XG4gIF9pbmhlcml0cyhNeVNxbEZvcm1hdHRlciwgX0Zvcm1hdHRlcik7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihNeVNxbEZvcm1hdHRlcik7XG5cbiAgZnVuY3Rpb24gTXlTcWxGb3JtYXR0ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE15U3FsRm9ybWF0dGVyKTtcblxuICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhNeVNxbEZvcm1hdHRlciwgW3tcbiAgICBrZXk6IFwidG9rZW5pemVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRva2VuaXplcigpIHtcbiAgICAgIHJldHVybiBuZXcgX1Rva2VuaXplcltcImRlZmF1bHRcIl0oe1xuICAgICAgICByZXNlcnZlZFdvcmRzOiByZXNlcnZlZFdvcmRzLFxuICAgICAgICByZXNlcnZlZFRvcExldmVsV29yZHM6IHJlc2VydmVkVG9wTGV2ZWxXb3JkcyxcbiAgICAgICAgcmVzZXJ2ZWROZXdsaW5lV29yZHM6IHJlc2VydmVkTmV3bGluZVdvcmRzLFxuICAgICAgICByZXNlcnZlZFRvcExldmVsV29yZHNOb0luZGVudDogcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzTm9JbmRlbnQsXG4gICAgICAgIHN0cmluZ1R5cGVzOiBbJ2BgJywgXCInJ1wiLCAnXCJcIiddLFxuICAgICAgICBvcGVuUGFyZW5zOiBbJygnLCAnQ0FTRSddLFxuICAgICAgICBjbG9zZVBhcmVuczogWycpJywgJ0VORCddLFxuICAgICAgICBpbmRleGVkUGxhY2Vob2xkZXJUeXBlczogWyc/J10sXG4gICAgICAgIG5hbWVkUGxhY2Vob2xkZXJUeXBlczogW10sXG4gICAgICAgIGxpbmVDb21tZW50VHlwZXM6IFsnLS0nLCAnIyddLFxuICAgICAgICBzcGVjaWFsV29yZENoYXJzOiBbJ0AnXSxcbiAgICAgICAgb3BlcmF0b3JzOiBbJzo9JywgJzw8JywgJz4+JywgJyE9JywgJzw+JywgJzw9PicsICcmJicsICd8fCcsICctPicsICctPj4nXVxuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE15U3FsRm9ybWF0dGVyO1xufShfRm9ybWF0dGVyMltcImRlZmF1bHRcIl0pO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IE15U3FsRm9ybWF0dGVyO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/MySqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/N1qlFormatter.js":
/*!********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/N1qlFormatter.js ***!
  \********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'BEGIN', 'BETWEEN', 'BINARY', 'BOOLEAN', 'BREAK', 'BUCKET', 'BUILD', 'BY', 'CALL', 'CASE', 'CAST', 'CLUSTER', 'COLLATE', 'COLLECTION', 'COMMIT', 'CONNECT', 'CONTINUE', 'CORRELATE', 'COVER', 'CREATE', 'DATABASE', 'DATASET', 'DATASTORE', 'DECLARE', 'DECREMENT', 'DELETE', 'DERIVED', 'DESC', 'DESCRIBE', 'DISTINCT', 'DO', 'DROP', 'EACH', 'ELEMENT', 'ELSE', 'END', 'EVERY', 'EXCEPT', 'EXCLUDE', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'FALSE', 'FETCH', 'FIRST', 'FLATTEN', 'FOR', 'FORCE', 'FROM', 'FUNCTION', 'GRANT', 'GROUP', 'GSI', 'HAVING', 'IF', 'IGNORE', 'ILIKE', 'IN', 'INCLUDE', 'INCREMENT', 'INDEX', 'INFER', 'INLINE', 'INNER', 'INSERT', 'INTERSECT', 'INTO', 'IS', 'JOIN', 'KEY', 'KEYS', 'KEYSPACE', 'KNOWN', 'LAST', 'LEFT', 'LET', 'LETTING', 'LIKE', 'LIMIT', 'LSM', 'MAP', 'MAPPING', 'MATCHED', 'MATERIALIZED', 'MERGE', 'MISSING', 'NAMESPACE', 'NEST', 'NOT', 'NULL', 'NUMBER', 'OBJECT', 'OFFSET', 'ON', 'OPTION', 'OR', 'ORDER', 'OUTER', 'OVER', 'PARSE', 'PARTITION', 'PASSWORD', 'PATH', 'POOL', 'PREPARE', 'PRIMARY', 'PRIVATE', 'PRIVILEGE', 'PROCEDURE', 'PUBLIC', 'RAW', 'REALM', 'REDUCE', 'RENAME', 'RETURN', 'RETURNING', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'SATISFIES', 'SCHEMA', 'SELECT', 'SELF', 'SEMI', 'SET', 'SHOW', 'SOME', 'START', 'STATISTICS', 'STRING', 'SYSTEM', 'THEN', 'TO', 'TRANSACTION', 'TRIGGER', 'TRUE', 'TRUNCATE', 'UNDER', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UNSET', 'UPDATE', 'UPSERT', 'USE', 'USER', 'USING', 'VALIDATE', 'VALUE', 'VALUED', 'VALUES', 'VIA', 'VIEW', 'WHEN', 'WHERE', 'WHILE', 'WITH', 'WITHIN', 'WORK', 'XOR'];\nvar reservedTopLevelWords = ['DELETE FROM', 'EXCEPT ALL', 'EXCEPT', 'EXPLAIN DELETE FROM', 'EXPLAIN UPDATE', 'EXPLAIN UPSERT', 'FROM', 'GROUP BY', 'HAVING', 'INFER', 'INSERT INTO', 'LET', 'LIMIT', 'MERGE', 'NEST', 'ORDER BY', 'PREPARE', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UNNEST', 'UPDATE', 'UPSERT', 'USE KEYS', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'OR', 'XOR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN']; // For reference: http://docs.couchbase.com.s3-website-us-west-1.amazonaws.com/server/6.0/n1ql/n1ql-language-reference/index.html\n\nvar N1qlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(N1qlFormatter, _Formatter);\n\n  var _super = _createSuper(N1qlFormatter);\n\n  function N1qlFormatter() {\n    _classCallCheck(this, N1qlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(N1qlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``'],\n        openParens: ['(', '[', '{'],\n        closeParens: [')', ']', '}'],\n        namedPlaceholderTypes: ['$'],\n        lineCommentTypes: ['#', '--'],\n        operators: ['==', '!=']\n      });\n    }\n  }]);\n\n  return N1qlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = N1qlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/N1qlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js":
/*!*********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _token = __webpack_require__(/*! ../core/token */ \"../../../../../node_modules/sql-formatter/lib/core/token.js\");\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ../core/tokenTypes */ \"../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['A', 'ACCESSIBLE', 'AGENT', 'AGGREGATE', 'ALL', 'ALTER', 'ANY', 'ARRAY', 'AS', 'ASC', 'AT', 'ATTRIBUTE', 'AUTHID', 'AVG', 'BETWEEN', 'BFILE_BASE', 'BINARY_INTEGER', 'BINARY', 'BLOB_BASE', 'BLOCK', 'BODY', 'BOOLEAN', 'BOTH', 'BOUND', 'BREADTH', 'BULK', 'BY', 'BYTE', 'C', 'CALL', 'CALLING', 'CASCADE', 'CASE', 'CHAR_BASE', 'CHAR', 'CHARACTER', 'CHARSET', 'CHARSETFORM', 'CHARSETID', 'CHECK', 'CLOB_BASE', 'CLONE', 'CLOSE', 'CLUSTER', 'CLUSTERS', 'COALESCE', 'COLAUTH', 'COLLECT', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPILED', 'COMPRESS', 'CONNECT', 'CONSTANT', 'CONSTRUCTOR', 'CONTEXT', 'CONTINUE', 'CONVERT', 'COUNT', 'CRASH', 'CREATE', 'CREDENTIAL', 'CURRENT', 'CURRVAL', 'CURSOR', 'CUSTOMDATUM', 'DANGLING', 'DATA', 'DATE_BASE', 'DATE', 'DAY', 'DECIMAL', 'DEFAULT', 'DEFINE', 'DELETE', 'DEPTH', 'DESC', 'DETERMINISTIC', 'DIRECTORY', 'DISTINCT', 'DO', 'DOUBLE', 'DROP', 'DURATION', 'ELEMENT', 'ELSIF', 'EMPTY', 'END', 'ESCAPE', 'EXCEPTIONS', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXIT', 'EXTENDS', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FINAL', 'FIRST', 'FIXED', 'FLOAT', 'FOR', 'FORALL', 'FORCE', 'FROM', 'FUNCTION', 'GENERAL', 'GOTO', 'GRANT', 'GROUP', 'HASH', 'HEAP', 'HIDDEN', 'HOUR', 'IDENTIFIED', 'IF', 'IMMEDIATE', 'IN', 'INCLUDING', 'INDEX', 'INDEXES', 'INDICATOR', 'INDICES', 'INFINITE', 'INSTANTIABLE', 'INT', 'INTEGER', 'INTERFACE', 'INTERVAL', 'INTO', 'INVALIDATE', 'IS', 'ISOLATION', 'JAVA', 'LANGUAGE', 'LARGE', 'LEADING', 'LENGTH', 'LEVEL', 'LIBRARY', 'LIKE', 'LIKE2', 'LIKE4', 'LIKEC', 'LIMITED', 'LOCAL', 'LOCK', 'LONG', 'MAP', 'MAX', 'MAXLEN', 'MEMBER', 'MERGE', 'MIN', 'MINUTE', 'MLSLABEL', 'MOD', 'MODE', 'MONTH', 'MULTISET', 'NAME', 'NAN', 'NATIONAL', 'NATIVE', 'NATURAL', 'NATURALN', 'NCHAR', 'NEW', 'NEXTVAL', 'NOCOMPRESS', 'NOCOPY', 'NOT', 'NOWAIT', 'NULL', 'NULLIF', 'NUMBER_BASE', 'NUMBER', 'OBJECT', 'OCICOLL', 'OCIDATE', 'OCIDATETIME', 'OCIDURATION', 'OCIINTERVAL', 'OCILOBLOCATOR', 'OCINUMBER', 'OCIRAW', 'OCIREF', 'OCIREFCURSOR', 'OCIROWID', 'OCISTRING', 'OCITYPE', 'OF', 'OLD', 'ON', 'ONLY', 'OPAQUE', 'OPEN', 'OPERATOR', 'OPTION', 'ORACLE', 'ORADATA', 'ORDER', 'ORGANIZATION', 'ORLANY', 'ORLVARY', 'OTHERS', 'OUT', 'OVERLAPS', 'OVERRIDING', 'PACKAGE', 'PARALLEL_ENABLE', 'PARAMETER', 'PARAMETERS', 'PARENT', 'PARTITION', 'PASCAL', 'PCTFREE', 'PIPE', 'PIPELINED', 'PLS_INTEGER', 'PLUGGABLE', 'POSITIVE', 'POSITIVEN', 'PRAGMA', 'PRECISION', 'PRIOR', 'PRIVATE', 'PROCEDURE', 'PUBLIC', 'RAISE', 'RANGE', 'RAW', 'READ', 'REAL', 'RECORD', 'REF', 'REFERENCE', 'RELEASE', 'RELIES_ON', 'REM', 'REMAINDER', 'RENAME', 'RESOURCE', 'RESULT_CACHE', 'RESULT', 'RETURN', 'RETURNING', 'REVERSE', 'REVOKE', 'ROLLBACK', 'ROW', 'ROWID', 'ROWNUM', 'ROWTYPE', 'SAMPLE', 'SAVE', 'SAVEPOINT', 'SB1', 'SB2', 'SB4', 'SEARCH', 'SECOND', 'SEGMENT', 'SELF', 'SEPARATE', 'SEQUENCE', 'SERIALIZABLE', 'SHARE', 'SHORT', 'SIZE_T', 'SIZE', 'SMALLINT', 'SOME', 'SPACE', 'SPARSE', 'SQL', 'SQLCODE', 'SQLDATA', 'SQLERRM', 'SQLNAME', 'SQLSTATE', 'STANDARD', 'START', 'STATIC', 'STDDEV', 'STORED', 'STRING', 'STRUCT', 'STYLE', 'SUBMULTISET', 'SUBPARTITION', 'SUBSTITUTABLE', 'SUBTYPE', 'SUCCESSFUL', 'SUM', 'SYNONYM', 'SYSDATE', 'TABAUTH', 'TABLE', 'TDO', 'THE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_ABBR', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TIMEZONE_REGION', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSACTIONAL', 'TRIGGER', 'TRUE', 'TRUSTED', 'TYPE', 'UB1', 'UB2', 'UB4', 'UID', 'UNDER', 'UNIQUE', 'UNPLUG', 'UNSIGNED', 'UNTRUSTED', 'USE', 'USER', 'USING', 'VALIDATE', 'VALIST', 'VALUE', 'VARCHAR', 'VARCHAR2', 'VARIABLE', 'VARIANCE', 'VARRAY', 'VARYING', 'VIEW', 'VIEWS', 'VOID', 'WHENEVER', 'WHILE', 'WITH', 'WORK', 'WRAPPED', 'WRITE', 'YEAR', 'ZONE'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'BEGIN', 'CONNECT BY', 'DECLARE', 'DELETE FROM', 'DELETE', 'END', 'EXCEPT', 'EXCEPTION', 'FETCH FIRST', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'LOOP', 'MODIFY', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'START WITH', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'CROSS APPLY', 'ELSE', 'END', 'OR', 'OUTER APPLY', 'WHEN', 'XOR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar PlSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(PlSqlFormatter, _Formatter);\n\n  var _super = _createSuper(PlSqlFormatter);\n\n  function PlSqlFormatter() {\n    _classCallCheck(this, PlSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PlSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", '``'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [':'],\n        lineCommentTypes: ['--'],\n        specialWordChars: ['_', '$', '#', '.', '@'],\n        operators: ['||', '**', '!=', ':=']\n      });\n    }\n  }, {\n    key: \"tokenOverride\",\n    value: function tokenOverride(token) {\n      if ((0, _token.isSet)(token) && (0, _token.isBy)(this.previousReservedToken)) {\n        return {\n          type: _tokenTypes[\"default\"].RESERVED,\n          value: token.value\n        };\n      }\n\n      return token;\n    }\n  }]);\n\n  return PlSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = PlSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js":
/*!**************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ABORT', 'ABSOLUTE', 'ACCESS', 'ACTION', 'ADD', 'ADMIN', 'AFTER', 'AGGREGATE', 'ALL', 'ALSO', 'ALTER', 'ALWAYS', 'ANALYSE', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'ASSERTION', 'ASSIGNMENT', 'ASYMMETRIC', 'AT', 'ATTACH', 'ATTRIBUTE', 'AUTHORIZATION', 'BACKWARD', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BIT', 'BOOLEAN', 'BOTH', 'BY', 'CACHE', 'CALL', 'CALLED', 'CASCADE', 'CASCADED', 'CASE', 'CAST', 'CATALOG', 'CHAIN', 'CHAR', 'CHARACTER', 'CHARACTERISTICS', 'CHECK', 'CHECKPOINT', 'CLASS', 'CLOSE', 'CLUSTER', 'COALESCE', 'COLLATE', 'COLLATION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMENTS', 'COMMIT', 'COMMITTED', 'CONCURRENTLY', 'CONFIGURATION', 'CONFLICT', 'CONNECTION', 'CONSTRAINT', 'CONSTRAINTS', 'CONTENT', 'CONTINUE', 'CONVERSION', 'COPY', 'COST', 'CREATE', 'CROSS', 'CSV', 'CUBE', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFAULTS', 'DEFERRABLE', 'DEFERRED', 'DEFINER', 'DELETE', 'DELIMITER', 'DELIMITERS', 'DEPENDS', 'DESC', 'DETACH', 'DICTIONARY', 'DISABLE', 'DISCARD', 'DISTINCT', 'DO', 'DOCUMENT', 'DOMAIN', 'DOUBLE', 'DROP', 'EACH', 'ELSE', 'ENABLE', 'ENCODING', 'ENCRYPTED', 'END', 'ENUM', 'ESCAPE', 'EVENT', 'EXCEPT', 'EXCLUDE', 'EXCLUDING', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'EXPRESSION', 'EXTENSION', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FAMILY', 'FETCH', 'FILTER', 'FIRST', 'FLOAT', 'FOLLOWING', 'FOR', 'FORCE', 'FOREIGN', 'FORWARD', 'FREEZE', 'FROM', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GENERATED', 'GLOBAL', 'GRANT', 'GRANTED', 'GREATEST', 'GROUP', 'GROUPING', 'GROUPS', 'HANDLER', 'HAVING', 'HEADER', 'HOLD', 'HOUR', 'IDENTITY', 'IF', 'ILIKE', 'IMMEDIATE', 'IMMUTABLE', 'IMPLICIT', 'IMPORT', 'IN', 'INCLUDE', 'INCLUDING', 'INCREMENT', 'INDEX', 'INDEXES', 'INHERIT', 'INHERITS', 'INITIALLY', 'INLINE', 'INNER', 'INOUT', 'INPUT', 'INSENSITIVE', 'INSERT', 'INSTEAD', 'INT', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'INVOKER', 'IS', 'ISNULL', 'ISOLATION', 'JOIN', 'KEY', 'LABEL', 'LANGUAGE', 'LARGE', 'LAST', 'LATERAL', 'LEADING', 'LEAKPROOF', 'LEAST', 'LEFT', 'LEVEL', 'LIKE', 'LIMIT', 'LISTEN', 'LOAD', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATION', 'LOCK', 'LOCKED', 'LOGGED', 'MAPPING', 'MATCH', 'MATERIALIZED', 'MAXVALUE', 'METHOD', 'MINUTE', 'MINVALUE', 'MODE', 'MONTH', 'MOVE', 'NAME', 'NAMES', 'NATIONAL', 'NATURAL', 'NCHAR', 'NEW', 'NEXT', 'NFC', 'NFD', 'NFKC', 'NFKD', 'NO', 'NONE', 'NORMALIZE', 'NORMALIZED', 'NOT', 'NOTHING', 'NOTIFY', 'NOTNULL', 'NOWAIT', 'NULL', 'NULLIF', 'NULLS', 'NUMERIC', 'OBJECT', 'OF', 'OFF', 'OFFSET', 'OIDS', 'OLD', 'ON', 'ONLY', 'OPERATOR', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'ORDINALITY', 'OTHERS', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERRIDING', 'OWNED', 'OWNER', 'PARALLEL', 'PARSER', 'PARTIAL', 'PARTITION', 'PASSING', 'PASSWORD', 'PLACING', 'PLANS', 'POLICY', 'POSITION', 'PRECEDING', 'PRECISION', 'PREPARE', 'PREPARED', 'PRESERVE', 'PRIMARY', 'PRIOR', 'PRIVILEGES', 'PROCEDURAL', 'PROCEDURE', 'PROCEDURES', 'PROGRAM', 'PUBLICATION', 'QUOTE', 'RANGE', 'READ', 'REAL', 'REASSIGN', 'RECHECK', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'REFRESH', 'REINDEX', 'RELATIVE', 'RELEASE', 'RENAME', 'REPEATABLE', 'REPLACE', 'REPLICA', 'RESET', 'RESTART', 'RESTRICT', 'RETURNING', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROUTINES', 'ROW', 'ROWS', 'RULE', 'SAVEPOINT', 'SCHEMA', 'SCHEMAS', 'SCROLL', 'SEARCH', 'SECOND', 'SECURITY', 'SELECT', 'SEQUENCE', 'SEQUENCES', 'SERIALIZABLE', 'SERVER', 'SESSION', 'SESSION_USER', 'SET', 'SETOF', 'SETS', 'SHARE', 'SHOW', 'SIMILAR', 'SIMPLE', 'SKIP', 'SMALLINT', 'SNAPSHOT', 'SOME', 'SQL', 'STABLE', 'STANDALONE', 'START', 'STATEMENT', 'STATISTICS', 'STDIN', 'STDOUT', 'STORAGE', 'STORED', 'STRICT', 'STRIP', 'SUBSCRIPTION', 'SUBSTRING', 'SUPPORT', 'SYMMETRIC', 'SYSID', 'SYSTEM', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TABLESPACE', 'TEMP', 'TEMPLATE', 'TEMPORARY', 'TEXT', 'THEN', 'TIES', 'TIME', 'TIMESTAMP', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSFORM', 'TREAT', 'TRIGGER', 'TRIM', 'TRUE', 'TRUNCATE', 'TRUSTED', 'TYPE', 'TYPES', 'UESCAPE', 'UNBOUNDED', 'UNCOMMITTED', 'UNENCRYPTED', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLISTEN', 'UNLOGGED', 'UNTIL', 'UPDATE', 'USER', 'USING', 'VACUUM', 'VALID', 'VALIDATE', 'VALIDATOR', 'VALUE', 'VALUES', 'VARCHAR', 'VARIADIC', 'VARYING', 'VERBOSE', 'VERSION', 'VIEW', 'VIEWS', 'VOLATILE', 'WHEN', 'WHERE', 'WHITESPACE', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', 'XML', 'XMLATTRIBUTES', 'XMLCONCAT', 'XMLELEMENT', 'XMLEXISTS', 'XMLFOREST', 'XMLNAMESPACES', 'XMLPARSE', 'XMLPI', 'XMLROOT', 'XMLSERIALIZE', 'XMLTABLE', 'YEAR', 'YES', 'ZONE'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER TABLE', 'CASE', 'DELETE FROM', 'END', 'EXCEPT', 'FETCH FIRST', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar PostgreSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(PostgreSqlFormatter, _Formatter);\n\n  var _super = _createSuper(PostgreSqlFormatter);\n\n  function PostgreSqlFormatter() {\n    _classCallCheck(this, PostgreSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PostgreSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", \"U&''\", 'U&\"\"', '$$'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['$'],\n        namedPlaceholderTypes: [':'],\n        lineCommentTypes: ['--'],\n        operators: ['!=', '<<', '>>', '||/', '|/', '::', '->>', '->', '~~*', '~~', '!~~*', '!~~', '~*', '!~*', '!~', '!!']\n      });\n    }\n  }]);\n\n  return PostgreSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = PostgreSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9Qb3N0Z3JlU3FsRm9ybWF0dGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdpbmR3YWxrZXItaW8vY29yZS8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL1Bvc3RncmVTcWxGb3JtYXR0ZXIuanM/M2E4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfRm9ybWF0dGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL2NvcmUvRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Ub2tlbml6ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9jb3JlL1Rva2VuaXplclwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG52YXIgcmVzZXJ2ZWRXb3JkcyA9IFsnQUJPUlQnLCAnQUJTT0xVVEUnLCAnQUNDRVNTJywgJ0FDVElPTicsICdBREQnLCAnQURNSU4nLCAnQUZURVInLCAnQUdHUkVHQVRFJywgJ0FMTCcsICdBTFNPJywgJ0FMVEVSJywgJ0FMV0FZUycsICdBTkFMWVNFJywgJ0FOQUxZWkUnLCAnQU5EJywgJ0FOWScsICdBUlJBWScsICdBUycsICdBU0MnLCAnQVNTRVJUSU9OJywgJ0FTU0lHTk1FTlQnLCAnQVNZTU1FVFJJQycsICdBVCcsICdBVFRBQ0gnLCAnQVRUUklCVVRFJywgJ0FVVEhPUklaQVRJT04nLCAnQkFDS1dBUkQnLCAnQkVGT1JFJywgJ0JFR0lOJywgJ0JFVFdFRU4nLCAnQklHSU5UJywgJ0JJTkFSWScsICdCSVQnLCAnQk9PTEVBTicsICdCT1RIJywgJ0JZJywgJ0NBQ0hFJywgJ0NBTEwnLCAnQ0FMTEVEJywgJ0NBU0NBREUnLCAnQ0FTQ0FERUQnLCAnQ0FTRScsICdDQVNUJywgJ0NBVEFMT0cnLCAnQ0hBSU4nLCAnQ0hBUicsICdDSEFSQUNURVInLCAnQ0hBUkFDVEVSSVNUSUNTJywgJ0NIRUNLJywgJ0NIRUNLUE9JTlQnLCAnQ0xBU1MnLCAnQ0xPU0UnLCAnQ0xVU1RFUicsICdDT0FMRVNDRScsICdDT0xMQVRFJywgJ0NPTExBVElPTicsICdDT0xVTU4nLCAnQ09MVU1OUycsICdDT01NRU5UJywgJ0NPTU1FTlRTJywgJ0NPTU1JVCcsICdDT01NSVRURUQnLCAnQ09OQ1VSUkVOVExZJywgJ0NPTkZJR1VSQVRJT04nLCAnQ09ORkxJQ1QnLCAnQ09OTkVDVElPTicsICdDT05TVFJBSU5UJywgJ0NPTlNUUkFJTlRTJywgJ0NPTlRFTlQnLCAnQ09OVElOVUUnLCAnQ09OVkVSU0lPTicsICdDT1BZJywgJ0NPU1QnLCAnQ1JFQVRFJywgJ0NST1NTJywgJ0NTVicsICdDVUJFJywgJ0NVUlJFTlQnLCAnQ1VSUkVOVF9DQVRBTE9HJywgJ0NVUlJFTlRfREFURScsICdDVVJSRU5UX1JPTEUnLCAnQ1VSUkVOVF9TQ0hFTUEnLCAnQ1VSUkVOVF9USU1FJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ0NVUlJFTlRfVVNFUicsICdDVVJTT1InLCAnQ1lDTEUnLCAnREFUQScsICdEQVRBQkFTRScsICdEQVknLCAnREVBTExPQ0FURScsICdERUMnLCAnREVDSU1BTCcsICdERUNMQVJFJywgJ0RFRkFVTFQnLCAnREVGQVVMVFMnLCAnREVGRVJSQUJMRScsICdERUZFUlJFRCcsICdERUZJTkVSJywgJ0RFTEVURScsICdERUxJTUlURVInLCAnREVMSU1JVEVSUycsICdERVBFTkRTJywgJ0RFU0MnLCAnREVUQUNIJywgJ0RJQ1RJT05BUlknLCAnRElTQUJMRScsICdESVNDQVJEJywgJ0RJU1RJTkNUJywgJ0RPJywgJ0RPQ1VNRU5UJywgJ0RPTUFJTicsICdET1VCTEUnLCAnRFJPUCcsICdFQUNIJywgJ0VMU0UnLCAnRU5BQkxFJywgJ0VOQ09ESU5HJywgJ0VOQ1JZUFRFRCcsICdFTkQnLCAnRU5VTScsICdFU0NBUEUnLCAnRVZFTlQnLCAnRVhDRVBUJywgJ0VYQ0xVREUnLCAnRVhDTFVESU5HJywgJ0VYQ0xVU0lWRScsICdFWEVDVVRFJywgJ0VYSVNUUycsICdFWFBMQUlOJywgJ0VYUFJFU1NJT04nLCAnRVhURU5TSU9OJywgJ0VYVEVSTkFMJywgJ0VYVFJBQ1QnLCAnRkFMU0UnLCAnRkFNSUxZJywgJ0ZFVENIJywgJ0ZJTFRFUicsICdGSVJTVCcsICdGTE9BVCcsICdGT0xMT1dJTkcnLCAnRk9SJywgJ0ZPUkNFJywgJ0ZPUkVJR04nLCAnRk9SV0FSRCcsICdGUkVFWkUnLCAnRlJPTScsICdGVUxMJywgJ0ZVTkNUSU9OJywgJ0ZVTkNUSU9OUycsICdHRU5FUkFURUQnLCAnR0xPQkFMJywgJ0dSQU5UJywgJ0dSQU5URUQnLCAnR1JFQVRFU1QnLCAnR1JPVVAnLCAnR1JPVVBJTkcnLCAnR1JPVVBTJywgJ0hBTkRMRVInLCAnSEFWSU5HJywgJ0hFQURFUicsICdIT0xEJywgJ0hPVVInLCAnSURFTlRJVFknLCAnSUYnLCAnSUxJS0UnLCAnSU1NRURJQVRFJywgJ0lNTVVUQUJMRScsICdJTVBMSUNJVCcsICdJTVBPUlQnLCAnSU4nLCAnSU5DTFVERScsICdJTkNMVURJTkcnLCAnSU5DUkVNRU5UJywgJ0lOREVYJywgJ0lOREVYRVMnLCAnSU5IRVJJVCcsICdJTkhFUklUUycsICdJTklUSUFMTFknLCAnSU5MSU5FJywgJ0lOTkVSJywgJ0lOT1VUJywgJ0lOUFVUJywgJ0lOU0VOU0lUSVZFJywgJ0lOU0VSVCcsICdJTlNURUFEJywgJ0lOVCcsICdJTlRFR0VSJywgJ0lOVEVSU0VDVCcsICdJTlRFUlZBTCcsICdJTlRPJywgJ0lOVk9LRVInLCAnSVMnLCAnSVNOVUxMJywgJ0lTT0xBVElPTicsICdKT0lOJywgJ0tFWScsICdMQUJFTCcsICdMQU5HVUFHRScsICdMQVJHRScsICdMQVNUJywgJ0xBVEVSQUwnLCAnTEVBRElORycsICdMRUFLUFJPT0YnLCAnTEVBU1QnLCAnTEVGVCcsICdMRVZFTCcsICdMSUtFJywgJ0xJTUlUJywgJ0xJU1RFTicsICdMT0FEJywgJ0xPQ0FMJywgJ0xPQ0FMVElNRScsICdMT0NBTFRJTUVTVEFNUCcsICdMT0NBVElPTicsICdMT0NLJywgJ0xPQ0tFRCcsICdMT0dHRUQnLCAnTUFQUElORycsICdNQVRDSCcsICdNQVRFUklBTElaRUQnLCAnTUFYVkFMVUUnLCAnTUVUSE9EJywgJ01JTlVURScsICdNSU5WQUxVRScsICdNT0RFJywgJ01PTlRIJywgJ01PVkUnLCAnTkFNRScsICdOQU1FUycsICdOQVRJT05BTCcsICdOQVRVUkFMJywgJ05DSEFSJywgJ05FVycsICdORVhUJywgJ05GQycsICdORkQnLCAnTkZLQycsICdORktEJywgJ05PJywgJ05PTkUnLCAnTk9STUFMSVpFJywgJ05PUk1BTElaRUQnLCAnTk9UJywgJ05PVEhJTkcnLCAnTk9USUZZJywgJ05PVE5VTEwnLCAnTk9XQUlUJywgJ05VTEwnLCAnTlVMTElGJywgJ05VTExTJywgJ05VTUVSSUMnLCAnT0JKRUNUJywgJ09GJywgJ09GRicsICdPRkZTRVQnLCAnT0lEUycsICdPTEQnLCAnT04nLCAnT05MWScsICdPUEVSQVRPUicsICdPUFRJT04nLCAnT1BUSU9OUycsICdPUicsICdPUkRFUicsICdPUkRJTkFMSVRZJywgJ09USEVSUycsICdPVVQnLCAnT1VURVInLCAnT1ZFUicsICdPVkVSTEFQUycsICdPVkVSTEFZJywgJ09WRVJSSURJTkcnLCAnT1dORUQnLCAnT1dORVInLCAnUEFSQUxMRUwnLCAnUEFSU0VSJywgJ1BBUlRJQUwnLCAnUEFSVElUSU9OJywgJ1BBU1NJTkcnLCAnUEFTU1dPUkQnLCAnUExBQ0lORycsICdQTEFOUycsICdQT0xJQ1knLCAnUE9TSVRJT04nLCAnUFJFQ0VESU5HJywgJ1BSRUNJU0lPTicsICdQUkVQQVJFJywgJ1BSRVBBUkVEJywgJ1BSRVNFUlZFJywgJ1BSSU1BUlknLCAnUFJJT1InLCAnUFJJVklMRUdFUycsICdQUk9DRURVUkFMJywgJ1BST0NFRFVSRScsICdQUk9DRURVUkVTJywgJ1BST0dSQU0nLCAnUFVCTElDQVRJT04nLCAnUVVPVEUnLCAnUkFOR0UnLCAnUkVBRCcsICdSRUFMJywgJ1JFQVNTSUdOJywgJ1JFQ0hFQ0snLCAnUkVDVVJTSVZFJywgJ1JFRicsICdSRUZFUkVOQ0VTJywgJ1JFRkVSRU5DSU5HJywgJ1JFRlJFU0gnLCAnUkVJTkRFWCcsICdSRUxBVElWRScsICdSRUxFQVNFJywgJ1JFTkFNRScsICdSRVBFQVRBQkxFJywgJ1JFUExBQ0UnLCAnUkVQTElDQScsICdSRVNFVCcsICdSRVNUQVJUJywgJ1JFU1RSSUNUJywgJ1JFVFVSTklORycsICdSRVRVUk5TJywgJ1JFVk9LRScsICdSSUdIVCcsICdST0xFJywgJ1JPTExCQUNLJywgJ1JPTExVUCcsICdST1VUSU5FJywgJ1JPVVRJTkVTJywgJ1JPVycsICdST1dTJywgJ1JVTEUnLCAnU0FWRVBPSU5UJywgJ1NDSEVNQScsICdTQ0hFTUFTJywgJ1NDUk9MTCcsICdTRUFSQ0gnLCAnU0VDT05EJywgJ1NFQ1VSSVRZJywgJ1NFTEVDVCcsICdTRVFVRU5DRScsICdTRVFVRU5DRVMnLCAnU0VSSUFMSVpBQkxFJywgJ1NFUlZFUicsICdTRVNTSU9OJywgJ1NFU1NJT05fVVNFUicsICdTRVQnLCAnU0VUT0YnLCAnU0VUUycsICdTSEFSRScsICdTSE9XJywgJ1NJTUlMQVInLCAnU0lNUExFJywgJ1NLSVAnLCAnU01BTExJTlQnLCAnU05BUFNIT1QnLCAnU09NRScsICdTUUwnLCAnU1RBQkxFJywgJ1NUQU5EQUxPTkUnLCAnU1RBUlQnLCAnU1RBVEVNRU5UJywgJ1NUQVRJU1RJQ1MnLCAnU1RESU4nLCAnU1RET1VUJywgJ1NUT1JBR0UnLCAnU1RPUkVEJywgJ1NUUklDVCcsICdTVFJJUCcsICdTVUJTQ1JJUFRJT04nLCAnU1VCU1RSSU5HJywgJ1NVUFBPUlQnLCAnU1lNTUVUUklDJywgJ1NZU0lEJywgJ1NZU1RFTScsICdUQUJMRScsICdUQUJMRVMnLCAnVEFCTEVTQU1QTEUnLCAnVEFCTEVTUEFDRScsICdURU1QJywgJ1RFTVBMQVRFJywgJ1RFTVBPUkFSWScsICdURVhUJywgJ1RIRU4nLCAnVElFUycsICdUSU1FJywgJ1RJTUVTVEFNUCcsICdUTycsICdUUkFJTElORycsICdUUkFOU0FDVElPTicsICdUUkFOU0ZPUk0nLCAnVFJFQVQnLCAnVFJJR0dFUicsICdUUklNJywgJ1RSVUUnLCAnVFJVTkNBVEUnLCAnVFJVU1RFRCcsICdUWVBFJywgJ1RZUEVTJywgJ1VFU0NBUEUnLCAnVU5CT1VOREVEJywgJ1VOQ09NTUlUVEVEJywgJ1VORU5DUllQVEVEJywgJ1VOSU9OJywgJ1VOSVFVRScsICdVTktOT1dOJywgJ1VOTElTVEVOJywgJ1VOTE9HR0VEJywgJ1VOVElMJywgJ1VQREFURScsICdVU0VSJywgJ1VTSU5HJywgJ1ZBQ1VVTScsICdWQUxJRCcsICdWQUxJREFURScsICdWQUxJREFUT1InLCAnVkFMVUUnLCAnVkFMVUVTJywgJ1ZBUkNIQVInLCAnVkFSSUFESUMnLCAnVkFSWUlORycsICdWRVJCT1NFJywgJ1ZFUlNJT04nLCAnVklFVycsICdWSUVXUycsICdWT0xBVElMRScsICdXSEVOJywgJ1dIRVJFJywgJ1dISVRFU1BBQ0UnLCAnV0lORE9XJywgJ1dJVEgnLCAnV0lUSElOJywgJ1dJVEhPVVQnLCAnV09SSycsICdXUkFQUEVSJywgJ1dSSVRFJywgJ1hNTCcsICdYTUxBVFRSSUJVVEVTJywgJ1hNTENPTkNBVCcsICdYTUxFTEVNRU5UJywgJ1hNTEVYSVNUUycsICdYTUxGT1JFU1QnLCAnWE1MTkFNRVNQQUNFUycsICdYTUxQQVJTRScsICdYTUxQSScsICdYTUxST09UJywgJ1hNTFNFUklBTElaRScsICdYTUxUQUJMRScsICdZRUFSJywgJ1lFUycsICdaT05FJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzID0gWydBREQnLCAnQUZURVInLCAnQUxURVIgQ09MVU1OJywgJ0FMVEVSIFRBQkxFJywgJ0NBU0UnLCAnREVMRVRFIEZST00nLCAnRU5EJywgJ0VYQ0VQVCcsICdGRVRDSCBGSVJTVCcsICdGUk9NJywgJ0dST1VQIEJZJywgJ0hBVklORycsICdJTlNFUlQgSU5UTycsICdJTlNFUlQnLCAnTElNSVQnLCAnT1JERVIgQlknLCAnU0VMRUNUJywgJ1NFVCBDVVJSRU5UIFNDSEVNQScsICdTRVQgU0NIRU1BJywgJ1NFVCcsICdVUERBVEUnLCAnVkFMVUVTJywgJ1dIRVJFJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzTm9JbmRlbnQgPSBbJ0lOVEVSU0VDVCcsICdJTlRFUlNFQ1QgQUxMJywgJ1VOSU9OJywgJ1VOSU9OIEFMTCddO1xudmFyIHJlc2VydmVkTmV3bGluZVdvcmRzID0gWydBTkQnLCAnRUxTRScsICdPUicsICdXSEVOJywgLy8gam9pbnNcbidKT0lOJywgJ0lOTkVSIEpPSU4nLCAnTEVGVCBKT0lOJywgJ0xFRlQgT1VURVIgSk9JTicsICdSSUdIVCBKT0lOJywgJ1JJR0hUIE9VVEVSIEpPSU4nLCAnRlVMTCBKT0lOJywgJ0ZVTEwgT1VURVIgSk9JTicsICdDUk9TUyBKT0lOJywgJ05BVFVSQUwgSk9JTiddO1xuXG52YXIgUG9zdGdyZVNxbEZvcm1hdHRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Zvcm1hdHRlcikge1xuICBfaW5oZXJpdHMoUG9zdGdyZVNxbEZvcm1hdHRlciwgX0Zvcm1hdHRlcik7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihQb3N0Z3JlU3FsRm9ybWF0dGVyKTtcblxuICBmdW5jdGlvbiBQb3N0Z3JlU3FsRm9ybWF0dGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQb3N0Z3JlU3FsRm9ybWF0dGVyKTtcblxuICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhQb3N0Z3JlU3FsRm9ybWF0dGVyLCBbe1xuICAgIGtleTogXCJ0b2tlbml6ZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9rZW5pemVyKCkge1xuICAgICAgcmV0dXJuIG5ldyBfVG9rZW5pemVyW1wiZGVmYXVsdFwiXSh7XG4gICAgICAgIHJlc2VydmVkV29yZHM6IHJlc2VydmVkV29yZHMsXG4gICAgICAgIHJlc2VydmVkVG9wTGV2ZWxXb3JkczogcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzLFxuICAgICAgICByZXNlcnZlZE5ld2xpbmVXb3JkczogcmVzZXJ2ZWROZXdsaW5lV29yZHMsXG4gICAgICAgIHJlc2VydmVkVG9wTGV2ZWxXb3Jkc05vSW5kZW50OiByZXNlcnZlZFRvcExldmVsV29yZHNOb0luZGVudCxcbiAgICAgICAgc3RyaW5nVHlwZXM6IFtcIlxcXCJcXFwiXCIsIFwiJydcIiwgXCJVJicnXCIsICdVJlwiXCInLCAnJCQnXSxcbiAgICAgICAgb3BlblBhcmVuczogWycoJywgJ0NBU0UnXSxcbiAgICAgICAgY2xvc2VQYXJlbnM6IFsnKScsICdFTkQnXSxcbiAgICAgICAgaW5kZXhlZFBsYWNlaG9sZGVyVHlwZXM6IFsnJCddLFxuICAgICAgICBuYW1lZFBsYWNlaG9sZGVyVHlwZXM6IFsnOiddLFxuICAgICAgICBsaW5lQ29tbWVudFR5cGVzOiBbJy0tJ10sXG4gICAgICAgIG9wZXJhdG9yczogWychPScsICc8PCcsICc+PicsICd8fC8nLCAnfC8nLCAnOjonLCAnLT4+JywgJy0+JywgJ35+KicsICd+ficsICchfn4qJywgJyF+ficsICd+KicsICchfionLCAnIX4nLCAnISEnXVxuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFBvc3RncmVTcWxGb3JtYXR0ZXI7XG59KF9Gb3JtYXR0ZXIyW1wiZGVmYXVsdFwiXSk7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gUG9zdGdyZVNxbEZvcm1hdHRlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/RedshiftFormatter.js":
/*!************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/RedshiftFormatter.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['AES128', 'AES256', 'ALLOWOVERWRITE', 'ANALYSE', 'ARRAY', 'AS', 'ASC', 'AUTHORIZATION', 'BACKUP', 'BINARY', 'BLANKSASNULL', 'BOTH', 'BYTEDICT', 'BZIP2', 'CAST', 'CHECK', 'COLLATE', 'COLUMN', 'CONSTRAINT', 'CREATE', 'CREDENTIALS', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURRENT_USER_ID', 'DEFAULT', 'DEFERRABLE', 'DEFLATE', 'DEFRAG', 'DELTA', 'DELTA32K', 'DESC', 'DISABLE', 'DISTINCT', 'DO', 'ELSE', 'EMPTYASNULL', 'ENABLE', 'ENCODE', 'ENCRYPT', 'ENCRYPTION', 'END', 'EXPLICIT', 'FALSE', 'FOR', 'FOREIGN', 'FREEZE', 'FULL', 'GLOBALDICT256', 'GLOBALDICT64K', 'GRANT', 'GZIP', 'IDENTITY', 'IGNORE', 'ILIKE', 'INITIALLY', 'INTO', 'LEADING', 'LOCALTIME', 'LOCALTIMESTAMP', 'LUN', 'LUNS', 'LZO', 'LZOP', 'MINUS', 'MOSTLY13', 'MOSTLY32', 'MOSTLY8', 'NATURAL', 'NEW', 'NULLS', 'OFF', 'OFFLINE', 'OFFSET', 'OLD', 'ON', 'ONLY', 'OPEN', 'ORDER', 'OVERLAPS', 'PARALLEL', 'PARTITION', 'PERCENT', 'PERMISSIONS', 'PLACING', 'PRIMARY', 'RAW', 'READRATIO', 'RECOVER', 'REFERENCES', 'REJECTLOG', 'RESORT', 'RESTORE', 'SESSION_USER', 'SIMILAR', 'SYSDATE', 'SYSTEM', 'TABLE', 'TAG', 'TDES', 'TEXT255', 'TEXT32K', 'THEN', 'TIMESTAMP', 'TO', 'TOP', 'TRAILING', 'TRUE', 'TRUNCATECOLUMNS', 'UNIQUE', 'USER', 'USING', 'VERBOSE', 'WALLET', 'WHEN', 'WITH', 'WITHOUT', 'PREDICATE', 'COLUMNS', 'COMPROWS', 'COMPRESSION', 'COPY', 'FORMAT', 'DELIMITER', 'FIXEDWIDTH', 'AVRO', 'JSON', 'ENCRYPTED', 'BZIP2', 'GZIP', 'LZOP', 'PARQUET', 'ORC', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'BLANKSASNULL', 'DATEFORMAT', 'EMPTYASNULL', 'ENCODING', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'NULL AS', 'REMOVEQUOTES', 'ROUNDEC', 'TIMEFORMAT', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'COMPROWS', 'COMPUPDATE', 'MAXERROR', 'NOLOAD', 'STATUPDATE', 'MANIFEST', 'REGION', 'IAM_ROLE', 'MASTER_SYMMETRIC_KEY', 'SSH', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'ACCESS_KEY_ID', 'SECRET_ACCESS_KEY', 'AVRO', 'BLANKSASNULL', 'BZIP2', 'COMPROWS', 'COMPUPDATE', 'CREDENTIALS', 'DATEFORMAT', 'DELIMITER', 'EMPTYASNULL', 'ENCODING', 'ENCRYPTED', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'FIXEDWIDTH', 'FORMAT', 'IAM_ROLE', 'GZIP', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'JSON', 'LZOP', 'MANIFEST', 'MASTER_SYMMETRIC_KEY', 'MAXERROR', 'NOLOAD', 'NULL AS', 'READRATIO', 'REGION', 'REMOVEQUOTES', 'ROUNDEC', 'SSH', 'STATUPDATE', 'TIMEFORMAT', 'SESSION_TOKEN', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'EXTERNAL', 'DATA CATALOG', 'HIVE METASTORE', 'CATALOG_ROLE', 'VACUUM', 'COPY', 'UNLOAD', 'EVEN', 'ALL'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'INTERSECT', 'TOP', 'LIMIT', 'MODIFY', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UNION ALL', 'UNION', 'UPDATE', 'VALUES', 'WHERE', 'VACUUM', 'COPY', 'UNLOAD', 'ANALYZE', 'ANALYSE', 'DISTKEY', 'SORTKEY', 'COMPOUND', 'INTERLEAVED', 'FORMAT', 'DELIMITER', 'FIXEDWIDTH', 'AVRO', 'JSON', 'ENCRYPTED', 'BZIP2', 'GZIP', 'LZOP', 'PARQUET', 'ORC', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'BLANKSASNULL', 'DATEFORMAT', 'EMPTYASNULL', 'ENCODING', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'NULL AS', 'REMOVEQUOTES', 'ROUNDEC', 'TIMEFORMAT', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'COMPROWS', 'COMPUPDATE', 'MAXERROR', 'NOLOAD', 'STATUPDATE', 'MANIFEST', 'REGION', 'IAM_ROLE', 'MASTER_SYMMETRIC_KEY', 'SSH', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'ACCESS_KEY_ID', 'SECRET_ACCESS_KEY', 'AVRO', 'BLANKSASNULL', 'BZIP2', 'COMPROWS', 'COMPUPDATE', 'CREDENTIALS', 'DATEFORMAT', 'DELIMITER', 'EMPTYASNULL', 'ENCODING', 'ENCRYPTED', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'FIXEDWIDTH', 'FORMAT', 'IAM_ROLE', 'GZIP', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'JSON', 'LZOP', 'MANIFEST', 'MASTER_SYMMETRIC_KEY', 'MAXERROR', 'NOLOAD', 'NULL AS', 'READRATIO', 'REGION', 'REMOVEQUOTES', 'ROUNDEC', 'SSH', 'STATUPDATE', 'TIMEFORMAT', 'SESSION_TOKEN', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'EXTERNAL', 'DATA CATALOG', 'HIVE METASTORE', 'CATALOG_ROLE'];\nvar reservedTopLevelWordsNoIndent = [];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'OUTER APPLY', 'WHEN', 'VACUUM', 'COPY', 'UNLOAD', 'ANALYZE', 'ANALYSE', 'DISTKEY', 'SORTKEY', 'COMPOUND', 'INTERLEAVED', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar RedshiftFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(RedshiftFormatter, _Formatter);\n\n  var _super = _createSuper(RedshiftFormatter);\n\n  function RedshiftFormatter() {\n    _classCallCheck(this, RedshiftFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RedshiftFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``'],\n        openParens: ['('],\n        closeParens: [')'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: ['@', '#', '$'],\n        lineCommentTypes: ['--'],\n        operators: ['|/', '||/', '<<', '>>', '!=', '||']\n      });\n    }\n  }]);\n\n  return RedshiftFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = RedshiftFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/RedshiftFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js":
/*!************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _token = __webpack_require__(/*! ../core/token */ \"../../../../../node_modules/sql-formatter/lib/core/token.js\");\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ../core/tokenTypes */ \"../../../../../node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ALL', 'ALTER', 'ANALYSE', 'ANALYZE', 'ARRAY_ZIP', 'ARRAY', 'AS', 'ASC', 'AVG', 'BETWEEN', 'CASCADE', 'CASE', 'CAST', 'COALESCE', 'COLLECT_LIST', 'COLLECT_SET', 'COLUMN', 'COLUMNS', 'COMMENT', 'CONSTRAINT', 'CONTAINS', 'CONVERT', 'COUNT', 'CUME_DIST', 'CURRENT ROW', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'DATABASE', 'DATABASES', 'DATE_ADD', 'DATE_SUB', 'DATE_TRUNC', 'DAY_HOUR', 'DAY_MINUTE', 'DAY_SECOND', 'DAY', 'DAYS', 'DECODE', 'DEFAULT', 'DELETE', 'DENSE_RANK', 'DESC', 'DESCRIBE', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DROP', 'ELSE', 'ENCODE', 'END', 'EXISTS', 'EXPLAIN', 'EXPLODE_OUTER', 'EXPLODE', 'FILTER', 'FIRST_VALUE', 'FIRST', 'FIXED', 'FLATTEN', 'FOLLOWING', 'FROM_UNIXTIME', 'FULL', 'GREATEST', 'GROUP_CONCAT', 'HOUR_MINUTE', 'HOUR_SECOND', 'HOUR', 'HOURS', 'IF', 'IFNULL', 'IN', 'INSERT', 'INTERVAL', 'INTO', 'IS', 'LAG', 'LAST_VALUE', 'LAST', 'LEAD', 'LEADING', 'LEAST', 'LEVEL', 'LIKE', 'MAX', 'MERGE', 'MIN', 'MINUTE_SECOND', 'MINUTE', 'MONTH', 'NATURAL', 'NOT', 'NOW()', 'NTILE', 'NULL', 'NULLIF', 'OFFSET', 'ON DELETE', 'ON UPDATE', 'ON', 'ONLY', 'OPTIMIZE', 'OVER', 'PERCENT_RANK', 'PRECEDING', 'RANGE', 'RANK', 'REGEXP', 'RENAME', 'RLIKE', 'ROW', 'ROWS', 'SECOND', 'SEPARATOR', 'SEQUENCE', 'SIZE', 'STRING', 'STRUCT', 'SUM', 'TABLE', 'TABLES', 'TEMPORARY', 'THEN', 'TO_DATE', 'TO_JSON', 'TO', 'TRAILING', 'TRANSFORM', 'TRUE', 'TRUNCATE', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNIQUE', 'UNIX_TIMESTAMP', 'UNLOCK', 'UNSIGNED', 'USING', 'VARIABLES', 'VIEW', 'WHEN', 'WITH', 'YEAR_MONTH'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER DATABASE', 'ALTER SCHEMA', 'ALTER TABLE', 'CLUSTER BY', 'CLUSTERED BY', 'DELETE FROM', 'DISTRIBUTE BY', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'OPTIONS', 'ORDER BY', 'PARTITION BY', 'PARTITIONED BY', 'RANGE', 'ROWS', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'TBLPROPERTIES', 'UPDATE', 'USING', 'VALUES', 'WHERE', 'WINDOW'];\nvar reservedTopLevelWordsNoIndent = ['EXCEPT ALL', 'EXCEPT', 'INTERSECT ALL', 'INTERSECT', 'UNION ALL', 'UNION'];\nvar reservedNewlineWords = ['AND', 'CREATE OR', 'CREATE', 'ELSE', 'LATERAL VIEW', 'OR', 'OUTER APPLY', 'WHEN', 'XOR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN', // non-standard-joins\n'ANTI JOIN', 'SEMI JOIN', 'LEFT ANTI JOIN', 'LEFT SEMI JOIN', 'RIGHT OUTER JOIN', 'RIGHT SEMI JOIN', 'NATURAL ANTI JOIN', 'NATURAL FULL OUTER JOIN', 'NATURAL INNER JOIN', 'NATURAL LEFT ANTI JOIN', 'NATURAL LEFT OUTER JOIN', 'NATURAL LEFT SEMI JOIN', 'NATURAL OUTER JOIN', 'NATURAL RIGHT OUTER JOIN', 'NATURAL RIGHT SEMI JOIN', 'NATURAL SEMI JOIN'];\n\nvar SparkSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(SparkSqlFormatter, _Formatter);\n\n  var _super = _createSuper(SparkSqlFormatter);\n\n  function SparkSqlFormatter() {\n    _classCallCheck(this, SparkSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SparkSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``', '{}'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: ['$'],\n        lineCommentTypes: ['--'],\n        operators: ['!=', '<=>', '&&', '||', '==']\n      });\n    }\n  }, {\n    key: \"tokenOverride\",\n    value: function tokenOverride(token) {\n      // Fix cases where names are ambiguously keywords or functions\n      if ((0, _token.isWindow)(token)) {\n        var aheadToken = this.tokenLookAhead();\n\n        if (aheadToken && aheadToken.type === _tokenTypes[\"default\"].OPEN_PAREN) {\n          // This is a function call, treat it as a reserved word\n          return {\n            type: _tokenTypes[\"default\"].RESERVED,\n            value: token.value\n          };\n        }\n      } // Fix cases where names are ambiguously keywords or properties\n\n\n      if ((0, _token.isEnd)(token)) {\n        var backToken = this.tokenLookBehind();\n\n        if (backToken && backToken.type === _tokenTypes[\"default\"].OPERATOR && backToken.value === '.') {\n          // This is window().end (or similar) not CASE ... END\n          return {\n            type: _tokenTypes[\"default\"].WORD,\n            value: token.value\n          };\n        }\n      }\n\n      return token;\n    }\n  }]);\n\n  return SparkSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = SparkSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#reserved-word\nvar reservedWords = ['ABS', 'ALL', 'ALLOCATE', 'ALTER', 'AND', 'ANY', 'ARE', 'ARRAY', 'AS', 'ASENSITIVE', 'ASYMMETRIC', 'AT', 'ATOMIC', 'AUTHORIZATION', 'AVG', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOOLEAN', 'BOTH', 'BY', 'CALL', 'CALLED', 'CARDINALITY', 'CASCADED', 'CASE', 'CAST', 'CEIL', 'CEILING', 'CHAR', 'CHAR_LENGTH', 'CHARACTER', 'CHARACTER_LENGTH', 'CHECK', 'CLOB', 'CLOSE', 'COALESCE', 'COLLATE', 'COLLECT', 'COLUMN', 'COMMIT', 'CONDITION', 'CONNECT', 'CONSTRAINT', 'CONVERT', 'CORR', 'CORRESPONDING', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'CREATE', 'CROSS', 'CUBE', 'CUME_DIST', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_DEFAULT_TRANSFORM_GROUP', 'CURRENT_PATH', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_TRANSFORM_GROUP_FOR_TYPE', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELETE', 'DENSE_RANK', 'DEREF', 'DESCRIBE', 'DETERMINISTIC', 'DISCONNECT', 'DISTINCT', 'DOUBLE', 'DROP', 'DYNAMIC', 'EACH', 'ELEMENT', 'ELSE', 'END', 'END-EXEC', 'ESCAPE', 'EVERY', 'EXCEPT', 'EXEC', 'EXECUTE', 'EXISTS', 'EXP', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FILTER', 'FLOAT', 'FLOOR', 'FOR', 'FOREIGN', 'FREE', 'FROM', 'FULL', 'FUNCTION', 'FUSION', 'GET', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOLD', 'HOUR', 'IDENTITY', 'IN', 'INDICATOR', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTERSECT', 'INTERSECTION', 'INTERVAL', 'INTO', 'IS', 'JOIN', 'LANGUAGE', 'LARGE', 'LATERAL', 'LEADING', 'LEFT', 'LIKE', 'LIKE_REGEX', 'LN', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOWER', 'MATCH', 'MAX', 'MEMBER', 'MERGE', 'METHOD', 'MIN', 'MINUTE', 'MOD', 'MODIFIES', 'MODULE', 'MONTH', 'MULTISET', 'NATIONAL', 'NATURAL', 'NCHAR', 'NCLOB', 'NEW', 'NO', 'NONE', 'NORMALIZE', 'NOT', 'NULL', 'NULLIF', 'NUMERIC', 'OCTET_LENGTH', 'OCCURRENCES_REGEX', 'OF', 'OLD', 'ON', 'ONLY', 'OPEN', 'OR', 'ORDER', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'OVERLAY', 'PARAMETER', 'PARTITION', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'POSITION', 'POSITION_REGEX', 'POWER', 'PRECISION', 'PREPARE', 'PRIMARY', 'PROCEDURE', 'RANGE', 'RANK', 'READS', 'REAL', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'RELEASE', 'RESULT', 'RETURN', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROW_NUMBER', 'ROWS', 'SAVEPOINT', 'SCOPE', 'SCROLL', 'SEARCH', 'SECOND', 'SELECT', 'SENSITIVE', 'SESSION_USER', 'SET', 'SIMILAR', 'SMALLINT', 'SOME', 'SPECIFIC', 'SPECIFICTYPE', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQRT', 'START', 'STATIC', 'STDDEV_POP', 'STDDEV_SAMP', 'SUBMULTISET', 'SUBSTRING', 'SUBSTRING_REGEX', 'SUM', 'SYMMETRIC', 'SYSTEM', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSLATE', 'TRANSLATE_REGEX', 'TRANSLATION', 'TREAT', 'TRIGGER', 'TRIM', 'TRUE', 'UESCAPE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UPDATE', 'UPPER', 'USER', 'USING', 'VALUE', 'VALUES', 'VAR_POP', 'VAR_SAMP', 'VARBINARY', 'VARCHAR', 'VARYING', 'WHEN', 'WHENEVER', 'WHERE', 'WIDTH_BUCKET', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'YEAR'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'CASE', 'DELETE FROM', 'END', 'FETCH FIRST', 'FETCH NEXT', 'FETCH PRIOR', 'FETCH LAST', 'FETCH ABSOLUTE', 'FETCH RELATIVE', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'LIMIT', 'ORDER BY', 'SELECT', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'INTERSECT DISTINCT', 'UNION', 'UNION ALL', 'UNION DISTINCT', 'EXCEPT', 'EXCEPT ALL', 'EXCEPT DISTINCT'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar StandardSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(StandardSqlFormatter, _Formatter);\n\n  var _super = _createSuper(StandardSqlFormatter);\n\n  function StandardSqlFormatter() {\n    _classCallCheck(this, StandardSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StandardSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\"],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [],\n        lineCommentTypes: ['--']\n      });\n    }\n  }]);\n\n  return StandardSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = StandardSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/TSqlFormatter.js":
/*!********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/TSqlFormatter.js ***!
  \********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"../../../../../node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ADD', 'EXTERNAL', 'PROCEDURE', 'ALL', 'FETCH', 'PUBLIC', 'ALTER', 'FILE', 'RAISERROR', 'AND', 'FILLFACTOR', 'READ', 'ANY', 'FOR', 'READTEXT', 'AS', 'FOREIGN', 'RECONFIGURE', 'ASC', 'FREETEXT', 'REFERENCES', 'AUTHORIZATION', 'FREETEXTTABLE', 'REPLICATION', 'BACKUP', 'FROM', 'RESTORE', 'BEGIN', 'FULL', 'RESTRICT', 'BETWEEN', 'FUNCTION', 'RETURN', 'BREAK', 'GOTO', 'REVERT', 'BROWSE', 'GRANT', 'REVOKE', 'BULK', 'GROUP', 'RIGHT', 'BY', 'HAVING', 'ROLLBACK', 'CASCADE', 'HOLDLOCK', 'ROWCOUNT', 'CASE', 'IDENTITY', 'ROWGUIDCOL', 'CHECK', 'IDENTITY_INSERT', 'RULE', 'CHECKPOINT', 'IDENTITYCOL', 'SAVE', 'CLOSE', 'IF', 'SCHEMA', 'CLUSTERED', 'IN', 'SECURITYAUDIT', 'COALESCE', 'INDEX', 'SELECT', 'COLLATE', 'INNER', 'SEMANTICKEYPHRASETABLE', 'COLUMN', 'INSERT', 'SEMANTICSIMILARITYDETAILSTABLE', 'COMMIT', 'INTERSECT', 'SEMANTICSIMILARITYTABLE', 'COMPUTE', 'INTO', 'SESSION_USER', 'CONSTRAINT', 'IS', 'SET', 'CONTAINS', 'JOIN', 'SETUSER', 'CONTAINSTABLE', 'KEY', 'SHUTDOWN', 'CONTINUE', 'KILL', 'SOME', 'CONVERT', 'LEFT', 'STATISTICS', 'CREATE', 'LIKE', 'SYSTEM_USER', 'CROSS', 'LINENO', 'TABLE', 'CURRENT', 'LOAD', 'TABLESAMPLE', 'CURRENT_DATE', 'MERGE', 'TEXTSIZE', 'CURRENT_TIME', 'NATIONAL', 'THEN', 'CURRENT_TIMESTAMP', 'NOCHECK', 'TO', 'CURRENT_USER', 'NONCLUSTERED', 'TOP', 'CURSOR', 'NOT', 'TRAN', 'DATABASE', 'NULL', 'TRANSACTION', 'DBCC', 'NULLIF', 'TRIGGER', 'DEALLOCATE', 'OF', 'TRUNCATE', 'DECLARE', 'OFF', 'TRY_CONVERT', 'DEFAULT', 'OFFSETS', 'TSEQUAL', 'DELETE', 'ON', 'UNION', 'DENY', 'OPEN', 'UNIQUE', 'DESC', 'OPENDATASOURCE', 'UNPIVOT', 'DISK', 'OPENQUERY', 'UPDATE', 'DISTINCT', 'OPENROWSET', 'UPDATETEXT', 'DISTRIBUTED', 'OPENXML', 'USE', 'DOUBLE', 'OPTION', 'USER', 'DROP', 'OR', 'VALUES', 'DUMP', 'ORDER', 'VARYING', 'ELSE', 'OUTER', 'VIEW', 'END', 'OVER', 'WAITFOR', 'ERRLVL', 'PERCENT', 'WHEN', 'ESCAPE', 'PIVOT', 'WHERE', 'EXCEPT', 'PLAN', 'WHILE', 'EXEC', 'PRECISION', 'WITH', 'EXECUTE', 'PRIMARY', 'WITHIN GROUP', 'EXISTS', 'PRINT', 'WRITETEXT', 'EXIT', 'PROC'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'CASE', 'DELETE FROM', 'END', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN'];\n\nvar TSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(TSqlFormatter, _Formatter);\n\n  var _super = _createSuper(TSqlFormatter);\n\n  function TSqlFormatter() {\n    _classCallCheck(this, TSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", '[]'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: [],\n        namedPlaceholderTypes: ['@'],\n        lineCommentTypes: ['--'],\n        specialWordChars: ['#', '@'],\n        operators: ['>=', '<=', '<>', '!=', '!<', '!>', '+=', '-=', '*=', '/=', '%=', '|=', '&=', '^=', '::'] // TODO: Support for money constants\n\n      });\n    }\n  }]);\n\n  return TSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = TSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/TSqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/sqlFormatter.js":
/*!*********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/sqlFormatter.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.supportedDialects = exports.format = void 0;\n\nvar _Db2Formatter = _interopRequireDefault(__webpack_require__(/*! ./languages/Db2Formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/Db2Formatter.js\"));\n\nvar _MariaDbFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/MariaDbFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/MariaDbFormatter.js\"));\n\nvar _MySqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/MySqlFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/MySqlFormatter.js\"));\n\nvar _N1qlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/N1qlFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/N1qlFormatter.js\"));\n\nvar _PlSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/PlSqlFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js\"));\n\nvar _PostgreSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/PostgreSqlFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js\"));\n\nvar _RedshiftFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/RedshiftFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/RedshiftFormatter.js\"));\n\nvar _SparkSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/SparkSqlFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js\"));\n\nvar _StandardSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/StandardSqlFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js\"));\n\nvar _TSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/TSqlFormatter */ \"../../../../../node_modules/sql-formatter/lib/languages/TSqlFormatter.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar formatters = {\n  db2: _Db2Formatter[\"default\"],\n  mariadb: _MariaDbFormatter[\"default\"],\n  mysql: _MySqlFormatter[\"default\"],\n  n1ql: _N1qlFormatter[\"default\"],\n  plsql: _PlSqlFormatter[\"default\"],\n  postgresql: _PostgreSqlFormatter[\"default\"],\n  redshift: _RedshiftFormatter[\"default\"],\n  spark: _SparkSqlFormatter[\"default\"],\n  sql: _StandardSqlFormatter[\"default\"],\n  tsql: _TSqlFormatter[\"default\"]\n};\n/**\n * Format whitespace in a query to make it easier to read.\n *\n * @param {String} query\n * @param {Object} cfg\n *  @param {String} cfg.language Query language, default is Standard SQL\n *  @param {String} cfg.indent Characters used for indentation, default is \"  \" (2 spaces)\n *  @param {Boolean} cfg.uppercase Converts keywords to uppercase\n *  @param {Integer} cfg.linesBetweenQueries How many line breaks between queries\n *  @param {Object} cfg.params Collection of params for placeholder replacement\n * @return {String}\n */\n\nvar format = function format(query) {\n  var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof query !== 'string') {\n    throw new Error('Invalid query argument. Extected string, instead got ' + _typeof(query));\n  }\n\n  var Formatter = _StandardSqlFormatter[\"default\"];\n\n  if (cfg.language !== undefined) {\n    Formatter = formatters[cfg.language];\n  }\n\n  if (Formatter === undefined) {\n    throw Error(\"Unsupported SQL dialect: \".concat(cfg.language));\n  }\n\n  return new Formatter(cfg).format(query);\n};\n\nexports.format = format;\nvar supportedDialects = Object.keys(formatters);\nexports.supportedDialects = supportedDialects;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3NxbEZvcm1hdHRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3aW5kd2Fsa2VyLWlvL2NvcmUvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3NxbEZvcm1hdHRlci5qcz9hM2NlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5zdXBwb3J0ZWREaWFsZWN0cyA9IGV4cG9ydHMuZm9ybWF0ID0gdm9pZCAwO1xuXG52YXIgX0RiMkZvcm1hdHRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbGFuZ3VhZ2VzL0RiMkZvcm1hdHRlclwiKSk7XG5cbnZhciBfTWFyaWFEYkZvcm1hdHRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbGFuZ3VhZ2VzL01hcmlhRGJGb3JtYXR0ZXJcIikpO1xuXG52YXIgX015U3FsRm9ybWF0dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9sYW5ndWFnZXMvTXlTcWxGb3JtYXR0ZXJcIikpO1xuXG52YXIgX04xcWxGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9OMXFsRm9ybWF0dGVyXCIpKTtcblxudmFyIF9QbFNxbEZvcm1hdHRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbGFuZ3VhZ2VzL1BsU3FsRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Qb3N0Z3JlU3FsRm9ybWF0dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9sYW5ndWFnZXMvUG9zdGdyZVNxbEZvcm1hdHRlclwiKSk7XG5cbnZhciBfUmVkc2hpZnRGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9SZWRzaGlmdEZvcm1hdHRlclwiKSk7XG5cbnZhciBfU3BhcmtTcWxGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9TcGFya1NxbEZvcm1hdHRlclwiKSk7XG5cbnZhciBfU3RhbmRhcmRTcWxGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9TdGFuZGFyZFNxbEZvcm1hdHRlclwiKSk7XG5cbnZhciBfVFNxbEZvcm1hdHRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbGFuZ3VhZ2VzL1RTcWxGb3JtYXR0ZXJcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG52YXIgZm9ybWF0dGVycyA9IHtcbiAgZGIyOiBfRGIyRm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgbWFyaWFkYjogX01hcmlhRGJGb3JtYXR0ZXJbXCJkZWZhdWx0XCJdLFxuICBteXNxbDogX015U3FsRm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgbjFxbDogX04xcWxGb3JtYXR0ZXJbXCJkZWZhdWx0XCJdLFxuICBwbHNxbDogX1BsU3FsRm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgcG9zdGdyZXNxbDogX1Bvc3RncmVTcWxGb3JtYXR0ZXJbXCJkZWZhdWx0XCJdLFxuICByZWRzaGlmdDogX1JlZHNoaWZ0Rm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgc3Bhcms6IF9TcGFya1NxbEZvcm1hdHRlcltcImRlZmF1bHRcIl0sXG4gIHNxbDogX1N0YW5kYXJkU3FsRm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgdHNxbDogX1RTcWxGb3JtYXR0ZXJbXCJkZWZhdWx0XCJdXG59O1xuLyoqXG4gKiBGb3JtYXQgd2hpdGVzcGFjZSBpbiBhIHF1ZXJ5IHRvIG1ha2UgaXQgZWFzaWVyIHRvIHJlYWQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHF1ZXJ5XG4gKiBAcGFyYW0ge09iamVjdH0gY2ZnXG4gKiAgQHBhcmFtIHtTdHJpbmd9IGNmZy5sYW5ndWFnZSBRdWVyeSBsYW5ndWFnZSwgZGVmYXVsdCBpcyBTdGFuZGFyZCBTUUxcbiAqICBAcGFyYW0ge1N0cmluZ30gY2ZnLmluZGVudCBDaGFyYWN0ZXJzIHVzZWQgZm9yIGluZGVudGF0aW9uLCBkZWZhdWx0IGlzIFwiICBcIiAoMiBzcGFjZXMpXG4gKiAgQHBhcmFtIHtCb29sZWFufSBjZmcudXBwZXJjYXNlIENvbnZlcnRzIGtleXdvcmRzIHRvIHVwcGVyY2FzZVxuICogIEBwYXJhbSB7SW50ZWdlcn0gY2ZnLmxpbmVzQmV0d2VlblF1ZXJpZXMgSG93IG1hbnkgbGluZSBicmVha3MgYmV0d2VlbiBxdWVyaWVzXG4gKiAgQHBhcmFtIHtPYmplY3R9IGNmZy5wYXJhbXMgQ29sbGVjdGlvbiBvZiBwYXJhbXMgZm9yIHBsYWNlaG9sZGVyIHJlcGxhY2VtZW50XG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cblxudmFyIGZvcm1hdCA9IGZ1bmN0aW9uIGZvcm1hdChxdWVyeSkge1xuICB2YXIgY2ZnID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICBpZiAodHlwZW9mIHF1ZXJ5ICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBxdWVyeSBhcmd1bWVudC4gRXh0ZWN0ZWQgc3RyaW5nLCBpbnN0ZWFkIGdvdCAnICsgX3R5cGVvZihxdWVyeSkpO1xuICB9XG5cbiAgdmFyIEZvcm1hdHRlciA9IF9TdGFuZGFyZFNxbEZvcm1hdHRlcltcImRlZmF1bHRcIl07XG5cbiAgaWYgKGNmZy5sYW5ndWFnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgRm9ybWF0dGVyID0gZm9ybWF0dGVyc1tjZmcubGFuZ3VhZ2VdO1xuICB9XG5cbiAgaWYgKEZvcm1hdHRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgRXJyb3IoXCJVbnN1cHBvcnRlZCBTUUwgZGlhbGVjdDogXCIuY29uY2F0KGNmZy5sYW5ndWFnZSkpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBGb3JtYXR0ZXIoY2ZnKS5mb3JtYXQocXVlcnkpO1xufTtcblxuZXhwb3J0cy5mb3JtYXQgPSBmb3JtYXQ7XG52YXIgc3VwcG9ydGVkRGlhbGVjdHMgPSBPYmplY3Qua2V5cyhmb3JtYXR0ZXJzKTtcbmV4cG9ydHMuc3VwcG9ydGVkRGlhbGVjdHMgPSBzdXBwb3J0ZWREaWFsZWN0czsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/sqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/utils.js":
/*!**************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.sortByLengthDesc = exports.escapeRegExp = exports.isEmpty = exports.last = exports.trimSpacesEnd = void 0;\n\n// Only removes spaces, not newlines\nvar trimSpacesEnd = function trimSpacesEnd(str) {\n  return str.replace(/[\\t ]+$/, '');\n}; // Last element from array\n\n\nexports.trimSpacesEnd = trimSpacesEnd;\n\nvar last = function last(arr) {\n  return arr[arr.length - 1];\n}; // True array is empty, or it's not an array at all\n\n\nexports.last = last;\n\nvar isEmpty = function isEmpty(arr) {\n  return !Array.isArray(arr) || arr.length === 0;\n}; // Escapes regex special chars\n\n\nexports.isEmpty = isEmpty;\n\nvar escapeRegExp = function escapeRegExp(string) {\n  return string.replace(/[\\$\\(-\\+\\.\\?\\[-\\^\\{-\\}]/g, '\\\\$&');\n}; // Sorts strings by length, so that longer ones are first\n// Also sorts alphabetically after sorting by length.\n\n\nexports.escapeRegExp = escapeRegExp;\n\nvar sortByLengthDesc = function sortByLengthDesc(strings) {\n  return strings.sort(function (a, b) {\n    return b.length - a.length || a.localeCompare(b);\n  });\n};\n\nexports.sortByLengthDesc = sortByLengthDesc;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2luZHdhbGtlci1pby9jb3JlLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi91dGlscy5qcz81NTRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5zb3J0QnlMZW5ndGhEZXNjID0gZXhwb3J0cy5lc2NhcGVSZWdFeHAgPSBleHBvcnRzLmlzRW1wdHkgPSBleHBvcnRzLmxhc3QgPSBleHBvcnRzLnRyaW1TcGFjZXNFbmQgPSB2b2lkIDA7XG5cbi8vIE9ubHkgcmVtb3ZlcyBzcGFjZXMsIG5vdCBuZXdsaW5lc1xudmFyIHRyaW1TcGFjZXNFbmQgPSBmdW5jdGlvbiB0cmltU3BhY2VzRW5kKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1tcXHQgXSskLywgJycpO1xufTsgLy8gTGFzdCBlbGVtZW50IGZyb20gYXJyYXlcblxuXG5leHBvcnRzLnRyaW1TcGFjZXNFbmQgPSB0cmltU3BhY2VzRW5kO1xuXG52YXIgbGFzdCA9IGZ1bmN0aW9uIGxhc3QoYXJyKSB7XG4gIHJldHVybiBhcnJbYXJyLmxlbmd0aCAtIDFdO1xufTsgLy8gVHJ1ZSBhcnJheSBpcyBlbXB0eSwgb3IgaXQncyBub3QgYW4gYXJyYXkgYXQgYWxsXG5cblxuZXhwb3J0cy5sYXN0ID0gbGFzdDtcblxudmFyIGlzRW1wdHkgPSBmdW5jdGlvbiBpc0VtcHR5KGFycikge1xuICByZXR1cm4gIUFycmF5LmlzQXJyYXkoYXJyKSB8fCBhcnIubGVuZ3RoID09PSAwO1xufTsgLy8gRXNjYXBlcyByZWdleCBzcGVjaWFsIGNoYXJzXG5cblxuZXhwb3J0cy5pc0VtcHR5ID0gaXNFbXB0eTtcblxudmFyIGVzY2FwZVJlZ0V4cCA9IGZ1bmN0aW9uIGVzY2FwZVJlZ0V4cChzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9bXFwkXFwoLVxcK1xcLlxcP1xcWy1cXF5cXHstXFx9XS9nLCAnXFxcXCQmJyk7XG59OyAvLyBTb3J0cyBzdHJpbmdzIGJ5IGxlbmd0aCwgc28gdGhhdCBsb25nZXIgb25lcyBhcmUgZmlyc3Rcbi8vIEFsc28gc29ydHMgYWxwaGFiZXRpY2FsbHkgYWZ0ZXIgc29ydGluZyBieSBsZW5ndGguXG5cblxuZXhwb3J0cy5lc2NhcGVSZWdFeHAgPSBlc2NhcGVSZWdFeHA7XG5cbnZhciBzb3J0QnlMZW5ndGhEZXNjID0gZnVuY3Rpb24gc29ydEJ5TGVuZ3RoRGVzYyhzdHJpbmdzKSB7XG4gIHJldHVybiBzdHJpbmdzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gYi5sZW5ndGggLSBhLmxlbmd0aCB8fCBhLmxvY2FsZUNvbXBhcmUoYik7XG4gIH0pO1xufTtcblxuZXhwb3J0cy5zb3J0QnlMZW5ndGhEZXNjID0gc29ydEJ5TGVuZ3RoRGVzYzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/utils.js\n");

/***/ })

}]);