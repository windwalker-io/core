/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunksrc_debugger_debugger_js"] = self["webpackChunksrc_debugger_debugger_js"] || []).push([["vendors-node_modules_bootstrap_js_src_modal_js-node_modules_sql-formatter_lib_index_js-node_m-4bbe2a"],{

/***/ "../../../../../node_modules/bootstrap/js/src/base-component.js":
/*!**********************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/base-component.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dom_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom/data.js */ \"../../../../../node_modules/bootstrap/js/src/dom/data.js\");\n/* harmony import */ var _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom/event-handler.js */ \"../../../../../node_modules/bootstrap/js/src/dom/event-handler.js\");\n/* harmony import */ var _util_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/config.js */ \"../../../../../node_modules/bootstrap/js/src/util/config.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\n\n/**\n * Constants\n */\n\nconst VERSION = '5.3.2'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends _util_config_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor(element, config) {\n    super()\n\n    element = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.getElement)(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    _dom_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    _dom_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(this._element, this.constructor.DATA_KEY)\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.executeAfterTransition)(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return _dom_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.getElement)(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvYmFzZS1jb21wb25lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL3NyYy9iYXNlLWNvbXBvbmVudC5qcz8xMjg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEJvb3RzdHJhcCBiYXNlLWNvbXBvbmVudC5qc1xuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbmltcG9ydCBEYXRhIGZyb20gJy4vZG9tL2RhdGEuanMnXG5pbXBvcnQgRXZlbnRIYW5kbGVyIGZyb20gJy4vZG9tL2V2ZW50LWhhbmRsZXIuanMnXG5pbXBvcnQgQ29uZmlnIGZyb20gJy4vdXRpbC9jb25maWcuanMnXG5pbXBvcnQgeyBleGVjdXRlQWZ0ZXJUcmFuc2l0aW9uLCBnZXRFbGVtZW50IH0gZnJvbSAnLi91dGlsL2luZGV4LmpzJ1xuXG4vKipcbiAqIENvbnN0YW50c1xuICovXG5cbmNvbnN0IFZFUlNJT04gPSAnNS4zLjInXG5cbi8qKlxuICogQ2xhc3MgZGVmaW5pdGlvblxuICovXG5cbmNsYXNzIEJhc2VDb21wb25lbnQgZXh0ZW5kcyBDb25maWcge1xuICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjb25maWcpIHtcbiAgICBzdXBlcigpXG5cbiAgICBlbGVtZW50ID0gZ2V0RWxlbWVudChlbGVtZW50KVxuICAgIGlmICghZWxlbWVudCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnRcbiAgICB0aGlzLl9jb25maWcgPSB0aGlzLl9nZXRDb25maWcoY29uZmlnKVxuXG4gICAgRGF0YS5zZXQodGhpcy5fZWxlbWVudCwgdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWSwgdGhpcylcbiAgfVxuXG4gIC8vIFB1YmxpY1xuICBkaXNwb3NlKCkge1xuICAgIERhdGEucmVtb3ZlKHRoaXMuX2VsZW1lbnQsIHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVkpXG4gICAgRXZlbnRIYW5kbGVyLm9mZih0aGlzLl9lbGVtZW50LCB0aGlzLmNvbnN0cnVjdG9yLkVWRU5UX0tFWSlcblxuICAgIGZvciAoY29uc3QgcHJvcGVydHlOYW1lIG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSB7XG4gICAgICB0aGlzW3Byb3BlcnR5TmFtZV0gPSBudWxsXG4gICAgfVxuICB9XG5cbiAgX3F1ZXVlQ2FsbGJhY2soY2FsbGJhY2ssIGVsZW1lbnQsIGlzQW5pbWF0ZWQgPSB0cnVlKSB7XG4gICAgZXhlY3V0ZUFmdGVyVHJhbnNpdGlvbihjYWxsYmFjaywgZWxlbWVudCwgaXNBbmltYXRlZClcbiAgfVxuXG4gIF9nZXRDb25maWcoY29uZmlnKSB7XG4gICAgY29uZmlnID0gdGhpcy5fbWVyZ2VDb25maWdPYmooY29uZmlnLCB0aGlzLl9lbGVtZW50KVxuICAgIGNvbmZpZyA9IHRoaXMuX2NvbmZpZ0FmdGVyTWVyZ2UoY29uZmlnKVxuICAgIHRoaXMuX3R5cGVDaGVja0NvbmZpZyhjb25maWcpXG4gICAgcmV0dXJuIGNvbmZpZ1xuICB9XG5cbiAgLy8gU3RhdGljXG4gIHN0YXRpYyBnZXRJbnN0YW5jZShlbGVtZW50KSB7XG4gICAgcmV0dXJuIERhdGEuZ2V0KGdldEVsZW1lbnQoZWxlbWVudCksIHRoaXMuREFUQV9LRVkpXG4gIH1cblxuICBzdGF0aWMgZ2V0T3JDcmVhdGVJbnN0YW5jZShlbGVtZW50LCBjb25maWcgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmdldEluc3RhbmNlKGVsZW1lbnQpIHx8IG5ldyB0aGlzKGVsZW1lbnQsIHR5cGVvZiBjb25maWcgPT09ICdvYmplY3QnID8gY29uZmlnIDogbnVsbClcbiAgfVxuXG4gIHN0YXRpYyBnZXQgVkVSU0lPTigpIHtcbiAgICByZXR1cm4gVkVSU0lPTlxuICB9XG5cbiAgc3RhdGljIGdldCBEQVRBX0tFWSgpIHtcbiAgICByZXR1cm4gYGJzLiR7dGhpcy5OQU1FfWBcbiAgfVxuXG4gIHN0YXRpYyBnZXQgRVZFTlRfS0VZKCkge1xuICAgIHJldHVybiBgLiR7dGhpcy5EQVRBX0tFWX1gXG4gIH1cblxuICBzdGF0aWMgZXZlbnROYW1lKG5hbWUpIHtcbiAgICByZXR1cm4gYCR7bmFtZX0ke3RoaXMuRVZFTlRfS0VZfWBcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlQ29tcG9uZW50XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/base-component.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/dom/data.js":
/*!****************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/dom/data.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map()\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvZG9tL2RhdGEuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvc3JjL2RvbS9kYXRhLmpzP2ZiMGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQm9vdHN0cmFwIGRvbS9kYXRhLmpzXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSlcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuLyoqXG4gKiBDb25zdGFudHNcbiAqL1xuXG5jb25zdCBlbGVtZW50TWFwID0gbmV3IE1hcCgpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc2V0KGVsZW1lbnQsIGtleSwgaW5zdGFuY2UpIHtcbiAgICBpZiAoIWVsZW1lbnRNYXAuaGFzKGVsZW1lbnQpKSB7XG4gICAgICBlbGVtZW50TWFwLnNldChlbGVtZW50LCBuZXcgTWFwKCkpXG4gICAgfVxuXG4gICAgY29uc3QgaW5zdGFuY2VNYXAgPSBlbGVtZW50TWFwLmdldChlbGVtZW50KVxuXG4gICAgLy8gbWFrZSBpdCBjbGVhciB3ZSBvbmx5IHdhbnQgb25lIGluc3RhbmNlIHBlciBlbGVtZW50XG4gICAgLy8gY2FuIGJlIHJlbW92ZWQgbGF0ZXIgd2hlbiBtdWx0aXBsZSBrZXkvaW5zdGFuY2VzIGFyZSBmaW5lIHRvIGJlIHVzZWRcbiAgICBpZiAoIWluc3RhbmNlTWFwLmhhcyhrZXkpICYmIGluc3RhbmNlTWFwLnNpemUgIT09IDApIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLmVycm9yKGBCb290c3RyYXAgZG9lc24ndCBhbGxvdyBtb3JlIHRoYW4gb25lIGluc3RhbmNlIHBlciBlbGVtZW50LiBCb3VuZCBpbnN0YW5jZTogJHtBcnJheS5mcm9tKGluc3RhbmNlTWFwLmtleXMoKSlbMF19LmApXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpbnN0YW5jZU1hcC5zZXQoa2V5LCBpbnN0YW5jZSlcbiAgfSxcblxuICBnZXQoZWxlbWVudCwga2V5KSB7XG4gICAgaWYgKGVsZW1lbnRNYXAuaGFzKGVsZW1lbnQpKSB7XG4gICAgICByZXR1cm4gZWxlbWVudE1hcC5nZXQoZWxlbWVudCkuZ2V0KGtleSkgfHwgbnVsbFxuICAgIH1cblxuICAgIHJldHVybiBudWxsXG4gIH0sXG5cbiAgcmVtb3ZlKGVsZW1lbnQsIGtleSkge1xuICAgIGlmICghZWxlbWVudE1hcC5oYXMoZWxlbWVudCkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGluc3RhbmNlTWFwID0gZWxlbWVudE1hcC5nZXQoZWxlbWVudClcblxuICAgIGluc3RhbmNlTWFwLmRlbGV0ZShrZXkpXG5cbiAgICAvLyBmcmVlIHVwIGVsZW1lbnQgcmVmZXJlbmNlcyBpZiB0aGVyZSBhcmUgbm8gaW5zdGFuY2VzIGxlZnQgZm9yIGFuIGVsZW1lbnRcbiAgICBpZiAoaW5zdGFuY2VNYXAuc2l6ZSA9PT0gMCkge1xuICAgICAgZWxlbWVudE1hcC5kZWxldGUoZWxlbWVudClcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/dom/data.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/dom/event-handler.js":
/*!*************************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/dom/event-handler.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\n\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, { delegateTarget: element })\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue\n        }\n\n        hydrateObj(event, { delegateTarget: target })\n\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn)\n        }\n\n        return fn.apply(target, [event])\n      }\n    }\n  }\n}\n\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events)\n    .find(event => event.callable === callable && event.delegationSelector === delegationSelector)\n}\n\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string'\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : (handler || delegationFunction)\n  let typeEvent = getTypeEvent(originalTypeEvent)\n\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [isDelegated, callable, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    callable = wrapFunction(callable)\n  }\n\n  const events = getElementEvents(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null)\n\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff\n\n    return\n  }\n\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = isDelegated ?\n    bootstrapDelegationHandler(element, handler, callable) :\n    bootstrapHandler(element, callable)\n\n  fn.delegationSelector = isDelegated ? handler : null\n  fn.callable = callable\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, isDelegated)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n    }\n  }\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false)\n  },\n\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getElementEvents(element)\n    const storeElementEvent = events[typeEvent] || {}\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      }\n    }\n\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n      }\n    }\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getjQuery)()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n\n    let jQueryEvent = null\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    const evt = hydrateObj(new Event(event, { bubbles, cancelable: true }), args)\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value\n    } catch {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value\n        }\n      })\n    }\n  }\n\n  return obj\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EventHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/dom/event-handler.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/dom/manipulator.js":
/*!***********************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/dom/manipulator.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  if (value === Number(value).toString()) {\n    return Number(value)\n  }\n\n  if (value === '' || value === 'null') {\n    return null\n  }\n\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  try {\n    return JSON.parse(decodeURIComponent(value))\n  } catch {\n    return value\n  }\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'))\n\n    for (const key of bsKeys) {\n      let pureKey = key.replace(/^bs/, '')\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\n      attributes[pureKey] = normalizeData(element.dataset[key])\n    }\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Manipulator);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvZG9tL21hbmlwdWxhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvc3JjL2RvbS9tYW5pcHVsYXRvci5qcz84NGMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEJvb3RzdHJhcCBkb20vbWFuaXB1bGF0b3IuanNcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG5mdW5jdGlvbiBub3JtYWxpemVEYXRhKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PT0gJ3RydWUnKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIGlmICh2YWx1ZSA9PT0gJ2ZhbHNlJykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgaWYgKHZhbHVlID09PSBOdW1iZXIodmFsdWUpLnRvU3RyaW5nKCkpIHtcbiAgICByZXR1cm4gTnVtYmVyKHZhbHVlKVxuICB9XG5cbiAgaWYgKHZhbHVlID09PSAnJyB8fCB2YWx1ZSA9PT0gJ251bGwnKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICB0cnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpXG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiB2YWx1ZVxuICB9XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZURhdGFLZXkoa2V5KSB7XG4gIHJldHVybiBrZXkucmVwbGFjZSgvW0EtWl0vZywgY2hyID0+IGAtJHtjaHIudG9Mb3dlckNhc2UoKX1gKVxufVxuXG5jb25zdCBNYW5pcHVsYXRvciA9IHtcbiAgc2V0RGF0YUF0dHJpYnV0ZShlbGVtZW50LCBrZXksIHZhbHVlKSB7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYGRhdGEtYnMtJHtub3JtYWxpemVEYXRhS2V5KGtleSl9YCwgdmFsdWUpXG4gIH0sXG5cbiAgcmVtb3ZlRGF0YUF0dHJpYnV0ZShlbGVtZW50LCBrZXkpIHtcbiAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShgZGF0YS1icy0ke25vcm1hbGl6ZURhdGFLZXkoa2V5KX1gKVxuICB9LFxuXG4gIGdldERhdGFBdHRyaWJ1dGVzKGVsZW1lbnQpIHtcbiAgICBpZiAoIWVsZW1lbnQpIHtcbiAgICAgIHJldHVybiB7fVxuICAgIH1cblxuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7fVxuICAgIGNvbnN0IGJzS2V5cyA9IE9iamVjdC5rZXlzKGVsZW1lbnQuZGF0YXNldCkuZmlsdGVyKGtleSA9PiBrZXkuc3RhcnRzV2l0aCgnYnMnKSAmJiAha2V5LnN0YXJ0c1dpdGgoJ2JzQ29uZmlnJykpXG5cbiAgICBmb3IgKGNvbnN0IGtleSBvZiBic0tleXMpIHtcbiAgICAgIGxldCBwdXJlS2V5ID0ga2V5LnJlcGxhY2UoL15icy8sICcnKVxuICAgICAgcHVyZUtleSA9IHB1cmVLZXkuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBwdXJlS2V5LnNsaWNlKDEsIHB1cmVLZXkubGVuZ3RoKVxuICAgICAgYXR0cmlidXRlc1twdXJlS2V5XSA9IG5vcm1hbGl6ZURhdGEoZWxlbWVudC5kYXRhc2V0W2tleV0pXG4gICAgfVxuXG4gICAgcmV0dXJuIGF0dHJpYnV0ZXNcbiAgfSxcblxuICBnZXREYXRhQXR0cmlidXRlKGVsZW1lbnQsIGtleSkge1xuICAgIHJldHVybiBub3JtYWxpemVEYXRhKGVsZW1lbnQuZ2V0QXR0cmlidXRlKGBkYXRhLWJzLSR7bm9ybWFsaXplRGF0YUtleShrZXkpfWApKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1hbmlwdWxhdG9yXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/dom/manipulator.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/dom/selector-engine.js":
/*!***************************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/dom/selector-engine.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.parseSelector)(hrefAttribute.trim()) : null\n  }\n\n  return selector\n}\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !(0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.isDisabled)(el) && (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.isVisible)(el))\n  },\n\n  getSelectorFromElement(element) {\n    const selector = getSelector(element)\n\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null\n    }\n\n    return null\n  },\n\n  getElementFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.findOne(selector) : null\n  },\n\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.find(selector) : []\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SelectorEngine);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvZG9tL3NlbGVjdG9yLWVuZ2luZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL3NyYy9kb20vc2VsZWN0b3ItZW5naW5lLmpzPzkwZTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQm9vdHN0cmFwIGRvbS9zZWxlY3Rvci1lbmdpbmUuanNcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG5pbXBvcnQgeyBpc0Rpc2FibGVkLCBpc1Zpc2libGUsIHBhcnNlU2VsZWN0b3IgfSBmcm9tICcuLi91dGlsL2luZGV4LmpzJ1xuXG5jb25zdCBnZXRTZWxlY3RvciA9IGVsZW1lbnQgPT4ge1xuICBsZXQgc2VsZWN0b3IgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1icy10YXJnZXQnKVxuXG4gIGlmICghc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09ICcjJykge1xuICAgIGxldCBocmVmQXR0cmlidXRlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2hyZWYnKVxuXG4gICAgLy8gVGhlIG9ubHkgdmFsaWQgY29udGVudCB0aGF0IGNvdWxkIGRvdWJsZSBhcyBhIHNlbGVjdG9yIGFyZSBJRHMgb3IgY2xhc3NlcyxcbiAgICAvLyBzbyBldmVyeXRoaW5nIHN0YXJ0aW5nIHdpdGggYCNgIG9yIGAuYC4gSWYgYSBcInJlYWxcIiBVUkwgaXMgdXNlZCBhcyB0aGUgc2VsZWN0b3IsXG4gICAgLy8gYGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JgIHdpbGwgcmlnaHRmdWxseSBjb21wbGFpbiBpdCBpcyBpbnZhbGlkLlxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvaXNzdWVzLzMyMjczXG4gICAgaWYgKCFocmVmQXR0cmlidXRlIHx8ICghaHJlZkF0dHJpYnV0ZS5pbmNsdWRlcygnIycpICYmICFocmVmQXR0cmlidXRlLnN0YXJ0c1dpdGgoJy4nKSkpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgLy8gSnVzdCBpbiBjYXNlIHNvbWUgQ01TIHB1dHMgb3V0IGEgZnVsbCBVUkwgd2l0aCB0aGUgYW5jaG9yIGFwcGVuZGVkXG4gICAgaWYgKGhyZWZBdHRyaWJ1dGUuaW5jbHVkZXMoJyMnKSAmJiAhaHJlZkF0dHJpYnV0ZS5zdGFydHNXaXRoKCcjJykpIHtcbiAgICAgIGhyZWZBdHRyaWJ1dGUgPSBgIyR7aHJlZkF0dHJpYnV0ZS5zcGxpdCgnIycpWzFdfWBcbiAgICB9XG5cbiAgICBzZWxlY3RvciA9IGhyZWZBdHRyaWJ1dGUgJiYgaHJlZkF0dHJpYnV0ZSAhPT0gJyMnID8gcGFyc2VTZWxlY3RvcihocmVmQXR0cmlidXRlLnRyaW0oKSkgOiBudWxsXG4gIH1cblxuICByZXR1cm4gc2VsZWN0b3Jcbn1cblxuY29uc3QgU2VsZWN0b3JFbmdpbmUgPSB7XG4gIGZpbmQoc2VsZWN0b3IsIGVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcbiAgICByZXR1cm4gW10uY29uY2F0KC4uLkVsZW1lbnQucHJvdG90eXBlLnF1ZXJ5U2VsZWN0b3JBbGwuY2FsbChlbGVtZW50LCBzZWxlY3RvcikpXG4gIH0sXG5cbiAgZmluZE9uZShzZWxlY3RvciwgZWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkge1xuICAgIHJldHVybiBFbGVtZW50LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yLmNhbGwoZWxlbWVudCwgc2VsZWN0b3IpXG4gIH0sXG5cbiAgY2hpbGRyZW4oZWxlbWVudCwgc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gW10uY29uY2F0KC4uLmVsZW1lbnQuY2hpbGRyZW4pLmZpbHRlcihjaGlsZCA9PiBjaGlsZC5tYXRjaGVzKHNlbGVjdG9yKSlcbiAgfSxcblxuICBwYXJlbnRzKGVsZW1lbnQsIHNlbGVjdG9yKSB7XG4gICAgY29uc3QgcGFyZW50cyA9IFtdXG4gICAgbGV0IGFuY2VzdG9yID0gZWxlbWVudC5wYXJlbnROb2RlLmNsb3Nlc3Qoc2VsZWN0b3IpXG5cbiAgICB3aGlsZSAoYW5jZXN0b3IpIHtcbiAgICAgIHBhcmVudHMucHVzaChhbmNlc3RvcilcbiAgICAgIGFuY2VzdG9yID0gYW5jZXN0b3IucGFyZW50Tm9kZS5jbG9zZXN0KHNlbGVjdG9yKVxuICAgIH1cblxuICAgIHJldHVybiBwYXJlbnRzXG4gIH0sXG5cbiAgcHJldihlbGVtZW50LCBzZWxlY3Rvcikge1xuICAgIGxldCBwcmV2aW91cyA9IGVsZW1lbnQucHJldmlvdXNFbGVtZW50U2libGluZ1xuXG4gICAgd2hpbGUgKHByZXZpb3VzKSB7XG4gICAgICBpZiAocHJldmlvdXMubWF0Y2hlcyhzZWxlY3RvcikpIHtcbiAgICAgICAgcmV0dXJuIFtwcmV2aW91c11cbiAgICAgIH1cblxuICAgICAgcHJldmlvdXMgPSBwcmV2aW91cy5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXG4gICAgfVxuXG4gICAgcmV0dXJuIFtdXG4gIH0sXG4gIC8vIFRPRE86IHRoaXMgaXMgbm93IHVudXNlZDsgcmVtb3ZlIGxhdGVyIGFsb25nIHdpdGggcHJldigpXG4gIG5leHQoZWxlbWVudCwgc2VsZWN0b3IpIHtcbiAgICBsZXQgbmV4dCA9IGVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nXG5cbiAgICB3aGlsZSAobmV4dCkge1xuICAgICAgaWYgKG5leHQubWF0Y2hlcyhzZWxlY3RvcikpIHtcbiAgICAgICAgcmV0dXJuIFtuZXh0XVxuICAgICAgfVxuXG4gICAgICBuZXh0ID0gbmV4dC5uZXh0RWxlbWVudFNpYmxpbmdcbiAgICB9XG5cbiAgICByZXR1cm4gW11cbiAgfSxcblxuICBmb2N1c2FibGVDaGlsZHJlbihlbGVtZW50KSB7XG4gICAgY29uc3QgZm9jdXNhYmxlcyA9IFtcbiAgICAgICdhJyxcbiAgICAgICdidXR0b24nLFxuICAgICAgJ2lucHV0JyxcbiAgICAgICd0ZXh0YXJlYScsXG4gICAgICAnc2VsZWN0JyxcbiAgICAgICdkZXRhaWxzJyxcbiAgICAgICdbdGFiaW5kZXhdJyxcbiAgICAgICdbY29udGVudGVkaXRhYmxlPVwidHJ1ZVwiXSdcbiAgICBdLm1hcChzZWxlY3RvciA9PiBgJHtzZWxlY3Rvcn06bm90KFt0YWJpbmRleF49XCItXCJdKWApLmpvaW4oJywnKVxuXG4gICAgcmV0dXJuIHRoaXMuZmluZChmb2N1c2FibGVzLCBlbGVtZW50KS5maWx0ZXIoZWwgPT4gIWlzRGlzYWJsZWQoZWwpICYmIGlzVmlzaWJsZShlbCkpXG4gIH0sXG5cbiAgZ2V0U2VsZWN0b3JGcm9tRWxlbWVudChlbGVtZW50KSB7XG4gICAgY29uc3Qgc2VsZWN0b3IgPSBnZXRTZWxlY3RvcihlbGVtZW50KVxuXG4gICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICByZXR1cm4gU2VsZWN0b3JFbmdpbmUuZmluZE9uZShzZWxlY3RvcikgPyBzZWxlY3RvciA6IG51bGxcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbFxuICB9LFxuXG4gIGdldEVsZW1lbnRGcm9tU2VsZWN0b3IoZWxlbWVudCkge1xuICAgIGNvbnN0IHNlbGVjdG9yID0gZ2V0U2VsZWN0b3IoZWxlbWVudClcblxuICAgIHJldHVybiBzZWxlY3RvciA/IFNlbGVjdG9yRW5naW5lLmZpbmRPbmUoc2VsZWN0b3IpIDogbnVsbFxuICB9LFxuXG4gIGdldE11bHRpcGxlRWxlbWVudHNGcm9tU2VsZWN0b3IoZWxlbWVudCkge1xuICAgIGNvbnN0IHNlbGVjdG9yID0gZ2V0U2VsZWN0b3IoZWxlbWVudClcblxuICAgIHJldHVybiBzZWxlY3RvciA/IFNlbGVjdG9yRW5naW5lLmZpbmQoc2VsZWN0b3IpIDogW11cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTZWxlY3RvckVuZ2luZVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/dom/selector-engine.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/modal.js":
/*!*************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/modal.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _base_component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-component.js */ \"../../../../../node_modules/bootstrap/js/src/base-component.js\");\n/* harmony import */ var _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom/event-handler.js */ \"../../../../../node_modules/bootstrap/js/src/dom/event-handler.js\");\n/* harmony import */ var _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom/selector-engine.js */ \"../../../../../node_modules/bootstrap/js/src/dom/selector-engine.js\");\n/* harmony import */ var _util_backdrop_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/backdrop.js */ \"../../../../../node_modules/bootstrap/js/src/util/backdrop.js\");\n/* harmony import */ var _util_component_functions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/component-functions.js */ \"../../../../../node_modules/bootstrap/js/src/util/component-functions.js\");\n/* harmony import */ var _util_focustrap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/focustrap.js */ \"../../../../../node_modules/bootstrap/js/src/util/focustrap.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/* harmony import */ var _util_scrollbar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/scrollbar.js */ \"../../../../../node_modules/bootstrap/js/src/util/scrollbar.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Constants\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst OPEN_SELECTOR = '.modal.show'\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\n\nconst Default = {\n  backdrop: true,\n  focus: true,\n  keyboard: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  focus: 'boolean',\n  keyboard: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Modal extends _base_component_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(element, config) {\n    super(element, config)\n\n    this._dialog = _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._focustrap = this._initializeFocusTrap()\n    this._isShown = false\n    this._isTransitioning = false\n    this._scrollBar = new _util_scrollbar_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]()\n\n    this._addEventListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n    this._isTransitioning = true\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._backdrop.show(() => this._showElement(relatedTarget))\n  }\n\n  hide() {\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    this._isTransitioning = true\n    this._focustrap.deactivate()\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    this._queueCallback(() => this._hideModal(), this._element, this._isAnimated())\n  }\n\n  dispose() {\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].off(window, EVENT_KEY)\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].off(this._dialog, EVENT_KEY)\n\n    this._backdrop.dispose()\n    this._focustrap.deactivate()\n\n    super.dispose()\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n  _initializeBackDrop() {\n    return new _util_backdrop_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value,\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _initializeFocusTrap() {\n    return new _util_focustrap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n      trapElement: this._element\n    })\n  }\n\n  _showElement(relatedTarget) {\n    // try to append dynamic modal\n    if (!document.body.contains(this._element)) {\n      document.body.append(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    const modalBody = _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne(SELECTOR_MODAL_BODY, this._dialog)\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.reflow)(this._element)\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._focustrap.activate()\n      }\n\n      this._isTransitioning = false\n      _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, this._isAnimated())\n  }\n\n  _addEventListeners() {\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return\n      }\n\n      if (this._config.keyboard) {\n        this.hide()\n        return\n      }\n\n      this._triggerBackdropTransition()\n    })\n\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].on(window, EVENT_RESIZE, () => {\n      if (this._isShown && !this._isTransitioning) {\n        this._adjustDialog()\n      }\n    })\n\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].on(this._element, EVENT_MOUSEDOWN_DISMISS, event => {\n      // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n      _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].one(this._element, EVENT_CLICK_DISMISS, event2 => {\n        if (this._element !== event.target || this._element !== event2.target) {\n          return\n        }\n\n        if (this._config.backdrop === 'static') {\n          this._triggerBackdropTransition()\n          return\n        }\n\n        if (this._config.backdrop) {\n          this.hide()\n        }\n      })\n    })\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const initialOverflowY = this._element.style.overflowY\n    // return if the following background transition hasn't yet completed\n    if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      this._element.style.overflowY = 'hidden'\n    }\n\n    this._element.classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      this._element.classList.remove(CLASS_NAME_STATIC)\n      this._queueCallback(() => {\n        this._element.style.overflowY = initialOverflowY\n      }, this._dialog)\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  /**\n   * The following methods are used to handle overflowing modals\n   */\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if (isBodyOverflowing && !isModalOverflowing) {\n      const property = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.isRTL)() ? 'paddingLeft' : 'paddingRight'\n      this._element.style[property] = `${scrollbarWidth}px`\n    }\n\n    if (!isBodyOverflowing && isModalOverflowing) {\n      const property = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.isRTL)() ? 'paddingRight' : 'paddingLeft'\n      this._element.style[property] = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\n_dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].one(target, EVENT_HIDDEN, () => {\n      if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.isVisible)(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  // avoid conflict when clicking modal toggler while another one is open\n  const alreadyOpen = _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne(OPEN_SELECTOR)\n  if (alreadyOpen) {\n    Modal.getInstance(alreadyOpen).hide()\n  }\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\n;(0,_util_component_functions_js__WEBPACK_IMPORTED_MODULE_4__.enableDismissTrigger)(Modal)\n\n/**\n * jQuery\n */\n\n;(0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.defineJQueryPlugin)(Modal)\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Modal);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/modal.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/util/backdrop.js":
/*!*********************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/util/backdrop.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/event-handler.js */ \"../../../../../node_modules/bootstrap/js/src/dom/event-handler.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"../../../../../node_modules/bootstrap/js/src/util/config.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\n/**\n * Constants\n */\n\nconst NAME = 'backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nconst Default = {\n  className: 'modal-backdrop',\n  clickCallback: null,\n  isAnimated: false,\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  rootElement: 'body' // give the choice to place backdrop under different elements\n}\n\nconst DefaultType = {\n  className: 'string',\n  clickCallback: '(function|null)',\n  isAnimated: 'boolean',\n  isVisible: 'boolean',\n  rootElement: '(element|string)'\n}\n\n/**\n * Class definition\n */\n\nclass Backdrop extends _config_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show(callback) {\n    if (!this._config.isVisible) {\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.execute)(callback)\n      return\n    }\n\n    this._append()\n\n    const element = this._getElement()\n    if (this._config.isAnimated) {\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.reflow)(element)\n    }\n\n    element.classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      ;(0,_index_js__WEBPACK_IMPORTED_MODULE_2__.execute)(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.execute)(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      ;(0,_index_js__WEBPACK_IMPORTED_MODULE_2__.execute)(callback)\n    })\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  // Private\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = this._config.className\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _configAfterMerge(config) {\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.getElement)(config.rootElement)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    const element = this._getElement()\n    this._config.rootElement.append(element)\n\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(element, EVENT_MOUSEDOWN, () => {\n      ;(0,_index_js__WEBPACK_IMPORTED_MODULE_2__.execute)(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  _emulateAnimation(callback) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.executeAfterTransition)(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Backdrop);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvdXRpbC9iYWNrZHJvcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL3NyYy91dGlsL2JhY2tkcm9wLmpzPzA2NGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQm9vdHN0cmFwIHV0aWwvYmFja2Ryb3AuanNcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG5pbXBvcnQgRXZlbnRIYW5kbGVyIGZyb20gJy4uL2RvbS9ldmVudC1oYW5kbGVyLmpzJ1xuaW1wb3J0IENvbmZpZyBmcm9tICcuL2NvbmZpZy5qcydcbmltcG9ydCB7IGV4ZWN1dGUsIGV4ZWN1dGVBZnRlclRyYW5zaXRpb24sIGdldEVsZW1lbnQsIHJlZmxvdyB9IGZyb20gJy4vaW5kZXguanMnXG5cbi8qKlxuICogQ29uc3RhbnRzXG4gKi9cblxuY29uc3QgTkFNRSA9ICdiYWNrZHJvcCdcbmNvbnN0IENMQVNTX05BTUVfRkFERSA9ICdmYWRlJ1xuY29uc3QgQ0xBU1NfTkFNRV9TSE9XID0gJ3Nob3cnXG5jb25zdCBFVkVOVF9NT1VTRURPV04gPSBgbW91c2Vkb3duLmJzLiR7TkFNRX1gXG5cbmNvbnN0IERlZmF1bHQgPSB7XG4gIGNsYXNzTmFtZTogJ21vZGFsLWJhY2tkcm9wJyxcbiAgY2xpY2tDYWxsYmFjazogbnVsbCxcbiAgaXNBbmltYXRlZDogZmFsc2UsXG4gIGlzVmlzaWJsZTogdHJ1ZSwgLy8gaWYgZmFsc2UsIHdlIHVzZSB0aGUgYmFja2Ryb3AgaGVscGVyIHdpdGhvdXQgYWRkaW5nIGFueSBlbGVtZW50IHRvIHRoZSBkb21cbiAgcm9vdEVsZW1lbnQ6ICdib2R5JyAvLyBnaXZlIHRoZSBjaG9pY2UgdG8gcGxhY2UgYmFja2Ryb3AgdW5kZXIgZGlmZmVyZW50IGVsZW1lbnRzXG59XG5cbmNvbnN0IERlZmF1bHRUeXBlID0ge1xuICBjbGFzc05hbWU6ICdzdHJpbmcnLFxuICBjbGlja0NhbGxiYWNrOiAnKGZ1bmN0aW9ufG51bGwpJyxcbiAgaXNBbmltYXRlZDogJ2Jvb2xlYW4nLFxuICBpc1Zpc2libGU6ICdib29sZWFuJyxcbiAgcm9vdEVsZW1lbnQ6ICcoZWxlbWVudHxzdHJpbmcpJ1xufVxuXG4vKipcbiAqIENsYXNzIGRlZmluaXRpb25cbiAqL1xuXG5jbGFzcyBCYWNrZHJvcCBleHRlbmRzIENvbmZpZyB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLl9jb25maWcgPSB0aGlzLl9nZXRDb25maWcoY29uZmlnKVxuICAgIHRoaXMuX2lzQXBwZW5kZWQgPSBmYWxzZVxuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsXG4gIH1cblxuICAvLyBHZXR0ZXJzXG4gIHN0YXRpYyBnZXQgRGVmYXVsdCgpIHtcbiAgICByZXR1cm4gRGVmYXVsdFxuICB9XG5cbiAgc3RhdGljIGdldCBEZWZhdWx0VHlwZSgpIHtcbiAgICByZXR1cm4gRGVmYXVsdFR5cGVcbiAgfVxuXG4gIHN0YXRpYyBnZXQgTkFNRSgpIHtcbiAgICByZXR1cm4gTkFNRVxuICB9XG5cbiAgLy8gUHVibGljXG4gIHNob3coY2FsbGJhY2spIHtcbiAgICBpZiAoIXRoaXMuX2NvbmZpZy5pc1Zpc2libGUpIHtcbiAgICAgIGV4ZWN1dGUoY2FsbGJhY2spXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICB0aGlzLl9hcHBlbmQoKVxuXG4gICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX2dldEVsZW1lbnQoKVxuICAgIGlmICh0aGlzLl9jb25maWcuaXNBbmltYXRlZCkge1xuICAgICAgcmVmbG93KGVsZW1lbnQpXG4gICAgfVxuXG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfU0hPVylcblxuICAgIHRoaXMuX2VtdWxhdGVBbmltYXRpb24oKCkgPT4ge1xuICAgICAgZXhlY3V0ZShjYWxsYmFjaylcbiAgICB9KVxuICB9XG5cbiAgaGlkZShjYWxsYmFjaykge1xuICAgIGlmICghdGhpcy5fY29uZmlnLmlzVmlzaWJsZSkge1xuICAgICAgZXhlY3V0ZShjYWxsYmFjaylcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHRoaXMuX2dldEVsZW1lbnQoKS5jbGFzc0xpc3QucmVtb3ZlKENMQVNTX05BTUVfU0hPVylcblxuICAgIHRoaXMuX2VtdWxhdGVBbmltYXRpb24oKCkgPT4ge1xuICAgICAgdGhpcy5kaXNwb3NlKClcbiAgICAgIGV4ZWN1dGUoY2FsbGJhY2spXG4gICAgfSlcbiAgfVxuXG4gIGRpc3Bvc2UoKSB7XG4gICAgaWYgKCF0aGlzLl9pc0FwcGVuZGVkKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBFdmVudEhhbmRsZXIub2ZmKHRoaXMuX2VsZW1lbnQsIEVWRU5UX01PVVNFRE9XTilcblxuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKClcbiAgICB0aGlzLl9pc0FwcGVuZGVkID0gZmFsc2VcbiAgfVxuXG4gIC8vIFByaXZhdGVcbiAgX2dldEVsZW1lbnQoKSB7XG4gICAgaWYgKCF0aGlzLl9lbGVtZW50KSB7XG4gICAgICBjb25zdCBiYWNrZHJvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICBiYWNrZHJvcC5jbGFzc05hbWUgPSB0aGlzLl9jb25maWcuY2xhc3NOYW1lXG4gICAgICBpZiAodGhpcy5fY29uZmlnLmlzQW5pbWF0ZWQpIHtcbiAgICAgICAgYmFja2Ryb3AuY2xhc3NMaXN0LmFkZChDTEFTU19OQU1FX0ZBREUpXG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBiYWNrZHJvcFxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50XG4gIH1cblxuICBfY29uZmlnQWZ0ZXJNZXJnZShjb25maWcpIHtcbiAgICAvLyB1c2UgZ2V0RWxlbWVudCgpIHdpdGggdGhlIGRlZmF1bHQgXCJib2R5XCIgdG8gZ2V0IGEgZnJlc2ggRWxlbWVudCBvbiBlYWNoIGluc3RhbnRpYXRpb25cbiAgICBjb25maWcucm9vdEVsZW1lbnQgPSBnZXRFbGVtZW50KGNvbmZpZy5yb290RWxlbWVudClcbiAgICByZXR1cm4gY29uZmlnXG4gIH1cblxuICBfYXBwZW5kKCkge1xuICAgIGlmICh0aGlzLl9pc0FwcGVuZGVkKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5fZ2V0RWxlbWVudCgpXG4gICAgdGhpcy5fY29uZmlnLnJvb3RFbGVtZW50LmFwcGVuZChlbGVtZW50KVxuXG4gICAgRXZlbnRIYW5kbGVyLm9uKGVsZW1lbnQsIEVWRU5UX01PVVNFRE9XTiwgKCkgPT4ge1xuICAgICAgZXhlY3V0ZSh0aGlzLl9jb25maWcuY2xpY2tDYWxsYmFjaylcbiAgICB9KVxuXG4gICAgdGhpcy5faXNBcHBlbmRlZCA9IHRydWVcbiAgfVxuXG4gIF9lbXVsYXRlQW5pbWF0aW9uKGNhbGxiYWNrKSB7XG4gICAgZXhlY3V0ZUFmdGVyVHJhbnNpdGlvbihjYWxsYmFjaywgdGhpcy5fZ2V0RWxlbWVudCgpLCB0aGlzLl9jb25maWcuaXNBbmltYXRlZClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCYWNrZHJvcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/util/backdrop.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/util/component-functions.js":
/*!********************************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/util/component-functions.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enableDismissTrigger: () => (/* binding */ enableDismissTrigger)\n/* harmony export */ });\n/* harmony import */ var _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/event-handler.js */ \"../../../../../node_modules/bootstrap/js/src/dom/event-handler.js\");\n/* harmony import */ var _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/selector-engine.js */ \"../../../../../node_modules/bootstrap/js/src/dom/selector-engine.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\nconst enableDismissTrigger = (component, method = 'hide') => {\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`\n  const name = component.NAME\n\n  _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault()\n    }\n\n    if ((0,_index_js__WEBPACK_IMPORTED_MODULE_2__.isDisabled)(this)) {\n      return\n    }\n\n    const target = _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getElementFromSelector(this) || this.closest(`.${name}`)\n    const instance = component.getOrCreateInstance(target)\n\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n    instance[method]()\n  })\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvdXRpbC9jb21wb25lbnQtZnVuY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvdXRpbC9jb21wb25lbnQtZnVuY3Rpb25zLmpzPzAyYzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQm9vdHN0cmFwIHV0aWwvY29tcG9uZW50LWZ1bmN0aW9ucy5qc1xuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbmltcG9ydCBFdmVudEhhbmRsZXIgZnJvbSAnLi4vZG9tL2V2ZW50LWhhbmRsZXIuanMnXG5pbXBvcnQgU2VsZWN0b3JFbmdpbmUgZnJvbSAnLi4vZG9tL3NlbGVjdG9yLWVuZ2luZS5qcydcbmltcG9ydCB7IGlzRGlzYWJsZWQgfSBmcm9tICcuL2luZGV4LmpzJ1xuXG5jb25zdCBlbmFibGVEaXNtaXNzVHJpZ2dlciA9IChjb21wb25lbnQsIG1ldGhvZCA9ICdoaWRlJykgPT4ge1xuICBjb25zdCBjbGlja0V2ZW50ID0gYGNsaWNrLmRpc21pc3Mke2NvbXBvbmVudC5FVkVOVF9LRVl9YFxuICBjb25zdCBuYW1lID0gY29tcG9uZW50Lk5BTUVcblxuICBFdmVudEhhbmRsZXIub24oZG9jdW1lbnQsIGNsaWNrRXZlbnQsIGBbZGF0YS1icy1kaXNtaXNzPVwiJHtuYW1lfVwiXWAsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGlmIChbJ0EnLCAnQVJFQSddLmluY2x1ZGVzKHRoaXMudGFnTmFtZSkpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNhYmxlZCh0aGlzKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3QgdGFyZ2V0ID0gU2VsZWN0b3JFbmdpbmUuZ2V0RWxlbWVudEZyb21TZWxlY3Rvcih0aGlzKSB8fCB0aGlzLmNsb3Nlc3QoYC4ke25hbWV9YClcbiAgICBjb25zdCBpbnN0YW5jZSA9IGNvbXBvbmVudC5nZXRPckNyZWF0ZUluc3RhbmNlKHRhcmdldClcblxuICAgIC8vIE1ldGhvZCBhcmd1bWVudCBpcyBsZWZ0LCBmb3IgQWxlcnQgYW5kIG9ubHksIGFzIGl0IGRvZXNuJ3QgaW1wbGVtZW50IHRoZSAnaGlkZScgbWV0aG9kXG4gICAgaW5zdGFuY2VbbWV0aG9kXSgpXG4gIH0pXG59XG5cbmV4cG9ydCB7XG4gIGVuYWJsZURpc21pc3NUcmlnZ2VyXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/util/component-functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/util/config.js":
/*!*******************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/util/config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dom_manipulator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/manipulator.js */ \"../../../../../node_modules/bootstrap/js/src/dom/manipulator.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isElement)(element) ? _dom_manipulator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isElement)(element) ? _dom_manipulator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property]\n      const valueType = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isElement)(value) ? 'element' : (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.toType)(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvdXRpbC9jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL3NyYy91dGlsL2NvbmZpZy5qcz9hYWRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEJvb3RzdHJhcCB1dGlsL2NvbmZpZy5qc1xuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbmltcG9ydCBNYW5pcHVsYXRvciBmcm9tICcuLi9kb20vbWFuaXB1bGF0b3IuanMnXG5pbXBvcnQgeyBpc0VsZW1lbnQsIHRvVHlwZSB9IGZyb20gJy4vaW5kZXguanMnXG5cbi8qKlxuICogQ2xhc3MgZGVmaW5pdGlvblxuICovXG5cbmNsYXNzIENvbmZpZyB7XG4gIC8vIEdldHRlcnNcbiAgc3RhdGljIGdldCBEZWZhdWx0KCkge1xuICAgIHJldHVybiB7fVxuICB9XG5cbiAgc3RhdGljIGdldCBEZWZhdWx0VHlwZSgpIHtcbiAgICByZXR1cm4ge31cbiAgfVxuXG4gIHN0YXRpYyBnZXQgTkFNRSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBoYXZlIHRvIGltcGxlbWVudCB0aGUgc3RhdGljIG1ldGhvZCBcIk5BTUVcIiwgZm9yIGVhY2ggY29tcG9uZW50IScpXG4gIH1cblxuICBfZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgIGNvbmZpZyA9IHRoaXMuX21lcmdlQ29uZmlnT2JqKGNvbmZpZylcbiAgICBjb25maWcgPSB0aGlzLl9jb25maWdBZnRlck1lcmdlKGNvbmZpZylcbiAgICB0aGlzLl90eXBlQ2hlY2tDb25maWcoY29uZmlnKVxuICAgIHJldHVybiBjb25maWdcbiAgfVxuXG4gIF9jb25maWdBZnRlck1lcmdlKGNvbmZpZykge1xuICAgIHJldHVybiBjb25maWdcbiAgfVxuXG4gIF9tZXJnZUNvbmZpZ09iaihjb25maWcsIGVsZW1lbnQpIHtcbiAgICBjb25zdCBqc29uQ29uZmlnID0gaXNFbGVtZW50KGVsZW1lbnQpID8gTWFuaXB1bGF0b3IuZ2V0RGF0YUF0dHJpYnV0ZShlbGVtZW50LCAnY29uZmlnJykgOiB7fSAvLyB0cnkgdG8gcGFyc2VcblxuICAgIHJldHVybiB7XG4gICAgICAuLi50aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHQsXG4gICAgICAuLi4odHlwZW9mIGpzb25Db25maWcgPT09ICdvYmplY3QnID8ganNvbkNvbmZpZyA6IHt9KSxcbiAgICAgIC4uLihpc0VsZW1lbnQoZWxlbWVudCkgPyBNYW5pcHVsYXRvci5nZXREYXRhQXR0cmlidXRlcyhlbGVtZW50KSA6IHt9KSxcbiAgICAgIC4uLih0eXBlb2YgY29uZmlnID09PSAnb2JqZWN0JyA/IGNvbmZpZyA6IHt9KVxuICAgIH1cbiAgfVxuXG4gIF90eXBlQ2hlY2tDb25maWcoY29uZmlnLCBjb25maWdUeXBlcyA9IHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFR5cGUpIHtcbiAgICBmb3IgKGNvbnN0IFtwcm9wZXJ0eSwgZXhwZWN0ZWRUeXBlc10gb2YgT2JqZWN0LmVudHJpZXMoY29uZmlnVHlwZXMpKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGNvbmZpZ1twcm9wZXJ0eV1cbiAgICAgIGNvbnN0IHZhbHVlVHlwZSA9IGlzRWxlbWVudCh2YWx1ZSkgPyAnZWxlbWVudCcgOiB0b1R5cGUodmFsdWUpXG5cbiAgICAgIGlmICghbmV3IFJlZ0V4cChleHBlY3RlZFR5cGVzKS50ZXN0KHZhbHVlVHlwZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBgJHt0aGlzLmNvbnN0cnVjdG9yLk5BTUUudG9VcHBlckNhc2UoKX06IE9wdGlvbiBcIiR7cHJvcGVydHl9XCIgcHJvdmlkZWQgdHlwZSBcIiR7dmFsdWVUeXBlfVwiIGJ1dCBleHBlY3RlZCB0eXBlIFwiJHtleHBlY3RlZFR5cGVzfVwiLmBcbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb25maWdcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/util/config.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/util/focustrap.js":
/*!**********************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/util/focustrap.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/event-handler.js */ \"../../../../../node_modules/bootstrap/js/src/dom/event-handler.js\");\n/* harmony import */ var _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/selector-engine.js */ \"../../../../../node_modules/bootstrap/js/src/dom/selector-engine.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config.js */ \"../../../../../node_modules/bootstrap/js/src/util/config.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\n/**\n * Constants\n */\n\nconst NAME = 'focustrap'\nconst DATA_KEY = 'bs.focustrap'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`\n\nconst TAB_KEY = 'Tab'\nconst TAB_NAV_FORWARD = 'forward'\nconst TAB_NAV_BACKWARD = 'backward'\n\nconst Default = {\n  autofocus: true,\n  trapElement: null // The element to trap focus inside of\n}\n\nconst DefaultType = {\n  autofocus: 'boolean',\n  trapElement: 'element'\n}\n\n/**\n * Class definition\n */\n\nclass FocusTrap extends _config_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isActive = false\n    this._lastTabNavDirection = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  activate() {\n    if (this._isActive) {\n      return\n    }\n\n    if (this._config.autofocus) {\n      this._config.trapElement.focus()\n    }\n\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].off(document, EVENT_KEY) // guard against infinite focus loop\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(document, EVENT_FOCUSIN, event => this._handleFocusin(event))\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event))\n\n    this._isActive = true\n  }\n\n  deactivate() {\n    if (!this._isActive) {\n      return\n    }\n\n    this._isActive = false\n    _dom_event_handler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].off(document, EVENT_KEY)\n  }\n\n  // Private\n  _handleFocusin(event) {\n    const { trapElement } = this._config\n\n    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n      return\n    }\n\n    const elements = _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].focusableChildren(trapElement)\n\n    if (elements.length === 0) {\n      trapElement.focus()\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus()\n    } else {\n      elements[0].focus()\n    }\n  }\n\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return\n    }\n\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FocusTrap);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvdXRpbC9mb2N1c3RyYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvc3JjL3V0aWwvZm9jdXN0cmFwLmpzPzc3OTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQm9vdHN0cmFwIHV0aWwvZm9jdXN0cmFwLmpzXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSlcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuaW1wb3J0IEV2ZW50SGFuZGxlciBmcm9tICcuLi9kb20vZXZlbnQtaGFuZGxlci5qcydcbmltcG9ydCBTZWxlY3RvckVuZ2luZSBmcm9tICcuLi9kb20vc2VsZWN0b3ItZW5naW5lLmpzJ1xuaW1wb3J0IENvbmZpZyBmcm9tICcuL2NvbmZpZy5qcydcblxuLyoqXG4gKiBDb25zdGFudHNcbiAqL1xuXG5jb25zdCBOQU1FID0gJ2ZvY3VzdHJhcCdcbmNvbnN0IERBVEFfS0VZID0gJ2JzLmZvY3VzdHJhcCdcbmNvbnN0IEVWRU5UX0tFWSA9IGAuJHtEQVRBX0tFWX1gXG5jb25zdCBFVkVOVF9GT0NVU0lOID0gYGZvY3VzaW4ke0VWRU5UX0tFWX1gXG5jb25zdCBFVkVOVF9LRVlET1dOX1RBQiA9IGBrZXlkb3duLnRhYiR7RVZFTlRfS0VZfWBcblxuY29uc3QgVEFCX0tFWSA9ICdUYWInXG5jb25zdCBUQUJfTkFWX0ZPUldBUkQgPSAnZm9yd2FyZCdcbmNvbnN0IFRBQl9OQVZfQkFDS1dBUkQgPSAnYmFja3dhcmQnXG5cbmNvbnN0IERlZmF1bHQgPSB7XG4gIGF1dG9mb2N1czogdHJ1ZSxcbiAgdHJhcEVsZW1lbnQ6IG51bGwgLy8gVGhlIGVsZW1lbnQgdG8gdHJhcCBmb2N1cyBpbnNpZGUgb2Zcbn1cblxuY29uc3QgRGVmYXVsdFR5cGUgPSB7XG4gIGF1dG9mb2N1czogJ2Jvb2xlYW4nLFxuICB0cmFwRWxlbWVudDogJ2VsZW1lbnQnXG59XG5cbi8qKlxuICogQ2xhc3MgZGVmaW5pdGlvblxuICovXG5cbmNsYXNzIEZvY3VzVHJhcCBleHRlbmRzIENvbmZpZyB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLl9jb25maWcgPSB0aGlzLl9nZXRDb25maWcoY29uZmlnKVxuICAgIHRoaXMuX2lzQWN0aXZlID0gZmFsc2VcbiAgICB0aGlzLl9sYXN0VGFiTmF2RGlyZWN0aW9uID0gbnVsbFxuICB9XG5cbiAgLy8gR2V0dGVyc1xuICBzdGF0aWMgZ2V0IERlZmF1bHQoKSB7XG4gICAgcmV0dXJuIERlZmF1bHRcbiAgfVxuXG4gIHN0YXRpYyBnZXQgRGVmYXVsdFR5cGUoKSB7XG4gICAgcmV0dXJuIERlZmF1bHRUeXBlXG4gIH1cblxuICBzdGF0aWMgZ2V0IE5BTUUoKSB7XG4gICAgcmV0dXJuIE5BTUVcbiAgfVxuXG4gIC8vIFB1YmxpY1xuICBhY3RpdmF0ZSgpIHtcbiAgICBpZiAodGhpcy5faXNBY3RpdmUpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmICh0aGlzLl9jb25maWcuYXV0b2ZvY3VzKSB7XG4gICAgICB0aGlzLl9jb25maWcudHJhcEVsZW1lbnQuZm9jdXMoKVxuICAgIH1cblxuICAgIEV2ZW50SGFuZGxlci5vZmYoZG9jdW1lbnQsIEVWRU5UX0tFWSkgLy8gZ3VhcmQgYWdhaW5zdCBpbmZpbml0ZSBmb2N1cyBsb29wXG4gICAgRXZlbnRIYW5kbGVyLm9uKGRvY3VtZW50LCBFVkVOVF9GT0NVU0lOLCBldmVudCA9PiB0aGlzLl9oYW5kbGVGb2N1c2luKGV2ZW50KSlcbiAgICBFdmVudEhhbmRsZXIub24oZG9jdW1lbnQsIEVWRU5UX0tFWURPV05fVEFCLCBldmVudCA9PiB0aGlzLl9oYW5kbGVLZXlkb3duKGV2ZW50KSlcblxuICAgIHRoaXMuX2lzQWN0aXZlID0gdHJ1ZVxuICB9XG5cbiAgZGVhY3RpdmF0ZSgpIHtcbiAgICBpZiAoIXRoaXMuX2lzQWN0aXZlKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICB0aGlzLl9pc0FjdGl2ZSA9IGZhbHNlXG4gICAgRXZlbnRIYW5kbGVyLm9mZihkb2N1bWVudCwgRVZFTlRfS0VZKVxuICB9XG5cbiAgLy8gUHJpdmF0ZVxuICBfaGFuZGxlRm9jdXNpbihldmVudCkge1xuICAgIGNvbnN0IHsgdHJhcEVsZW1lbnQgfSA9IHRoaXMuX2NvbmZpZ1xuXG4gICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gZG9jdW1lbnQgfHwgZXZlbnQudGFyZ2V0ID09PSB0cmFwRWxlbWVudCB8fCB0cmFwRWxlbWVudC5jb250YWlucyhldmVudC50YXJnZXQpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBlbGVtZW50cyA9IFNlbGVjdG9yRW5naW5lLmZvY3VzYWJsZUNoaWxkcmVuKHRyYXBFbGVtZW50KVxuXG4gICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdHJhcEVsZW1lbnQuZm9jdXMoKVxuICAgIH0gZWxzZSBpZiAodGhpcy5fbGFzdFRhYk5hdkRpcmVjdGlvbiA9PT0gVEFCX05BVl9CQUNLV0FSRCkge1xuICAgICAgZWxlbWVudHNbZWxlbWVudHMubGVuZ3RoIC0gMV0uZm9jdXMoKVxuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50c1swXS5mb2N1cygpXG4gICAgfVxuICB9XG5cbiAgX2hhbmRsZUtleWRvd24oZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQua2V5ICE9PSBUQUJfS0VZKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICB0aGlzLl9sYXN0VGFiTmF2RGlyZWN0aW9uID0gZXZlbnQuc2hpZnRLZXkgPyBUQUJfTkFWX0JBQ0tXQVJEIDogVEFCX05BVl9GT1JXQVJEXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9jdXNUcmFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/util/focustrap.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/util/index.js":
/*!******************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/util/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defineJQueryPlugin: () => (/* binding */ defineJQueryPlugin),\n/* harmony export */   execute: () => (/* binding */ execute),\n/* harmony export */   executeAfterTransition: () => (/* binding */ executeAfterTransition),\n/* harmony export */   findShadowRoot: () => (/* binding */ findShadowRoot),\n/* harmony export */   getElement: () => (/* binding */ getElement),\n/* harmony export */   getNextActiveElement: () => (/* binding */ getNextActiveElement),\n/* harmony export */   getTransitionDurationFromElement: () => (/* binding */ getTransitionDurationFromElement),\n/* harmony export */   getUID: () => (/* binding */ getUID),\n/* harmony export */   getjQuery: () => (/* binding */ getjQuery),\n/* harmony export */   isDisabled: () => (/* binding */ isDisabled),\n/* harmony export */   isElement: () => (/* binding */ isElement),\n/* harmony export */   isRTL: () => (/* binding */ isRTL),\n/* harmony export */   isVisible: () => (/* binding */ isVisible),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   onDOMContentLoaded: () => (/* binding */ onDOMContentLoaded),\n/* harmony export */   parseSelector: () => (/* binding */ parseSelector),\n/* harmony export */   reflow: () => (/* binding */ reflow),\n/* harmony export */   toType: () => (/* binding */ toType),\n/* harmony export */   triggerTransitionEnd: () => (/* binding */ triggerTransitionEnd)\n/* harmony export */ });\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1_000_000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */\nconst parseSelector = selector => {\n  if (selector && window.CSS && window.CSS.escape) {\n    // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`)\n  }\n\n  return selector\n}\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`\n  }\n\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false\n  }\n\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0]\n  }\n\n  return typeof object.nodeType !== 'undefined'\n}\n\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (isElement(object)) {\n    return object.jquery ? object[0] : object\n  }\n\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(parseSelector(object))\n  }\n\n  return null\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])')\n\n  if (!closedDetails) {\n    return elementIsVisible\n  }\n\n  if (closedDetails !== element) {\n    const summary = element.closest('summary')\n    if (summary && summary.parentNode !== closedDetails) {\n      return false\n    }\n\n    if (summary === null) {\n      return false\n    }\n  }\n\n  return elementIsVisible\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight // eslint-disable-line no-unused-expressions\n}\n\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return window.jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback()\n        }\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n  return typeof possibleCallback === 'function' ? possibleCallback(...args) : defaultValue\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0]\n  }\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/util/index.js\n");

/***/ }),

/***/ "../../../../../node_modules/bootstrap/js/src/util/scrollbar.js":
/*!**********************************************************************!*\
  !*** ../../../../../node_modules/bootstrap/js/src/util/scrollbar.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dom_manipulator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/manipulator.js */ \"../../../../../node_modules/bootstrap/js/src/dom/manipulator.js\");\n/* harmony import */ var _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/selector-engine.js */ \"../../../../../node_modules/bootstrap/js/src/dom/selector-engine.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"../../../../../node_modules/bootstrap/js/src/util/index.js\");\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\n/**\n * Constants\n */\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\nconst PROPERTY_PADDING = 'padding-right'\nconst PROPERTY_MARGIN = 'margin-right'\n\n/**\n * Class definition\n */\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  // Public\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN)\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n\n  // Private\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProperty, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProperty)\n      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty)\n      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _saveInitialAttribute(element, styleProperty) {\n    const actualValue = element.style.getPropertyValue(styleProperty)\n    if (actualValue) {\n      _dom_manipulator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setDataAttribute(element, styleProperty, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProperty) {\n    const manipulationCallBack = element => {\n      const value = _dom_manipulator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDataAttribute(element, styleProperty)\n      // We only want to remove the property if the value is `null`; the value can also be zero\n      if (value === null) {\n        element.style.removeProperty(styleProperty)\n        return\n      }\n\n      _dom_manipulator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeDataAttribute(element, styleProperty)\n      element.style.setProperty(styleProperty, value)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if ((0,_index_js__WEBPACK_IMPORTED_MODULE_2__.isElement)(selector)) {\n      callBack(selector)\n      return\n    }\n\n    for (const sel of _dom_selector_engine_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].find(selector, this._element)) {\n      callBack(sel)\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ScrollBarHelper);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9zcmMvdXRpbC9zY3JvbGxiYXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL3NyYy91dGlsL3Njcm9sbGJhci5qcz8yOTQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEJvb3RzdHJhcCB1dGlsL3Njcm9sbEJhci5qc1xuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbmltcG9ydCBNYW5pcHVsYXRvciBmcm9tICcuLi9kb20vbWFuaXB1bGF0b3IuanMnXG5pbXBvcnQgU2VsZWN0b3JFbmdpbmUgZnJvbSAnLi4vZG9tL3NlbGVjdG9yLWVuZ2luZS5qcydcbmltcG9ydCB7IGlzRWxlbWVudCB9IGZyb20gJy4vaW5kZXguanMnXG5cbi8qKlxuICogQ29uc3RhbnRzXG4gKi9cblxuY29uc3QgU0VMRUNUT1JfRklYRURfQ09OVEVOVCA9ICcuZml4ZWQtdG9wLCAuZml4ZWQtYm90dG9tLCAuaXMtZml4ZWQsIC5zdGlja3ktdG9wJ1xuY29uc3QgU0VMRUNUT1JfU1RJQ0tZX0NPTlRFTlQgPSAnLnN0aWNreS10b3AnXG5jb25zdCBQUk9QRVJUWV9QQURESU5HID0gJ3BhZGRpbmctcmlnaHQnXG5jb25zdCBQUk9QRVJUWV9NQVJHSU4gPSAnbWFyZ2luLXJpZ2h0J1xuXG4vKipcbiAqIENsYXNzIGRlZmluaXRpb25cbiAqL1xuXG5jbGFzcyBTY3JvbGxCYXJIZWxwZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gZG9jdW1lbnQuYm9keVxuICB9XG5cbiAgLy8gUHVibGljXG4gIGdldFdpZHRoKCkge1xuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3cvaW5uZXJXaWR0aCN1c2FnZV9ub3Rlc1xuICAgIGNvbnN0IGRvY3VtZW50V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGhcbiAgICByZXR1cm4gTWF0aC5hYnMod2luZG93LmlubmVyV2lkdGggLSBkb2N1bWVudFdpZHRoKVxuICB9XG5cbiAgaGlkZSgpIHtcbiAgICBjb25zdCB3aWR0aCA9IHRoaXMuZ2V0V2lkdGgoKVxuICAgIHRoaXMuX2Rpc2FibGVPdmVyRmxvdygpXG4gICAgLy8gZ2l2ZSBwYWRkaW5nIHRvIGVsZW1lbnQgdG8gYmFsYW5jZSB0aGUgaGlkZGVuIHNjcm9sbGJhciB3aWR0aFxuICAgIHRoaXMuX3NldEVsZW1lbnRBdHRyaWJ1dGVzKHRoaXMuX2VsZW1lbnQsIFBST1BFUlRZX1BBRERJTkcsIGNhbGN1bGF0ZWRWYWx1ZSA9PiBjYWxjdWxhdGVkVmFsdWUgKyB3aWR0aClcbiAgICAvLyB0cmljazogV2UgYWRqdXN0IHBvc2l0aXZlIHBhZGRpbmdSaWdodCBhbmQgbmVnYXRpdmUgbWFyZ2luUmlnaHQgdG8gc3RpY2t5LXRvcCBlbGVtZW50cyB0byBrZWVwIHNob3dpbmcgZnVsbHdpZHRoXG4gICAgdGhpcy5fc2V0RWxlbWVudEF0dHJpYnV0ZXMoU0VMRUNUT1JfRklYRURfQ09OVEVOVCwgUFJPUEVSVFlfUEFERElORywgY2FsY3VsYXRlZFZhbHVlID0+IGNhbGN1bGF0ZWRWYWx1ZSArIHdpZHRoKVxuICAgIHRoaXMuX3NldEVsZW1lbnRBdHRyaWJ1dGVzKFNFTEVDVE9SX1NUSUNLWV9DT05URU5ULCBQUk9QRVJUWV9NQVJHSU4sIGNhbGN1bGF0ZWRWYWx1ZSA9PiBjYWxjdWxhdGVkVmFsdWUgLSB3aWR0aClcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMuX3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCwgJ292ZXJmbG93JylcbiAgICB0aGlzLl9yZXNldEVsZW1lbnRBdHRyaWJ1dGVzKHRoaXMuX2VsZW1lbnQsIFBST1BFUlRZX1BBRERJTkcpXG4gICAgdGhpcy5fcmVzZXRFbGVtZW50QXR0cmlidXRlcyhTRUxFQ1RPUl9GSVhFRF9DT05URU5ULCBQUk9QRVJUWV9QQURESU5HKVxuICAgIHRoaXMuX3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXMoU0VMRUNUT1JfU1RJQ0tZX0NPTlRFTlQsIFBST1BFUlRZX01BUkdJTilcbiAgfVxuXG4gIGlzT3ZlcmZsb3dpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0V2lkdGgoKSA+IDBcbiAgfVxuXG4gIC8vIFByaXZhdGVcbiAgX2Rpc2FibGVPdmVyRmxvdygpIHtcbiAgICB0aGlzLl9zYXZlSW5pdGlhbEF0dHJpYnV0ZSh0aGlzLl9lbGVtZW50LCAnb3ZlcmZsb3cnKVxuICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJ1xuICB9XG5cbiAgX3NldEVsZW1lbnRBdHRyaWJ1dGVzKHNlbGVjdG9yLCBzdHlsZVByb3BlcnR5LCBjYWxsYmFjaykge1xuICAgIGNvbnN0IHNjcm9sbGJhcldpZHRoID0gdGhpcy5nZXRXaWR0aCgpXG4gICAgY29uc3QgbWFuaXB1bGF0aW9uQ2FsbEJhY2sgPSBlbGVtZW50ID0+IHtcbiAgICAgIGlmIChlbGVtZW50ICE9PSB0aGlzLl9lbGVtZW50ICYmIHdpbmRvdy5pbm5lcldpZHRoID4gZWxlbWVudC5jbGllbnRXaWR0aCArIHNjcm9sbGJhcldpZHRoKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICB0aGlzLl9zYXZlSW5pdGlhbEF0dHJpYnV0ZShlbGVtZW50LCBzdHlsZVByb3BlcnR5KVxuICAgICAgY29uc3QgY2FsY3VsYXRlZFZhbHVlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZShzdHlsZVByb3BlcnR5KVxuICAgICAgZWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShzdHlsZVByb3BlcnR5LCBgJHtjYWxsYmFjayhOdW1iZXIucGFyc2VGbG9hdChjYWxjdWxhdGVkVmFsdWUpKX1weGApXG4gICAgfVxuXG4gICAgdGhpcy5fYXBwbHlNYW5pcHVsYXRpb25DYWxsYmFjayhzZWxlY3RvciwgbWFuaXB1bGF0aW9uQ2FsbEJhY2spXG4gIH1cblxuICBfc2F2ZUluaXRpYWxBdHRyaWJ1dGUoZWxlbWVudCwgc3R5bGVQcm9wZXJ0eSkge1xuICAgIGNvbnN0IGFjdHVhbFZhbHVlID0gZWxlbWVudC5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKHN0eWxlUHJvcGVydHkpXG4gICAgaWYgKGFjdHVhbFZhbHVlKSB7XG4gICAgICBNYW5pcHVsYXRvci5zZXREYXRhQXR0cmlidXRlKGVsZW1lbnQsIHN0eWxlUHJvcGVydHksIGFjdHVhbFZhbHVlKVxuICAgIH1cbiAgfVxuXG4gIF9yZXNldEVsZW1lbnRBdHRyaWJ1dGVzKHNlbGVjdG9yLCBzdHlsZVByb3BlcnR5KSB7XG4gICAgY29uc3QgbWFuaXB1bGF0aW9uQ2FsbEJhY2sgPSBlbGVtZW50ID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gTWFuaXB1bGF0b3IuZ2V0RGF0YUF0dHJpYnV0ZShlbGVtZW50LCBzdHlsZVByb3BlcnR5KVxuICAgICAgLy8gV2Ugb25seSB3YW50IHRvIHJlbW92ZSB0aGUgcHJvcGVydHkgaWYgdGhlIHZhbHVlIGlzIGBudWxsYDsgdGhlIHZhbHVlIGNhbiBhbHNvIGJlIHplcm9cbiAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICBlbGVtZW50LnN0eWxlLnJlbW92ZVByb3BlcnR5KHN0eWxlUHJvcGVydHkpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBNYW5pcHVsYXRvci5yZW1vdmVEYXRhQXR0cmlidXRlKGVsZW1lbnQsIHN0eWxlUHJvcGVydHkpXG4gICAgICBlbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KHN0eWxlUHJvcGVydHksIHZhbHVlKVxuICAgIH1cblxuICAgIHRoaXMuX2FwcGx5TWFuaXB1bGF0aW9uQ2FsbGJhY2soc2VsZWN0b3IsIG1hbmlwdWxhdGlvbkNhbGxCYWNrKVxuICB9XG5cbiAgX2FwcGx5TWFuaXB1bGF0aW9uQ2FsbGJhY2soc2VsZWN0b3IsIGNhbGxCYWNrKSB7XG4gICAgaWYgKGlzRWxlbWVudChzZWxlY3RvcikpIHtcbiAgICAgIGNhbGxCYWNrKHNlbGVjdG9yKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBzZWwgb2YgU2VsZWN0b3JFbmdpbmUuZmluZChzZWxlY3RvciwgdGhpcy5fZWxlbWVudCkpIHtcbiAgICAgIGNhbGxCYWNrKHNlbClcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2Nyb2xsQmFySGVscGVyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/bootstrap/js/src/util/scrollbar.js\n");

/***/ }),

/***/ "../../../../../node_modules/nearley/lib/nearley.js":
/*!**********************************************************!*\
  !*** ../../../../../node_modules/nearley/lib/nearley.js ***!
  \**********************************************************/
/***/ (function(module) {

eval("(function(root, factory) {\n    if ( true && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25lYXJsZXkvbGliL25lYXJsZXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9uZWFybGV5L2xpYi9uZWFybGV5LmpzPzI3MjciXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKHJvb3QsIGZhY3RvcnkpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcm9vdC5uZWFybGV5ID0gZmFjdG9yeSgpO1xuICAgIH1cbn0odGhpcywgZnVuY3Rpb24oKSB7XG5cbiAgICBmdW5jdGlvbiBSdWxlKG5hbWUsIHN5bWJvbHMsIHBvc3Rwcm9jZXNzKSB7XG4gICAgICAgIHRoaXMuaWQgPSArK1J1bGUuaGlnaGVzdElkO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnN5bWJvbHMgPSBzeW1ib2xzOyAgICAgICAgLy8gYSBsaXN0IG9mIGxpdGVyYWwgfCByZWdleCBjbGFzcyB8IG5vbnRlcm1pbmFsXG4gICAgICAgIHRoaXMucG9zdHByb2Nlc3MgPSBwb3N0cHJvY2VzcztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIFJ1bGUuaGlnaGVzdElkID0gMDtcblxuICAgIFJ1bGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24od2l0aEN1cnNvckF0KSB7XG4gICAgICAgIHZhciBzeW1ib2xTZXF1ZW5jZSA9ICh0eXBlb2Ygd2l0aEN1cnNvckF0ID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHRoaXMuc3ltYm9scy5tYXAoZ2V0U3ltYm9sU2hvcnREaXNwbGF5KS5qb2luKCcgJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAoICAgdGhpcy5zeW1ib2xzLnNsaWNlKDAsIHdpdGhDdXJzb3JBdCkubWFwKGdldFN5bWJvbFNob3J0RGlzcGxheSkuam9pbignICcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArIFwiIOKXjyBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyB0aGlzLnN5bWJvbHMuc2xpY2Uod2l0aEN1cnNvckF0KS5tYXAoZ2V0U3ltYm9sU2hvcnREaXNwbGF5KS5qb2luKCcgJykgICAgICk7XG4gICAgICAgIHJldHVybiB0aGlzLm5hbWUgKyBcIiDihpIgXCIgKyBzeW1ib2xTZXF1ZW5jZTtcbiAgICB9XG5cblxuICAgIC8vIGEgU3RhdGUgaXMgYSBydWxlIGF0IGEgcG9zaXRpb24gZnJvbSBhIGdpdmVuIHN0YXJ0aW5nIHBvaW50IGluIHRoZSBpbnB1dCBzdHJlYW0gKHJlZmVyZW5jZSlcbiAgICBmdW5jdGlvbiBTdGF0ZShydWxlLCBkb3QsIHJlZmVyZW5jZSwgd2FudGVkQnkpIHtcbiAgICAgICAgdGhpcy5ydWxlID0gcnVsZTtcbiAgICAgICAgdGhpcy5kb3QgPSBkb3Q7XG4gICAgICAgIHRoaXMucmVmZXJlbmNlID0gcmVmZXJlbmNlO1xuICAgICAgICB0aGlzLmRhdGEgPSBbXTtcbiAgICAgICAgdGhpcy53YW50ZWRCeSA9IHdhbnRlZEJ5O1xuICAgICAgICB0aGlzLmlzQ29tcGxldGUgPSB0aGlzLmRvdCA9PT0gcnVsZS5zeW1ib2xzLmxlbmd0aDtcbiAgICB9XG5cbiAgICBTdGF0ZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFwie1wiICsgdGhpcy5ydWxlLnRvU3RyaW5nKHRoaXMuZG90KSArIFwifSwgZnJvbTogXCIgKyAodGhpcy5yZWZlcmVuY2UgfHwgMCk7XG4gICAgfTtcblxuICAgIFN0YXRlLnByb3RvdHlwZS5uZXh0U3RhdGUgPSBmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICB2YXIgc3RhdGUgPSBuZXcgU3RhdGUodGhpcy5ydWxlLCB0aGlzLmRvdCArIDEsIHRoaXMucmVmZXJlbmNlLCB0aGlzLndhbnRlZEJ5KTtcbiAgICAgICAgc3RhdGUubGVmdCA9IHRoaXM7XG4gICAgICAgIHN0YXRlLnJpZ2h0ID0gY2hpbGQ7XG4gICAgICAgIGlmIChzdGF0ZS5pc0NvbXBsZXRlKSB7XG4gICAgICAgICAgICBzdGF0ZS5kYXRhID0gc3RhdGUuYnVpbGQoKTtcbiAgICAgICAgICAgIC8vIEhhdmluZyByaWdodCBzZXQgaGVyZSB3aWxsIHByZXZlbnQgdGhlIHJpZ2h0IHN0YXRlIGFuZCBpdHMgY2hpbGRyZW5cbiAgICAgICAgICAgIC8vIGZvcm0gYmVpbmcgZ2FyYmFnZSBjb2xsZWN0ZWRcbiAgICAgICAgICAgIHN0YXRlLnJpZ2h0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9O1xuXG4gICAgU3RhdGUucHJvdG90eXBlLmJ1aWxkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXM7XG4gICAgICAgIGRvIHtcbiAgICAgICAgICAgIGNoaWxkcmVuLnB1c2gobm9kZS5yaWdodC5kYXRhKTtcbiAgICAgICAgICAgIG5vZGUgPSBub2RlLmxlZnQ7XG4gICAgICAgIH0gd2hpbGUgKG5vZGUubGVmdCk7XG4gICAgICAgIGNoaWxkcmVuLnJldmVyc2UoKTtcbiAgICAgICAgcmV0dXJuIGNoaWxkcmVuO1xuICAgIH07XG5cbiAgICBTdGF0ZS5wcm90b3R5cGUuZmluaXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnJ1bGUucG9zdHByb2Nlc3MpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IHRoaXMucnVsZS5wb3N0cHJvY2Vzcyh0aGlzLmRhdGEsIHRoaXMucmVmZXJlbmNlLCBQYXJzZXIuZmFpbCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG5cbiAgICBmdW5jdGlvbiBDb2x1bW4oZ3JhbW1hciwgaW5kZXgpIHtcbiAgICAgICAgdGhpcy5ncmFtbWFyID0gZ3JhbW1hcjtcbiAgICAgICAgdGhpcy5pbmRleCA9IGluZGV4O1xuICAgICAgICB0aGlzLnN0YXRlcyA9IFtdO1xuICAgICAgICB0aGlzLndhbnRzID0ge307IC8vIHN0YXRlcyBpbmRleGVkIGJ5IHRoZSBub24tdGVybWluYWwgdGhleSBleHBlY3RcbiAgICAgICAgdGhpcy5zY2FubmFibGUgPSBbXTsgLy8gbGlzdCBvZiBzdGF0ZXMgdGhhdCBleHBlY3QgYSB0b2tlblxuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IHt9OyAvLyBzdGF0ZXMgdGhhdCBhcmUgbnVsbGFibGVcbiAgICB9XG5cblxuICAgIENvbHVtbi5wcm90b3R5cGUucHJvY2VzcyA9IGZ1bmN0aW9uKG5leHRDb2x1bW4pIHtcbiAgICAgICAgdmFyIHN0YXRlcyA9IHRoaXMuc3RhdGVzO1xuICAgICAgICB2YXIgd2FudHMgPSB0aGlzLndhbnRzO1xuICAgICAgICB2YXIgY29tcGxldGVkID0gdGhpcy5jb21wbGV0ZWQ7XG5cbiAgICAgICAgZm9yICh2YXIgdyA9IDA7IHcgPCBzdGF0ZXMubGVuZ3RoOyB3KyspIHsgLy8gbmIuIHdlIHB1c2goKSBkdXJpbmcgaXRlcmF0aW9uXG4gICAgICAgICAgICB2YXIgc3RhdGUgPSBzdGF0ZXNbd107XG5cbiAgICAgICAgICAgIGlmIChzdGF0ZS5pc0NvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgc3RhdGUuZmluaXNoKCk7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXRlLmRhdGEgIT09IFBhcnNlci5mYWlsKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbXBsZXRlXG4gICAgICAgICAgICAgICAgICAgIHZhciB3YW50ZWRCeSA9IHN0YXRlLndhbnRlZEJ5O1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gd2FudGVkQnkubGVuZ3RoOyBpLS07ICkgeyAvLyB0aGlzIGxpbmUgaXMgaG90XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGVmdCA9IHdhbnRlZEJ5W2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21wbGV0ZShsZWZ0LCBzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvLyBzcGVjaWFsLWNhc2UgbnVsbGFibGVzXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5yZWZlcmVuY2UgPT09IHRoaXMuaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSBmdXR1cmUgcHJlZGljdG9ycyBvZiB0aGlzIHJ1bGUgZ2V0IGNvbXBsZXRlZC5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBleHAgPSBzdGF0ZS5ydWxlLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAodGhpcy5jb21wbGV0ZWRbZXhwXSA9IHRoaXMuY29tcGxldGVkW2V4cF0gfHwgW10pLnB1c2goc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIHF1ZXVlIHNjYW5uYWJsZSBzdGF0ZXNcbiAgICAgICAgICAgICAgICB2YXIgZXhwID0gc3RhdGUucnVsZS5zeW1ib2xzW3N0YXRlLmRvdF07XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleHAgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2Nhbm5hYmxlLnB1c2goc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBwcmVkaWN0XG4gICAgICAgICAgICAgICAgaWYgKHdhbnRzW2V4cF0pIHtcbiAgICAgICAgICAgICAgICAgICAgd2FudHNbZXhwXS5wdXNoKHN0YXRlKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoY29tcGxldGVkLmhhc093blByb3BlcnR5KGV4cCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBudWxscyA9IGNvbXBsZXRlZFtleHBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudWxscy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByaWdodCA9IG51bGxzW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29tcGxldGUoc3RhdGUsIHJpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHdhbnRzW2V4cF0gPSBbc3RhdGVdO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByZWRpY3QoZXhwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBDb2x1bW4ucHJvdG90eXBlLnByZWRpY3QgPSBmdW5jdGlvbihleHApIHtcbiAgICAgICAgdmFyIHJ1bGVzID0gdGhpcy5ncmFtbWFyLmJ5TmFtZVtleHBdIHx8IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciByID0gcnVsZXNbaV07XG4gICAgICAgICAgICB2YXIgd2FudGVkQnkgPSB0aGlzLndhbnRzW2V4cF07XG4gICAgICAgICAgICB2YXIgcyA9IG5ldyBTdGF0ZShyLCAwLCB0aGlzLmluZGV4LCB3YW50ZWRCeSk7XG4gICAgICAgICAgICB0aGlzLnN0YXRlcy5wdXNoKHMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQ29sdW1uLnByb3RvdHlwZS5jb21wbGV0ZSA9IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7XG4gICAgICAgIHZhciBjb3B5ID0gbGVmdC5uZXh0U3RhdGUocmlnaHQpO1xuICAgICAgICB0aGlzLnN0YXRlcy5wdXNoKGNvcHkpO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gR3JhbW1hcihydWxlcywgc3RhcnQpIHtcbiAgICAgICAgdGhpcy5ydWxlcyA9IHJ1bGVzO1xuICAgICAgICB0aGlzLnN0YXJ0ID0gc3RhcnQgfHwgdGhpcy5ydWxlc1swXS5uYW1lO1xuICAgICAgICB2YXIgYnlOYW1lID0gdGhpcy5ieU5hbWUgPSB7fTtcbiAgICAgICAgdGhpcy5ydWxlcy5mb3JFYWNoKGZ1bmN0aW9uKHJ1bGUpIHtcbiAgICAgICAgICAgIGlmICghYnlOYW1lLmhhc093blByb3BlcnR5KHJ1bGUubmFtZSkpIHtcbiAgICAgICAgICAgICAgICBieU5hbWVbcnVsZS5uYW1lXSA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnlOYW1lW3J1bGUubmFtZV0ucHVzaChydWxlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gU28gd2UgY2FuIGFsbG93IHBhc3NpbmcgKHJ1bGVzLCBzdGFydCkgZGlyZWN0bHkgdG8gUGFyc2VyIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgIEdyYW1tYXIuZnJvbUNvbXBpbGVkID0gZnVuY3Rpb24ocnVsZXMsIHN0YXJ0KSB7XG4gICAgICAgIHZhciBsZXhlciA9IHJ1bGVzLkxleGVyO1xuICAgICAgICBpZiAocnVsZXMuUGFyc2VyU3RhcnQpIHtcbiAgICAgICAgICBzdGFydCA9IHJ1bGVzLlBhcnNlclN0YXJ0O1xuICAgICAgICAgIHJ1bGVzID0gcnVsZXMuUGFyc2VyUnVsZXM7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJ1bGVzID0gcnVsZXMubWFwKGZ1bmN0aW9uIChyKSB7IHJldHVybiAobmV3IFJ1bGUoci5uYW1lLCByLnN5bWJvbHMsIHIucG9zdHByb2Nlc3MpKTsgfSk7XG4gICAgICAgIHZhciBnID0gbmV3IEdyYW1tYXIocnVsZXMsIHN0YXJ0KTtcbiAgICAgICAgZy5sZXhlciA9IGxleGVyOyAvLyBuYi4gc3RvcmluZyBsZXhlciBvbiBHcmFtbWFyIGlzIGlmZnksIGJ1dCB1bmF2b2lkYWJsZVxuICAgICAgICByZXR1cm4gZztcbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIFN0cmVhbUxleGVyKCkge1xuICAgICAgdGhpcy5yZXNldChcIlwiKTtcbiAgICB9XG5cbiAgICBTdHJlYW1MZXhlci5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbihkYXRhLCBzdGF0ZSkge1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IGRhdGE7XG4gICAgICAgIHRoaXMuaW5kZXggPSAwO1xuICAgICAgICB0aGlzLmxpbmUgPSBzdGF0ZSA/IHN0YXRlLmxpbmUgOiAxO1xuICAgICAgICB0aGlzLmxhc3RMaW5lQnJlYWsgPSBzdGF0ZSA/IC1zdGF0ZS5jb2wgOiAwO1xuICAgIH1cblxuICAgIFN0cmVhbUxleGVyLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLmluZGV4IDwgdGhpcy5idWZmZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgY2ggPSB0aGlzLmJ1ZmZlclt0aGlzLmluZGV4KytdO1xuICAgICAgICAgICAgaWYgKGNoID09PSAnXFxuJykge1xuICAgICAgICAgICAgICB0aGlzLmxpbmUgKz0gMTtcbiAgICAgICAgICAgICAgdGhpcy5sYXN0TGluZUJyZWFrID0gdGhpcy5pbmRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7dmFsdWU6IGNofTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIFN0cmVhbUxleGVyLnByb3RvdHlwZS5zYXZlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBsaW5lOiB0aGlzLmxpbmUsXG4gICAgICAgIGNvbDogdGhpcy5pbmRleCAtIHRoaXMubGFzdExpbmVCcmVhayxcbiAgICAgIH1cbiAgICB9XG5cbiAgICBTdHJlYW1MZXhlci5wcm90b3R5cGUuZm9ybWF0RXJyb3IgPSBmdW5jdGlvbih0b2tlbiwgbWVzc2FnZSkge1xuICAgICAgICAvLyBuYi4gdGhpcyBnZXRzIGNhbGxlZCBhZnRlciBjb25zdW1pbmcgdGhlIG9mZmVuZGluZyB0b2tlbixcbiAgICAgICAgLy8gc28gdGhlIGN1bHByaXQgaXMgaW5kZXgtMVxuICAgICAgICB2YXIgYnVmZmVyID0gdGhpcy5idWZmZXI7XG4gICAgICAgIGlmICh0eXBlb2YgYnVmZmVyID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdmFyIGxpbmVzID0gYnVmZmVyXG4gICAgICAgICAgICAgICAgLnNwbGl0KFwiXFxuXCIpXG4gICAgICAgICAgICAgICAgLnNsaWNlKFxuICAgICAgICAgICAgICAgICAgICBNYXRoLm1heCgwLCB0aGlzLmxpbmUgLSA1KSwgXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGluZVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHZhciBuZXh0TGluZUJyZWFrID0gYnVmZmVyLmluZGV4T2YoJ1xcbicsIHRoaXMuaW5kZXgpO1xuICAgICAgICAgICAgaWYgKG5leHRMaW5lQnJlYWsgPT09IC0xKSBuZXh0TGluZUJyZWFrID0gYnVmZmVyLmxlbmd0aDtcbiAgICAgICAgICAgIHZhciBjb2wgPSB0aGlzLmluZGV4IC0gdGhpcy5sYXN0TGluZUJyZWFrO1xuICAgICAgICAgICAgdmFyIGxhc3RMaW5lRGlnaXRzID0gU3RyaW5nKHRoaXMubGluZSkubGVuZ3RoO1xuICAgICAgICAgICAgbWVzc2FnZSArPSBcIiBhdCBsaW5lIFwiICsgdGhpcy5saW5lICsgXCIgY29sIFwiICsgY29sICsgXCI6XFxuXFxuXCI7XG4gICAgICAgICAgICBtZXNzYWdlICs9IGxpbmVzXG4gICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbihsaW5lLCBpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYWQodGhpcy5saW5lIC0gbGluZXMubGVuZ3RoICsgaSArIDEsIGxhc3RMaW5lRGlnaXRzKSArIFwiIFwiICsgbGluZTtcbiAgICAgICAgICAgICAgICB9LCB0aGlzKVxuICAgICAgICAgICAgICAgIC5qb2luKFwiXFxuXCIpO1xuICAgICAgICAgICAgbWVzc2FnZSArPSBcIlxcblwiICsgcGFkKFwiXCIsIGxhc3RMaW5lRGlnaXRzICsgY29sKSArIFwiXlxcblwiO1xuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZSArIFwiIGF0IGluZGV4IFwiICsgKHRoaXMuaW5kZXggLSAxKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHBhZChuLCBsZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBzID0gU3RyaW5nKG4pO1xuICAgICAgICAgICAgcmV0dXJuIEFycmF5KGxlbmd0aCAtIHMubGVuZ3RoICsgMSkuam9pbihcIiBcIikgKyBzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gUGFyc2VyKHJ1bGVzLCBzdGFydCwgb3B0aW9ucykge1xuICAgICAgICBpZiAocnVsZXMgaW5zdGFuY2VvZiBHcmFtbWFyKSB7XG4gICAgICAgICAgICB2YXIgZ3JhbW1hciA9IHJ1bGVzO1xuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSBzdGFydDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBncmFtbWFyID0gR3JhbW1hci5mcm9tQ29tcGlsZWQocnVsZXMsIHN0YXJ0KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdyYW1tYXIgPSBncmFtbWFyO1xuXG4gICAgICAgIC8vIFJlYWQgb3B0aW9uc1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSB7XG4gICAgICAgICAgICBrZWVwSGlzdG9yeTogZmFsc2UsXG4gICAgICAgICAgICBsZXhlcjogZ3JhbW1hci5sZXhlciB8fCBuZXcgU3RyZWFtTGV4ZXIsXG4gICAgICAgIH07XG4gICAgICAgIGZvciAodmFyIGtleSBpbiAob3B0aW9ucyB8fCB7fSkpIHtcbiAgICAgICAgICAgIHRoaXMub3B0aW9uc1trZXldID0gb3B0aW9uc1trZXldO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2V0dXAgbGV4ZXJcbiAgICAgICAgdGhpcy5sZXhlciA9IHRoaXMub3B0aW9ucy5sZXhlcjtcbiAgICAgICAgdGhpcy5sZXhlclN0YXRlID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIC8vIFNldHVwIGEgdGFibGVcbiAgICAgICAgdmFyIGNvbHVtbiA9IG5ldyBDb2x1bW4oZ3JhbW1hciwgMCk7XG4gICAgICAgIHZhciB0YWJsZSA9IHRoaXMudGFibGUgPSBbY29sdW1uXTtcblxuICAgICAgICAvLyBJIGNvdWxkIGJlIGV4cGVjdGluZyBhbnl0aGluZy5cbiAgICAgICAgY29sdW1uLndhbnRzW2dyYW1tYXIuc3RhcnRdID0gW107XG4gICAgICAgIGNvbHVtbi5wcmVkaWN0KGdyYW1tYXIuc3RhcnQpO1xuICAgICAgICAvLyBUT0RPIHdoYXQgaWYgc3RhcnQgcnVsZSBpcyBudWxsYWJsZT9cbiAgICAgICAgY29sdW1uLnByb2Nlc3MoKTtcbiAgICAgICAgdGhpcy5jdXJyZW50ID0gMDsgLy8gdG9rZW4gaW5kZXhcbiAgICB9XG5cbiAgICAvLyBjcmVhdGUgYSByZXNlcnZlZCB0b2tlbiBmb3IgaW5kaWNhdGluZyBhIHBhcnNlIGZhaWxcbiAgICBQYXJzZXIuZmFpbCA9IHt9O1xuXG4gICAgUGFyc2VyLnByb3RvdHlwZS5mZWVkID0gZnVuY3Rpb24oY2h1bmspIHtcbiAgICAgICAgdmFyIGxleGVyID0gdGhpcy5sZXhlcjtcbiAgICAgICAgbGV4ZXIucmVzZXQoY2h1bmssIHRoaXMubGV4ZXJTdGF0ZSk7XG5cbiAgICAgICAgdmFyIHRva2VuO1xuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0b2tlbiA9IGxleGVyLm5leHQoKTtcbiAgICAgICAgICAgICAgICBpZiAoIXRva2VuKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgdGhlIG5leHQgY29sdW1uIHNvIHRoYXQgdGhlIGVycm9yIHJlcG9ydGVyXG4gICAgICAgICAgICAgICAgLy8gY2FuIGRpc3BsYXkgdGhlIGNvcnJlY3RseSBwcmVkaWN0ZWQgc3RhdGVzLlxuICAgICAgICAgICAgICAgIHZhciBuZXh0Q29sdW1uID0gbmV3IENvbHVtbih0aGlzLmdyYW1tYXIsIHRoaXMuY3VycmVudCArIDEpO1xuICAgICAgICAgICAgICAgIHRoaXMudGFibGUucHVzaChuZXh0Q29sdW1uKTtcbiAgICAgICAgICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKHRoaXMucmVwb3J0TGV4ZXJFcnJvcihlKSk7XG4gICAgICAgICAgICAgICAgZXJyLm9mZnNldCA9IHRoaXMuY3VycmVudDtcbiAgICAgICAgICAgICAgICBlcnIudG9rZW4gPSBlLnRva2VuO1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFdlIGFkZCBuZXcgc3RhdGVzIHRvIHRhYmxlW2N1cnJlbnQrMV1cbiAgICAgICAgICAgIHZhciBjb2x1bW4gPSB0aGlzLnRhYmxlW3RoaXMuY3VycmVudF07XG5cbiAgICAgICAgICAgIC8vIEdDIHVudXNlZCBzdGF0ZXNcbiAgICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLmtlZXBIaXN0b3J5KSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMudGFibGVbdGhpcy5jdXJyZW50IC0gMV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBuID0gdGhpcy5jdXJyZW50ICsgMTtcbiAgICAgICAgICAgIHZhciBuZXh0Q29sdW1uID0gbmV3IENvbHVtbih0aGlzLmdyYW1tYXIsIG4pO1xuICAgICAgICAgICAgdGhpcy50YWJsZS5wdXNoKG5leHRDb2x1bW4pO1xuXG4gICAgICAgICAgICAvLyBBZHZhbmNlIGFsbCB0b2tlbnMgdGhhdCBleHBlY3QgdGhlIHN5bWJvbFxuICAgICAgICAgICAgdmFyIGxpdGVyYWwgPSB0b2tlbi50ZXh0ICE9PSB1bmRlZmluZWQgPyB0b2tlbi50ZXh0IDogdG9rZW4udmFsdWU7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBsZXhlci5jb25zdHJ1Y3RvciA9PT0gU3RyZWFtTGV4ZXIgPyB0b2tlbi52YWx1ZSA6IHRva2VuO1xuICAgICAgICAgICAgdmFyIHNjYW5uYWJsZSA9IGNvbHVtbi5zY2FubmFibGU7XG4gICAgICAgICAgICBmb3IgKHZhciB3ID0gc2Nhbm5hYmxlLmxlbmd0aDsgdy0tOyApIHtcbiAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBzY2FubmFibGVbd107XG4gICAgICAgICAgICAgICAgdmFyIGV4cGVjdCA9IHN0YXRlLnJ1bGUuc3ltYm9sc1tzdGF0ZS5kb3RdO1xuICAgICAgICAgICAgICAgIC8vIFRyeSB0byBjb25zdW1lIHRoZSB0b2tlblxuICAgICAgICAgICAgICAgIC8vIGVpdGhlciByZWdleCBvciBsaXRlcmFsXG4gICAgICAgICAgICAgICAgaWYgKGV4cGVjdC50ZXN0ID8gZXhwZWN0LnRlc3QodmFsdWUpIDpcbiAgICAgICAgICAgICAgICAgICAgZXhwZWN0LnR5cGUgPyBleHBlY3QudHlwZSA9PT0gdG9rZW4udHlwZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGV4cGVjdC5saXRlcmFsID09PSBsaXRlcmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEFkZCBpdFxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dCA9IHN0YXRlLm5leHRTdGF0ZSh7ZGF0YTogdmFsdWUsIHRva2VuOiB0b2tlbiwgaXNUb2tlbjogdHJ1ZSwgcmVmZXJlbmNlOiBuIC0gMX0pO1xuICAgICAgICAgICAgICAgICAgICBuZXh0Q29sdW1uLnN0YXRlcy5wdXNoKG5leHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gTmV4dCwgZm9yIGVhY2ggb2YgdGhlIHJ1bGVzLCB3ZSBlaXRoZXJcbiAgICAgICAgICAgIC8vIChhKSBjb21wbGV0ZSBpdCwgYW5kIHRyeSB0byBzZWUgaWYgdGhlIHJlZmVyZW5jZSByb3cgZXhwZWN0ZWQgdGhhdFxuICAgICAgICAgICAgLy8gICAgIHJ1bGVcbiAgICAgICAgICAgIC8vIChiKSBwcmVkaWN0IHRoZSBuZXh0IG5vbnRlcm1pbmFsIGl0IGV4cGVjdHMgYnkgYWRkaW5nIHRoYXRcbiAgICAgICAgICAgIC8vICAgICBub250ZXJtaW5hbCdzIHN0YXJ0IHN0YXRlXG4gICAgICAgICAgICAvLyBUbyBwcmV2ZW50IGR1cGxpY2F0aW9uLCB3ZSBhbHNvIGtlZXAgdHJhY2sgb2YgcnVsZXMgd2UgaGF2ZSBhbHJlYWR5XG4gICAgICAgICAgICAvLyBhZGRlZFxuXG4gICAgICAgICAgICBuZXh0Q29sdW1uLnByb2Nlc3MoKTtcblxuICAgICAgICAgICAgLy8gSWYgbmVlZGVkLCB0aHJvdyBhbiBlcnJvcjpcbiAgICAgICAgICAgIGlmIChuZXh0Q29sdW1uLnN0YXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAvLyBObyBzdGF0ZXMgYXQgYWxsISBUaGlzIGlzIG5vdCBnb29kLlxuICAgICAgICAgICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IodGhpcy5yZXBvcnRFcnJvcih0b2tlbikpO1xuICAgICAgICAgICAgICAgIGVyci5vZmZzZXQgPSB0aGlzLmN1cnJlbnQ7XG4gICAgICAgICAgICAgICAgZXJyLnRva2VuID0gdG9rZW47XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBtYXliZSBzYXZlIGxleGVyIHN0YXRlXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmtlZXBIaXN0b3J5KSB7XG4gICAgICAgICAgICAgIGNvbHVtbi5sZXhlclN0YXRlID0gbGV4ZXIuc2F2ZSgpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuY3VycmVudCsrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb2x1bW4pIHtcbiAgICAgICAgICB0aGlzLmxleGVyU3RhdGUgPSBsZXhlci5zYXZlKClcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEluY3JlbWVudGFsbHkga2VlcCB0cmFjayBvZiByZXN1bHRzXG4gICAgICAgIHRoaXMucmVzdWx0cyA9IHRoaXMuZmluaXNoKCk7XG5cbiAgICAgICAgLy8gQWxsb3cgY2hhaW5pbmcsIGZvciB3aGF0ZXZlciBpdCdzIHdvcnRoXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBQYXJzZXIucHJvdG90eXBlLnJlcG9ydExleGVyRXJyb3IgPSBmdW5jdGlvbihsZXhlckVycm9yKSB7XG4gICAgICAgIHZhciB0b2tlbkRpc3BsYXksIGxleGVyTWVzc2FnZTtcbiAgICAgICAgLy8gUGxhbm5pbmcgdG8gYWRkIGEgdG9rZW4gcHJvcGVydHkgdG8gbW9vJ3MgdGhyb3duIGVycm9yXG4gICAgICAgIC8vIGV2ZW4gb24gZXJyb3JpbmcgdG9rZW5zIHRvIGJlIHVzZWQgaW4gZXJyb3IgZGlzcGxheSBiZWxvd1xuICAgICAgICB2YXIgdG9rZW4gPSBsZXhlckVycm9yLnRva2VuO1xuICAgICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgICAgIHRva2VuRGlzcGxheSA9IFwiaW5wdXQgXCIgKyBKU09OLnN0cmluZ2lmeSh0b2tlbi50ZXh0WzBdKSArIFwiIChsZXhlciBlcnJvcilcIjtcbiAgICAgICAgICAgIGxleGVyTWVzc2FnZSA9IHRoaXMubGV4ZXIuZm9ybWF0RXJyb3IodG9rZW4sIFwiU3ludGF4IGVycm9yXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdG9rZW5EaXNwbGF5ID0gXCJpbnB1dCAobGV4ZXIgZXJyb3IpXCI7XG4gICAgICAgICAgICBsZXhlck1lc3NhZ2UgPSBsZXhlckVycm9yLm1lc3NhZ2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucmVwb3J0RXJyb3JDb21tb24obGV4ZXJNZXNzYWdlLCB0b2tlbkRpc3BsYXkpO1xuICAgIH07XG5cbiAgICBQYXJzZXIucHJvdG90eXBlLnJlcG9ydEVycm9yID0gZnVuY3Rpb24odG9rZW4pIHtcbiAgICAgICAgdmFyIHRva2VuRGlzcGxheSA9ICh0b2tlbi50eXBlID8gdG9rZW4udHlwZSArIFwiIHRva2VuOiBcIiA6IFwiXCIpICsgSlNPTi5zdHJpbmdpZnkodG9rZW4udmFsdWUgIT09IHVuZGVmaW5lZCA/IHRva2VuLnZhbHVlIDogdG9rZW4pO1xuICAgICAgICB2YXIgbGV4ZXJNZXNzYWdlID0gdGhpcy5sZXhlci5mb3JtYXRFcnJvcih0b2tlbiwgXCJTeW50YXggZXJyb3JcIik7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcG9ydEVycm9yQ29tbW9uKGxleGVyTWVzc2FnZSwgdG9rZW5EaXNwbGF5KTtcbiAgICB9O1xuXG4gICAgUGFyc2VyLnByb3RvdHlwZS5yZXBvcnRFcnJvckNvbW1vbiA9IGZ1bmN0aW9uKGxleGVyTWVzc2FnZSwgdG9rZW5EaXNwbGF5KSB7XG4gICAgICAgIHZhciBsaW5lcyA9IFtdO1xuICAgICAgICBsaW5lcy5wdXNoKGxleGVyTWVzc2FnZSk7XG4gICAgICAgIHZhciBsYXN0Q29sdW1uSW5kZXggPSB0aGlzLnRhYmxlLmxlbmd0aCAtIDI7XG4gICAgICAgIHZhciBsYXN0Q29sdW1uID0gdGhpcy50YWJsZVtsYXN0Q29sdW1uSW5kZXhdO1xuICAgICAgICB2YXIgZXhwZWN0YW50U3RhdGVzID0gbGFzdENvbHVtbi5zdGF0ZXNcbiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oc3RhdGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmV4dFN5bWJvbCA9IHN0YXRlLnJ1bGUuc3ltYm9sc1tzdGF0ZS5kb3RdO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0U3ltYm9sICYmIHR5cGVvZiBuZXh0U3ltYm9sICE9PSBcInN0cmluZ1wiO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGV4cGVjdGFudFN0YXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGxpbmVzLnB1c2goJ1VuZXhwZWN0ZWQgJyArIHRva2VuRGlzcGxheSArICcuIEkgZGlkIG5vdCBleHBlY3QgYW55IG1vcmUgaW5wdXQuIEhlcmUgaXMgdGhlIHN0YXRlIG9mIG15IHBhcnNlIHRhYmxlOlxcbicpO1xuICAgICAgICAgICAgdGhpcy5kaXNwbGF5U3RhdGVTdGFjayhsYXN0Q29sdW1uLnN0YXRlcywgbGluZXMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGluZXMucHVzaCgnVW5leHBlY3RlZCAnICsgdG9rZW5EaXNwbGF5ICsgJy4gSW5zdGVhZCwgSSB3YXMgZXhwZWN0aW5nIHRvIHNlZSBvbmUgb2YgdGhlIGZvbGxvd2luZzpcXG4nKTtcbiAgICAgICAgICAgIC8vIERpc3BsYXkgYSBcInN0YXRlIHN0YWNrXCIgZm9yIGVhY2ggZXhwZWN0YW50IHN0YXRlXG4gICAgICAgICAgICAvLyAtIHdoaWNoIHNob3dzIHlvdSBob3cgdGhpcyBzdGF0ZSBjYW1lIHRvIGJlLCBzdGVwIGJ5IHN0ZXAuXG4gICAgICAgICAgICAvLyBJZiB0aGVyZSBpcyBtb3JlIHRoYW4gb25lIGRlcml2YXRpb24sIHdlIG9ubHkgZGlzcGxheSB0aGUgZmlyc3Qgb25lLlxuICAgICAgICAgICAgdmFyIHN0YXRlU3RhY2tzID0gZXhwZWN0YW50U3RhdGVzXG4gICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbihzdGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5idWlsZEZpcnN0U3RhdGVTdGFjayhzdGF0ZSwgW10pIHx8IFtzdGF0ZV07XG4gICAgICAgICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgICAgICAvLyBEaXNwbGF5IGVhY2ggc3RhdGUgdGhhdCBpcyBleHBlY3RpbmcgYSB0ZXJtaW5hbCBzeW1ib2wgbmV4dC5cbiAgICAgICAgICAgIHN0YXRlU3RhY2tzLmZvckVhY2goZnVuY3Rpb24oc3RhdGVTdGFjaykge1xuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IHN0YXRlU3RhY2tbMF07XG4gICAgICAgICAgICAgICAgdmFyIG5leHRTeW1ib2wgPSBzdGF0ZS5ydWxlLnN5bWJvbHNbc3RhdGUuZG90XTtcbiAgICAgICAgICAgICAgICB2YXIgc3ltYm9sRGlzcGxheSA9IHRoaXMuZ2V0U3ltYm9sRGlzcGxheShuZXh0U3ltYm9sKTtcbiAgICAgICAgICAgICAgICBsaW5lcy5wdXNoKCdBICcgKyBzeW1ib2xEaXNwbGF5ICsgJyBiYXNlZCBvbjonKTtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXlTdGF0ZVN0YWNrKHN0YXRlU3RhY2ssIGxpbmVzKTtcbiAgICAgICAgICAgIH0sIHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIGxpbmVzLnB1c2goXCJcIik7XG4gICAgICAgIHJldHVybiBsaW5lcy5qb2luKFwiXFxuXCIpO1xuICAgIH1cbiAgICBcbiAgICBQYXJzZXIucHJvdG90eXBlLmRpc3BsYXlTdGF0ZVN0YWNrID0gZnVuY3Rpb24oc3RhdGVTdGFjaywgbGluZXMpIHtcbiAgICAgICAgdmFyIGxhc3REaXNwbGF5O1xuICAgICAgICB2YXIgc2FtZURpc3BsYXlDb3VudCA9IDA7XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgc3RhdGVTdGFjay5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgdmFyIHN0YXRlID0gc3RhdGVTdGFja1tqXTtcbiAgICAgICAgICAgIHZhciBkaXNwbGF5ID0gc3RhdGUucnVsZS50b1N0cmluZyhzdGF0ZS5kb3QpO1xuICAgICAgICAgICAgaWYgKGRpc3BsYXkgPT09IGxhc3REaXNwbGF5KSB7XG4gICAgICAgICAgICAgICAgc2FtZURpc3BsYXlDb3VudCsrO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoc2FtZURpc3BsYXlDb3VudCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgbGluZXMucHVzaCgnICAgIF4gJyArIHNhbWVEaXNwbGF5Q291bnQgKyAnIG1vcmUgbGluZXMgaWRlbnRpY2FsIHRvIHRoaXMnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2FtZURpc3BsYXlDb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgbGluZXMucHVzaCgnICAgICcgKyBkaXNwbGF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxhc3REaXNwbGF5ID0gZGlzcGxheTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBQYXJzZXIucHJvdG90eXBlLmdldFN5bWJvbERpc3BsYXkgPSBmdW5jdGlvbihzeW1ib2wpIHtcbiAgICAgICAgcmV0dXJuIGdldFN5bWJvbExvbmdEaXNwbGF5KHN5bWJvbCk7XG4gICAgfTtcblxuICAgIC8qXG4gICAgQnVpbGRzIGEgdGhlIGZpcnN0IHN0YXRlIHN0YWNrLiBZb3UgY2FuIHRoaW5rIG9mIGEgc3RhdGUgc3RhY2sgYXMgdGhlIGNhbGwgc3RhY2tcbiAgICBvZiB0aGUgcmVjdXJzaXZlLWRlc2NlbnQgcGFyc2VyIHdoaWNoIHRoZSBOZWFybGV5IHBhcnNlIGFsZ29yaXRobSBzaW11bGF0ZXMuXG4gICAgQSBzdGF0ZSBzdGFjayBpcyByZXByZXNlbnRlZCBhcyBhbiBhcnJheSBvZiBzdGF0ZSBvYmplY3RzLiBXaXRoaW4gYVxuICAgIHN0YXRlIHN0YWNrLCB0aGUgZmlyc3QgaXRlbSBvZiB0aGUgYXJyYXkgd2lsbCBiZSB0aGUgc3RhcnRpbmdcbiAgICBzdGF0ZSwgd2l0aCBlYWNoIHN1Y2Nlc3NpdmUgaXRlbSBpbiB0aGUgYXJyYXkgZ29pbmcgZnVydGhlciBiYWNrIGludG8gaGlzdG9yeS5cblxuICAgIFRoaXMgZnVuY3Rpb24gbmVlZHMgdG8gYmUgZ2l2ZW4gYSBzdGFydGluZyBzdGF0ZSBhbmQgYW4gZW1wdHkgYXJyYXkgcmVwcmVzZW50aW5nXG4gICAgdGhlIHZpc2l0ZWQgc3RhdGVzLCBhbmQgaXQgcmV0dXJucyBhbiBzaW5nbGUgc3RhdGUgc3RhY2suXG5cbiAgICAqL1xuICAgIFBhcnNlci5wcm90b3R5cGUuYnVpbGRGaXJzdFN0YXRlU3RhY2sgPSBmdW5jdGlvbihzdGF0ZSwgdmlzaXRlZCkge1xuICAgICAgICBpZiAodmlzaXRlZC5pbmRleE9mKHN0YXRlKSAhPT0gLTEpIHtcbiAgICAgICAgICAgIC8vIEZvdW5kIGN5Y2xlLCByZXR1cm4gbnVsbFxuICAgICAgICAgICAgLy8gdG8gZWxpbWluYXRlIHRoaXMgcGF0aCBmcm9tIHRoZSByZXN1bHRzLCBiZWNhdXNlXG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBrbm93IGhvdyB0byBkaXNwbGF5IGl0IG1lYW5pbmdmdWxseVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0YXRlLndhbnRlZEJ5Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIFtzdGF0ZV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHByZXZTdGF0ZSA9IHN0YXRlLndhbnRlZEJ5WzBdO1xuICAgICAgICB2YXIgY2hpbGRWaXNpdGVkID0gW3N0YXRlXS5jb25jYXQodmlzaXRlZCk7XG4gICAgICAgIHZhciBjaGlsZFJlc3VsdCA9IHRoaXMuYnVpbGRGaXJzdFN0YXRlU3RhY2socHJldlN0YXRlLCBjaGlsZFZpc2l0ZWQpO1xuICAgICAgICBpZiAoY2hpbGRSZXN1bHQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbc3RhdGVdLmNvbmNhdChjaGlsZFJlc3VsdCk7XG4gICAgfTtcblxuICAgIFBhcnNlci5wcm90b3R5cGUuc2F2ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29sdW1uID0gdGhpcy50YWJsZVt0aGlzLmN1cnJlbnRdO1xuICAgICAgICBjb2x1bW4ubGV4ZXJTdGF0ZSA9IHRoaXMubGV4ZXJTdGF0ZTtcbiAgICAgICAgcmV0dXJuIGNvbHVtbjtcbiAgICB9O1xuXG4gICAgUGFyc2VyLnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24oY29sdW1uKSB7XG4gICAgICAgIHZhciBpbmRleCA9IGNvbHVtbi5pbmRleDtcbiAgICAgICAgdGhpcy5jdXJyZW50ID0gaW5kZXg7XG4gICAgICAgIHRoaXMudGFibGVbaW5kZXhdID0gY29sdW1uO1xuICAgICAgICB0aGlzLnRhYmxlLnNwbGljZShpbmRleCArIDEpO1xuICAgICAgICB0aGlzLmxleGVyU3RhdGUgPSBjb2x1bW4ubGV4ZXJTdGF0ZTtcblxuICAgICAgICAvLyBJbmNyZW1lbnRhbGx5IGtlZXAgdHJhY2sgb2YgcmVzdWx0c1xuICAgICAgICB0aGlzLnJlc3VsdHMgPSB0aGlzLmZpbmlzaCgpO1xuICAgIH07XG5cbiAgICAvLyBuYi4gZGVwcmVjYXRlZDogdXNlIHNhdmUvcmVzdG9yZSBpbnN0ZWFkIVxuICAgIFBhcnNlci5wcm90b3R5cGUucmV3aW5kID0gZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMua2VlcEhpc3RvcnkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignc2V0IG9wdGlvbiBga2VlcEhpc3RvcnlgIHRvIGVuYWJsZSByZXdpbmRpbmcnKVxuICAgICAgICB9XG4gICAgICAgIC8vIG5iLiByZWNhbGwgY29sdW1uICh0YWJsZSkgaW5kaWNpZXMgZmFsbCBiZXR3ZWVuIHRva2VuIGluZGljaWVzLlxuICAgICAgICAvLyAgICAgICAgY29sIDAgICAtLSAgIHRva2VuIDAgICAtLSAgIGNvbCAxXG4gICAgICAgIHRoaXMucmVzdG9yZSh0aGlzLnRhYmxlW2luZGV4XSk7XG4gICAgfTtcblxuICAgIFBhcnNlci5wcm90b3R5cGUuZmluaXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIFJldHVybiB0aGUgcG9zc2libGUgcGFyc2luZ3NcbiAgICAgICAgdmFyIGNvbnNpZGVyYXRpb25zID0gW107XG4gICAgICAgIHZhciBzdGFydCA9IHRoaXMuZ3JhbW1hci5zdGFydDtcbiAgICAgICAgdmFyIGNvbHVtbiA9IHRoaXMudGFibGVbdGhpcy50YWJsZS5sZW5ndGggLSAxXVxuICAgICAgICBjb2x1bW4uc3RhdGVzLmZvckVhY2goZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIGlmICh0LnJ1bGUubmFtZSA9PT0gc3RhcnRcbiAgICAgICAgICAgICAgICAgICAgJiYgdC5kb3QgPT09IHQucnVsZS5zeW1ib2xzLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICAmJiB0LnJlZmVyZW5jZSA9PT0gMFxuICAgICAgICAgICAgICAgICAgICAmJiB0LmRhdGEgIT09IFBhcnNlci5mYWlsKSB7XG4gICAgICAgICAgICAgICAgY29uc2lkZXJhdGlvbnMucHVzaCh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjb25zaWRlcmF0aW9ucy5tYXAoZnVuY3Rpb24oYykge3JldHVybiBjLmRhdGE7IH0pO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBnZXRTeW1ib2xMb25nRGlzcGxheShzeW1ib2wpIHtcbiAgICAgICAgdmFyIHR5cGUgPSB0eXBlb2Ygc3ltYm9sO1xuICAgICAgICBpZiAodHlwZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIHN5bWJvbDtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBpZiAoc3ltYm9sLmxpdGVyYWwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoc3ltYm9sLmxpdGVyYWwpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzeW1ib2wgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2NoYXJhY3RlciBtYXRjaGluZyAnICsgc3ltYm9sO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzeW1ib2wudHlwZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2wudHlwZSArICcgdG9rZW4nO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzeW1ib2wudGVzdCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAndG9rZW4gbWF0Y2hpbmcgJyArIFN0cmluZyhzeW1ib2wudGVzdCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBzeW1ib2wgdHlwZTogJyArIHN5bWJvbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRTeW1ib2xTaG9ydERpc3BsYXkoc3ltYm9sKSB7XG4gICAgICAgIHZhciB0eXBlID0gdHlwZW9mIHN5bWJvbDtcbiAgICAgICAgaWYgKHR5cGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBzeW1ib2w7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgaWYgKHN5bWJvbC5saXRlcmFsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHN5bWJvbC5saXRlcmFsKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc3ltYm9sIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN5bWJvbC50b1N0cmluZygpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzeW1ib2wudHlwZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnJScgKyBzeW1ib2wudHlwZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc3ltYm9sLnRlc3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJzwnICsgU3RyaW5nKHN5bWJvbC50ZXN0KSArICc+JztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHN5bWJvbCB0eXBlOiAnICsgc3ltYm9sKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIFBhcnNlcjogUGFyc2VyLFxuICAgICAgICBHcmFtbWFyOiBHcmFtbWFyLFxuICAgICAgICBSdWxlOiBSdWxlLFxuICAgIH07XG5cbn0pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/nearley/lib/nearley.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/expandPhrases.js":
/*!**********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/expandPhrases.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.expandSinglePhrase = exports.expandPhrases = void 0;\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Performs expandSinglePhrase() on array\n */\nvar expandPhrases = function expandPhrases(phrases) {\n  return phrases.flatMap(expandSinglePhrase);\n};\n/**\n * Expands a syntax description like\n *\n *     \"CREATE [OR REPLACE] [TEMP|TEMPORARY] TABLE\"\n *\n * into an array of all possible combinations like:\n *\n *     [ \"CREATE TABLE\",\n *       \"CREATE TEMP TABLE\",\n *       \"CREATE TEMPORARY TABLE\",\n *       \"CREATE OR REPLACE TABLE\",\n *       \"CREATE OR REPLACE TEMP TABLE\",\n *       \"CREATE OR REPLACE TEMPORARY TABLE\" ]\n */\n\n\nexports.expandPhrases = expandPhrases;\n\nvar expandSinglePhrase = function expandSinglePhrase(phrase) {\n  return buildCombinations(parsePhrase(phrase)).map(function (text) {\n    return text.trim();\n  });\n}; // This data type holds variants of a single part in whole phrase.\n// Corresponding to syntax as follows:\n//\n//   \"TABLE\"            --> [\"TABLE\"]\n//   \"[TABLE]\"          --> [\"\", \"TABLE\"]\n//   \"[TEMP|TEMPORARY]\" --> [\"\", \"TEMP\", \"TEMPORARY\"]\n//   \"{TEMP|TEMPORARY}\" --> [\"TEMP\", \"TEMPORARY\"]\n//\n\n\nexports.expandSinglePhrase = expandSinglePhrase;\nvar REQUIRED_PART = new RegExp(\"[^[\\\\]{}]+\", \"y\");\nvar REQUIRED_BLOCK = new RegExp(\"\\\\{.*?\\\\}\", \"y\");\nvar OPTIONAL_BLOCK = new RegExp(\"\\\\[.*?\\\\]\", \"y\");\n\nvar parsePhrase = function parsePhrase(text) {\n  var index = 0;\n  var result = [];\n\n  while (index < text.length) {\n    // Match everything else outside of \"[...]\" or \"{...}\" blocks\n    REQUIRED_PART.lastIndex = index;\n    var requiredMatch = REQUIRED_PART.exec(text);\n\n    if (requiredMatch) {\n      result.push([requiredMatch[0].trim()]);\n      index += requiredMatch[0].length;\n    } // Match \"[...]\" block\n\n\n    OPTIONAL_BLOCK.lastIndex = index;\n    var optionalBlockMatch = OPTIONAL_BLOCK.exec(text);\n\n    if (optionalBlockMatch) {\n      var choices = optionalBlockMatch[0].slice(1, -1).split('|').map(function (s) {\n        return s.trim();\n      });\n      result.push([''].concat(_toConsumableArray(choices)));\n      index += optionalBlockMatch[0].length;\n    } // Match \"{...}\" block\n\n\n    REQUIRED_BLOCK.lastIndex = index;\n    var requiredBlockMatch = REQUIRED_BLOCK.exec(text);\n\n    if (requiredBlockMatch) {\n      var _choices = requiredBlockMatch[0].slice(1, -1).split('|').map(function (s) {\n        return s.trim();\n      });\n\n      result.push(_choices);\n      index += requiredBlockMatch[0].length;\n    }\n\n    if (!requiredMatch && !optionalBlockMatch && !requiredBlockMatch) {\n      throw new Error(\"Unbalanced parenthesis in: \".concat(text));\n    }\n  }\n\n  return result;\n};\n\nvar buildCombinations = function buildCombinations(_ref) {\n  var _ref2 = _toArray(_ref),\n      first = _ref2[0],\n      rest = _ref2.slice(1);\n\n  if (first === undefined) {\n    return [''];\n  }\n\n  return buildCombinations(rest).flatMap(function (tail) {\n    return first.map(function (head) {\n      return head.trim() + ' ' + tail.trim();\n    });\n  });\n};\n//# sourceMappingURL=expandPhrases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2V4cGFuZFBocmFzZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvZXhwYW5kUGhyYXNlcy5qcz85ZmQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5leHBhbmRTaW5nbGVQaHJhc2UgPSBleHBvcnRzLmV4cGFuZFBocmFzZXMgPSB2b2lkIDA7XG5cbmZ1bmN0aW9uIF90b0FycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfVxuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbi8qKlxuICogUGVyZm9ybXMgZXhwYW5kU2luZ2xlUGhyYXNlKCkgb24gYXJyYXlcbiAqL1xudmFyIGV4cGFuZFBocmFzZXMgPSBmdW5jdGlvbiBleHBhbmRQaHJhc2VzKHBocmFzZXMpIHtcbiAgcmV0dXJuIHBocmFzZXMuZmxhdE1hcChleHBhbmRTaW5nbGVQaHJhc2UpO1xufTtcbi8qKlxuICogRXhwYW5kcyBhIHN5bnRheCBkZXNjcmlwdGlvbiBsaWtlXG4gKlxuICogICAgIFwiQ1JFQVRFIFtPUiBSRVBMQUNFXSBbVEVNUHxURU1QT1JBUlldIFRBQkxFXCJcbiAqXG4gKiBpbnRvIGFuIGFycmF5IG9mIGFsbCBwb3NzaWJsZSBjb21iaW5hdGlvbnMgbGlrZTpcbiAqXG4gKiAgICAgWyBcIkNSRUFURSBUQUJMRVwiLFxuICogICAgICAgXCJDUkVBVEUgVEVNUCBUQUJMRVwiLFxuICogICAgICAgXCJDUkVBVEUgVEVNUE9SQVJZIFRBQkxFXCIsXG4gKiAgICAgICBcIkNSRUFURSBPUiBSRVBMQUNFIFRBQkxFXCIsXG4gKiAgICAgICBcIkNSRUFURSBPUiBSRVBMQUNFIFRFTVAgVEFCTEVcIixcbiAqICAgICAgIFwiQ1JFQVRFIE9SIFJFUExBQ0UgVEVNUE9SQVJZIFRBQkxFXCIgXVxuICovXG5cblxuZXhwb3J0cy5leHBhbmRQaHJhc2VzID0gZXhwYW5kUGhyYXNlcztcblxudmFyIGV4cGFuZFNpbmdsZVBocmFzZSA9IGZ1bmN0aW9uIGV4cGFuZFNpbmdsZVBocmFzZShwaHJhc2UpIHtcbiAgcmV0dXJuIGJ1aWxkQ29tYmluYXRpb25zKHBhcnNlUGhyYXNlKHBocmFzZSkpLm1hcChmdW5jdGlvbiAodGV4dCkge1xuICAgIHJldHVybiB0ZXh0LnRyaW0oKTtcbiAgfSk7XG59OyAvLyBUaGlzIGRhdGEgdHlwZSBob2xkcyB2YXJpYW50cyBvZiBhIHNpbmdsZSBwYXJ0IGluIHdob2xlIHBocmFzZS5cbi8vIENvcnJlc3BvbmRpbmcgdG8gc3ludGF4IGFzIGZvbGxvd3M6XG4vL1xuLy8gICBcIlRBQkxFXCIgICAgICAgICAgICAtLT4gW1wiVEFCTEVcIl1cbi8vICAgXCJbVEFCTEVdXCIgICAgICAgICAgLS0+IFtcIlwiLCBcIlRBQkxFXCJdXG4vLyAgIFwiW1RFTVB8VEVNUE9SQVJZXVwiIC0tPiBbXCJcIiwgXCJURU1QXCIsIFwiVEVNUE9SQVJZXCJdXG4vLyAgIFwie1RFTVB8VEVNUE9SQVJZfVwiIC0tPiBbXCJURU1QXCIsIFwiVEVNUE9SQVJZXCJdXG4vL1xuXG5cbmV4cG9ydHMuZXhwYW5kU2luZ2xlUGhyYXNlID0gZXhwYW5kU2luZ2xlUGhyYXNlO1xudmFyIFJFUVVJUkVEX1BBUlQgPSBuZXcgUmVnRXhwKFwiW15bXFxcXF17fV0rXCIsIFwieVwiKTtcbnZhciBSRVFVSVJFRF9CTE9DSyA9IG5ldyBSZWdFeHAoXCJcXFxcey4qP1xcXFx9XCIsIFwieVwiKTtcbnZhciBPUFRJT05BTF9CTE9DSyA9IG5ldyBSZWdFeHAoXCJcXFxcWy4qP1xcXFxdXCIsIFwieVwiKTtcblxudmFyIHBhcnNlUGhyYXNlID0gZnVuY3Rpb24gcGFyc2VQaHJhc2UodGV4dCkge1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG5cbiAgd2hpbGUgKGluZGV4IDwgdGV4dC5sZW5ndGgpIHtcbiAgICAvLyBNYXRjaCBldmVyeXRoaW5nIGVsc2Ugb3V0c2lkZSBvZiBcIlsuLi5dXCIgb3IgXCJ7Li4ufVwiIGJsb2Nrc1xuICAgIFJFUVVJUkVEX1BBUlQubGFzdEluZGV4ID0gaW5kZXg7XG4gICAgdmFyIHJlcXVpcmVkTWF0Y2ggPSBSRVFVSVJFRF9QQVJULmV4ZWModGV4dCk7XG5cbiAgICBpZiAocmVxdWlyZWRNYXRjaCkge1xuICAgICAgcmVzdWx0LnB1c2goW3JlcXVpcmVkTWF0Y2hbMF0udHJpbSgpXSk7XG4gICAgICBpbmRleCArPSByZXF1aXJlZE1hdGNoWzBdLmxlbmd0aDtcbiAgICB9IC8vIE1hdGNoIFwiWy4uLl1cIiBibG9ja1xuXG5cbiAgICBPUFRJT05BTF9CTE9DSy5sYXN0SW5kZXggPSBpbmRleDtcbiAgICB2YXIgb3B0aW9uYWxCbG9ja01hdGNoID0gT1BUSU9OQUxfQkxPQ0suZXhlYyh0ZXh0KTtcblxuICAgIGlmIChvcHRpb25hbEJsb2NrTWF0Y2gpIHtcbiAgICAgIHZhciBjaG9pY2VzID0gb3B0aW9uYWxCbG9ja01hdGNoWzBdLnNsaWNlKDEsIC0xKS5zcGxpdCgnfCcpLm1hcChmdW5jdGlvbiAocykge1xuICAgICAgICByZXR1cm4gcy50cmltKCk7XG4gICAgICB9KTtcbiAgICAgIHJlc3VsdC5wdXNoKFsnJ10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShjaG9pY2VzKSkpO1xuICAgICAgaW5kZXggKz0gb3B0aW9uYWxCbG9ja01hdGNoWzBdLmxlbmd0aDtcbiAgICB9IC8vIE1hdGNoIFwiey4uLn1cIiBibG9ja1xuXG5cbiAgICBSRVFVSVJFRF9CTE9DSy5sYXN0SW5kZXggPSBpbmRleDtcbiAgICB2YXIgcmVxdWlyZWRCbG9ja01hdGNoID0gUkVRVUlSRURfQkxPQ0suZXhlYyh0ZXh0KTtcblxuICAgIGlmIChyZXF1aXJlZEJsb2NrTWF0Y2gpIHtcbiAgICAgIHZhciBfY2hvaWNlcyA9IHJlcXVpcmVkQmxvY2tNYXRjaFswXS5zbGljZSgxLCAtMSkuc3BsaXQoJ3wnKS5tYXAoZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgcmV0dXJuIHMudHJpbSgpO1xuICAgICAgfSk7XG5cbiAgICAgIHJlc3VsdC5wdXNoKF9jaG9pY2VzKTtcbiAgICAgIGluZGV4ICs9IHJlcXVpcmVkQmxvY2tNYXRjaFswXS5sZW5ndGg7XG4gICAgfVxuXG4gICAgaWYgKCFyZXF1aXJlZE1hdGNoICYmICFvcHRpb25hbEJsb2NrTWF0Y2ggJiYgIXJlcXVpcmVkQmxvY2tNYXRjaCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5iYWxhbmNlZCBwYXJlbnRoZXNpcyBpbjogXCIuY29uY2F0KHRleHQpKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyIGJ1aWxkQ29tYmluYXRpb25zID0gZnVuY3Rpb24gYnVpbGRDb21iaW5hdGlvbnMoX3JlZikge1xuICB2YXIgX3JlZjIgPSBfdG9BcnJheShfcmVmKSxcbiAgICAgIGZpcnN0ID0gX3JlZjJbMF0sXG4gICAgICByZXN0ID0gX3JlZjIuc2xpY2UoMSk7XG5cbiAgaWYgKGZpcnN0ID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gWycnXTtcbiAgfVxuXG4gIHJldHVybiBidWlsZENvbWJpbmF0aW9ucyhyZXN0KS5mbGF0TWFwKGZ1bmN0aW9uICh0YWlsKSB7XG4gICAgcmV0dXJuIGZpcnN0Lm1hcChmdW5jdGlvbiAoaGVhZCkge1xuICAgICAgcmV0dXJuIGhlYWQudHJpbSgpICsgJyAnICsgdGFpbC50cmltKCk7XG4gICAgfSk7XG4gIH0pO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4cGFuZFBocmFzZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/expandPhrases.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/ExpressionFormatter.js":
/*!**************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/ExpressionFormatter.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar _config = __webpack_require__(/*! ./config */ \"../../../../../node_modules/sql-formatter/lib/formatter/config.js\");\n\nvar _token = __webpack_require__(/*! ../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar _ast = __webpack_require__(/*! ../parser/ast */ \"../../../../../node_modules/sql-formatter/lib/parser/ast.js\");\n\nvar _Layout = __webpack_require__(/*! ./Layout */ \"../../../../../node_modules/sql-formatter/lib/formatter/Layout.js\");\n\nvar _tabularStyle = _interopRequireWildcard(__webpack_require__(/*! ./tabularStyle */ \"../../../../../node_modules/sql-formatter/lib/formatter/tabularStyle.js\"));\n\nvar _InlineLayout = _interopRequireWildcard(__webpack_require__(/*! ./InlineLayout */ \"../../../../../node_modules/sql-formatter/lib/formatter/InlineLayout.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** Formats a generic SQL expression */\nvar ExpressionFormatter = /*#__PURE__*/function () {\n  function ExpressionFormatter(_ref) {\n    var cfg = _ref.cfg,\n        params = _ref.params,\n        layout = _ref.layout,\n        _ref$inline = _ref.inline,\n        inline = _ref$inline === void 0 ? false : _ref$inline;\n\n    _classCallCheck(this, ExpressionFormatter);\n\n    _defineProperty(this, \"cfg\", void 0);\n\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"layout\", void 0);\n\n    _defineProperty(this, \"inline\", false);\n\n    _defineProperty(this, \"nodes\", []);\n\n    _defineProperty(this, \"index\", -1);\n\n    this.cfg = cfg;\n    this.inline = inline;\n    this.params = params;\n    this.layout = layout;\n  }\n\n  _createClass(ExpressionFormatter, [{\n    key: \"format\",\n    value: function format(nodes) {\n      this.nodes = nodes;\n\n      for (this.index = 0; this.index < this.nodes.length; this.index++) {\n        this.formatNode(this.nodes[this.index]);\n      }\n\n      return this.layout;\n    }\n  }, {\n    key: \"formatNode\",\n    value: function formatNode(node) {\n      this.formatComments(node.leadingComments);\n      this.formatNodeWithoutComments(node);\n      this.formatComments(node.trailingComments);\n    }\n  }, {\n    key: \"formatNodeWithoutComments\",\n    value: function formatNodeWithoutComments(node) {\n      switch (node.type) {\n        case _ast.NodeType.function_call:\n          return this.formatFunctionCall(node);\n\n        case _ast.NodeType.array_subscript:\n          return this.formatArraySubscript(node);\n\n        case _ast.NodeType.property_access:\n          return this.formatPropertyAccess(node);\n\n        case _ast.NodeType.parenthesis:\n          return this.formatParenthesis(node);\n\n        case _ast.NodeType.between_predicate:\n          return this.formatBetweenPredicate(node);\n\n        case _ast.NodeType.clause:\n          return this.formatClause(node);\n\n        case _ast.NodeType.set_operation:\n          return this.formatSetOperation(node);\n\n        case _ast.NodeType.limit_clause:\n          return this.formatLimitClause(node);\n\n        case _ast.NodeType.all_columns_asterisk:\n          return this.formatAllColumnsAsterisk(node);\n\n        case _ast.NodeType.literal:\n          return this.formatLiteral(node);\n\n        case _ast.NodeType.identifier:\n          return this.formatIdentifier(node);\n\n        case _ast.NodeType.parameter:\n          return this.formatParameter(node);\n\n        case _ast.NodeType.operator:\n          return this.formatOperator(node);\n\n        case _ast.NodeType.comma:\n          return this.formatComma(node);\n\n        case _ast.NodeType.line_comment:\n          return this.formatLineComment(node);\n\n        case _ast.NodeType.block_comment:\n          return this.formatBlockComment(node);\n\n        case _ast.NodeType.keyword:\n          return this.formatKeywordNode(node);\n      }\n    }\n  }, {\n    key: \"formatFunctionCall\",\n    value: function formatFunctionCall(node) {\n      var _this = this;\n\n      this.withComments(node.name, function () {\n        _this.layout.add(_this.showKw(node.name));\n      });\n      this.formatNode(node.parenthesis);\n    }\n  }, {\n    key: \"formatArraySubscript\",\n    value: function formatArraySubscript(node) {\n      var _this2 = this;\n\n      this.withComments(node.array, function () {\n        _this2.layout.add(node.array.type === _ast.NodeType.keyword ? _this2.showKw(node.array) : node.array.text);\n      });\n      this.formatNode(node.parenthesis);\n    }\n  }, {\n    key: \"formatPropertyAccess\",\n    value: function formatPropertyAccess(node) {\n      this.formatNode(node.object);\n      this.layout.add(_Layout.WS.NO_SPACE, '.');\n      this.formatNode(node.property);\n    }\n  }, {\n    key: \"formatParenthesis\",\n    value: function formatParenthesis(node) {\n      var inlineLayout = this.formatInlineExpression(node.children);\n\n      if (inlineLayout) {\n        var _this$layout;\n\n        this.layout.add(node.openParen);\n\n        (_this$layout = this.layout).add.apply(_this$layout, _toConsumableArray(inlineLayout.getLayoutItems()));\n\n        this.layout.add(_Layout.WS.NO_SPACE, node.closeParen, _Layout.WS.SPACE);\n      } else {\n        this.layout.add(node.openParen, _Layout.WS.NEWLINE);\n\n        if ((0, _config.isTabularStyle)(this.cfg)) {\n          this.layout.add(_Layout.WS.INDENT);\n          this.layout = this.formatSubExpression(node.children);\n        } else {\n          this.layout.indentation.increaseBlockLevel();\n          this.layout.add(_Layout.WS.INDENT);\n          this.layout = this.formatSubExpression(node.children);\n          this.layout.indentation.decreaseBlockLevel();\n        }\n\n        this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, node.closeParen, _Layout.WS.SPACE);\n      }\n    }\n  }, {\n    key: \"formatBetweenPredicate\",\n    value: function formatBetweenPredicate(node) {\n      this.layout.add(this.showKw(node.between), _Layout.WS.SPACE);\n      this.layout = this.formatSubExpression(node.expr1);\n      this.layout.add(_Layout.WS.NO_SPACE, _Layout.WS.SPACE, this.showNonTabularKw(node.and), _Layout.WS.SPACE);\n      this.layout = this.formatSubExpression(node.expr2);\n      this.layout.add(_Layout.WS.SPACE);\n    }\n  }, {\n    key: \"formatClause\",\n    value: function formatClause(node) {\n      if ((0, _config.isTabularStyle)(this.cfg)) {\n        this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node.name), _Layout.WS.SPACE);\n      } else {\n        this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node.name), _Layout.WS.NEWLINE);\n      }\n\n      this.layout.indentation.increaseTopLevel();\n\n      if (!(0, _config.isTabularStyle)(this.cfg)) {\n        this.layout.add(_Layout.WS.INDENT);\n      }\n\n      this.layout = this.formatSubExpression(node.children);\n      this.layout.indentation.decreaseTopLevel();\n    }\n  }, {\n    key: \"formatSetOperation\",\n    value: function formatSetOperation(node) {\n      this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node.name), _Layout.WS.NEWLINE);\n      this.layout.add(_Layout.WS.INDENT);\n      this.layout = this.formatSubExpression(node.children);\n    }\n  }, {\n    key: \"formatLimitClause\",\n    value: function formatLimitClause(node) {\n      var _this3 = this;\n\n      this.withComments(node.name, function () {\n        _this3.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, _this3.showKw(node.name));\n      });\n      this.layout.indentation.increaseTopLevel();\n\n      if ((0, _config.isTabularStyle)(this.cfg)) {\n        this.layout.add(_Layout.WS.SPACE);\n      } else {\n        this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT);\n      }\n\n      if (node.offset) {\n        this.layout = this.formatSubExpression(node.offset);\n        this.layout.add(_Layout.WS.NO_SPACE, ',', _Layout.WS.SPACE);\n        this.layout = this.formatSubExpression(node.count);\n      } else {\n        this.layout = this.formatSubExpression(node.count);\n      }\n\n      this.layout.indentation.decreaseTopLevel();\n    }\n  }, {\n    key: \"formatAllColumnsAsterisk\",\n    value: function formatAllColumnsAsterisk(_node) {\n      this.layout.add('*', _Layout.WS.SPACE);\n    }\n  }, {\n    key: \"formatLiteral\",\n    value: function formatLiteral(node) {\n      this.layout.add(node.text, _Layout.WS.SPACE);\n    }\n  }, {\n    key: \"formatIdentifier\",\n    value: function formatIdentifier(node) {\n      this.layout.add(node.text, _Layout.WS.SPACE);\n    }\n  }, {\n    key: \"formatParameter\",\n    value: function formatParameter(node) {\n      this.layout.add(this.params.get(node), _Layout.WS.SPACE);\n    }\n  }, {\n    key: \"formatOperator\",\n    value: function formatOperator(_ref2) {\n      var text = _ref2.text;\n\n      // special operator\n      if (text === ':') {\n        this.layout.add(_Layout.WS.NO_SPACE, text, _Layout.WS.SPACE);\n        return;\n      } else if (text === '::') {\n        this.layout.add(_Layout.WS.NO_SPACE, text);\n        return;\n      } // special case for PLSQL @ dblink syntax\n      else if (text === '@' && this.cfg.language === 'plsql') {\n        this.layout.add(_Layout.WS.NO_SPACE, text);\n        return;\n      } // other operators\n\n\n      if (this.cfg.denseOperators) {\n        this.layout.add(_Layout.WS.NO_SPACE, text);\n      } else {\n        this.layout.add(text, _Layout.WS.SPACE);\n      }\n    }\n  }, {\n    key: \"formatComma\",\n    value: function formatComma(_node) {\n      if (!this.inline) {\n        this.layout.add(_Layout.WS.NO_SPACE, ',', _Layout.WS.NEWLINE, _Layout.WS.INDENT);\n      } else {\n        this.layout.add(_Layout.WS.NO_SPACE, ',', _Layout.WS.SPACE);\n      }\n    }\n  }, {\n    key: \"withComments\",\n    value: function withComments(node, fn) {\n      this.formatComments(node.leadingComments);\n      fn();\n      this.formatComments(node.trailingComments);\n    }\n  }, {\n    key: \"formatComments\",\n    value: function formatComments(comments) {\n      var _this4 = this;\n\n      if (!comments) {\n        return;\n      }\n\n      comments.forEach(function (com) {\n        if (com.type === _ast.NodeType.line_comment) {\n          _this4.formatLineComment(com);\n        } else {\n          _this4.formatBlockComment(com);\n        }\n      });\n    }\n  }, {\n    key: \"formatLineComment\",\n    value: function formatLineComment(node) {\n      if (/\\n/.test(node.precedingWhitespace || '')) {\n        this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, node.text, _Layout.WS.MANDATORY_NEWLINE, _Layout.WS.INDENT);\n      } else {\n        this.layout.add(_Layout.WS.NO_NEWLINE, _Layout.WS.SPACE, node.text, _Layout.WS.MANDATORY_NEWLINE, _Layout.WS.INDENT);\n      }\n    }\n  }, {\n    key: \"formatBlockComment\",\n    value: function formatBlockComment(node) {\n      var _this5 = this;\n\n      this.splitBlockComment(node.text).forEach(function (line) {\n        _this5.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, line);\n      });\n      this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT);\n    } // Breaks up block comment to multiple lines.\n    // For example this comment (dots representing leading whitespace):\n    //\n    //   ..../**\n    //   .....* Some description here\n    //   .....* and here too\n    //   .....*/\n    //\n    // gets broken to this array (note the leading single spaces):\n    //\n    //   [ '/**',\n    //     '.* Some description here',\n    //     '.* and here too',\n    //     '.*/' ]\n    //\n\n  }, {\n    key: \"splitBlockComment\",\n    value: function splitBlockComment(comment) {\n      return comment.split(/\\n/).map(function (line) {\n        if (/^\\s*\\*/.test(line)) {\n          return ' ' + line.replace(/^\\s*/, '');\n        } else {\n          return line.replace(/^\\s*/, '');\n        }\n      });\n    }\n  }, {\n    key: \"formatSubExpression\",\n    value: function formatSubExpression(nodes) {\n      return new ExpressionFormatter({\n        cfg: this.cfg,\n        params: this.params,\n        layout: this.layout,\n        inline: this.inline\n      }).format(nodes);\n    }\n  }, {\n    key: \"formatInlineExpression\",\n    value: function formatInlineExpression(nodes) {\n      var oldParamIndex = this.params.getPositionalParameterIndex();\n\n      try {\n        return new ExpressionFormatter({\n          cfg: this.cfg,\n          params: this.params,\n          layout: new _InlineLayout[\"default\"](this.cfg.expressionWidth),\n          inline: true\n        }).format(nodes);\n      } catch (e) {\n        if (e instanceof _InlineLayout.InlineLayoutError) {\n          // While formatting, some of the positional parameters might have\n          // been consumed, which increased the current parameter index.\n          // We reset the index to an earlier state, so we can run the\n          // formatting again and re-consume these parameters in non-inline mode.\n          this.params.setPositionalParameterIndex(oldParamIndex);\n          return undefined;\n        } else {\n          // forward all unexpected errors\n          throw e;\n        }\n      }\n    }\n  }, {\n    key: \"formatKeywordNode\",\n    value: function formatKeywordNode(node) {\n      switch (node.tokenType) {\n        case _token.TokenType.RESERVED_JOIN:\n          return this.formatJoin(node);\n\n        case _token.TokenType.RESERVED_DEPENDENT_CLAUSE:\n          return this.formatDependentClause(node);\n\n        case _token.TokenType.AND:\n        case _token.TokenType.OR:\n        case _token.TokenType.XOR:\n          return this.formatLogicalOperator(node);\n\n        case _token.TokenType.RESERVED_KEYWORD:\n        case _token.TokenType.RESERVED_FUNCTION_NAME:\n        case _token.TokenType.RESERVED_PHRASE:\n          return this.formatKeyword(node);\n\n        case _token.TokenType.CASE:\n          return this.formatCaseStart(node);\n\n        case _token.TokenType.END:\n          return this.formatCaseEnd(node);\n\n        default:\n          throw new Error(\"Unexpected token type: \".concat(node.tokenType));\n      }\n    }\n  }, {\n    key: \"formatJoin\",\n    value: function formatJoin(node) {\n      if ((0, _config.isTabularStyle)(this.cfg)) {\n        // in tabular style JOINs are at the same level as clauses\n        this.layout.indentation.decreaseTopLevel();\n        this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node), _Layout.WS.SPACE);\n        this.layout.indentation.increaseTopLevel();\n      } else {\n        this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node), _Layout.WS.SPACE);\n      }\n    }\n  }, {\n    key: \"formatKeyword\",\n    value: function formatKeyword(node) {\n      this.layout.add(this.showKw(node), _Layout.WS.SPACE);\n    }\n  }, {\n    key: \"formatDependentClause\",\n    value: function formatDependentClause(node) {\n      this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node), _Layout.WS.SPACE);\n    }\n  }, {\n    key: \"formatLogicalOperator\",\n    value: function formatLogicalOperator(node) {\n      if (this.cfg.logicalOperatorNewline === 'before') {\n        if ((0, _config.isTabularStyle)(this.cfg)) {\n          // In tabular style AND/OR is placed on the same level as clauses\n          this.layout.indentation.decreaseTopLevel();\n          this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node), _Layout.WS.SPACE);\n          this.layout.indentation.increaseTopLevel();\n        } else {\n          this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node), _Layout.WS.SPACE);\n        }\n      } else {\n        this.layout.add(this.showKw(node), _Layout.WS.NEWLINE, _Layout.WS.INDENT);\n      }\n    }\n  }, {\n    key: \"formatCaseStart\",\n    value: function formatCaseStart(node) {\n      this.layout.indentation.increaseBlockLevel();\n      this.layout.add(this.showKw(node), _Layout.WS.NEWLINE, _Layout.WS.INDENT);\n    }\n  }, {\n    key: \"formatCaseEnd\",\n    value: function formatCaseEnd(node) {\n      this.formatMultilineBlockEnd(node);\n    }\n  }, {\n    key: \"formatMultilineBlockEnd\",\n    value: function formatMultilineBlockEnd(node) {\n      this.layout.indentation.decreaseBlockLevel();\n      this.layout.add(_Layout.WS.NEWLINE, _Layout.WS.INDENT, this.showKw(node), _Layout.WS.SPACE);\n    }\n  }, {\n    key: \"showKw\",\n    value: function showKw(node) {\n      if ((0, _tabularStyle.isTabularToken)(node.tokenType)) {\n        return (0, _tabularStyle[\"default\"])(this.showNonTabularKw(node), this.cfg.indentStyle);\n      } else {\n        return this.showNonTabularKw(node);\n      }\n    } // Like showKw(), but skips tabular formatting\n\n  }, {\n    key: \"showNonTabularKw\",\n    value: function showNonTabularKw(node) {\n      switch (this.cfg.keywordCase) {\n        case 'preserve':\n          return (0, _utils.equalizeWhitespace)(node.raw);\n\n        case 'upper':\n          return node.text;\n\n        case 'lower':\n          return node.text.toLowerCase();\n      }\n    }\n  }]);\n\n  return ExpressionFormatter;\n}();\n\nexports[\"default\"] = ExpressionFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=ExpressionFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/ExpressionFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js":
/*!****************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _config = __webpack_require__(/*! ./config */ \"../../../../../node_modules/sql-formatter/lib/formatter/config.js\");\n\nvar _Params = _interopRequireDefault(__webpack_require__(/*! ./Params */ \"../../../../../node_modules/sql-formatter/lib/formatter/Params.js\"));\n\nvar _createParser = __webpack_require__(/*! ../parser/createParser */ \"../../../../../node_modules/sql-formatter/lib/parser/createParser.js\");\n\nvar _formatCommaPositions = _interopRequireDefault(__webpack_require__(/*! ./formatCommaPositions */ \"../../../../../node_modules/sql-formatter/lib/formatter/formatCommaPositions.js\"));\n\nvar _formatAliasPositions = _interopRequireDefault(__webpack_require__(/*! ./formatAliasPositions */ \"../../../../../node_modules/sql-formatter/lib/formatter/formatAliasPositions.js\"));\n\nvar _ExpressionFormatter = _interopRequireDefault(__webpack_require__(/*! ./ExpressionFormatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/ExpressionFormatter.js\"));\n\nvar _Layout = _interopRequireWildcard(__webpack_require__(/*! ./Layout */ \"../../../../../node_modules/sql-formatter/lib/formatter/Layout.js\"));\n\nvar _Indentation = _interopRequireDefault(__webpack_require__(/*! ./Indentation */ \"../../../../../node_modules/sql-formatter/lib/formatter/Indentation.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** Main formatter class that produces a final output string from list of tokens */\nvar Formatter = /*#__PURE__*/function () {\n  function Formatter(cfg) {\n    _classCallCheck(this, Formatter);\n\n    _defineProperty(this, \"cfg\", void 0);\n\n    _defineProperty(this, \"params\", void 0);\n\n    this.cfg = cfg;\n    this.params = new _Params[\"default\"](this.cfg.params);\n  }\n  /**\n   * SQL Tokenizer for this formatter, provided by subclasses.\n   */\n\n\n  _createClass(Formatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      throw new Error('tokenizer() not implemented by subclass');\n    } // Cache the tokenizer for each class (each SQL dialect)\n    // So we wouldn't need to recreate the tokenizer, which is kinda expensive,\n    // for each call to format() function.\n\n  }, {\n    key: \"cachedTokenizer\",\n    value: function cachedTokenizer() {\n      var cls = this.constructor;\n\n      if (!cls.cachedTokenizer) {\n        cls.cachedTokenizer = this.tokenizer();\n      }\n\n      return cls.cachedTokenizer;\n    }\n    /**\n     * Formats an SQL query.\n     * @param {string} query - The SQL query string to be formatted\n     * @return {string} The formatter query\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(query) {\n      var ast = this.parse(query);\n      var formattedQuery = this.formatAst(ast);\n      var finalQuery = this.postFormat(formattedQuery);\n      return finalQuery.trimEnd();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(query) {\n      return (0, _createParser.createParser)(this.cachedTokenizer()).parse(query, this.cfg.paramTypes || {});\n    }\n  }, {\n    key: \"formatAst\",\n    value: function formatAst(statements) {\n      var _this = this;\n\n      return statements.map(function (stat) {\n        return _this.formatStatement(stat);\n      }).join('\\n'.repeat(this.cfg.linesBetweenQueries + 1));\n    }\n  }, {\n    key: \"formatStatement\",\n    value: function formatStatement(statement) {\n      var layout = new _ExpressionFormatter[\"default\"]({\n        cfg: this.cfg,\n        params: this.params,\n        layout: new _Layout[\"default\"](new _Indentation[\"default\"]((0, _config.indentString)(this.cfg)))\n      }).format(statement.children);\n\n      if (!statement.hasSemicolon) {// do nothing\n      } else if (this.cfg.newlineBeforeSemicolon) {\n        layout.add(_Layout.WS.NEWLINE, ';');\n      } else {\n        layout.add(_Layout.WS.NO_NEWLINE, ';');\n      }\n\n      return layout.toString();\n    }\n  }, {\n    key: \"postFormat\",\n    value: function postFormat(query) {\n      if (this.cfg.tabulateAlias) {\n        query = (0, _formatAliasPositions[\"default\"])(query);\n      }\n\n      if (this.cfg.commaPosition === 'before' || this.cfg.commaPosition === 'tabular') {\n        query = (0, _formatCommaPositions[\"default\"])(query, this.cfg.commaPosition, (0, _config.indentString)(this.cfg));\n      }\n\n      return query;\n    }\n  }]);\n\n  return Formatter;\n}();\n\nexports[\"default\"] = Formatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=Formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/Indentation.js":
/*!******************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/Indentation.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar INDENT_TYPE_TOP_LEVEL = 'top-level';\nvar INDENT_TYPE_BLOCK_LEVEL = 'block-level';\n/**\n * Manages indentation levels.\n *\n * There are two types of indentation levels:\n *\n * - BLOCK_LEVEL : increased by open-parenthesis\n * - TOP_LEVEL : increased by RESERVED_COMMAND words\n */\n\nvar Indentation = /*#__PURE__*/function () {\n  /**\n   * @param {string} indent A string to indent with\n   */\n  function Indentation(indent) {\n    _classCallCheck(this, Indentation);\n\n    this.indent = indent;\n\n    _defineProperty(this, \"indentTypes\", []);\n  }\n  /**\n   * Returns indentation string for single indentation step.\n   */\n\n\n  _createClass(Indentation, [{\n    key: \"getSingleIndent\",\n    value: function getSingleIndent() {\n      return this.indent;\n    }\n    /**\n     * Returns current indentation string.\n     * @return {string} indentation string based on indentTypes\n     */\n\n  }, {\n    key: \"getIndent\",\n    value: function getIndent() {\n      return this.indent.repeat(this.indentTypes.length);\n    }\n    /**\n     * Returns current indentation level\n     */\n\n  }, {\n    key: \"getLevel\",\n    value: function getLevel() {\n      return this.indentTypes.length;\n    }\n    /**\n     * Increases indentation by one top-level indent.\n     */\n\n  }, {\n    key: \"increaseTopLevel\",\n    value: function increaseTopLevel() {\n      this.indentTypes.push(INDENT_TYPE_TOP_LEVEL);\n    }\n    /**\n     * Increases indentation by one block-level indent.\n     */\n\n  }, {\n    key: \"increaseBlockLevel\",\n    value: function increaseBlockLevel() {\n      this.indentTypes.push(INDENT_TYPE_BLOCK_LEVEL);\n    }\n    /**\n     * Decreases indentation by one top-level indent.\n     * Does nothing when the previous indent is not top-level.\n     */\n\n  }, {\n    key: \"decreaseTopLevel\",\n    value: function decreaseTopLevel() {\n      if (this.indentTypes.length > 0 && (0, _utils.last)(this.indentTypes) === INDENT_TYPE_TOP_LEVEL) {\n        this.indentTypes.pop();\n      }\n    }\n    /**\n     * Decreases indentation by one block-level indent.\n     * If there are top-level indents within the block-level indent,\n     * throws away these as well.\n     */\n\n  }, {\n    key: \"decreaseBlockLevel\",\n    value: function decreaseBlockLevel() {\n      while (this.indentTypes.length > 0) {\n        var type = this.indentTypes.pop();\n\n        if (type !== INDENT_TYPE_TOP_LEVEL) {\n          break;\n        }\n      }\n    }\n    /** Clears all indentation */\n\n  }, {\n    key: \"resetIndentation\",\n    value: function resetIndentation() {\n      this.indentTypes = [];\n    }\n  }]);\n\n  return Indentation;\n}();\n\nexports[\"default\"] = Indentation;\nmodule.exports = exports.default;\n//# sourceMappingURL=Indentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci9JbmRlbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvZm9ybWF0dGVyL0luZGVudGF0aW9uLmpzPzBlOWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDb25zdHJ1Y3RvciwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogZmFsc2UgfSk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgSU5ERU5UX1RZUEVfVE9QX0xFVkVMID0gJ3RvcC1sZXZlbCc7XG52YXIgSU5ERU5UX1RZUEVfQkxPQ0tfTEVWRUwgPSAnYmxvY2stbGV2ZWwnO1xuLyoqXG4gKiBNYW5hZ2VzIGluZGVudGF0aW9uIGxldmVscy5cbiAqXG4gKiBUaGVyZSBhcmUgdHdvIHR5cGVzIG9mIGluZGVudGF0aW9uIGxldmVsczpcbiAqXG4gKiAtIEJMT0NLX0xFVkVMIDogaW5jcmVhc2VkIGJ5IG9wZW4tcGFyZW50aGVzaXNcbiAqIC0gVE9QX0xFVkVMIDogaW5jcmVhc2VkIGJ5IFJFU0VSVkVEX0NPTU1BTkQgd29yZHNcbiAqL1xuXG52YXIgSW5kZW50YXRpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGluZGVudCBBIHN0cmluZyB0byBpbmRlbnQgd2l0aFxuICAgKi9cbiAgZnVuY3Rpb24gSW5kZW50YXRpb24oaW5kZW50KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEluZGVudGF0aW9uKTtcblxuICAgIHRoaXMuaW5kZW50ID0gaW5kZW50O1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5kZW50VHlwZXNcIiwgW10pO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIGluZGVudGF0aW9uIHN0cmluZyBmb3Igc2luZ2xlIGluZGVudGF0aW9uIHN0ZXAuXG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKEluZGVudGF0aW9uLCBbe1xuICAgIGtleTogXCJnZXRTaW5nbGVJbmRlbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U2luZ2xlSW5kZW50KCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5kZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGN1cnJlbnQgaW5kZW50YXRpb24gc3RyaW5nLlxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gaW5kZW50YXRpb24gc3RyaW5nIGJhc2VkIG9uIGluZGVudFR5cGVzXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJnZXRJbmRlbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0SW5kZW50KCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5kZW50LnJlcGVhdCh0aGlzLmluZGVudFR5cGVzLmxlbmd0aCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgY3VycmVudCBpbmRlbnRhdGlvbiBsZXZlbFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0TGV2ZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TGV2ZWwoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbmRlbnRUeXBlcy5sZW5ndGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEluY3JlYXNlcyBpbmRlbnRhdGlvbiBieSBvbmUgdG9wLWxldmVsIGluZGVudC5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImluY3JlYXNlVG9wTGV2ZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5jcmVhc2VUb3BMZXZlbCgpIHtcbiAgICAgIHRoaXMuaW5kZW50VHlwZXMucHVzaChJTkRFTlRfVFlQRV9UT1BfTEVWRUwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbmNyZWFzZXMgaW5kZW50YXRpb24gYnkgb25lIGJsb2NrLWxldmVsIGluZGVudC5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImluY3JlYXNlQmxvY2tMZXZlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbmNyZWFzZUJsb2NrTGV2ZWwoKSB7XG4gICAgICB0aGlzLmluZGVudFR5cGVzLnB1c2goSU5ERU5UX1RZUEVfQkxPQ0tfTEVWRUwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWNyZWFzZXMgaW5kZW50YXRpb24gYnkgb25lIHRvcC1sZXZlbCBpbmRlbnQuXG4gICAgICogRG9lcyBub3RoaW5nIHdoZW4gdGhlIHByZXZpb3VzIGluZGVudCBpcyBub3QgdG9wLWxldmVsLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZGVjcmVhc2VUb3BMZXZlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZWNyZWFzZVRvcExldmVsKCkge1xuICAgICAgaWYgKHRoaXMuaW5kZW50VHlwZXMubGVuZ3RoID4gMCAmJiAoMCwgX3V0aWxzLmxhc3QpKHRoaXMuaW5kZW50VHlwZXMpID09PSBJTkRFTlRfVFlQRV9UT1BfTEVWRUwpIHtcbiAgICAgICAgdGhpcy5pbmRlbnRUeXBlcy5wb3AoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVjcmVhc2VzIGluZGVudGF0aW9uIGJ5IG9uZSBibG9jay1sZXZlbCBpbmRlbnQuXG4gICAgICogSWYgdGhlcmUgYXJlIHRvcC1sZXZlbCBpbmRlbnRzIHdpdGhpbiB0aGUgYmxvY2stbGV2ZWwgaW5kZW50LFxuICAgICAqIHRocm93cyBhd2F5IHRoZXNlIGFzIHdlbGwuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkZWNyZWFzZUJsb2NrTGV2ZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVjcmVhc2VCbG9ja0xldmVsKCkge1xuICAgICAgd2hpbGUgKHRoaXMuaW5kZW50VHlwZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgdHlwZSA9IHRoaXMuaW5kZW50VHlwZXMucG9wKCk7XG5cbiAgICAgICAgaWYgKHR5cGUgIT09IElOREVOVF9UWVBFX1RPUF9MRVZFTCkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIC8qKiBDbGVhcnMgYWxsIGluZGVudGF0aW9uICovXG5cbiAgfSwge1xuICAgIGtleTogXCJyZXNldEluZGVudGF0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc2V0SW5kZW50YXRpb24oKSB7XG4gICAgICB0aGlzLmluZGVudFR5cGVzID0gW107XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEluZGVudGF0aW9uO1xufSgpO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IEluZGVudGF0aW9uO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmRlbnRhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/Indentation.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/InlineLayout.js":
/*!*******************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/InlineLayout.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.InlineLayoutError = void 0;\n\nvar _Indentation = _interopRequireDefault(__webpack_require__(/*! ./Indentation */ \"../../../../../node_modules/sql-formatter/lib/formatter/Indentation.js\"));\n\nvar _Layout2 = _interopRequireWildcard(__webpack_require__(/*! ./Layout */ \"../../../../../node_modules/sql-formatter/lib/formatter/Layout.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Like Layout, but only formats single-line expressions.\n *\n * Throws InlineLayoutError:\n * - when encountering a newline\n * - when exceeding configured expressionWidth\n */\nvar InlineLayout = /*#__PURE__*/function (_Layout) {\n  _inherits(InlineLayout, _Layout);\n\n  var _super = _createSuper(InlineLayout);\n\n  // Keeps track of the trailing whitespace,\n  // so that we can decrease length when encountering WS.NO_SPACE,\n  // but only when there actually is a space to remove.\n  function InlineLayout(expressionWidth) {\n    var _this;\n\n    _classCallCheck(this, InlineLayout);\n\n    _this = _super.call(this, new _Indentation[\"default\"]('')); // no indentation in inline layout\n\n    _this.expressionWidth = expressionWidth;\n\n    _defineProperty(_assertThisInitialized(_this), \"length\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"trailingSpace\", false);\n\n    return _this;\n  }\n\n  _createClass(InlineLayout, [{\n    key: \"add\",\n    value: function add() {\n      var _this2 = this,\n          _get2;\n\n      for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n        items[_key] = arguments[_key];\n      }\n\n      items.forEach(function (item) {\n        return _this2.addToLength(item);\n      });\n\n      if (this.length > this.expressionWidth) {\n        // We have exceeded the allowable width\n        throw new InlineLayoutError();\n      }\n\n      (_get2 = _get(_getPrototypeOf(InlineLayout.prototype), \"add\", this)).call.apply(_get2, [this].concat(items));\n    }\n  }, {\n    key: \"addToLength\",\n    value: function addToLength(item) {\n      if (typeof item === 'string') {\n        this.length += item.length;\n        this.trailingSpace = false;\n      } else if (item === _Layout2.WS.MANDATORY_NEWLINE || item === _Layout2.WS.NEWLINE) {\n        // newlines not allowed within inline block\n        throw new InlineLayoutError();\n      } else if (item === _Layout2.WS.INDENT || item === _Layout2.WS.SINGLE_INDENT || item === _Layout2.WS.SPACE) {\n        if (!this.trailingSpace) {\n          this.length++;\n          this.trailingSpace = true;\n        }\n      } else if (item === _Layout2.WS.NO_NEWLINE || item === _Layout2.WS.NO_SPACE) {\n        if (this.trailingSpace) {\n          this.trailingSpace = false;\n          this.length--;\n        }\n      }\n    }\n  }]);\n\n  return InlineLayout;\n}(_Layout2[\"default\"]);\n/**\n * Thrown when block of SQL can't be formatted as a single line.\n */\n\n\nexports[\"default\"] = InlineLayout;\n\nvar InlineLayoutError = /*#__PURE__*/function (_Error) {\n  _inherits(InlineLayoutError, _Error);\n\n  var _super2 = _createSuper(InlineLayoutError);\n\n  function InlineLayoutError() {\n    _classCallCheck(this, InlineLayoutError);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return _createClass(InlineLayoutError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.InlineLayoutError = InlineLayoutError;\n//# sourceMappingURL=InlineLayout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/InlineLayout.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/Layout.js":
/*!*************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/Layout.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.WS = void 0;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** Whitespace modifiers to be used with add() method */\nvar WS;\nexports.WS = WS;\n\n(function (WS) {\n  WS[WS[\"SPACE\"] = 0] = \"SPACE\";\n  WS[WS[\"NO_SPACE\"] = 1] = \"NO_SPACE\";\n  WS[WS[\"NO_NEWLINE\"] = 2] = \"NO_NEWLINE\";\n  WS[WS[\"NEWLINE\"] = 3] = \"NEWLINE\";\n  WS[WS[\"MANDATORY_NEWLINE\"] = 4] = \"MANDATORY_NEWLINE\";\n  WS[WS[\"INDENT\"] = 5] = \"INDENT\";\n  WS[WS[\"SINGLE_INDENT\"] = 6] = \"SINGLE_INDENT\";\n})(WS || (exports.WS = WS = {}));\n\n/**\n * API for constructing SQL string (especially the whitespace part).\n *\n * It hides the internal implementation.\n * Originally it used plain string concatenation, which was expensive.\n * Now it's storing items to array and builds the string only in the end.\n */\nvar Layout = /*#__PURE__*/function () {\n  function Layout(indentation) {\n    _classCallCheck(this, Layout);\n\n    this.indentation = indentation;\n\n    _defineProperty(this, \"items\", []);\n  }\n  /**\n   * Appends token strings and whitespace modifications to SQL string.\n   */\n\n\n  _createClass(Layout, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n        items[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _items = items; _i < _items.length; _i++) {\n        var item = _items[_i];\n\n        switch (item) {\n          case WS.SPACE:\n            this.items.push(WS.SPACE);\n            break;\n\n          case WS.NO_SPACE:\n            this.trimHorizontalWhitespace();\n            break;\n\n          case WS.NO_NEWLINE:\n            this.trimWhitespace();\n            break;\n\n          case WS.NEWLINE:\n            this.trimHorizontalWhitespace();\n            this.addNewline(WS.NEWLINE);\n            break;\n\n          case WS.MANDATORY_NEWLINE:\n            this.trimHorizontalWhitespace();\n            this.addNewline(WS.MANDATORY_NEWLINE);\n            break;\n\n          case WS.INDENT:\n            this.addIndentation();\n            break;\n\n          case WS.SINGLE_INDENT:\n            this.items.push(WS.SINGLE_INDENT);\n            break;\n\n          default:\n            this.items.push(item);\n        }\n      }\n    }\n  }, {\n    key: \"trimHorizontalWhitespace\",\n    value: function trimHorizontalWhitespace() {\n      while (isHorizontalWhitespace((0, _utils.last)(this.items))) {\n        this.items.pop();\n      }\n    }\n  }, {\n    key: \"trimWhitespace\",\n    value: function trimWhitespace() {\n      while (isRemovableWhitespace((0, _utils.last)(this.items))) {\n        this.items.pop();\n      }\n    }\n  }, {\n    key: \"addNewline\",\n    value: function addNewline(newline) {\n      if (this.items.length > 0) {\n        switch ((0, _utils.last)(this.items)) {\n          case WS.NEWLINE:\n            this.items.pop();\n            this.items.push(newline);\n            break;\n\n          case WS.MANDATORY_NEWLINE:\n            // keep as is\n            break;\n\n          default:\n            this.items.push(newline);\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"addIndentation\",\n    value: function addIndentation() {\n      for (var i = 0; i < this.indentation.getLevel(); i++) {\n        this.items.push(WS.SINGLE_INDENT);\n      }\n    }\n    /**\n     * Returns the final SQL string.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return this.items.map(function (item) {\n        return _this.itemToString(item);\n      }).join('');\n    }\n    /**\n     * Returns the internal layout data\n     */\n\n  }, {\n    key: \"getLayoutItems\",\n    value: function getLayoutItems() {\n      return this.items;\n    }\n  }, {\n    key: \"itemToString\",\n    value: function itemToString(item) {\n      switch (item) {\n        case WS.SPACE:\n          return ' ';\n\n        case WS.NEWLINE:\n        case WS.MANDATORY_NEWLINE:\n          return '\\n';\n\n        case WS.SINGLE_INDENT:\n          return this.indentation.getSingleIndent();\n\n        default:\n          return item;\n      }\n    }\n  }]);\n\n  return Layout;\n}();\n\nexports[\"default\"] = Layout;\n\nvar isHorizontalWhitespace = function isHorizontalWhitespace(item) {\n  return item === WS.SPACE || item === WS.SINGLE_INDENT;\n};\n\nvar isRemovableWhitespace = function isRemovableWhitespace(item) {\n  return item === WS.SPACE || item === WS.SINGLE_INDENT || item === WS.NEWLINE;\n};\n//# sourceMappingURL=Layout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/Layout.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/Params.js":
/*!*************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/Params.js ***!
  \*************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Handles placeholder replacement with given params.\n */\nvar Params = /*#__PURE__*/function () {\n  function Params(params) {\n    _classCallCheck(this, Params);\n\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"index\", void 0);\n\n    this.params = params;\n    this.index = 0;\n  }\n  /**\n   * Returns param value that matches given placeholder with param key.\n   */\n\n\n  _createClass(Params, [{\n    key: \"get\",\n    value: function get(_ref) {\n      var key = _ref.key,\n          text = _ref.text;\n\n      if (!this.params) {\n        return text;\n      }\n\n      if (key) {\n        return this.params[key];\n      }\n\n      return this.params[this.index++];\n    }\n    /**\n     * Returns index of current positional parameter.\n     */\n\n  }, {\n    key: \"getPositionalParameterIndex\",\n    value: function getPositionalParameterIndex() {\n      return this.index;\n    }\n    /**\n     * Sets index of current positional parameter.\n     */\n\n  }, {\n    key: \"setPositionalParameterIndex\",\n    value: function setPositionalParameterIndex(i) {\n      this.index = i;\n    }\n  }]);\n\n  return Params;\n}();\n\nexports[\"default\"] = Params;\nmodule.exports = exports.default;\n//# sourceMappingURL=Params.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci9QYXJhbXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci9QYXJhbXMuanM/MGY0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbi8qKlxuICogSGFuZGxlcyBwbGFjZWhvbGRlciByZXBsYWNlbWVudCB3aXRoIGdpdmVuIHBhcmFtcy5cbiAqL1xudmFyIFBhcmFtcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFBhcmFtcyhwYXJhbXMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGFyYW1zKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInBhcmFtc1wiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5kZXhcIiwgdm9pZCAwKTtcblxuICAgIHRoaXMucGFyYW1zID0gcGFyYW1zO1xuICAgIHRoaXMuaW5kZXggPSAwO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHBhcmFtIHZhbHVlIHRoYXQgbWF0Y2hlcyBnaXZlbiBwbGFjZWhvbGRlciB3aXRoIHBhcmFtIGtleS5cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUGFyYW1zLCBbe1xuICAgIGtleTogXCJnZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0KF9yZWYpIHtcbiAgICAgIHZhciBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgICB0ZXh0ID0gX3JlZi50ZXh0O1xuXG4gICAgICBpZiAoIXRoaXMucGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0ZXh0O1xuICAgICAgfVxuXG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmFtc1trZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5wYXJhbXNbdGhpcy5pbmRleCsrXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBpbmRleCBvZiBjdXJyZW50IHBvc2l0aW9uYWwgcGFyYW1ldGVyLlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UG9zaXRpb25hbFBhcmFtZXRlckluZGV4XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBvc2l0aW9uYWxQYXJhbWV0ZXJJbmRleCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmluZGV4O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIGluZGV4IG9mIGN1cnJlbnQgcG9zaXRpb25hbCBwYXJhbWV0ZXIuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXRQb3NpdGlvbmFsUGFyYW1ldGVySW5kZXhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0UG9zaXRpb25hbFBhcmFtZXRlckluZGV4KGkpIHtcbiAgICAgIHRoaXMuaW5kZXggPSBpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQYXJhbXM7XG59KCk7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gUGFyYW1zO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJhbXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/Params.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/config.js":
/*!*************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/config.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.indentString = indentString;\nexports.isTabularStyle = isTabularStyle;\n\n// Utility functions for config options\n\n/**\n * Creates a string to use for one step of indentation.\n */\nfunction indentString(cfg) {\n  if (cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight') {\n    return ' '.repeat(10);\n  }\n\n  if (cfg.useTabs) {\n    return '\\t';\n  }\n\n  return ' '.repeat(cfg.tabWidth);\n}\n/**\n * True when indentStyle is one of the tabular ones.\n */\n\n\nfunction isTabularStyle(cfg) {\n  return cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight';\n}\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9mb3JtYXR0ZXIvY29uZmlnLmpzPzc5NjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmluZGVudFN0cmluZyA9IGluZGVudFN0cmluZztcbmV4cG9ydHMuaXNUYWJ1bGFyU3R5bGUgPSBpc1RhYnVsYXJTdHlsZTtcblxuLy8gVXRpbGl0eSBmdW5jdGlvbnMgZm9yIGNvbmZpZyBvcHRpb25zXG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0cmluZyB0byB1c2UgZm9yIG9uZSBzdGVwIG9mIGluZGVudGF0aW9uLlxuICovXG5mdW5jdGlvbiBpbmRlbnRTdHJpbmcoY2ZnKSB7XG4gIGlmIChjZmcuaW5kZW50U3R5bGUgPT09ICd0YWJ1bGFyTGVmdCcgfHwgY2ZnLmluZGVudFN0eWxlID09PSAndGFidWxhclJpZ2h0Jykge1xuICAgIHJldHVybiAnICcucmVwZWF0KDEwKTtcbiAgfVxuXG4gIGlmIChjZmcudXNlVGFicykge1xuICAgIHJldHVybiAnXFx0JztcbiAgfVxuXG4gIHJldHVybiAnICcucmVwZWF0KGNmZy50YWJXaWR0aCk7XG59XG4vKipcbiAqIFRydWUgd2hlbiBpbmRlbnRTdHlsZSBpcyBvbmUgb2YgdGhlIHRhYnVsYXIgb25lcy5cbiAqL1xuXG5cbmZ1bmN0aW9uIGlzVGFidWxhclN0eWxlKGNmZykge1xuICByZXR1cm4gY2ZnLmluZGVudFN0eWxlID09PSAndGFidWxhckxlZnQnIHx8IGNmZy5pbmRlbnRTdHlsZSA9PT0gJ3RhYnVsYXJSaWdodCc7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/config.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/formatAliasPositions.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/formatAliasPositions.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = formatAliasPositions;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Handles select alias placement - tabulates if enabled\n */\nfunction formatAliasPositions(query) {\n  var lines = query.split('\\n');\n  var newQuery = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    // find SELECT rows with trailing comma, if no comma (only one row) - no-op\n    if (lines[i].match(/^\\s*SELECT/i)) {\n      var _ret = function () {\n        var aliasLines = [];\n\n        if (lines[i].match(/.*,$/)) {\n          aliasLines = [lines[i]]; // add select to aliasLines in case of tabular formats\n        } else {\n          newQuery.push(lines[i]); // add select to new query\n\n          if (lines[i].match(/^\\s*SELECT\\s+.+(?!,$)/i)) {\n            return \"continue\";\n          }\n\n          aliasLines.push(lines[++i]);\n        } // get all lines in SELECT clause\n\n\n        while (lines[i++].match(/.*,$/)) {\n          aliasLines.push(lines[i]);\n        } // break lines into alias with optional AS, and all preceding text\n\n\n        var splitLines = aliasLines.map(function (line) {\n          return {\n            line: line,\n            matches: line.match(/(^.*?\\S) (AS )?(\\S+,?$)/i)\n          };\n        }).map(function (_ref) {\n          var line = _ref.line,\n              matches = _ref.matches;\n\n          if (!matches) {\n            return {\n              precedingText: line\n            };\n          }\n\n          return {\n            precedingText: matches[1],\n            as: matches[2],\n            alias: matches[3]\n          };\n        }); // get longest of precedingText, trim trailing comma for non-alias columns\n\n        var aliasMaxLength = (0, _utils.maxLength)(splitLines.map(function (_ref2) {\n          var precedingText = _ref2.precedingText;\n          return precedingText.replace(/\\s*,\\s*$/, '');\n        })); // re-construct line, aligning by inserting space before AS or alias\n\n        aliasLines = splitLines.map(function (_ref3) {\n          var precedingText = _ref3.precedingText,\n              as = _ref3.as,\n              alias = _ref3.alias;\n          return precedingText + (alias ? ' '.repeat(aliasMaxLength - precedingText.length + 1) + (as !== null && as !== void 0 ? as : '') + alias : '');\n        });\n        newQuery = [].concat(_toConsumableArray(newQuery), _toConsumableArray(aliasLines));\n      }();\n\n      if (_ret === \"continue\") continue;\n    }\n\n    newQuery.push(lines[i]);\n  }\n\n  return newQuery.join('\\n');\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=formatAliasPositions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci9mb3JtYXRBbGlhc1Bvc2l0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci9mb3JtYXRBbGlhc1Bvc2l0aW9ucy5qcz8xOGE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBmb3JtYXRBbGlhc1Bvc2l0aW9ucztcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG4vKipcbiAqIEhhbmRsZXMgc2VsZWN0IGFsaWFzIHBsYWNlbWVudCAtIHRhYnVsYXRlcyBpZiBlbmFibGVkXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdEFsaWFzUG9zaXRpb25zKHF1ZXJ5KSB7XG4gIHZhciBsaW5lcyA9IHF1ZXJ5LnNwbGl0KCdcXG4nKTtcbiAgdmFyIG5ld1F1ZXJ5ID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykge1xuICAgIC8vIGZpbmQgU0VMRUNUIHJvd3Mgd2l0aCB0cmFpbGluZyBjb21tYSwgaWYgbm8gY29tbWEgKG9ubHkgb25lIHJvdykgLSBuby1vcFxuICAgIGlmIChsaW5lc1tpXS5tYXRjaCgvXlxccypTRUxFQ1QvaSkpIHtcbiAgICAgIHZhciBfcmV0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYWxpYXNMaW5lcyA9IFtdO1xuXG4gICAgICAgIGlmIChsaW5lc1tpXS5tYXRjaCgvLiosJC8pKSB7XG4gICAgICAgICAgYWxpYXNMaW5lcyA9IFtsaW5lc1tpXV07IC8vIGFkZCBzZWxlY3QgdG8gYWxpYXNMaW5lcyBpbiBjYXNlIG9mIHRhYnVsYXIgZm9ybWF0c1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld1F1ZXJ5LnB1c2gobGluZXNbaV0pOyAvLyBhZGQgc2VsZWN0IHRvIG5ldyBxdWVyeVxuXG4gICAgICAgICAgaWYgKGxpbmVzW2ldLm1hdGNoKC9eXFxzKlNFTEVDVFxccysuKyg/ISwkKS9pKSkge1xuICAgICAgICAgICAgcmV0dXJuIFwiY29udGludWVcIjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBhbGlhc0xpbmVzLnB1c2gobGluZXNbKytpXSk7XG4gICAgICAgIH0gLy8gZ2V0IGFsbCBsaW5lcyBpbiBTRUxFQ1QgY2xhdXNlXG5cblxuICAgICAgICB3aGlsZSAobGluZXNbaSsrXS5tYXRjaCgvLiosJC8pKSB7XG4gICAgICAgICAgYWxpYXNMaW5lcy5wdXNoKGxpbmVzW2ldKTtcbiAgICAgICAgfSAvLyBicmVhayBsaW5lcyBpbnRvIGFsaWFzIHdpdGggb3B0aW9uYWwgQVMsIGFuZCBhbGwgcHJlY2VkaW5nIHRleHRcblxuXG4gICAgICAgIHZhciBzcGxpdExpbmVzID0gYWxpYXNMaW5lcy5tYXAoZnVuY3Rpb24gKGxpbmUpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbGluZTogbGluZSxcbiAgICAgICAgICAgIG1hdGNoZXM6IGxpbmUubWF0Y2goLyheLio/XFxTKSAoQVMgKT8oXFxTKyw/JCkvaSlcbiAgICAgICAgICB9O1xuICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgICAgICB2YXIgbGluZSA9IF9yZWYubGluZSxcbiAgICAgICAgICAgICAgbWF0Y2hlcyA9IF9yZWYubWF0Y2hlcztcblxuICAgICAgICAgIGlmICghbWF0Y2hlcykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgcHJlY2VkaW5nVGV4dDogbGluZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcHJlY2VkaW5nVGV4dDogbWF0Y2hlc1sxXSxcbiAgICAgICAgICAgIGFzOiBtYXRjaGVzWzJdLFxuICAgICAgICAgICAgYWxpYXM6IG1hdGNoZXNbM11cbiAgICAgICAgICB9O1xuICAgICAgICB9KTsgLy8gZ2V0IGxvbmdlc3Qgb2YgcHJlY2VkaW5nVGV4dCwgdHJpbSB0cmFpbGluZyBjb21tYSBmb3Igbm9uLWFsaWFzIGNvbHVtbnNcblxuICAgICAgICB2YXIgYWxpYXNNYXhMZW5ndGggPSAoMCwgX3V0aWxzLm1heExlbmd0aCkoc3BsaXRMaW5lcy5tYXAoZnVuY3Rpb24gKF9yZWYyKSB7XG4gICAgICAgICAgdmFyIHByZWNlZGluZ1RleHQgPSBfcmVmMi5wcmVjZWRpbmdUZXh0O1xuICAgICAgICAgIHJldHVybiBwcmVjZWRpbmdUZXh0LnJlcGxhY2UoL1xccyosXFxzKiQvLCAnJyk7XG4gICAgICAgIH0pKTsgLy8gcmUtY29uc3RydWN0IGxpbmUsIGFsaWduaW5nIGJ5IGluc2VydGluZyBzcGFjZSBiZWZvcmUgQVMgb3IgYWxpYXNcblxuICAgICAgICBhbGlhc0xpbmVzID0gc3BsaXRMaW5lcy5tYXAoZnVuY3Rpb24gKF9yZWYzKSB7XG4gICAgICAgICAgdmFyIHByZWNlZGluZ1RleHQgPSBfcmVmMy5wcmVjZWRpbmdUZXh0LFxuICAgICAgICAgICAgICBhcyA9IF9yZWYzLmFzLFxuICAgICAgICAgICAgICBhbGlhcyA9IF9yZWYzLmFsaWFzO1xuICAgICAgICAgIHJldHVybiBwcmVjZWRpbmdUZXh0ICsgKGFsaWFzID8gJyAnLnJlcGVhdChhbGlhc01heExlbmd0aCAtIHByZWNlZGluZ1RleHQubGVuZ3RoICsgMSkgKyAoYXMgIT09IG51bGwgJiYgYXMgIT09IHZvaWQgMCA/IGFzIDogJycpICsgYWxpYXMgOiAnJyk7XG4gICAgICAgIH0pO1xuICAgICAgICBuZXdRdWVyeSA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkobmV3UXVlcnkpLCBfdG9Db25zdW1hYmxlQXJyYXkoYWxpYXNMaW5lcykpO1xuICAgICAgfSgpO1xuXG4gICAgICBpZiAoX3JldCA9PT0gXCJjb250aW51ZVwiKSBjb250aW51ZTtcbiAgICB9XG5cbiAgICBuZXdRdWVyeS5wdXNoKGxpbmVzW2ldKTtcbiAgfVxuXG4gIHJldHVybiBuZXdRdWVyeS5qb2luKCdcXG4nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXRBbGlhc1Bvc2l0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/formatAliasPositions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/formatCommaPositions.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/formatCommaPositions.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = formatCommaPositions;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar PRECEDING_WHITESPACE_REGEX = /^[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+/;\n/**\n * Handles comma placement - either before, after or tabulated\n */\n\nfunction formatCommaPositions(query, commaPosition, indent) {\n  return groupCommaDelimitedLines(query.split('\\n')).flatMap(function (commaLines) {\n    if (commaLines.length === 1) {\n      return commaLines;\n    } else if (commaPosition === 'tabular') {\n      return formatTabular(commaLines);\n    } else if (commaPosition === 'before') {\n      return formatBefore(commaLines, indent);\n    } else {\n      throw new Error(\"Unexpected commaPosition: \".concat(commaPosition));\n    }\n  }).join('\\n');\n}\n/**\n * Given lines like this:\n *\n *     [\n *       'SELECT',\n *       '  foo,',\n *       '  bar,',\n *       '  baz',\n *       'FROM'\n *     ]\n *\n * Returns groups like this:\n *\n *     [\n *       ['SELECT'],\n *       ['  foo,', '  bar,', '  baz'],\n *       ['FROM']\n *     ]\n */\n\n\nfunction groupCommaDelimitedLines(lines) {\n  var groups = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var group = [lines[i]]; // when line ends with comma,\n    // gather together all following lines that also end with comma,\n    // plus one (which doesn't end with comma)\n\n    while (lines[i].match(/.*,$/)) {\n      i++;\n      group.push(lines[i]);\n    }\n\n    groups.push(group);\n  }\n\n  return groups;\n} // makes all lines the same length by appending spaces before comma\n\n\nfunction formatTabular(commaLines) {\n  var maxLineLength = (0, _utils.maxLength)(commaLines);\n  return trimTrailingCommas(commaLines).map(function (line, i) {\n    if (i === commaLines.length - 1) {\n      return line; // do not add comma for last item\n    }\n\n    return line + ' '.repeat(maxLineLength - line.length - 1) + ',';\n  });\n}\n\nfunction formatBefore(commaLines, indent) {\n  return trimTrailingCommas(commaLines).map(function (line, i) {\n    if (i === 0) {\n      return line; // do not add comma for first item\n    }\n\n    var _ref = line.match(PRECEDING_WHITESPACE_REGEX) || [''],\n        _ref2 = _slicedToArray(_ref, 1),\n        whitespace = _ref2[0];\n\n    return removeLastIndent(whitespace, indent) + indent.replace(/ {2}$/, ', ') + // add comma to the end of last indent\n    line.trimStart();\n  });\n}\n\nfunction removeLastIndent(whitespace, indent) {\n  return whitespace.replace(new RegExp(indent + '$'), '');\n}\n\nfunction trimTrailingCommas(lines) {\n  return lines.map(function (line) {\n    return line.replace(/,$/, '');\n  });\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=formatCommaPositions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci9mb3JtYXRDb21tYVBvc2l0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvZm9ybWF0dGVyL2Zvcm1hdENvbW1hUG9zaXRpb25zLmpzPzZkMmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGZvcm1hdENvbW1hUG9zaXRpb25zO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBhcnIgPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl07IGlmIChfaSA9PSBudWxsKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX3MsIF9lOyB0cnkgeyBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbnZhciBQUkVDRURJTkdfV0hJVEVTUEFDRV9SRUdFWCA9IC9eW1xcdC1cXHIgXFx4QTBcXHUxNjgwXFx1MjAwMC1cXHUyMDBBXFx1MjAyOFxcdTIwMjlcXHUyMDJGXFx1MjA1RlxcdTMwMDBcXHVGRUZGXSsvO1xuLyoqXG4gKiBIYW5kbGVzIGNvbW1hIHBsYWNlbWVudCAtIGVpdGhlciBiZWZvcmUsIGFmdGVyIG9yIHRhYnVsYXRlZFxuICovXG5cbmZ1bmN0aW9uIGZvcm1hdENvbW1hUG9zaXRpb25zKHF1ZXJ5LCBjb21tYVBvc2l0aW9uLCBpbmRlbnQpIHtcbiAgcmV0dXJuIGdyb3VwQ29tbWFEZWxpbWl0ZWRMaW5lcyhxdWVyeS5zcGxpdCgnXFxuJykpLmZsYXRNYXAoZnVuY3Rpb24gKGNvbW1hTGluZXMpIHtcbiAgICBpZiAoY29tbWFMaW5lcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHJldHVybiBjb21tYUxpbmVzO1xuICAgIH0gZWxzZSBpZiAoY29tbWFQb3NpdGlvbiA9PT0gJ3RhYnVsYXInKSB7XG4gICAgICByZXR1cm4gZm9ybWF0VGFidWxhcihjb21tYUxpbmVzKTtcbiAgICB9IGVsc2UgaWYgKGNvbW1hUG9zaXRpb24gPT09ICdiZWZvcmUnKSB7XG4gICAgICByZXR1cm4gZm9ybWF0QmVmb3JlKGNvbW1hTGluZXMsIGluZGVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgY29tbWFQb3NpdGlvbjogXCIuY29uY2F0KGNvbW1hUG9zaXRpb24pKTtcbiAgICB9XG4gIH0pLmpvaW4oJ1xcbicpO1xufVxuLyoqXG4gKiBHaXZlbiBsaW5lcyBsaWtlIHRoaXM6XG4gKlxuICogICAgIFtcbiAqICAgICAgICdTRUxFQ1QnLFxuICogICAgICAgJyAgZm9vLCcsXG4gKiAgICAgICAnICBiYXIsJyxcbiAqICAgICAgICcgIGJheicsXG4gKiAgICAgICAnRlJPTSdcbiAqICAgICBdXG4gKlxuICogUmV0dXJucyBncm91cHMgbGlrZSB0aGlzOlxuICpcbiAqICAgICBbXG4gKiAgICAgICBbJ1NFTEVDVCddLFxuICogICAgICAgWycgIGZvbywnLCAnICBiYXIsJywgJyAgYmF6J10sXG4gKiAgICAgICBbJ0ZST00nXVxuICogICAgIF1cbiAqL1xuXG5cbmZ1bmN0aW9uIGdyb3VwQ29tbWFEZWxpbWl0ZWRMaW5lcyhsaW5lcykge1xuICB2YXIgZ3JvdXBzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBncm91cCA9IFtsaW5lc1tpXV07IC8vIHdoZW4gbGluZSBlbmRzIHdpdGggY29tbWEsXG4gICAgLy8gZ2F0aGVyIHRvZ2V0aGVyIGFsbCBmb2xsb3dpbmcgbGluZXMgdGhhdCBhbHNvIGVuZCB3aXRoIGNvbW1hLFxuICAgIC8vIHBsdXMgb25lICh3aGljaCBkb2Vzbid0IGVuZCB3aXRoIGNvbW1hKVxuXG4gICAgd2hpbGUgKGxpbmVzW2ldLm1hdGNoKC8uKiwkLykpIHtcbiAgICAgIGkrKztcbiAgICAgIGdyb3VwLnB1c2gobGluZXNbaV0pO1xuICAgIH1cblxuICAgIGdyb3Vwcy5wdXNoKGdyb3VwKTtcbiAgfVxuXG4gIHJldHVybiBncm91cHM7XG59IC8vIG1ha2VzIGFsbCBsaW5lcyB0aGUgc2FtZSBsZW5ndGggYnkgYXBwZW5kaW5nIHNwYWNlcyBiZWZvcmUgY29tbWFcblxuXG5mdW5jdGlvbiBmb3JtYXRUYWJ1bGFyKGNvbW1hTGluZXMpIHtcbiAgdmFyIG1heExpbmVMZW5ndGggPSAoMCwgX3V0aWxzLm1heExlbmd0aCkoY29tbWFMaW5lcyk7XG4gIHJldHVybiB0cmltVHJhaWxpbmdDb21tYXMoY29tbWFMaW5lcykubWFwKGZ1bmN0aW9uIChsaW5lLCBpKSB7XG4gICAgaWYgKGkgPT09IGNvbW1hTGluZXMubGVuZ3RoIC0gMSkge1xuICAgICAgcmV0dXJuIGxpbmU7IC8vIGRvIG5vdCBhZGQgY29tbWEgZm9yIGxhc3QgaXRlbVxuICAgIH1cblxuICAgIHJldHVybiBsaW5lICsgJyAnLnJlcGVhdChtYXhMaW5lTGVuZ3RoIC0gbGluZS5sZW5ndGggLSAxKSArICcsJztcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdEJlZm9yZShjb21tYUxpbmVzLCBpbmRlbnQpIHtcbiAgcmV0dXJuIHRyaW1UcmFpbGluZ0NvbW1hcyhjb21tYUxpbmVzKS5tYXAoZnVuY3Rpb24gKGxpbmUsIGkpIHtcbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgcmV0dXJuIGxpbmU7IC8vIGRvIG5vdCBhZGQgY29tbWEgZm9yIGZpcnN0IGl0ZW1cbiAgICB9XG5cbiAgICB2YXIgX3JlZiA9IGxpbmUubWF0Y2goUFJFQ0VESU5HX1dISVRFU1BBQ0VfUkVHRVgpIHx8IFsnJ10sXG4gICAgICAgIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMSksXG4gICAgICAgIHdoaXRlc3BhY2UgPSBfcmVmMlswXTtcblxuICAgIHJldHVybiByZW1vdmVMYXN0SW5kZW50KHdoaXRlc3BhY2UsIGluZGVudCkgKyBpbmRlbnQucmVwbGFjZSgvIHsyfSQvLCAnLCAnKSArIC8vIGFkZCBjb21tYSB0byB0aGUgZW5kIG9mIGxhc3QgaW5kZW50XG4gICAgbGluZS50cmltU3RhcnQoKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUxhc3RJbmRlbnQod2hpdGVzcGFjZSwgaW5kZW50KSB7XG4gIHJldHVybiB3aGl0ZXNwYWNlLnJlcGxhY2UobmV3IFJlZ0V4cChpbmRlbnQgKyAnJCcpLCAnJyk7XG59XG5cbmZ1bmN0aW9uIHRyaW1UcmFpbGluZ0NvbW1hcyhsaW5lcykge1xuICByZXR1cm4gbGluZXMubWFwKGZ1bmN0aW9uIChsaW5lKSB7XG4gICAgcmV0dXJuIGxpbmUucmVwbGFjZSgvLCQvLCAnJyk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1hdENvbW1hUG9zaXRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/formatCommaPositions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/formatter/tabularStyle.js":
/*!*******************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/formatter/tabularStyle.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = toTabularFormat;\nexports.isTabularToken = isTabularToken;\n\nvar _token = __webpack_require__(/*! ../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * When tabular style enabled,\n * produces a 10-char wide version of token text.\n */\nfunction toTabularFormat(tokenText, indentStyle) {\n  if (indentStyle === 'standard') {\n    return tokenText;\n  }\n\n  var tail = []; // rest of keyword\n\n  if (tokenText.length >= 10 && tokenText.includes(' ')) {\n    // split for long keywords like INNER JOIN or UNION DISTINCT\n    var _tokenText$split = tokenText.split(' ');\n\n    var _tokenText$split2 = _toArray(_tokenText$split);\n\n    tokenText = _tokenText$split2[0];\n    tail = _tokenText$split2.slice(1);\n  }\n\n  if (indentStyle === 'tabularLeft') {\n    tokenText = tokenText.padEnd(9, ' ');\n  } else {\n    tokenText = tokenText.padStart(9, ' ');\n  }\n\n  return tokenText + [''].concat(_toConsumableArray(tail)).join(' ');\n}\n/**\n * True when the token can be formatted in tabular style\n */\n\n\nfunction isTabularToken(type) {\n  return (0, _token.isLogicalOperator)(type) || type === _token.TokenType.RESERVED_DEPENDENT_CLAUSE || type === _token.TokenType.RESERVED_COMMAND || type === _token.TokenType.RESERVED_SELECT || type === _token.TokenType.RESERVED_SET_OPERATION || type === _token.TokenType.RESERVED_JOIN || type === _token.TokenType.LIMIT;\n}\n//# sourceMappingURL=tabularStyle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2Zvcm1hdHRlci90YWJ1bGFyU3R5bGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9mb3JtYXR0ZXIvdGFidWxhclN0eWxlLmpzPzFjYzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHRvVGFidWxhckZvcm1hdDtcbmV4cG9ydHMuaXNUYWJ1bGFyVG9rZW4gPSBpc1RhYnVsYXJUb2tlbjtcblxudmFyIF90b2tlbiA9IHJlcXVpcmUoXCIuLi9sZXhlci90b2tlblwiKTtcblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTsgfVxuXG5mdW5jdGlvbiBfdG9BcnJheShhcnIpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxuLyoqXG4gKiBXaGVuIHRhYnVsYXIgc3R5bGUgZW5hYmxlZCxcbiAqIHByb2R1Y2VzIGEgMTAtY2hhciB3aWRlIHZlcnNpb24gb2YgdG9rZW4gdGV4dC5cbiAqL1xuZnVuY3Rpb24gdG9UYWJ1bGFyRm9ybWF0KHRva2VuVGV4dCwgaW5kZW50U3R5bGUpIHtcbiAgaWYgKGluZGVudFN0eWxlID09PSAnc3RhbmRhcmQnKSB7XG4gICAgcmV0dXJuIHRva2VuVGV4dDtcbiAgfVxuXG4gIHZhciB0YWlsID0gW107IC8vIHJlc3Qgb2Yga2V5d29yZFxuXG4gIGlmICh0b2tlblRleHQubGVuZ3RoID49IDEwICYmIHRva2VuVGV4dC5pbmNsdWRlcygnICcpKSB7XG4gICAgLy8gc3BsaXQgZm9yIGxvbmcga2V5d29yZHMgbGlrZSBJTk5FUiBKT0lOIG9yIFVOSU9OIERJU1RJTkNUXG4gICAgdmFyIF90b2tlblRleHQkc3BsaXQgPSB0b2tlblRleHQuc3BsaXQoJyAnKTtcblxuICAgIHZhciBfdG9rZW5UZXh0JHNwbGl0MiA9IF90b0FycmF5KF90b2tlblRleHQkc3BsaXQpO1xuXG4gICAgdG9rZW5UZXh0ID0gX3Rva2VuVGV4dCRzcGxpdDJbMF07XG4gICAgdGFpbCA9IF90b2tlblRleHQkc3BsaXQyLnNsaWNlKDEpO1xuICB9XG5cbiAgaWYgKGluZGVudFN0eWxlID09PSAndGFidWxhckxlZnQnKSB7XG4gICAgdG9rZW5UZXh0ID0gdG9rZW5UZXh0LnBhZEVuZCg5LCAnICcpO1xuICB9IGVsc2Uge1xuICAgIHRva2VuVGV4dCA9IHRva2VuVGV4dC5wYWRTdGFydCg5LCAnICcpO1xuICB9XG5cbiAgcmV0dXJuIHRva2VuVGV4dCArIFsnJ10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0YWlsKSkuam9pbignICcpO1xufVxuLyoqXG4gKiBUcnVlIHdoZW4gdGhlIHRva2VuIGNhbiBiZSBmb3JtYXR0ZWQgaW4gdGFidWxhciBzdHlsZVxuICovXG5cblxuZnVuY3Rpb24gaXNUYWJ1bGFyVG9rZW4odHlwZSkge1xuICByZXR1cm4gKDAsIF90b2tlbi5pc0xvZ2ljYWxPcGVyYXRvcikodHlwZSkgfHwgdHlwZSA9PT0gX3Rva2VuLlRva2VuVHlwZS5SRVNFUlZFRF9ERVBFTkRFTlRfQ0xBVVNFIHx8IHR5cGUgPT09IF90b2tlbi5Ub2tlblR5cGUuUkVTRVJWRURfQ09NTUFORCB8fCB0eXBlID09PSBfdG9rZW4uVG9rZW5UeXBlLlJFU0VSVkVEX1NFTEVDVCB8fCB0eXBlID09PSBfdG9rZW4uVG9rZW5UeXBlLlJFU0VSVkVEX1NFVF9PUEVSQVRJT04gfHwgdHlwZSA9PT0gX3Rva2VuLlRva2VuVHlwZS5SRVNFUlZFRF9KT0lOIHx8IHR5cGUgPT09IF90b2tlbi5Ub2tlblR5cGUuTElNSVQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10YWJ1bGFyU3R5bGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/formatter/tabularStyle.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/index.js":
/*!**************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Formatter: true,\n  Tokenizer: true,\n  expandPhrases: true\n};\nObject.defineProperty(exports, \"Formatter\", ({\n  enumerable: true,\n  get: function get() {\n    return _Formatter[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"Tokenizer\", ({\n  enumerable: true,\n  get: function get() {\n    return _Tokenizer[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"expandPhrases\", ({\n  enumerable: true,\n  get: function get() {\n    return _expandPhrases.expandPhrases;\n  }\n}));\n\nvar _sqlFormatter = __webpack_require__(/*! ./sqlFormatter */ \"../../../../../node_modules/sql-formatter/lib/sqlFormatter.js\");\n\nObject.keys(_sqlFormatter).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _sqlFormatter[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sqlFormatter[key];\n    }\n  });\n});\n\nvar _Formatter = _interopRequireDefault(__webpack_require__(/*! ./formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ./lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _expandPhrases = __webpack_require__(/*! ./expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvaW5kZXguanM/ZmU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7XG4gIEZvcm1hdHRlcjogdHJ1ZSxcbiAgVG9rZW5pemVyOiB0cnVlLFxuICBleHBhbmRQaHJhc2VzOiB0cnVlXG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRm9ybWF0dGVyXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9Gb3JtYXR0ZXJbXCJkZWZhdWx0XCJdO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRva2VuaXplclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfVG9rZW5pemVyW1wiZGVmYXVsdFwiXTtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleHBhbmRQaHJhc2VzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9leHBhbmRQaHJhc2VzLmV4cGFuZFBocmFzZXM7XG4gIH1cbn0pO1xuXG52YXIgX3NxbEZvcm1hdHRlciA9IHJlcXVpcmUoXCIuL3NxbEZvcm1hdHRlclwiKTtcblxuT2JqZWN0LmtleXMoX3NxbEZvcm1hdHRlcikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3NxbEZvcm1hdHRlcltrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9zcWxGb3JtYXR0ZXJba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbnZhciBfRm9ybWF0dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9mb3JtYXR0ZXIvRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Ub2tlbml6ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xleGVyL1Rva2VuaXplclwiKSk7XG5cbnZhciBfZXhwYW5kUGhyYXNlcyA9IHJlcXVpcmUoXCIuL2V4cGFuZFBocmFzZXNcIik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/index.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.formatter.js":
/*!**********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.formatter.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _token = __webpack_require__(/*! ../../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _bigquery = __webpack_require__(/*! ./bigquery.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.keywords.js\");\n\nvar _bigquery2 = __webpack_require__(/*! ./bigquery.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.functions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// Queries: https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'QUALIFY', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'OMIT RECORD IF', // legacy\n// Data modification: https://cloud.google.com/bigquery/docs/reference/standard-sql/dml-syntax\n// - insert:\n'INSERT [INTO]', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE TABLE', // - merge:\n'MERGE [INTO]', 'WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]', 'UPDATE SET', // Data definition, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n'CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]', 'CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]', 'DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE [IF EXISTS]', 'ADD COLUMN [IF NOT EXISTS]', 'DROP COLUMN [IF EXISTS]', 'RENAME TO', 'ALTER COLUMN [IF EXISTS]', 'SET DEFAULT COLLATE', // for alter column\n'SET OPTIONS', // for alter column\n'DROP NOT NULL', // for alter column\n'SET DATA TYPE', // for alter column\n'CREATE SCHEMA [IF NOT EXISTS]', 'DEFAULT COLLATE', 'CLUSTER BY', 'FOR SYSTEM_TIME AS OF', // CREATE SNAPSHOT TABLE\n'WITH CONNECTION', 'WITH PARTITION COLUMNS', 'CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]', 'REMOTE WITH CONNECTION', 'RETURNS TABLE', 'CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]', 'CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]', 'GRANT TO', 'FILTER USING', 'CREATE CAPACITY', 'AS JSON', 'CREATE RESERVATION', 'CREATE ASSIGNMENT', 'CREATE SEARCH INDEX [IF NOT EXISTS]', 'ALTER SCHEMA [IF EXISTS]', 'ALTER [MATERIALIZED] VIEW [IF EXISTS]', 'ALTER BI_CAPACITY', 'DROP SCHEMA [IF EXISTS]', 'DROP [MATERIALIZED] VIEW [IF EXISTS]', 'DROP [TABLE] FUNCTION [IF EXISTS]', 'DROP PROCEDURE [IF EXISTS]', 'DROP ROW ACCESS POLICY', 'DROP ALL ROW ACCESS POLICIES', 'DROP CAPACITY [IF EXISTS]', 'DROP RESERVATION [IF EXISTS]', 'DROP ASSIGNMENT [IF EXISTS]', 'DROP SEARCH INDEX [IF EXISTS]', 'DROP [IF EXISTS]', // DCL, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-control-language\n'GRANT', 'REVOKE', // Script, https://cloud.google.com/bigquery/docs/reference/standard-sql/scripting\n'DECLARE', 'EXECUTE IMMEDIATE', 'LOOP', 'END LOOP', 'REPEAT', 'END REPEAT', 'WHILE', 'END WHILE', 'BREAK', 'LEAVE', 'CONTINUE', 'ITERATE', 'FOR', 'END FOR', 'BEGIN', 'BEGIN TRANSACTION', 'COMMIT TRANSACTION', 'ROLLBACK TRANSACTION', 'RAISE', 'RETURN', 'CALL', // Debug, https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging-statements\n'ASSERT', // Other, https://cloud.google.com/bigquery/docs/reference/standard-sql/other-statements\n'EXPORT DATA']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION {ALL | DISTINCT}', 'EXCEPT DISTINCT', 'INTERSECT DISTINCT']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)([// https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#tablesample_operator\n'TABLESAMPLE SYSTEM', // From DDL: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n'ANY TYPE', 'ALL COLUMNS', 'NOT DETERMINISTIC', // inside window definitions\n'{ROWS | RANGE} BETWEEN']); // https://cloud.google.com/bigquery/docs/reference/#standard-sql-reference\n\nvar BigQueryFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(BigQueryFormatter, _Formatter);\n\n  var _super = _createSuper(BigQueryFormatter);\n\n  function BigQueryFormatter() {\n    _classCallCheck(this, BigQueryFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BigQueryFormatter, [{\n    key: \"tokenizer\",\n    value: // TODO: handle trailing comma in select clause\n    function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _bigquery.keywords,\n        reservedFunctionNames: _bigquery2.functions,\n        extraParens: ['[]'],\n        stringTypes: [// The triple-quoted strings are listed first, so they get matched first.\n        // Otherwise the first two quotes of \"\"\" will get matched as an empty \"\" string.\n        {\n          quote: '\"\"\"..\"\"\"',\n          prefixes: ['R', 'B', 'RB', 'BR']\n        }, {\n          quote: \"'''..'''\",\n          prefixes: ['R', 'B', 'RB', 'BR']\n        }, '\"\"-bs', \"''-bs\", {\n          quote: '\"\"-raw',\n          prefixes: ['R', 'B', 'RB', 'BR'],\n          requirePrefix: true\n        }, {\n          quote: \"''-raw\",\n          prefixes: ['R', 'B', 'RB', 'BR'],\n          requirePrefix: true\n        }],\n        identTypes: ['``'],\n        identChars: {\n          dashes: true\n        },\n        paramTypes: {\n          positional: true,\n          named: ['@'],\n          quoted: ['@']\n        },\n        lineCommentTypes: ['--', '#'],\n        operators: ['&', '|', '^', '~', '>>', '<<', '||'],\n        postProcess: postProcess\n      });\n    }\n  }]);\n\n  return BigQueryFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = BigQueryFormatter;\n\nfunction postProcess(tokens) {\n  return detectArraySubscripts(combineParameterizedTypes(tokens));\n} // Converts OFFSET token inside array from RESERVED_COMMAND to RESERVED_FUNCTION_NAME\n// See: https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#array_subscript_operator\n\n\nfunction detectArraySubscripts(tokens) {\n  var prevToken = _token.EOF_TOKEN;\n  return tokens.map(function (token) {\n    if (token.text === 'OFFSET' && prevToken.text === '[') {\n      prevToken = token;\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.RESERVED_FUNCTION_NAME\n      });\n    } else {\n      prevToken = token;\n      return token;\n    }\n  });\n} // Combines multiple tokens forming a parameterized type like STRUCT<ARRAY<INT64>> into a single token\n\n\nfunction combineParameterizedTypes(tokens) {\n  var processed = [];\n\n  for (var i = 0; i < tokens.length; i++) {\n    var _tokens;\n\n    var token = tokens[i];\n\n    if ((_token.isToken.ARRAY(token) || _token.isToken.STRUCT(token)) && ((_tokens = tokens[i + 1]) === null || _tokens === void 0 ? void 0 : _tokens.text) === '<') {\n      var endIndex = findClosingAngleBracketIndex(tokens, i + 1);\n      var typeDefTokens = tokens.slice(i, endIndex + 1);\n      processed.push({\n        type: _token.TokenType.IDENTIFIER,\n        raw: typeDefTokens.map(formatTypeDefToken('raw')).join(''),\n        text: typeDefTokens.map(formatTypeDefToken('text')).join(''),\n        start: token.start\n      });\n      i = endIndex;\n    } else {\n      processed.push(token);\n    }\n  }\n\n  return processed;\n}\n\nvar formatTypeDefToken = function formatTypeDefToken(key) {\n  return function (token) {\n    if (token.type === _token.TokenType.IDENTIFIER || token.type === _token.TokenType.COMMA) {\n      return token[key] + ' ';\n    } else {\n      return token[key];\n    }\n  };\n};\n\nfunction findClosingAngleBracketIndex(tokens, startIndex) {\n  var level = 0;\n\n  for (var i = startIndex; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.text === '<') {\n      level++;\n    } else if (token.text === '>') {\n      level--;\n    } else if (token.text === '>>') {\n      level -= 2;\n    }\n\n    if (level === 0) {\n      return i;\n    }\n  }\n\n  return tokens.length - 1;\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=bigquery.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9iaWdxdWVyeS9iaWdxdWVyeS5mb3JtYXR0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvYmlncXVlcnkvYmlncXVlcnkuZm9ybWF0dGVyLmpzPzMzMjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX0Zvcm1hdHRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9mb3JtYXR0ZXIvRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Ub2tlbml6ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9sZXhlci9Ub2tlbml6ZXJcIikpO1xuXG52YXIgX3Rva2VuID0gcmVxdWlyZShcIi4uLy4uL2xleGVyL3Rva2VuXCIpO1xuXG52YXIgX2V4cGFuZFBocmFzZXMgPSByZXF1aXJlKFwiLi4vLi4vZXhwYW5kUGhyYXNlc1wiKTtcblxudmFyIF9iaWdxdWVyeSA9IHJlcXVpcmUoXCIuL2JpZ3F1ZXJ5LmtleXdvcmRzXCIpO1xuXG52YXIgX2JpZ3F1ZXJ5MiA9IHJlcXVpcmUoXCIuL2JpZ3F1ZXJ5LmZ1bmN0aW9uc1wiKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6IGZhbHNlIH0pOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHN1YkNsYXNzLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSBlbHNlIGlmIChjYWxsICE9PSB2b2lkIDApIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxudmFyIHJlc2VydmVkU2VsZWN0ID0gKDAsIF9leHBhbmRQaHJhc2VzLmV4cGFuZFBocmFzZXMpKFsnU0VMRUNUIFtBTEwgfCBESVNUSU5DVF0gW0FTIFNUUlVDVCB8IEFTIFZBTFVFXSddKTtcbnZhciByZXNlcnZlZENvbW1hbmRzID0gKDAsIF9leHBhbmRQaHJhc2VzLmV4cGFuZFBocmFzZXMpKFsvLyBRdWVyaWVzOiBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYmlncXVlcnkvZG9jcy9yZWZlcmVuY2Uvc3RhbmRhcmQtc3FsL3F1ZXJ5LXN5bnRheFxuJ1dJVEggW1JFQ1VSU0lWRV0nLCAnRlJPTScsICdXSEVSRScsICdHUk9VUCBCWScsICdIQVZJTkcnLCAnUVVBTElGWScsICdXSU5ET1cnLCAnUEFSVElUSU9OIEJZJywgJ09SREVSIEJZJywgJ0xJTUlUJywgJ09GRlNFVCcsICdPTUlUIFJFQ09SRCBJRicsIC8vIGxlZ2FjeVxuLy8gRGF0YSBtb2RpZmljYXRpb246IGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9iaWdxdWVyeS9kb2NzL3JlZmVyZW5jZS9zdGFuZGFyZC1zcWwvZG1sLXN5bnRheFxuLy8gLSBpbnNlcnQ6XG4nSU5TRVJUIFtJTlRPXScsICdWQUxVRVMnLCAvLyAtIHVwZGF0ZTpcbidVUERBVEUnLCAnU0VUJywgLy8gLSBkZWxldGU6XG4nREVMRVRFIFtGUk9NXScsIC8vIC0gdHJ1bmNhdGU6XG4nVFJVTkNBVEUgVEFCTEUnLCAvLyAtIG1lcmdlOlxuJ01FUkdFIFtJTlRPXScsICdXSEVOIFtOT1RdIE1BVENIRUQgW0JZIFNPVVJDRSB8IEJZIFRBUkdFVF0gW1RIRU5dJywgJ1VQREFURSBTRVQnLCAvLyBEYXRhIGRlZmluaXRpb24sIGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9iaWdxdWVyeS9kb2NzL3JlZmVyZW5jZS9zdGFuZGFyZC1zcWwvZGF0YS1kZWZpbml0aW9uLWxhbmd1YWdlXG4nQ1JFQVRFIFtPUiBSRVBMQUNFXSBbTUFURVJJQUxJWkVEXSBWSUVXIFtJRiBOT1QgRVhJU1RTXScsICdDUkVBVEUgW09SIFJFUExBQ0VdIFtURU1QfFRFTVBPUkFSWXxTTkFQU0hPVHxFWFRFUk5BTF0gVEFCTEUgW0lGIE5PVCBFWElTVFNdJywgJ0RST1AgW1NOQVBTSE9UIHwgRVhURVJOQUxdIFRBQkxFIFtJRiBFWElTVFNdJywgLy8gLSBhbHRlciB0YWJsZTpcbidBTFRFUiBUQUJMRSBbSUYgRVhJU1RTXScsICdBREQgQ09MVU1OIFtJRiBOT1QgRVhJU1RTXScsICdEUk9QIENPTFVNTiBbSUYgRVhJU1RTXScsICdSRU5BTUUgVE8nLCAnQUxURVIgQ09MVU1OIFtJRiBFWElTVFNdJywgJ1NFVCBERUZBVUxUIENPTExBVEUnLCAvLyBmb3IgYWx0ZXIgY29sdW1uXG4nU0VUIE9QVElPTlMnLCAvLyBmb3IgYWx0ZXIgY29sdW1uXG4nRFJPUCBOT1QgTlVMTCcsIC8vIGZvciBhbHRlciBjb2x1bW5cbidTRVQgREFUQSBUWVBFJywgLy8gZm9yIGFsdGVyIGNvbHVtblxuJ0NSRUFURSBTQ0hFTUEgW0lGIE5PVCBFWElTVFNdJywgJ0RFRkFVTFQgQ09MTEFURScsICdDTFVTVEVSIEJZJywgJ0ZPUiBTWVNURU1fVElNRSBBUyBPRicsIC8vIENSRUFURSBTTkFQU0hPVCBUQUJMRVxuJ1dJVEggQ09OTkVDVElPTicsICdXSVRIIFBBUlRJVElPTiBDT0xVTU5TJywgJ0NSRUFURSBbT1IgUkVQTEFDRV0gW1RFTVB8VEVNUE9SQVJZfFRBQkxFXSBGVU5DVElPTiBbSUYgTk9UIEVYSVNUU10nLCAnUkVNT1RFIFdJVEggQ09OTkVDVElPTicsICdSRVRVUk5TIFRBQkxFJywgJ0NSRUFURSBbT1IgUkVQTEFDRV0gUFJPQ0VEVVJFIFtJRiBOT1QgRVhJU1RTXScsICdDUkVBVEUgW09SIFJFUExBQ0VdIFJPVyBBQ0NFU1MgUE9MSUNZIFtJRiBOT1QgRVhJU1RTXScsICdHUkFOVCBUTycsICdGSUxURVIgVVNJTkcnLCAnQ1JFQVRFIENBUEFDSVRZJywgJ0FTIEpTT04nLCAnQ1JFQVRFIFJFU0VSVkFUSU9OJywgJ0NSRUFURSBBU1NJR05NRU5UJywgJ0NSRUFURSBTRUFSQ0ggSU5ERVggW0lGIE5PVCBFWElTVFNdJywgJ0FMVEVSIFNDSEVNQSBbSUYgRVhJU1RTXScsICdBTFRFUiBbTUFURVJJQUxJWkVEXSBWSUVXIFtJRiBFWElTVFNdJywgJ0FMVEVSIEJJX0NBUEFDSVRZJywgJ0RST1AgU0NIRU1BIFtJRiBFWElTVFNdJywgJ0RST1AgW01BVEVSSUFMSVpFRF0gVklFVyBbSUYgRVhJU1RTXScsICdEUk9QIFtUQUJMRV0gRlVOQ1RJT04gW0lGIEVYSVNUU10nLCAnRFJPUCBQUk9DRURVUkUgW0lGIEVYSVNUU10nLCAnRFJPUCBST1cgQUNDRVNTIFBPTElDWScsICdEUk9QIEFMTCBST1cgQUNDRVNTIFBPTElDSUVTJywgJ0RST1AgQ0FQQUNJVFkgW0lGIEVYSVNUU10nLCAnRFJPUCBSRVNFUlZBVElPTiBbSUYgRVhJU1RTXScsICdEUk9QIEFTU0lHTk1FTlQgW0lGIEVYSVNUU10nLCAnRFJPUCBTRUFSQ0ggSU5ERVggW0lGIEVYSVNUU10nLCAnRFJPUCBbSUYgRVhJU1RTXScsIC8vIERDTCwgaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2JpZ3F1ZXJ5L2RvY3MvcmVmZXJlbmNlL3N0YW5kYXJkLXNxbC9kYXRhLWNvbnRyb2wtbGFuZ3VhZ2VcbidHUkFOVCcsICdSRVZPS0UnLCAvLyBTY3JpcHQsIGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9iaWdxdWVyeS9kb2NzL3JlZmVyZW5jZS9zdGFuZGFyZC1zcWwvc2NyaXB0aW5nXG4nREVDTEFSRScsICdFWEVDVVRFIElNTUVESUFURScsICdMT09QJywgJ0VORCBMT09QJywgJ1JFUEVBVCcsICdFTkQgUkVQRUFUJywgJ1dISUxFJywgJ0VORCBXSElMRScsICdCUkVBSycsICdMRUFWRScsICdDT05USU5VRScsICdJVEVSQVRFJywgJ0ZPUicsICdFTkQgRk9SJywgJ0JFR0lOJywgJ0JFR0lOIFRSQU5TQUNUSU9OJywgJ0NPTU1JVCBUUkFOU0FDVElPTicsICdST0xMQkFDSyBUUkFOU0FDVElPTicsICdSQUlTRScsICdSRVRVUk4nLCAnQ0FMTCcsIC8vIERlYnVnLCBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYmlncXVlcnkvZG9jcy9yZWZlcmVuY2Uvc3RhbmRhcmQtc3FsL2RlYnVnZ2luZy1zdGF0ZW1lbnRzXG4nQVNTRVJUJywgLy8gT3RoZXIsIGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9iaWdxdWVyeS9kb2NzL3JlZmVyZW5jZS9zdGFuZGFyZC1zcWwvb3RoZXItc3RhdGVtZW50c1xuJ0VYUE9SVCBEQVRBJ10pO1xudmFyIHJlc2VydmVkU2V0T3BlcmF0aW9ucyA9ICgwLCBfZXhwYW5kUGhyYXNlcy5leHBhbmRQaHJhc2VzKShbJ1VOSU9OIHtBTEwgfCBESVNUSU5DVH0nLCAnRVhDRVBUIERJU1RJTkNUJywgJ0lOVEVSU0VDVCBESVNUSU5DVCddKTtcbnZhciByZXNlcnZlZEpvaW5zID0gKDAsIF9leHBhbmRQaHJhc2VzLmV4cGFuZFBocmFzZXMpKFsnSk9JTicsICd7TEVGVCB8IFJJR0hUIHwgRlVMTH0gW09VVEVSXSBKT0lOJywgJ3tJTk5FUiB8IENST1NTfSBKT0lOJ10pO1xudmFyIHJlc2VydmVkUGhyYXNlcyA9ICgwLCBfZXhwYW5kUGhyYXNlcy5leHBhbmRQaHJhc2VzKShbLy8gaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2JpZ3F1ZXJ5L2RvY3MvcmVmZXJlbmNlL3N0YW5kYXJkLXNxbC9xdWVyeS1zeW50YXgjdGFibGVzYW1wbGVfb3BlcmF0b3JcbidUQUJMRVNBTVBMRSBTWVNURU0nLCAvLyBGcm9tIERETDogaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2JpZ3F1ZXJ5L2RvY3MvcmVmZXJlbmNlL3N0YW5kYXJkLXNxbC9kYXRhLWRlZmluaXRpb24tbGFuZ3VhZ2VcbidBTlkgVFlQRScsICdBTEwgQ09MVU1OUycsICdOT1QgREVURVJNSU5JU1RJQycsIC8vIGluc2lkZSB3aW5kb3cgZGVmaW5pdGlvbnNcbid7Uk9XUyB8IFJBTkdFfSBCRVRXRUVOJ10pOyAvLyBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYmlncXVlcnkvZG9jcy9yZWZlcmVuY2UvI3N0YW5kYXJkLXNxbC1yZWZlcmVuY2VcblxudmFyIEJpZ1F1ZXJ5Rm9ybWF0dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRm9ybWF0dGVyKSB7XG4gIF9pbmhlcml0cyhCaWdRdWVyeUZvcm1hdHRlciwgX0Zvcm1hdHRlcik7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihCaWdRdWVyeUZvcm1hdHRlcik7XG5cbiAgZnVuY3Rpb24gQmlnUXVlcnlGb3JtYXR0ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJpZ1F1ZXJ5Rm9ybWF0dGVyKTtcblxuICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhCaWdRdWVyeUZvcm1hdHRlciwgW3tcbiAgICBrZXk6IFwidG9rZW5pemVyXCIsXG4gICAgdmFsdWU6IC8vIFRPRE86IGhhbmRsZSB0cmFpbGluZyBjb21tYSBpbiBzZWxlY3QgY2xhdXNlXG4gICAgZnVuY3Rpb24gdG9rZW5pemVyKCkge1xuICAgICAgcmV0dXJuIG5ldyBfVG9rZW5pemVyW1wiZGVmYXVsdFwiXSh7XG4gICAgICAgIHJlc2VydmVkQ29tbWFuZHM6IHJlc2VydmVkQ29tbWFuZHMsXG4gICAgICAgIHJlc2VydmVkU2VsZWN0OiByZXNlcnZlZFNlbGVjdCxcbiAgICAgICAgcmVzZXJ2ZWRTZXRPcGVyYXRpb25zOiByZXNlcnZlZFNldE9wZXJhdGlvbnMsXG4gICAgICAgIHJlc2VydmVkSm9pbnM6IHJlc2VydmVkSm9pbnMsXG4gICAgICAgIHJlc2VydmVkRGVwZW5kZW50Q2xhdXNlczogWydXSEVOJywgJ0VMU0UnXSxcbiAgICAgICAgcmVzZXJ2ZWRQaHJhc2VzOiByZXNlcnZlZFBocmFzZXMsXG4gICAgICAgIHJlc2VydmVkS2V5d29yZHM6IF9iaWdxdWVyeS5rZXl3b3JkcyxcbiAgICAgICAgcmVzZXJ2ZWRGdW5jdGlvbk5hbWVzOiBfYmlncXVlcnkyLmZ1bmN0aW9ucyxcbiAgICAgICAgZXh0cmFQYXJlbnM6IFsnW10nXSxcbiAgICAgICAgc3RyaW5nVHlwZXM6IFsvLyBUaGUgdHJpcGxlLXF1b3RlZCBzdHJpbmdzIGFyZSBsaXN0ZWQgZmlyc3QsIHNvIHRoZXkgZ2V0IG1hdGNoZWQgZmlyc3QuXG4gICAgICAgIC8vIE90aGVyd2lzZSB0aGUgZmlyc3QgdHdvIHF1b3RlcyBvZiBcIlwiXCIgd2lsbCBnZXQgbWF0Y2hlZCBhcyBhbiBlbXB0eSBcIlwiIHN0cmluZy5cbiAgICAgICAge1xuICAgICAgICAgIHF1b3RlOiAnXCJcIlwiLi5cIlwiXCInLFxuICAgICAgICAgIHByZWZpeGVzOiBbJ1InLCAnQicsICdSQicsICdCUiddXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBxdW90ZTogXCInJycuLicnJ1wiLFxuICAgICAgICAgIHByZWZpeGVzOiBbJ1InLCAnQicsICdSQicsICdCUiddXG4gICAgICAgIH0sICdcIlwiLWJzJywgXCInJy1ic1wiLCB7XG4gICAgICAgICAgcXVvdGU6ICdcIlwiLXJhdycsXG4gICAgICAgICAgcHJlZml4ZXM6IFsnUicsICdCJywgJ1JCJywgJ0JSJ10sXG4gICAgICAgICAgcmVxdWlyZVByZWZpeDogdHJ1ZVxuICAgICAgICB9LCB7XG4gICAgICAgICAgcXVvdGU6IFwiJyctcmF3XCIsXG4gICAgICAgICAgcHJlZml4ZXM6IFsnUicsICdCJywgJ1JCJywgJ0JSJ10sXG4gICAgICAgICAgcmVxdWlyZVByZWZpeDogdHJ1ZVxuICAgICAgICB9XSxcbiAgICAgICAgaWRlbnRUeXBlczogWydgYCddLFxuICAgICAgICBpZGVudENoYXJzOiB7XG4gICAgICAgICAgZGFzaGVzOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHBhcmFtVHlwZXM6IHtcbiAgICAgICAgICBwb3NpdGlvbmFsOiB0cnVlLFxuICAgICAgICAgIG5hbWVkOiBbJ0AnXSxcbiAgICAgICAgICBxdW90ZWQ6IFsnQCddXG4gICAgICAgIH0sXG4gICAgICAgIGxpbmVDb21tZW50VHlwZXM6IFsnLS0nLCAnIyddLFxuICAgICAgICBvcGVyYXRvcnM6IFsnJicsICd8JywgJ14nLCAnficsICc+PicsICc8PCcsICd8fCddLFxuICAgICAgICBwb3N0UHJvY2VzczogcG9zdFByb2Nlc3NcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBCaWdRdWVyeUZvcm1hdHRlcjtcbn0oX0Zvcm1hdHRlcjJbXCJkZWZhdWx0XCJdKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBCaWdRdWVyeUZvcm1hdHRlcjtcblxuZnVuY3Rpb24gcG9zdFByb2Nlc3ModG9rZW5zKSB7XG4gIHJldHVybiBkZXRlY3RBcnJheVN1YnNjcmlwdHMoY29tYmluZVBhcmFtZXRlcml6ZWRUeXBlcyh0b2tlbnMpKTtcbn0gLy8gQ29udmVydHMgT0ZGU0VUIHRva2VuIGluc2lkZSBhcnJheSBmcm9tIFJFU0VSVkVEX0NPTU1BTkQgdG8gUkVTRVJWRURfRlVOQ1RJT05fTkFNRVxuLy8gU2VlOiBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vYmlncXVlcnkvZG9jcy9yZWZlcmVuY2Uvc3RhbmRhcmQtc3FsL2Z1bmN0aW9ucy1hbmQtb3BlcmF0b3JzI2FycmF5X3N1YnNjcmlwdF9vcGVyYXRvclxuXG5cbmZ1bmN0aW9uIGRldGVjdEFycmF5U3Vic2NyaXB0cyh0b2tlbnMpIHtcbiAgdmFyIHByZXZUb2tlbiA9IF90b2tlbi5FT0ZfVE9LRU47XG4gIHJldHVybiB0b2tlbnMubWFwKGZ1bmN0aW9uICh0b2tlbikge1xuICAgIGlmICh0b2tlbi50ZXh0ID09PSAnT0ZGU0VUJyAmJiBwcmV2VG9rZW4udGV4dCA9PT0gJ1snKSB7XG4gICAgICBwcmV2VG9rZW4gPSB0b2tlbjtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRva2VuKSwge30sIHtcbiAgICAgICAgdHlwZTogX3Rva2VuLlRva2VuVHlwZS5SRVNFUlZFRF9GVU5DVElPTl9OQU1FXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJldlRva2VuID0gdG9rZW47XG4gICAgICByZXR1cm4gdG9rZW47XG4gICAgfVxuICB9KTtcbn0gLy8gQ29tYmluZXMgbXVsdGlwbGUgdG9rZW5zIGZvcm1pbmcgYSBwYXJhbWV0ZXJpemVkIHR5cGUgbGlrZSBTVFJVQ1Q8QVJSQVk8SU5UNjQ+PiBpbnRvIGEgc2luZ2xlIHRva2VuXG5cblxuZnVuY3Rpb24gY29tYmluZVBhcmFtZXRlcml6ZWRUeXBlcyh0b2tlbnMpIHtcbiAgdmFyIHByb2Nlc3NlZCA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIF90b2tlbnM7XG5cbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV07XG5cbiAgICBpZiAoKF90b2tlbi5pc1Rva2VuLkFSUkFZKHRva2VuKSB8fCBfdG9rZW4uaXNUb2tlbi5TVFJVQ1QodG9rZW4pKSAmJiAoKF90b2tlbnMgPSB0b2tlbnNbaSArIDFdKSA9PT0gbnVsbCB8fCBfdG9rZW5zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdG9rZW5zLnRleHQpID09PSAnPCcpIHtcbiAgICAgIHZhciBlbmRJbmRleCA9IGZpbmRDbG9zaW5nQW5nbGVCcmFja2V0SW5kZXgodG9rZW5zLCBpICsgMSk7XG4gICAgICB2YXIgdHlwZURlZlRva2VucyA9IHRva2Vucy5zbGljZShpLCBlbmRJbmRleCArIDEpO1xuICAgICAgcHJvY2Vzc2VkLnB1c2goe1xuICAgICAgICB0eXBlOiBfdG9rZW4uVG9rZW5UeXBlLklERU5USUZJRVIsXG4gICAgICAgIHJhdzogdHlwZURlZlRva2Vucy5tYXAoZm9ybWF0VHlwZURlZlRva2VuKCdyYXcnKSkuam9pbignJyksXG4gICAgICAgIHRleHQ6IHR5cGVEZWZUb2tlbnMubWFwKGZvcm1hdFR5cGVEZWZUb2tlbigndGV4dCcpKS5qb2luKCcnKSxcbiAgICAgICAgc3RhcnQ6IHRva2VuLnN0YXJ0XG4gICAgICB9KTtcbiAgICAgIGkgPSBlbmRJbmRleDtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvY2Vzc2VkLnB1c2godG9rZW4pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcm9jZXNzZWQ7XG59XG5cbnZhciBmb3JtYXRUeXBlRGVmVG9rZW4gPSBmdW5jdGlvbiBmb3JtYXRUeXBlRGVmVG9rZW4oa2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICBpZiAodG9rZW4udHlwZSA9PT0gX3Rva2VuLlRva2VuVHlwZS5JREVOVElGSUVSIHx8IHRva2VuLnR5cGUgPT09IF90b2tlbi5Ub2tlblR5cGUuQ09NTUEpIHtcbiAgICAgIHJldHVybiB0b2tlbltrZXldICsgJyAnO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdG9rZW5ba2V5XTtcbiAgICB9XG4gIH07XG59O1xuXG5mdW5jdGlvbiBmaW5kQ2xvc2luZ0FuZ2xlQnJhY2tldEluZGV4KHRva2Vucywgc3RhcnRJbmRleCkge1xuICB2YXIgbGV2ZWwgPSAwO1xuXG4gIGZvciAodmFyIGkgPSBzdGFydEluZGV4OyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldO1xuXG4gICAgaWYgKHRva2VuLnRleHQgPT09ICc8Jykge1xuICAgICAgbGV2ZWwrKztcbiAgICB9IGVsc2UgaWYgKHRva2VuLnRleHQgPT09ICc+Jykge1xuICAgICAgbGV2ZWwtLTtcbiAgICB9IGVsc2UgaWYgKHRva2VuLnRleHQgPT09ICc+PicpIHtcbiAgICAgIGxldmVsIC09IDI7XG4gICAgfVxuXG4gICAgaWYgKGxldmVsID09PSAwKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdG9rZW5zLmxlbmd0aCAtIDE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmlncXVlcnkuZm9ybWF0dGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.functions.js":
/*!**********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.functions.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/aead_encryption_functions\n  aead: ['KEYS.NEW_KEYSET', 'KEYS.ADD_KEY_FROM_RAW_BYTES', 'AEAD.DECRYPT_BYTES', 'AEAD.DECRYPT_STRING', 'AEAD.ENCRYPT', 'KEYS.KEYSET_CHAIN', 'KEYS.KEYSET_FROM_JSON', 'KEYS.KEYSET_TO_JSON', 'KEYS.ROTATE_KEYSET', 'KEYS.KEYSET_LENGTH'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_analytic_functions\n  aggregateAnalytic: ['ANY_VALUE', 'ARRAY_AGG', 'AVG', 'CORR', 'COUNT', 'COUNTIF', 'COVAR_POP', 'COVAR_SAMP', 'MAX', 'MIN', 'ST_CLUSTERDBSCAN', 'STDDEV_POP', 'STDDEV_SAMP', 'STRING_AGG', 'SUM', 'VAR_POP', 'VAR_SAMP'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_functions\n  aggregate: ['ANY_VALUE', 'ARRAY_AGG', 'ARRAY_CONCAT_AGG', 'AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'COUNT', 'COUNTIF', 'LOGICAL_AND', 'LOGICAL_OR', 'MAX', 'MIN', 'STRING_AGG', 'SUM'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/approximate_aggregate_functions\n  approximateAggregate: ['APPROX_COUNT_DISTINCT', 'APPROX_QUANTILES', 'APPROX_TOP_COUNT', 'APPROX_TOP_SUM'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/array_functions\n  array: [// 'ARRAY',\n  'ARRAY_CONCAT', 'ARRAY_LENGTH', 'ARRAY_TO_STRING', 'GENERATE_ARRAY', 'GENERATE_DATE_ARRAY', 'GENERATE_TIMESTAMP_ARRAY', 'ARRAY_REVERSE', 'OFFSET', 'SAFE_OFFSET', 'ORDINAL', 'SAFE_ORDINAL'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/bit_functions\n  bitwise: ['BIT_COUNT'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions\n  conversion: [// 'CASE',\n  'PARSE_BIGNUMERIC', 'PARSE_NUMERIC', 'SAFE_CAST'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/date_functions\n  date: ['CURRENT_DATE', 'EXTRACT', 'DATE', 'DATE_ADD', 'DATE_SUB', 'DATE_DIFF', 'DATE_TRUNC', 'DATE_FROM_UNIX_DATE', 'FORMAT_DATE', 'LAST_DAY', 'PARSE_DATE', 'UNIX_DATE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/datetime_functions\n  datetime: ['CURRENT_DATETIME', 'DATETIME', 'EXTRACT', 'DATETIME_ADD', 'DATETIME_SUB', 'DATETIME_DIFF', 'DATETIME_TRUNC', 'FORMAT_DATETIME', 'LAST_DAY', 'PARSE_DATETIME'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging_functions\n  debugging: ['ERROR'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/federated_query_functions\n  federatedQuery: ['EXTERNAL_QUERY'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/geography_functions\n  geography: ['S2_CELLIDFROMPOINT', 'S2_COVERINGCELLIDS', 'ST_ANGLE', 'ST_AREA', 'ST_ASBINARY', 'ST_ASGEOJSON', 'ST_ASTEXT', 'ST_AZIMUTH', 'ST_BOUNDARY', 'ST_BOUNDINGBOX', 'ST_BUFFER', 'ST_BUFFERWITHTOLERANCE', 'ST_CENTROID', 'ST_CENTROID_AGG', 'ST_CLOSESTPOINT', 'ST_CLUSTERDBSCAN', 'ST_CONTAINS', 'ST_CONVEXHULL', 'ST_COVEREDBY', 'ST_COVERS', 'ST_DIFFERENCE', 'ST_DIMENSION', 'ST_DISJOINT', 'ST_DISTANCE', 'ST_DUMP', 'ST_DWITHIN', 'ST_ENDPOINT', 'ST_EQUALS', 'ST_EXTENT', 'ST_EXTERIORRING', 'ST_GEOGFROM', 'ST_GEOGFROMGEOJSON', 'ST_GEOGFROMTEXT', 'ST_GEOGFROMWKB', 'ST_GEOGPOINT', 'ST_GEOGPOINTFROMGEOHASH', 'ST_GEOHASH', 'ST_GEOMETRYTYPE', 'ST_INTERIORRINGS', 'ST_INTERSECTION', 'ST_INTERSECTS', 'ST_INTERSECTSBOX', 'ST_ISCOLLECTION', 'ST_ISEMPTY', 'ST_LENGTH', 'ST_MAKELINE', 'ST_MAKEPOLYGON', 'ST_MAKEPOLYGONORIENTED', 'ST_MAXDISTANCE', 'ST_NPOINTS', 'ST_NUMGEOMETRIES', 'ST_NUMPOINTS', 'ST_PERIMETER', 'ST_POINTN', 'ST_SIMPLIFY', 'ST_SNAPTOGRID', 'ST_STARTPOINT', 'ST_TOUCHES', 'ST_UNION', 'ST_UNION_AGG', 'ST_WITHIN', 'ST_X', 'ST_Y'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/hash_functions\n  hash: ['FARM_FINGERPRINT', 'MD5', 'SHA1', 'SHA256', 'SHA512'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/hll_functions\n  hll: ['HLL_COUNT.INIT', 'HLL_COUNT.MERGE', 'HLL_COUNT.MERGE_PARTIAL', 'HLL_COUNT.EXTRACT'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/interval_functions\n  interval: ['MAKE_INTERVAL', 'EXTRACT', 'JUSTIFY_DAYS', 'JUSTIFY_HOURS', 'JUSTIFY_INTERVAL'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/json_functions\n  json: ['JSON_EXTRACT', 'JSON_QUERY', 'JSON_EXTRACT_SCALAR', 'JSON_VALUE', 'JSON_EXTRACT_ARRAY', 'JSON_QUERY_ARRAY', 'JSON_EXTRACT_STRING_ARRAY', 'JSON_VALUE_ARRAY', 'TO_JSON_STRING'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/mathematical_functions\n  math: ['ABS', 'SIGN', 'IS_INF', 'IS_NAN', 'IEEE_DIVIDE', 'RAND', 'SQRT', 'POW', 'POWER', 'EXP', 'LN', 'LOG', 'LOG10', 'GREATEST', 'LEAST', 'DIV', 'SAFE_DIVIDE', 'SAFE_MULTIPLY', 'SAFE_NEGATE', 'SAFE_ADD', 'SAFE_SUBTRACT', 'MOD', 'ROUND', 'TRUNC', 'CEIL', 'CEILING', 'FLOOR', 'COS', 'COSH', 'ACOS', 'ACOSH', 'SIN', 'SINH', 'ASIN', 'ASINH', 'TAN', 'TANH', 'ATAN', 'ATANH', 'ATAN2', 'RANGE_BUCKET'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/navigation_functions\n  navigation: ['FIRST_VALUE', 'LAST_VALUE', 'NTH_VALUE', 'LEAD', 'LAG', 'PERCENTILE_CONT', 'PERCENTILE_DISC'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/net_functions\n  net: ['NET.IP_FROM_STRING', 'NET.SAFE_IP_FROM_STRING', 'NET.IP_TO_STRING', 'NET.IP_NET_MASK', 'NET.IP_TRUNC', 'NET.IPV4_FROM_INT64', 'NET.IPV4_TO_INT64', 'NET.HOST', 'NET.PUBLIC_SUFFIX', 'NET.REG_DOMAIN'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/numbering_functions\n  numbering: ['RANK', 'DENSE_RANK', 'PERCENT_RANK', 'CUME_DIST', 'NTILE', 'ROW_NUMBER'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/security_functions\n  security: ['SESSION_USER'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/statistical_aggregate_functions\n  statisticalAggregate: ['CORR', 'COVAR_POP', 'COVAR_SAMP', 'STDDEV_POP', 'STDDEV_SAMP', 'STDDEV', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/string_functions\n  string: ['ASCII', 'BYTE_LENGTH', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHR', 'CODE_POINTS_TO_BYTES', 'CODE_POINTS_TO_STRING', 'CONCAT', 'CONTAINS_SUBSTR', 'ENDS_WITH', 'FORMAT', 'FROM_BASE32', 'FROM_BASE64', 'FROM_HEX', 'INITCAP', 'INSTR', 'LEFT', 'LENGTH', 'LPAD', 'LOWER', 'LTRIM', 'NORMALIZE', 'NORMALIZE_AND_CASEFOLD', 'OCTET_LENGTH', 'REGEXP_CONTAINS', 'REGEXP_EXTRACT', 'REGEXP_EXTRACT_ALL', 'REGEXP_INSTR', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPLACE', 'REPEAT', 'REVERSE', 'RIGHT', 'RPAD', 'RTRIM', 'SAFE_CONVERT_BYTES_TO_STRING', 'SOUNDEX', 'SPLIT', 'STARTS_WITH', 'STRPOS', 'SUBSTR', 'SUBSTRING', 'TO_BASE32', 'TO_BASE64', 'TO_CODE_POINTS', 'TO_HEX', 'TRANSLATE', 'TRIM', 'UNICODE', 'UPPER'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/time_functions\n  time: ['CURRENT_TIME', 'TIME', 'EXTRACT', 'TIME_ADD', 'TIME_SUB', 'TIME_DIFF', 'TIME_TRUNC', 'FORMAT_TIME', 'PARSE_TIME'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/timestamp_functions\n  timestamp: ['CURRENT_TIMESTAMP', 'EXTRACT', 'STRING', 'TIMESTAMP', 'TIMESTAMP_ADD', 'TIMESTAMP_SUB', 'TIMESTAMP_DIFF', 'TIMESTAMP_TRUNC', 'FORMAT_TIMESTAMP', 'PARSE_TIMESTAMP', 'TIMESTAMP_SECONDS', 'TIMESTAMP_MILLIS', 'TIMESTAMP_MICROS', 'UNIX_SECONDS', 'UNIX_MILLIS', 'UNIX_MICROS'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/uuid_functions\n  uuid: ['GENERATE_UUID'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/conditional_expressions\n  conditional: ['COALESCE', 'IF', 'IFNULL', 'NULLIF'],\n  // https://cloud.google.com/bigquery/docs/reference/legacy-sql\n  legacyAggregate: ['AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'CORR', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'EXACT_COUNT_DISTINCT', 'FIRST', 'GROUP_CONCAT', 'GROUP_CONCAT_UNQUOTED', 'LAST', 'MAX', 'MIN', 'NEST', 'NTH', 'QUANTILES', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'TOP', 'UNIQUE', 'VARIANCE', 'VAR_POP', 'VAR_SAMP'],\n  legacyBitwise: ['BIT_COUNT'],\n  legacyCasting: ['BOOLEAN', 'BYTES', 'CAST', 'FLOAT', 'HEX_STRING', 'INTEGER', 'STRING'],\n  legacyComparison: [// expr 'IN',\n  'COALESCE', 'GREATEST', 'IFNULL', 'IS_INF', 'IS_NAN', 'IS_EXPLICITLY_DEFINED', 'LEAST', 'NVL'],\n  legacyDatetime: ['CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATE', 'DATE_ADD', 'DATEDIFF', 'DAY', 'DAYOFWEEK', 'DAYOFYEAR', 'FORMAT_UTC_USEC', 'HOUR', 'MINUTE', 'MONTH', 'MSEC_TO_TIMESTAMP', 'NOW', 'PARSE_UTC_USEC', 'QUARTER', 'SEC_TO_TIMESTAMP', 'SECOND', 'STRFTIME_UTC_USEC', 'TIME', 'TIMESTAMP', 'TIMESTAMP_TO_MSEC', 'TIMESTAMP_TO_SEC', 'TIMESTAMP_TO_USEC', 'USEC_TO_TIMESTAMP', 'UTC_USEC_TO_DAY', 'UTC_USEC_TO_HOUR', 'UTC_USEC_TO_MONTH', 'UTC_USEC_TO_WEEK', 'UTC_USEC_TO_YEAR', 'WEEK', 'YEAR'],\n  legacyIp: ['FORMAT_IP', 'PARSE_IP', 'FORMAT_PACKED_IP', 'PARSE_PACKED_IP'],\n  legacyJson: ['JSON_EXTRACT', 'JSON_EXTRACT_SCALAR'],\n  legacyMath: ['ABS', 'ACOS', 'ACOSH', 'ASIN', 'ASINH', 'ATAN', 'ATANH', 'ATAN2', 'CEIL', 'COS', 'COSH', 'DEGREES', 'EXP', 'FLOOR', 'LN', 'LOG', 'LOG2', 'LOG10', 'PI', 'POW', 'RADIANS', 'RAND', 'ROUND', 'SIN', 'SINH', 'SQRT', 'TAN', 'TANH'],\n  legacyRegex: ['REGEXP_MATCH', 'REGEXP_EXTRACT', 'REGEXP_REPLACE'],\n  legacyString: ['CONCAT', // expr CONTAINS 'str'\n  'INSTR', 'LEFT', 'LENGTH', 'LOWER', 'LPAD', 'LTRIM', 'REPLACE', 'RIGHT', 'RPAD', 'RTRIM', 'SPLIT', 'SUBSTR', 'UPPER'],\n  legacyTableWildcard: ['TABLE_DATE_RANGE', 'TABLE_DATE_RANGE_STRICT', 'TABLE_QUERY'],\n  legacyUrl: ['HOST', 'DOMAIN', 'TLD'],\n  legacyWindow: ['AVG', 'COUNT', 'MAX', 'MIN', 'STDDEV', 'SUM', 'CUME_DIST', 'DENSE_RANK', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'RANK', 'RATIO_TO_REPORT', 'ROW_NUMBER'],\n  legacyMisc: ['CURRENT_USER', 'EVERY', 'FROM_BASE64', 'HASH', 'FARM_FINGERPRINT', 'IF', 'POSITION', 'SHA1', 'SOME', 'TO_BASE64'],\n  other: ['BQ.JOBS.CANCEL', 'BQ.REFRESH_MATERIALIZED_VIEW'],\n  ddl: ['OPTIONS'],\n  pivot: ['PIVOT', 'UNPIVOT'],\n  // Data types with parameters like VARCHAR(100)\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#parameterized_data_types\n  dataTypes: ['BYTES', 'NUMERIC', 'DECIMAL', 'BIGNUMERIC', 'BIGDECIMAL', 'STRING']\n});\nexports.functions = functions;\n//# sourceMappingURL=bigquery.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.keywords.js":
/*!*********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.keywords.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical#reserved_keywords\n  keywords: ['ALL', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'ASSERT_ROWS_MODIFIED', 'AT', 'BETWEEN', 'BY', 'CASE', 'CAST', 'COLLATE', 'CONTAINS', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'DEFAULT', 'DEFINE', 'DESC', 'DISTINCT', 'ELSE', 'END', 'ENUM', 'ESCAPE', 'EXCEPT', 'EXCLUDE', 'EXISTS', 'EXTRACT', 'FALSE', 'FETCH', 'FOLLOWING', 'FOR', 'FROM', 'FULL', 'GROUP', 'GROUPING', 'GROUPS', 'HASH', 'HAVING', 'IF', 'IGNORE', 'IN', 'INNER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'JOIN', 'LATERAL', 'LEFT', 'LIKE', 'LIMIT', 'LOOKUP', 'MERGE', 'NATURAL', 'NEW', 'NO', 'NOT', 'NULL', 'NULLS', 'OF', 'ON', 'OR', 'ORDER', 'OUTER', 'OVER', 'PARTITION', 'PRECEDING', 'PROTO', 'RANGE', 'RECURSIVE', 'RESPECT', 'RIGHT', 'ROLLUP', 'ROWS', 'SELECT', 'SET', 'SOME', 'STRUCT', 'TABLE', 'TABLESAMPLE', 'THEN', 'TO', 'TREAT', 'TRUE', 'UNBOUNDED', 'UNION', 'UNNEST', 'USING', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'WITHIN'],\n  datatypes: ['ARRAY', // parametric, ARRAY<T>\n  'BOOL', 'BYTES', // parameterised, BYTES(Length)\n  'DATE', 'DATETIME', 'GEOGRAPHY', 'INTERVAL', 'INT64', 'INT', 'SMALLINT', 'INTEGER', 'BIGINT', 'TINYINT', 'BYTEINT', 'NUMERIC', // parameterised, NUMERIC(Precision[, Scale])\n  'DECIMAL', // parameterised, DECIMAL(Precision[, Scale])\n  'BIGNUMERIC', // parameterised, BIGNUMERIC(Precision[, Scale])\n  'BIGDECIMAL', // parameterised, BIGDECIMAL(Precision[, Scale])\n  'FLOAT64', 'STRING', // parameterised, STRING(Length)\n  'STRUCT', // parametric, STRUCT<T>\n  'TIME', 'TIMEZONE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions#formatting_syntax\n  stringFormat: ['HEX', 'BASEX', 'BASE64M', 'ASCII', 'UTF-8', 'UTF8'],\n  misc: ['SAFE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n  ddl: ['LIKE', // CREATE TABLE LIKE\n  'COPY', // CREATE TABLE COPY\n  'CLONE', // CREATE TABLE CLONE\n  'IN', 'OUT', 'INOUT', 'RETURNS', 'LANGUAGE', 'CASCADE', 'RESTRICT', 'DETERMINISTIC']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=bigquery.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9iaWdxdWVyeS9iaWdxdWVyeS5rZXl3b3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvYmlncXVlcnkvYmlncXVlcnkua2V5d29yZHMuanM/OTFhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBrZXl3b3JkcyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9iaWdxdWVyeS9kb2NzL3JlZmVyZW5jZS9zdGFuZGFyZC1zcWwvbGV4aWNhbCNyZXNlcnZlZF9rZXl3b3Jkc1xuICBrZXl3b3JkczogWydBTEwnLCAnQU5EJywgJ0FOWScsICdBUlJBWScsICdBUycsICdBU0MnLCAnQVNTRVJUX1JPV1NfTU9ESUZJRUQnLCAnQVQnLCAnQkVUV0VFTicsICdCWScsICdDQVNFJywgJ0NBU1QnLCAnQ09MTEFURScsICdDT05UQUlOUycsICdDUkVBVEUnLCAnQ1JPU1MnLCAnQ1VCRScsICdDVVJSRU5UJywgJ0RFRkFVTFQnLCAnREVGSU5FJywgJ0RFU0MnLCAnRElTVElOQ1QnLCAnRUxTRScsICdFTkQnLCAnRU5VTScsICdFU0NBUEUnLCAnRVhDRVBUJywgJ0VYQ0xVREUnLCAnRVhJU1RTJywgJ0VYVFJBQ1QnLCAnRkFMU0UnLCAnRkVUQ0gnLCAnRk9MTE9XSU5HJywgJ0ZPUicsICdGUk9NJywgJ0ZVTEwnLCAnR1JPVVAnLCAnR1JPVVBJTkcnLCAnR1JPVVBTJywgJ0hBU0gnLCAnSEFWSU5HJywgJ0lGJywgJ0lHTk9SRScsICdJTicsICdJTk5FUicsICdJTlRFUlNFQ1QnLCAnSU5URVJWQUwnLCAnSU5UTycsICdJUycsICdKT0lOJywgJ0xBVEVSQUwnLCAnTEVGVCcsICdMSUtFJywgJ0xJTUlUJywgJ0xPT0tVUCcsICdNRVJHRScsICdOQVRVUkFMJywgJ05FVycsICdOTycsICdOT1QnLCAnTlVMTCcsICdOVUxMUycsICdPRicsICdPTicsICdPUicsICdPUkRFUicsICdPVVRFUicsICdPVkVSJywgJ1BBUlRJVElPTicsICdQUkVDRURJTkcnLCAnUFJPVE8nLCAnUkFOR0UnLCAnUkVDVVJTSVZFJywgJ1JFU1BFQ1QnLCAnUklHSFQnLCAnUk9MTFVQJywgJ1JPV1MnLCAnU0VMRUNUJywgJ1NFVCcsICdTT01FJywgJ1NUUlVDVCcsICdUQUJMRScsICdUQUJMRVNBTVBMRScsICdUSEVOJywgJ1RPJywgJ1RSRUFUJywgJ1RSVUUnLCAnVU5CT1VOREVEJywgJ1VOSU9OJywgJ1VOTkVTVCcsICdVU0lORycsICdXSEVOJywgJ1dIRVJFJywgJ1dJTkRPVycsICdXSVRIJywgJ1dJVEhJTiddLFxuICBkYXRhdHlwZXM6IFsnQVJSQVknLCAvLyBwYXJhbWV0cmljLCBBUlJBWTxUPlxuICAnQk9PTCcsICdCWVRFUycsIC8vIHBhcmFtZXRlcmlzZWQsIEJZVEVTKExlbmd0aClcbiAgJ0RBVEUnLCAnREFURVRJTUUnLCAnR0VPR1JBUEhZJywgJ0lOVEVSVkFMJywgJ0lOVDY0JywgJ0lOVCcsICdTTUFMTElOVCcsICdJTlRFR0VSJywgJ0JJR0lOVCcsICdUSU5ZSU5UJywgJ0JZVEVJTlQnLCAnTlVNRVJJQycsIC8vIHBhcmFtZXRlcmlzZWQsIE5VTUVSSUMoUHJlY2lzaW9uWywgU2NhbGVdKVxuICAnREVDSU1BTCcsIC8vIHBhcmFtZXRlcmlzZWQsIERFQ0lNQUwoUHJlY2lzaW9uWywgU2NhbGVdKVxuICAnQklHTlVNRVJJQycsIC8vIHBhcmFtZXRlcmlzZWQsIEJJR05VTUVSSUMoUHJlY2lzaW9uWywgU2NhbGVdKVxuICAnQklHREVDSU1BTCcsIC8vIHBhcmFtZXRlcmlzZWQsIEJJR0RFQ0lNQUwoUHJlY2lzaW9uWywgU2NhbGVdKVxuICAnRkxPQVQ2NCcsICdTVFJJTkcnLCAvLyBwYXJhbWV0ZXJpc2VkLCBTVFJJTkcoTGVuZ3RoKVxuICAnU1RSVUNUJywgLy8gcGFyYW1ldHJpYywgU1RSVUNUPFQ+XG4gICdUSU1FJywgJ1RJTUVaT05FJ10sXG4gIC8vIGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9iaWdxdWVyeS9kb2NzL3JlZmVyZW5jZS9zdGFuZGFyZC1zcWwvY29udmVyc2lvbl9mdW5jdGlvbnMjZm9ybWF0dGluZ19zeW50YXhcbiAgc3RyaW5nRm9ybWF0OiBbJ0hFWCcsICdCQVNFWCcsICdCQVNFNjRNJywgJ0FTQ0lJJywgJ1VURi04JywgJ1VURjgnXSxcbiAgbWlzYzogWydTQUZFJ10sXG4gIC8vIGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9iaWdxdWVyeS9kb2NzL3JlZmVyZW5jZS9zdGFuZGFyZC1zcWwvZGF0YS1kZWZpbml0aW9uLWxhbmd1YWdlXG4gIGRkbDogWydMSUtFJywgLy8gQ1JFQVRFIFRBQkxFIExJS0VcbiAgJ0NPUFknLCAvLyBDUkVBVEUgVEFCTEUgQ09QWVxuICAnQ0xPTkUnLCAvLyBDUkVBVEUgVEFCTEUgQ0xPTkVcbiAgJ0lOJywgJ09VVCcsICdJTk9VVCcsICdSRVRVUk5TJywgJ0xBTkdVQUdFJywgJ0NBU0NBREUnLCAnUkVTVFJJQ1QnLCAnREVURVJNSU5JU1RJQyddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJpZ3F1ZXJ5LmtleXdvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/db2/db2.formatter.js":
/*!************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/db2/db2.formatter.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _db = __webpack_require__(/*! ./db2.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/db2/db2.functions.js\");\n\nvar _db2 = __webpack_require__(/*! ./db2.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/db2/db2.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY [INPUT SEQUENCE]', 'FETCH FIRST', // Data modification\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', 'WHERE CURRENT OF', 'WITH {RR | RS | CS | UR}', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE [TABLE]', // - merge:\n'MERGE INTO', 'WHEN [NOT] MATCHED [THEN]', 'UPDATE SET', 'INSERT', // Data definition\n'CREATE [OR REPLACE] VIEW', 'CREATE [GLOBAL TEMPORARY] TABLE', 'DROP TABLE [HIERARCHY]', // alter table:\n'ALTER TABLE', 'ADD [COLUMN]', 'DROP [COLUMN]', 'RENAME [COLUMN]', 'ALTER [COLUMN]', 'SET DATA TYPE', // for alter column\n'SET NOT NULL', // for alter column\n'DROP {IDENTITY | EXPRESSION | DEFAULT | NOT NULL}', // for alter column\n// https://www.ibm.com/docs/en/db2-for-zos/11?topic=statements-list-supported\n'ALLOCATE CURSOR', 'ALTER DATABASE', 'ALTER FUNCTION', 'ALTER INDEX', 'ALTER MASK', 'ALTER PERMISSION', 'ALTER PROCEDURE', 'ALTER SEQUENCE', 'ALTER STOGROUP', 'ALTER TABLESPACE', 'ALTER TRIGGER', 'ALTER TRUSTED CONTEXT', 'ALTER VIEW', 'ASSOCIATE LOCATORS', 'BEGIN DECLARE SECTION', 'CALL', 'CLOSE', 'COMMENT', 'COMMIT', 'CONNECT', 'CREATE ALIAS', 'CREATE AUXILIARY TABLE', 'CREATE DATABASE', 'CREATE FUNCTION', 'CREATE GLOBAL TEMPORARY TABLE', 'CREATE INDEX', 'CREATE LOB TABLESPACE', 'CREATE MASK', 'CREATE PERMISSION', 'CREATE PROCEDURE', 'CREATE ROLE', 'CREATE SEQUENCE', 'CREATE STOGROUP', 'CREATE SYNONYM', 'CREATE TABLESPACE', 'CREATE TRIGGER', 'CREATE TRUSTED CONTEXT', 'CREATE TYPE', 'CREATE VARIABLE', 'DECLARE CURSOR', 'DECLARE GLOBAL TEMPORARY TABLE', 'DECLARE STATEMENT', 'DECLARE TABLE', 'DECLARE VARIABLE', 'DESCRIBE CURSOR', 'DESCRIBE INPUT', 'DESCRIBE OUTPUT', 'DESCRIBE PROCEDURE', 'DESCRIBE TABLE', 'DROP', 'END DECLARE SECTION', 'EXCHANGE', 'EXECUTE', 'EXECUTE IMMEDIATE', 'EXPLAIN', 'FETCH', 'FREE LOCATOR', 'GET DIAGNOSTICS', 'GRANT', 'HOLD LOCATOR', 'INCLUDE', 'LABEL', 'LOCK TABLE', 'OPEN', 'PREPARE', 'REFRESH', 'RELEASE', 'RELEASE SAVEPOINT', 'RENAME', 'REVOKE', 'ROLLBACK', 'SAVEPOINT', 'SELECT INTO', 'SET CONNECTION', 'SET CURRENT ACCELERATOR', 'SET CURRENT APPLICATION COMPATIBILITY', 'SET CURRENT APPLICATION ENCODING SCHEME', 'SET CURRENT DEBUG MODE', 'SET CURRENT DECFLOAT ROUNDING MODE', 'SET CURRENT DEGREE', 'SET CURRENT EXPLAIN MODE', 'SET CURRENT GET_ACCEL_ARCHIVE', 'SET CURRENT LOCALE LC_CTYPE', 'SET CURRENT MAINTAINED TABLE TYPES FOR OPTIMIZATION', 'SET CURRENT OPTIMIZATION HINT', 'SET CURRENT PACKAGE PATH', 'SET CURRENT PACKAGESET', 'SET CURRENT PRECISION', 'SET CURRENT QUERY ACCELERATION', 'SET CURRENT QUERY ACCELERATION WAITFORDATA', 'SET CURRENT REFRESH AGE', 'SET CURRENT ROUTINE VERSION', 'SET CURRENT RULES', 'SET CURRENT SQLID', 'SET CURRENT TEMPORAL BUSINESS_TIME', 'SET CURRENT TEMPORAL SYSTEM_TIME', 'SET ENCRYPTION PASSWORD', 'SET PATH', 'SET SCHEMA', 'SET SESSION TIME ZONE', 'SIGNAL', 'VALUES INTO', 'WHENEVER', // other\n'AFTER', 'GO', 'SET CURRENT SCHEMA']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', '{ROWS | RANGE} BETWEEN']); // https://www.ibm.com/support/knowledgecenter/en/ssw_ibm_i_72/db2/rbafzintro.htm\n\nvar Db2Formatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(Db2Formatter, _Formatter);\n\n  var _super = _createSuper(Db2Formatter);\n\n  function Db2Formatter() {\n    _classCallCheck(this, Db2Formatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Db2Formatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE', 'ELSEIF'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _db2.keywords,\n        reservedFunctionNames: _db.functions,\n        stringTypes: [{\n          quote: \"''-qq\",\n          prefixes: ['G', 'N', 'U&']\n        }, {\n          quote: \"''-raw\",\n          prefixes: ['X', 'BX', 'GX', 'UX'],\n          requirePrefix: true\n        }],\n        identTypes: [\"\\\"\\\"-qq\"],\n        paramTypes: {\n          positional: true,\n          named: [':']\n        },\n        paramChars: {\n          first: '@#$',\n          rest: '@#$'\n        },\n        operators: ['**', '¬=', '¬>', '¬<', '!>', '!<', '||']\n      });\n    }\n  }]);\n\n  return Db2Formatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = Db2Formatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=db2.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/db2/db2.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/db2/db2.functions.js":
/*!************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/db2/db2.functions.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-aggregate\n  aggregate: ['ARRAY_AGG', 'AVG', 'CORR', 'CORRELATION', 'COUNT', 'COUNT_BIG', 'COVAR_POP', 'COVARIANCE', 'COVAR', 'COVAR_SAMP', 'COVARIANCE_SAMP', 'CUME_DIST', 'GROUPING', 'LISTAGG', 'MAX', 'MEDIAN', 'MIN', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_ICPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'STDDEV_POP', 'STDDEV', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VARIANCE', 'VAR', 'VAR_SAMP', 'VARIANCE_SAMP', 'XMLAGG'],\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-scalar\n  scalar: ['ABS', 'ABSVAL', 'ACOS', 'ADD_DAYS', 'ADD_MONTHS', 'ARRAY_DELETE', 'ARRAY_FIRST', 'ARRAY_LAST', 'ARRAY_NEXT', 'ARRAY_PRIOR', 'ARRAY_TRIM', 'ASCII', 'ASCII_CHR', 'ASCII_STR', 'ASCIISTR', 'ASIN', 'ATAN', 'ATANH', 'ATAN2', 'BIGINT', 'BINARY', 'BITAND', 'BITANDNOT', 'BITOR', 'BITXOR', 'BITNOT', 'BLOB', 'BTRIM', 'CARDINALITY', 'CCSID_ENCODING', 'CEILING', 'CEIL', 'CHAR', 'CHAR9', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHR', 'CLOB', 'COALESCE', 'COLLATION_KEY', 'COMPARE_DECFLOAT', 'CONCAT', 'CONTAINS', 'COS', 'COSH', 'DATE', 'DAY', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFWEEK_ISO', 'DAYOFYEAR', 'DAYS', 'DAYS_BETWEEN', 'DBCLOB', 'DECFLOAT', 'DECFLOAT_FORMAT', 'DECFLOAT_SORTKEY', 'DECIMAL', 'DEC', 'DECODE', 'DECRYPT_BINARY', 'DECRYPT_BIT', 'DECRYPT_CHAR', 'DECRYPT_DB', 'DECRYPT_DATAKEY_BIGINT', 'DECRYPT_DATAKEY_BIT', 'DECRYPT_DATAKEY_CLOB', 'DECRYPT_DATAKEY_DBCLOB', 'DECRYPT_DATAKEY_DECIMAL', 'DECRYPT_DATAKEY_INTEGER', 'DECRYPT_DATAKEY_VARCHAR', 'DECRYPT_DATAKEY_VARGRAPHIC', 'DEGREES', 'DIFFERENCE', 'DIGITS', 'DOUBLE_PRECISION', 'DOUBLE', 'DSN_XMLVALIDATE', 'EBCDIC_CHR', 'EBCDIC_STR', 'ENCRYPT_DATAKEY', 'ENCRYPT_TDES', 'EXP', 'EXTRACT', 'FLOAT', 'FLOOR', 'GENERATE_UNIQUE', 'GENERATE_UNIQUE_BINARY', 'GETHINT', 'GETVARIABLE', 'GRAPHIC', 'GREATEST', 'HASH', 'HASH_CRC32', 'HASH_MD5', 'HASH_SHA1', 'HASH_SHA256', 'HEX', 'HOUR', 'IDENTITY_VAL_LOCAL', 'IFNULL', 'INSERT', 'INSTR', 'INTEGER', 'INT', 'JULIAN_DAY', 'LAST_DAY', 'LCASE', 'LEAST', 'LEFT', 'LENGTH', 'LN', 'LOCATE', 'LOCATE_IN_STRING', 'LOG10', 'LOWER', 'LPAD', 'LTRIM', 'MAX', 'MAX_CARDINALITY', 'MICROSECOND', 'MIDNIGHT_SECONDS', 'MIN', 'MINUTE', 'MOD', 'MONTH', 'MONTHS_BETWEEN', 'MQREAD', 'MQREADCLOB', 'MQRECEIVE', 'MQRECEIVECLOB', 'MQSEND', 'MULTIPLY_ALT', 'NEXT_DAY', 'NEXT_MONTH', 'NORMALIZE_DECFLOAT', 'NORMALIZE_STRING', 'NULLIF', 'NVL', 'OVERLAY', 'PACK', 'POSITION', 'POSSTR', 'POWER', 'POW', 'QUANTIZE', 'QUARTER', 'RADIANS', 'RAISE_ERROR', 'RANDOM', 'RAND', 'REAL', 'REGEXP_COUNT', 'REGEXP_INSTR', 'REGEXP_LIKE', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPEAT', 'REPLACE', 'RID', 'RIGHT', 'ROUND', 'ROUND_TIMESTAMP', 'ROWID', 'RPAD', 'RTRIM', 'SCORE', 'SECOND', 'SIGN', 'SIN', 'SINH', 'SMALLINT', 'SOUNDEX', 'SOAPHTTPC', 'SOAPHTTPV', 'SOAPHTTPNC', 'SOAPHTTPNV', 'SPACE', 'SQRT', 'STRIP', 'STRLEFT', 'STRPOS', 'STRRIGHT', 'SUBSTR', 'SUBSTRING', 'TAN', 'TANH', 'TIME', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TIMESTAMP_FORMAT', 'TIMESTAMP_ISO', 'TIMESTAMP_TZ', 'TO_CHAR', 'TO_CLOB', 'TO_DATE', 'TO_NUMBER', 'TOTALORDER', 'TO_TIMESTAMP', 'TRANSLATE', 'TRIM', 'TRIM_ARRAY', 'TRUNCATE', 'TRUNC', 'TRUNC_TIMESTAMP', 'UCASE', 'UNICODE', 'UNICODE_STR', 'UNISTR', 'UPPER', 'VALUE', 'VARBINARY', 'VARCHAR', 'VARCHAR9', 'VARCHAR_BIT_FORMAT', 'VARCHAR_FORMAT', 'VARGRAPHIC', 'VERIFY_GROUP_FOR_USER', 'VERIFY_ROLE_FOR_USER', 'VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER', 'WEEK', 'WEEK_ISO', 'WRAP', 'XMLATTRIBUTES', 'XMLCOMMENT', 'XMLCONCAT', 'XMLDOCUMENT', 'XMLELEMENT', 'XMLFOREST', 'XMLMODIFY', 'XMLNAMESPACES', 'XMLPARSE', 'XMLPI', 'XMLQUERY', 'XMLSERIALIZE', 'XMLTEXT', 'XMLXSROBJECTID', 'XSLTRANSFORM', 'YEAR'],\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-table\n  table: ['ADMIN_TASK_LIST', 'ADMIN_TASK_OUTPUT', 'ADMIN_TASK_STATUS', 'BLOCKING_THREADS', 'MQREADALL', 'MQREADALLCLOB', 'MQRECEIVEALL', 'MQRECEIVEALLCLOB', 'XMLTABLE'],\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-row\n  row: ['UNPACK'],\n  // https://www.ibm.com/docs/en/db2-for-zos/12?topic=expressions-olap-specification\n  olap: ['CUME_DIST', 'PERCENT_RANK', 'RANK', 'DENSE_RANK', 'NTILE', 'LAG', 'LEAD', 'ROW_NUMBER', 'FIRST_VALUE', 'LAST_VALUE', 'NTH_VALUE', 'RATIO_TO_REPORT'],\n  // Type casting\n  cast: ['CAST']\n});\nexports.functions = functions;\n//# sourceMappingURL=db2.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9kYjIvZGIyLmZ1bmN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL2RiMi9kYjIuZnVuY3Rpb25zLmpzP2YyMzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZ1bmN0aW9ucyA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcblxudmFyIGZ1bmN0aW9ucyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vd3d3LmlibS5jb20vZG9jcy9lbi9kYjItZm9yLXpvcy8xMT90b3BpYz1mdW5jdGlvbnMtYWdncmVnYXRlXG4gIGFnZ3JlZ2F0ZTogWydBUlJBWV9BR0cnLCAnQVZHJywgJ0NPUlInLCAnQ09SUkVMQVRJT04nLCAnQ09VTlQnLCAnQ09VTlRfQklHJywgJ0NPVkFSX1BPUCcsICdDT1ZBUklBTkNFJywgJ0NPVkFSJywgJ0NPVkFSX1NBTVAnLCAnQ09WQVJJQU5DRV9TQU1QJywgJ0NVTUVfRElTVCcsICdHUk9VUElORycsICdMSVNUQUdHJywgJ01BWCcsICdNRURJQU4nLCAnTUlOJywgJ1BFUkNFTlRJTEVfQ09OVCcsICdQRVJDRU5USUxFX0RJU0MnLCAnUEVSQ0VOVF9SQU5LJywgJ1JFR1JfQVZHWCcsICdSRUdSX0FWR1knLCAnUkVHUl9DT1VOVCcsICdSRUdSX0lOVEVSQ0VQVCcsICdSRUdSX0lDUFQnLCAnUkVHUl9SMicsICdSRUdSX1NMT1BFJywgJ1JFR1JfU1hYJywgJ1JFR1JfU1hZJywgJ1JFR1JfU1lZJywgJ1NURERFVl9QT1AnLCAnU1REREVWJywgJ1NURERFVl9TQU1QJywgJ1NVTScsICdWQVJfUE9QJywgJ1ZBUklBTkNFJywgJ1ZBUicsICdWQVJfU0FNUCcsICdWQVJJQU5DRV9TQU1QJywgJ1hNTEFHRyddLFxuICAvLyBodHRwczovL3d3dy5pYm0uY29tL2RvY3MvZW4vZGIyLWZvci16b3MvMTE/dG9waWM9ZnVuY3Rpb25zLXNjYWxhclxuICBzY2FsYXI6IFsnQUJTJywgJ0FCU1ZBTCcsICdBQ09TJywgJ0FERF9EQVlTJywgJ0FERF9NT05USFMnLCAnQVJSQVlfREVMRVRFJywgJ0FSUkFZX0ZJUlNUJywgJ0FSUkFZX0xBU1QnLCAnQVJSQVlfTkVYVCcsICdBUlJBWV9QUklPUicsICdBUlJBWV9UUklNJywgJ0FTQ0lJJywgJ0FTQ0lJX0NIUicsICdBU0NJSV9TVFInLCAnQVNDSUlTVFInLCAnQVNJTicsICdBVEFOJywgJ0FUQU5IJywgJ0FUQU4yJywgJ0JJR0lOVCcsICdCSU5BUlknLCAnQklUQU5EJywgJ0JJVEFORE5PVCcsICdCSVRPUicsICdCSVRYT1InLCAnQklUTk9UJywgJ0JMT0InLCAnQlRSSU0nLCAnQ0FSRElOQUxJVFknLCAnQ0NTSURfRU5DT0RJTkcnLCAnQ0VJTElORycsICdDRUlMJywgJ0NIQVInLCAnQ0hBUjknLCAnQ0hBUkFDVEVSX0xFTkdUSCcsICdDSEFSX0xFTkdUSCcsICdDSFInLCAnQ0xPQicsICdDT0FMRVNDRScsICdDT0xMQVRJT05fS0VZJywgJ0NPTVBBUkVfREVDRkxPQVQnLCAnQ09OQ0FUJywgJ0NPTlRBSU5TJywgJ0NPUycsICdDT1NIJywgJ0RBVEUnLCAnREFZJywgJ0RBWU9GTU9OVEgnLCAnREFZT0ZXRUVLJywgJ0RBWU9GV0VFS19JU08nLCAnREFZT0ZZRUFSJywgJ0RBWVMnLCAnREFZU19CRVRXRUVOJywgJ0RCQ0xPQicsICdERUNGTE9BVCcsICdERUNGTE9BVF9GT1JNQVQnLCAnREVDRkxPQVRfU09SVEtFWScsICdERUNJTUFMJywgJ0RFQycsICdERUNPREUnLCAnREVDUllQVF9CSU5BUlknLCAnREVDUllQVF9CSVQnLCAnREVDUllQVF9DSEFSJywgJ0RFQ1JZUFRfREInLCAnREVDUllQVF9EQVRBS0VZX0JJR0lOVCcsICdERUNSWVBUX0RBVEFLRVlfQklUJywgJ0RFQ1JZUFRfREFUQUtFWV9DTE9CJywgJ0RFQ1JZUFRfREFUQUtFWV9EQkNMT0InLCAnREVDUllQVF9EQVRBS0VZX0RFQ0lNQUwnLCAnREVDUllQVF9EQVRBS0VZX0lOVEVHRVInLCAnREVDUllQVF9EQVRBS0VZX1ZBUkNIQVInLCAnREVDUllQVF9EQVRBS0VZX1ZBUkdSQVBISUMnLCAnREVHUkVFUycsICdESUZGRVJFTkNFJywgJ0RJR0lUUycsICdET1VCTEVfUFJFQ0lTSU9OJywgJ0RPVUJMRScsICdEU05fWE1MVkFMSURBVEUnLCAnRUJDRElDX0NIUicsICdFQkNESUNfU1RSJywgJ0VOQ1JZUFRfREFUQUtFWScsICdFTkNSWVBUX1RERVMnLCAnRVhQJywgJ0VYVFJBQ1QnLCAnRkxPQVQnLCAnRkxPT1InLCAnR0VORVJBVEVfVU5JUVVFJywgJ0dFTkVSQVRFX1VOSVFVRV9CSU5BUlknLCAnR0VUSElOVCcsICdHRVRWQVJJQUJMRScsICdHUkFQSElDJywgJ0dSRUFURVNUJywgJ0hBU0gnLCAnSEFTSF9DUkMzMicsICdIQVNIX01ENScsICdIQVNIX1NIQTEnLCAnSEFTSF9TSEEyNTYnLCAnSEVYJywgJ0hPVVInLCAnSURFTlRJVFlfVkFMX0xPQ0FMJywgJ0lGTlVMTCcsICdJTlNFUlQnLCAnSU5TVFInLCAnSU5URUdFUicsICdJTlQnLCAnSlVMSUFOX0RBWScsICdMQVNUX0RBWScsICdMQ0FTRScsICdMRUFTVCcsICdMRUZUJywgJ0xFTkdUSCcsICdMTicsICdMT0NBVEUnLCAnTE9DQVRFX0lOX1NUUklORycsICdMT0cxMCcsICdMT1dFUicsICdMUEFEJywgJ0xUUklNJywgJ01BWCcsICdNQVhfQ0FSRElOQUxJVFknLCAnTUlDUk9TRUNPTkQnLCAnTUlETklHSFRfU0VDT05EUycsICdNSU4nLCAnTUlOVVRFJywgJ01PRCcsICdNT05USCcsICdNT05USFNfQkVUV0VFTicsICdNUVJFQUQnLCAnTVFSRUFEQ0xPQicsICdNUVJFQ0VJVkUnLCAnTVFSRUNFSVZFQ0xPQicsICdNUVNFTkQnLCAnTVVMVElQTFlfQUxUJywgJ05FWFRfREFZJywgJ05FWFRfTU9OVEgnLCAnTk9STUFMSVpFX0RFQ0ZMT0FUJywgJ05PUk1BTElaRV9TVFJJTkcnLCAnTlVMTElGJywgJ05WTCcsICdPVkVSTEFZJywgJ1BBQ0snLCAnUE9TSVRJT04nLCAnUE9TU1RSJywgJ1BPV0VSJywgJ1BPVycsICdRVUFOVElaRScsICdRVUFSVEVSJywgJ1JBRElBTlMnLCAnUkFJU0VfRVJST1InLCAnUkFORE9NJywgJ1JBTkQnLCAnUkVBTCcsICdSRUdFWFBfQ09VTlQnLCAnUkVHRVhQX0lOU1RSJywgJ1JFR0VYUF9MSUtFJywgJ1JFR0VYUF9SRVBMQUNFJywgJ1JFR0VYUF9TVUJTVFInLCAnUkVQRUFUJywgJ1JFUExBQ0UnLCAnUklEJywgJ1JJR0hUJywgJ1JPVU5EJywgJ1JPVU5EX1RJTUVTVEFNUCcsICdST1dJRCcsICdSUEFEJywgJ1JUUklNJywgJ1NDT1JFJywgJ1NFQ09ORCcsICdTSUdOJywgJ1NJTicsICdTSU5IJywgJ1NNQUxMSU5UJywgJ1NPVU5ERVgnLCAnU09BUEhUVFBDJywgJ1NPQVBIVFRQVicsICdTT0FQSFRUUE5DJywgJ1NPQVBIVFRQTlYnLCAnU1BBQ0UnLCAnU1FSVCcsICdTVFJJUCcsICdTVFJMRUZUJywgJ1NUUlBPUycsICdTVFJSSUdIVCcsICdTVUJTVFInLCAnU1VCU1RSSU5HJywgJ1RBTicsICdUQU5IJywgJ1RJTUUnLCAnVElNRVNUQU1QJywgJ1RJTUVTVEFNUEFERCcsICdUSU1FU1RBTVBESUZGJywgJ1RJTUVTVEFNUF9GT1JNQVQnLCAnVElNRVNUQU1QX0lTTycsICdUSU1FU1RBTVBfVFonLCAnVE9fQ0hBUicsICdUT19DTE9CJywgJ1RPX0RBVEUnLCAnVE9fTlVNQkVSJywgJ1RPVEFMT1JERVInLCAnVE9fVElNRVNUQU1QJywgJ1RSQU5TTEFURScsICdUUklNJywgJ1RSSU1fQVJSQVknLCAnVFJVTkNBVEUnLCAnVFJVTkMnLCAnVFJVTkNfVElNRVNUQU1QJywgJ1VDQVNFJywgJ1VOSUNPREUnLCAnVU5JQ09ERV9TVFInLCAnVU5JU1RSJywgJ1VQUEVSJywgJ1ZBTFVFJywgJ1ZBUkJJTkFSWScsICdWQVJDSEFSJywgJ1ZBUkNIQVI5JywgJ1ZBUkNIQVJfQklUX0ZPUk1BVCcsICdWQVJDSEFSX0ZPUk1BVCcsICdWQVJHUkFQSElDJywgJ1ZFUklGWV9HUk9VUF9GT1JfVVNFUicsICdWRVJJRllfUk9MRV9GT1JfVVNFUicsICdWRVJJRllfVFJVU1RFRF9DT05URVhUX1JPTEVfRk9SX1VTRVInLCAnV0VFSycsICdXRUVLX0lTTycsICdXUkFQJywgJ1hNTEFUVFJJQlVURVMnLCAnWE1MQ09NTUVOVCcsICdYTUxDT05DQVQnLCAnWE1MRE9DVU1FTlQnLCAnWE1MRUxFTUVOVCcsICdYTUxGT1JFU1QnLCAnWE1MTU9ESUZZJywgJ1hNTE5BTUVTUEFDRVMnLCAnWE1MUEFSU0UnLCAnWE1MUEknLCAnWE1MUVVFUlknLCAnWE1MU0VSSUFMSVpFJywgJ1hNTFRFWFQnLCAnWE1MWFNST0JKRUNUSUQnLCAnWFNMVFJBTlNGT1JNJywgJ1lFQVInXSxcbiAgLy8gaHR0cHM6Ly93d3cuaWJtLmNvbS9kb2NzL2VuL2RiMi1mb3Item9zLzExP3RvcGljPWZ1bmN0aW9ucy10YWJsZVxuICB0YWJsZTogWydBRE1JTl9UQVNLX0xJU1QnLCAnQURNSU5fVEFTS19PVVRQVVQnLCAnQURNSU5fVEFTS19TVEFUVVMnLCAnQkxPQ0tJTkdfVEhSRUFEUycsICdNUVJFQURBTEwnLCAnTVFSRUFEQUxMQ0xPQicsICdNUVJFQ0VJVkVBTEwnLCAnTVFSRUNFSVZFQUxMQ0xPQicsICdYTUxUQUJMRSddLFxuICAvLyBodHRwczovL3d3dy5pYm0uY29tL2RvY3MvZW4vZGIyLWZvci16b3MvMTE/dG9waWM9ZnVuY3Rpb25zLXJvd1xuICByb3c6IFsnVU5QQUNLJ10sXG4gIC8vIGh0dHBzOi8vd3d3LmlibS5jb20vZG9jcy9lbi9kYjItZm9yLXpvcy8xMj90b3BpYz1leHByZXNzaW9ucy1vbGFwLXNwZWNpZmljYXRpb25cbiAgb2xhcDogWydDVU1FX0RJU1QnLCAnUEVSQ0VOVF9SQU5LJywgJ1JBTksnLCAnREVOU0VfUkFOSycsICdOVElMRScsICdMQUcnLCAnTEVBRCcsICdST1dfTlVNQkVSJywgJ0ZJUlNUX1ZBTFVFJywgJ0xBU1RfVkFMVUUnLCAnTlRIX1ZBTFVFJywgJ1JBVElPX1RPX1JFUE9SVCddLFxuICAvLyBUeXBlIGNhc3RpbmdcbiAgY2FzdDogWydDQVNUJ11cbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSBmdW5jdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYjIuZnVuY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/db2/db2.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/db2/db2.keywords.js":
/*!***********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/db2/db2.keywords.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=words-reserved#db2z_reservedwords__newresword\n  standard: ['ALL', 'ALLOCATE', 'ALLOW', 'ALTERAND', 'ANY', 'AS', 'ARRAY', 'ARRAY_EXISTS', 'ASENSITIVE', 'ASSOCIATE', 'ASUTIME', 'AT', 'AUDIT', 'AUX', 'AUXILIARY', 'BEFORE', 'BEGIN', 'BETWEEN', 'BUFFERPOOL', 'BY', 'CAPTURE', 'CASCADED', 'CAST', 'CCSID', 'CHARACTER', 'CHECK', 'CLONE', 'CLUSTER', 'COLLECTION', 'COLLID', 'COLUMN', 'CONDITION', 'CONNECTION', 'CONSTRAINT', 'CONTENT', 'CONTINUE', 'CREATE', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_LC_CTYPE', 'CURRENT_PATH', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRVAL', 'CURSOR', 'DATA', 'DATABASE', 'DBINFO', 'DECLARE', 'DEFAULT', 'DESCRIPTOR', 'DETERMINISTIC', 'DISABLE', 'DISALLOW', 'DISTINCT', 'DO', 'DOCUMENT', 'DSSIZE', 'DYNAMIC', 'EDITPROC', 'ENCODING', 'ENCRYPTION', 'ENDING', 'END-EXEC', 'ERASE', 'ESCAPE', 'EXCEPTION', 'EXISTS', 'EXIT', 'EXTERNAL', 'FENCED', 'FIELDPROC', 'FINAL', 'FIRST', 'FOR', 'FREE', 'FULL', 'FUNCTION', 'GENERATED', 'GET', 'GLOBAL', 'GOTO', 'GROUP', 'HANDLER', 'HOLD', 'HOURS', 'IF', 'IMMEDIATE', 'IN', 'INCLUSIVE', 'INDEX', 'INHERIT', 'INNER', 'INOUT', 'INSENSITIVE', 'INTO', 'IS', 'ISOBID', 'ITERATE', 'JAR', 'KEEP', 'KEY', 'LANGUAGE', 'LAST', 'LC_CTYPE', 'LEAVE', 'LIKE', 'LOCAL', 'LOCALE', 'LOCATOR', 'LOCATORS', 'LOCK', 'LOCKMAX', 'LOCKSIZE', 'LONG', 'LOOP', 'MAINTAINED', 'MATERIALIZED', 'MICROSECONDS', 'MINUTEMINUTES', 'MODIFIES', 'MONTHS', 'NEXT', 'NEXTVAL', 'NO', 'NONE', 'NOT', 'NULL', 'NULLS', 'NUMPARTS', 'OBID', 'OF', 'OLD', 'ON', 'OPTIMIZATION', 'OPTIMIZE', 'ORDER', 'ORGANIZATION', 'OUT', 'OUTER', 'PACKAGE', 'PARAMETER', 'PART', 'PADDED', 'PARTITION', 'PARTITIONED', 'PARTITIONING', 'PATH', 'PIECESIZE', 'PERIOD', 'PLAN', 'PRECISION', 'PREVVAL', 'PRIOR', 'PRIQTY', 'PRIVILEGES', 'PROCEDURE', 'PROGRAM', 'PSID', 'PUBLIC', 'QUERY', 'QUERYNO', 'READS', 'REFERENCES', 'RESIGNAL', 'RESTRICT', 'RESULT', 'RESULT_SET_LOCATOR', 'RETURN', 'RETURNS', 'ROLE', 'ROLLUP', 'ROUND_CEILING', 'ROUND_DOWN', 'ROUND_FLOOR', 'ROUND_HALF_DOWN', 'ROUND_HALF_EVEN', 'ROUND_HALF_UP', 'ROUND_UP', 'ROW', 'ROWSET', 'SCHEMA', 'SCRATCHPAD', 'SECONDS', 'SECQTY', 'SECURITY', 'SEQUENCE', 'SENSITIVE', 'SESSION_USER', 'SIMPLE', 'SOME', 'SOURCE', 'SPECIFIC', 'STANDARD', 'STATIC', 'STATEMENT', 'STAY', 'STOGROUP', 'STORES', 'STYLE', 'SUMMARY', 'SYNONYM', 'SYSDATE', 'SYSTEM', 'SYSTIMESTAMP', 'TABLE', 'TABLESPACE', 'THEN', 'TO', 'TRIGGER', 'TYPE', 'UNDO', 'UNIQUE', 'UNTIL', 'USER', 'USING', 'VALIDPROC', 'VARIABLE', 'VARIANT', 'VCAT', 'VERSIONING', 'VIEW', 'VOLATILE', 'VOLUMES', 'WHILE', 'WLM', 'XMLEXISTS', 'XMLCAST', 'YEARS', 'ZONE']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=db2.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9kYjIvZGIyLmtleXdvcmRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL2RiMi9kYjIua2V5d29yZHMuanM/MTc0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBrZXl3b3JkcyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vd3d3LmlibS5jb20vZG9jcy9lbi9kYjItZm9yLXpvcy8xMT90b3BpYz13b3Jkcy1yZXNlcnZlZCNkYjJ6X3Jlc2VydmVkd29yZHNfX25ld3Jlc3dvcmRcbiAgc3RhbmRhcmQ6IFsnQUxMJywgJ0FMTE9DQVRFJywgJ0FMTE9XJywgJ0FMVEVSQU5EJywgJ0FOWScsICdBUycsICdBUlJBWScsICdBUlJBWV9FWElTVFMnLCAnQVNFTlNJVElWRScsICdBU1NPQ0lBVEUnLCAnQVNVVElNRScsICdBVCcsICdBVURJVCcsICdBVVgnLCAnQVVYSUxJQVJZJywgJ0JFRk9SRScsICdCRUdJTicsICdCRVRXRUVOJywgJ0JVRkZFUlBPT0wnLCAnQlknLCAnQ0FQVFVSRScsICdDQVNDQURFRCcsICdDQVNUJywgJ0NDU0lEJywgJ0NIQVJBQ1RFUicsICdDSEVDSycsICdDTE9ORScsICdDTFVTVEVSJywgJ0NPTExFQ1RJT04nLCAnQ09MTElEJywgJ0NPTFVNTicsICdDT05ESVRJT04nLCAnQ09OTkVDVElPTicsICdDT05TVFJBSU5UJywgJ0NPTlRFTlQnLCAnQ09OVElOVUUnLCAnQ1JFQVRFJywgJ0NVQkUnLCAnQ1VSUkVOVCcsICdDVVJSRU5UX0RBVEUnLCAnQ1VSUkVOVF9MQ19DVFlQRScsICdDVVJSRU5UX1BBVEgnLCAnQ1VSUkVOVF9TQ0hFTUEnLCAnQ1VSUkVOVF9USU1FJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ0NVUlJWQUwnLCAnQ1VSU09SJywgJ0RBVEEnLCAnREFUQUJBU0UnLCAnREJJTkZPJywgJ0RFQ0xBUkUnLCAnREVGQVVMVCcsICdERVNDUklQVE9SJywgJ0RFVEVSTUlOSVNUSUMnLCAnRElTQUJMRScsICdESVNBTExPVycsICdESVNUSU5DVCcsICdETycsICdET0NVTUVOVCcsICdEU1NJWkUnLCAnRFlOQU1JQycsICdFRElUUFJPQycsICdFTkNPRElORycsICdFTkNSWVBUSU9OJywgJ0VORElORycsICdFTkQtRVhFQycsICdFUkFTRScsICdFU0NBUEUnLCAnRVhDRVBUSU9OJywgJ0VYSVNUUycsICdFWElUJywgJ0VYVEVSTkFMJywgJ0ZFTkNFRCcsICdGSUVMRFBST0MnLCAnRklOQUwnLCAnRklSU1QnLCAnRk9SJywgJ0ZSRUUnLCAnRlVMTCcsICdGVU5DVElPTicsICdHRU5FUkFURUQnLCAnR0VUJywgJ0dMT0JBTCcsICdHT1RPJywgJ0dST1VQJywgJ0hBTkRMRVInLCAnSE9MRCcsICdIT1VSUycsICdJRicsICdJTU1FRElBVEUnLCAnSU4nLCAnSU5DTFVTSVZFJywgJ0lOREVYJywgJ0lOSEVSSVQnLCAnSU5ORVInLCAnSU5PVVQnLCAnSU5TRU5TSVRJVkUnLCAnSU5UTycsICdJUycsICdJU09CSUQnLCAnSVRFUkFURScsICdKQVInLCAnS0VFUCcsICdLRVknLCAnTEFOR1VBR0UnLCAnTEFTVCcsICdMQ19DVFlQRScsICdMRUFWRScsICdMSUtFJywgJ0xPQ0FMJywgJ0xPQ0FMRScsICdMT0NBVE9SJywgJ0xPQ0FUT1JTJywgJ0xPQ0snLCAnTE9DS01BWCcsICdMT0NLU0laRScsICdMT05HJywgJ0xPT1AnLCAnTUFJTlRBSU5FRCcsICdNQVRFUklBTElaRUQnLCAnTUlDUk9TRUNPTkRTJywgJ01JTlVURU1JTlVURVMnLCAnTU9ESUZJRVMnLCAnTU9OVEhTJywgJ05FWFQnLCAnTkVYVFZBTCcsICdOTycsICdOT05FJywgJ05PVCcsICdOVUxMJywgJ05VTExTJywgJ05VTVBBUlRTJywgJ09CSUQnLCAnT0YnLCAnT0xEJywgJ09OJywgJ09QVElNSVpBVElPTicsICdPUFRJTUlaRScsICdPUkRFUicsICdPUkdBTklaQVRJT04nLCAnT1VUJywgJ09VVEVSJywgJ1BBQ0tBR0UnLCAnUEFSQU1FVEVSJywgJ1BBUlQnLCAnUEFEREVEJywgJ1BBUlRJVElPTicsICdQQVJUSVRJT05FRCcsICdQQVJUSVRJT05JTkcnLCAnUEFUSCcsICdQSUVDRVNJWkUnLCAnUEVSSU9EJywgJ1BMQU4nLCAnUFJFQ0lTSU9OJywgJ1BSRVZWQUwnLCAnUFJJT1InLCAnUFJJUVRZJywgJ1BSSVZJTEVHRVMnLCAnUFJPQ0VEVVJFJywgJ1BST0dSQU0nLCAnUFNJRCcsICdQVUJMSUMnLCAnUVVFUlknLCAnUVVFUllOTycsICdSRUFEUycsICdSRUZFUkVOQ0VTJywgJ1JFU0lHTkFMJywgJ1JFU1RSSUNUJywgJ1JFU1VMVCcsICdSRVNVTFRfU0VUX0xPQ0FUT1InLCAnUkVUVVJOJywgJ1JFVFVSTlMnLCAnUk9MRScsICdST0xMVVAnLCAnUk9VTkRfQ0VJTElORycsICdST1VORF9ET1dOJywgJ1JPVU5EX0ZMT09SJywgJ1JPVU5EX0hBTEZfRE9XTicsICdST1VORF9IQUxGX0VWRU4nLCAnUk9VTkRfSEFMRl9VUCcsICdST1VORF9VUCcsICdST1cnLCAnUk9XU0VUJywgJ1NDSEVNQScsICdTQ1JBVENIUEFEJywgJ1NFQ09ORFMnLCAnU0VDUVRZJywgJ1NFQ1VSSVRZJywgJ1NFUVVFTkNFJywgJ1NFTlNJVElWRScsICdTRVNTSU9OX1VTRVInLCAnU0lNUExFJywgJ1NPTUUnLCAnU09VUkNFJywgJ1NQRUNJRklDJywgJ1NUQU5EQVJEJywgJ1NUQVRJQycsICdTVEFURU1FTlQnLCAnU1RBWScsICdTVE9HUk9VUCcsICdTVE9SRVMnLCAnU1RZTEUnLCAnU1VNTUFSWScsICdTWU5PTllNJywgJ1NZU0RBVEUnLCAnU1lTVEVNJywgJ1NZU1RJTUVTVEFNUCcsICdUQUJMRScsICdUQUJMRVNQQUNFJywgJ1RIRU4nLCAnVE8nLCAnVFJJR0dFUicsICdUWVBFJywgJ1VORE8nLCAnVU5JUVVFJywgJ1VOVElMJywgJ1VTRVInLCAnVVNJTkcnLCAnVkFMSURQUk9DJywgJ1ZBUklBQkxFJywgJ1ZBUklBTlQnLCAnVkNBVCcsICdWRVJTSU9OSU5HJywgJ1ZJRVcnLCAnVk9MQVRJTEUnLCAnVk9MVU1FUycsICdXSElMRScsICdXTE0nLCAnWE1MRVhJU1RTJywgJ1hNTENBU1QnLCAnWUVBUlMnLCAnWk9ORSddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRiMi5rZXl3b3Jkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/db2/db2.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/hive/hive.formatter.js":
/*!**************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/hive/hive.formatter.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _hive = __webpack_require__(/*! ./hive.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/hive/hive.functions.js\");\n\nvar _hive2 = __webpack_require__(/*! ./hive.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/hive/hive.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'SORT BY', 'CLUSTER BY', 'DISTRIBUTE BY', 'LIMIT', // Data manipulation\n// - insert:\n//   Hive does not actually support plain INSERT INTO, only INSERT INTO TABLE\n//   but it's a nuisance to not support it, as all other dialects do.\n'INSERT INTO [TABLE]', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE [TABLE]', // - merge:\n'MERGE INTO', 'WHEN [NOT] MATCHED [THEN]', 'UPDATE SET', 'INSERT [VALUES]', // - insert overwrite directory:\n//   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Writingdataintothefilesystemfromqueries\n'INSERT OVERWRITE [LOCAL] DIRECTORY', // - load:\n//   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Loadingfilesintotables\n'LOAD DATA [LOCAL] INPATH', '[OVERWRITE] INTO TABLE', // Data definition\n'CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]', 'CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'RENAME TO', // other\n'ALTER', 'CREATE', 'USE', 'DESCRIBE', 'DROP', 'FETCH', 'SET SCHEMA', // added\n'SHOW', // newline keywords\n'STORED AS', 'STORED BY', 'ROW FORMAT']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', // non-standard joins\n'LEFT SEMI JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['{ROWS | RANGE} BETWEEN']); // https://cwiki.apache.org/confluence/display/Hive/LanguageManual\n\nvar HiveFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(HiveFormatter, _Formatter);\n\n  var _super = _createSuper(HiveFormatter);\n\n  function HiveFormatter() {\n    _classCallCheck(this, HiveFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HiveFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _hive2.keywords,\n        reservedFunctionNames: _hive.functions,\n        extraParens: ['[]'],\n        stringTypes: ['\"\"-bs', \"''-bs\"],\n        identTypes: ['``'],\n        variableTypes: [{\n          quote: '{}',\n          prefixes: ['$'],\n          requirePrefix: true\n        }],\n        operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||']\n      });\n    }\n  }]);\n\n  return HiveFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = HiveFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=hive.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/hive/hive.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/hive/hive.functions.js":
/*!**************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/hive/hive.functions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF\n  math: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'BIN', 'BROUND', 'CBRT', 'CEIL', 'CEILING', 'CONV', 'COS', 'DEGREES', // 'E',\n  'EXP', 'FACTORIAL', 'FLOOR', 'GREATEST', 'HEX', 'LEAST', 'LN', 'LOG', 'LOG10', 'LOG2', 'NEGATIVE', 'PI', 'PMOD', 'POSITIVE', 'POW', 'POWER', 'RADIANS', 'RAND', 'ROUND', 'SHIFTLEFT', 'SHIFTRIGHT', 'SHIFTRIGHTUNSIGNED', 'SIGN', 'SIN', 'SQRT', 'TAN', 'UNHEX', 'WIDTH_BUCKET'],\n  array: ['ARRAY_CONTAINS', 'MAP_KEYS', 'MAP_VALUES', 'SIZE', 'SORT_ARRAY'],\n  conversion: ['BINARY', 'CAST'],\n  date: ['ADD_MONTHS', 'DATE', 'DATE_ADD', 'DATE_FORMAT', 'DATE_SUB', 'DATEDIFF', 'DAY', 'DAYNAME', 'DAYOFMONTH', 'DAYOFYEAR', 'EXTRACT', 'FROM_UNIXTIME', 'FROM_UTC_TIMESTAMP', 'HOUR', 'LAST_DAY', 'MINUTE', 'MONTH', 'MONTHS_BETWEEN', 'NEXT_DAY', 'QUARTER', 'SECOND', 'TIMESTAMP', 'TO_DATE', 'TO_UTC_TIMESTAMP', 'TRUNC', 'UNIX_TIMESTAMP', 'WEEKOFYEAR', 'YEAR'],\n  conditional: ['ASSERT_TRUE', 'COALESCE', 'IF', 'ISNOTNULL', 'ISNULL', 'NULLIF', 'NVL'],\n  string: ['ASCII', 'BASE64', 'CHARACTER_LENGTH', 'CHR', 'CONCAT', 'CONCAT_WS', 'CONTEXT_NGRAMS', 'DECODE', 'ELT', 'ENCODE', 'FIELD', 'FIND_IN_SET', 'FORMAT_NUMBER', 'GET_JSON_OBJECT', 'IN_FILE', 'INITCAP', 'INSTR', 'LCASE', 'LENGTH', 'LEVENSHTEIN', 'LOCATE', 'LOWER', 'LPAD', 'LTRIM', 'NGRAMS', 'OCTET_LENGTH', 'PARSE_URL', 'PRINTF', 'QUOTE', 'REGEXP_EXTRACT', 'REGEXP_REPLACE', 'REPEAT', 'REVERSE', 'RPAD', 'RTRIM', 'SENTENCES', 'SOUNDEX', 'SPACE', 'SPLIT', 'STR_TO_MAP', 'SUBSTR', 'SUBSTRING', 'TRANSLATE', 'TRIM', 'UCASE', 'UNBASE64', 'UPPER'],\n  masking: ['MASK', 'MASK_FIRST_N', 'MASK_HASH', 'MASK_LAST_N', 'MASK_SHOW_FIRST_N', 'MASK_SHOW_LAST_N'],\n  misc: ['AES_DECRYPT', 'AES_ENCRYPT', 'CRC32', 'CURRENT_DATABASE', 'CURRENT_USER', 'HASH', 'JAVA_METHOD', 'LOGGED_IN_USER', 'MD5', 'REFLECT', 'SHA', 'SHA1', 'SHA2', 'SURROGATE_KEY', 'VERSION'],\n  aggregate: ['AVG', 'COLLECT_LIST', 'COLLECT_SET', 'CORR', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'HISTOGRAM_NUMERIC', 'MAX', 'MIN', 'NTILE', 'PERCENTILE', 'PERCENTILE_APPROX', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  table: ['EXPLODE', 'INLINE', 'JSON_TUPLE', 'PARSE_URL_TUPLE', 'POSEXPLODE', 'STACK'],\n  // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+WindowingAndAnalytics\n  window: ['LEAD', 'LAG', 'FIRST_VALUE', 'LAST_VALUE', 'RANK', 'ROW_NUMBER', 'DENSE_RANK', 'CUME_DIST', 'PERCENT_RANK', 'NTILE'],\n  // Parameterized data types\n  // https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=82706456\n  // Though in reality Hive only supports parameters for DECIMAL(),\n  // it doesn't hurt to allow others in here as well.\n  dataTypes: ['DECIMAL', 'NUMERIC', 'VARCHAR', 'CHAR']\n});\nexports.functions = functions;\n//# sourceMappingURL=hive.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9oaXZlL2hpdmUuZnVuY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9oaXZlL2hpdmUuZnVuY3Rpb25zLmpzPzE4YWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZ1bmN0aW9ucyA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcblxudmFyIGZ1bmN0aW9ucyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vY3dpa2kuYXBhY2hlLm9yZy9jb25mbHVlbmNlL2Rpc3BsYXkvSGl2ZS9MYW5ndWFnZU1hbnVhbCtVREZcbiAgbWF0aDogWydBQlMnLCAnQUNPUycsICdBU0lOJywgJ0FUQU4nLCAnQklOJywgJ0JST1VORCcsICdDQlJUJywgJ0NFSUwnLCAnQ0VJTElORycsICdDT05WJywgJ0NPUycsICdERUdSRUVTJywgLy8gJ0UnLFxuICAnRVhQJywgJ0ZBQ1RPUklBTCcsICdGTE9PUicsICdHUkVBVEVTVCcsICdIRVgnLCAnTEVBU1QnLCAnTE4nLCAnTE9HJywgJ0xPRzEwJywgJ0xPRzInLCAnTkVHQVRJVkUnLCAnUEknLCAnUE1PRCcsICdQT1NJVElWRScsICdQT1cnLCAnUE9XRVInLCAnUkFESUFOUycsICdSQU5EJywgJ1JPVU5EJywgJ1NISUZUTEVGVCcsICdTSElGVFJJR0hUJywgJ1NISUZUUklHSFRVTlNJR05FRCcsICdTSUdOJywgJ1NJTicsICdTUVJUJywgJ1RBTicsICdVTkhFWCcsICdXSURUSF9CVUNLRVQnXSxcbiAgYXJyYXk6IFsnQVJSQVlfQ09OVEFJTlMnLCAnTUFQX0tFWVMnLCAnTUFQX1ZBTFVFUycsICdTSVpFJywgJ1NPUlRfQVJSQVknXSxcbiAgY29udmVyc2lvbjogWydCSU5BUlknLCAnQ0FTVCddLFxuICBkYXRlOiBbJ0FERF9NT05USFMnLCAnREFURScsICdEQVRFX0FERCcsICdEQVRFX0ZPUk1BVCcsICdEQVRFX1NVQicsICdEQVRFRElGRicsICdEQVknLCAnREFZTkFNRScsICdEQVlPRk1PTlRIJywgJ0RBWU9GWUVBUicsICdFWFRSQUNUJywgJ0ZST01fVU5JWFRJTUUnLCAnRlJPTV9VVENfVElNRVNUQU1QJywgJ0hPVVInLCAnTEFTVF9EQVknLCAnTUlOVVRFJywgJ01PTlRIJywgJ01PTlRIU19CRVRXRUVOJywgJ05FWFRfREFZJywgJ1FVQVJURVInLCAnU0VDT05EJywgJ1RJTUVTVEFNUCcsICdUT19EQVRFJywgJ1RPX1VUQ19USU1FU1RBTVAnLCAnVFJVTkMnLCAnVU5JWF9USU1FU1RBTVAnLCAnV0VFS09GWUVBUicsICdZRUFSJ10sXG4gIGNvbmRpdGlvbmFsOiBbJ0FTU0VSVF9UUlVFJywgJ0NPQUxFU0NFJywgJ0lGJywgJ0lTTk9UTlVMTCcsICdJU05VTEwnLCAnTlVMTElGJywgJ05WTCddLFxuICBzdHJpbmc6IFsnQVNDSUknLCAnQkFTRTY0JywgJ0NIQVJBQ1RFUl9MRU5HVEgnLCAnQ0hSJywgJ0NPTkNBVCcsICdDT05DQVRfV1MnLCAnQ09OVEVYVF9OR1JBTVMnLCAnREVDT0RFJywgJ0VMVCcsICdFTkNPREUnLCAnRklFTEQnLCAnRklORF9JTl9TRVQnLCAnRk9STUFUX05VTUJFUicsICdHRVRfSlNPTl9PQkpFQ1QnLCAnSU5fRklMRScsICdJTklUQ0FQJywgJ0lOU1RSJywgJ0xDQVNFJywgJ0xFTkdUSCcsICdMRVZFTlNIVEVJTicsICdMT0NBVEUnLCAnTE9XRVInLCAnTFBBRCcsICdMVFJJTScsICdOR1JBTVMnLCAnT0NURVRfTEVOR1RIJywgJ1BBUlNFX1VSTCcsICdQUklOVEYnLCAnUVVPVEUnLCAnUkVHRVhQX0VYVFJBQ1QnLCAnUkVHRVhQX1JFUExBQ0UnLCAnUkVQRUFUJywgJ1JFVkVSU0UnLCAnUlBBRCcsICdSVFJJTScsICdTRU5URU5DRVMnLCAnU09VTkRFWCcsICdTUEFDRScsICdTUExJVCcsICdTVFJfVE9fTUFQJywgJ1NVQlNUUicsICdTVUJTVFJJTkcnLCAnVFJBTlNMQVRFJywgJ1RSSU0nLCAnVUNBU0UnLCAnVU5CQVNFNjQnLCAnVVBQRVInXSxcbiAgbWFza2luZzogWydNQVNLJywgJ01BU0tfRklSU1RfTicsICdNQVNLX0hBU0gnLCAnTUFTS19MQVNUX04nLCAnTUFTS19TSE9XX0ZJUlNUX04nLCAnTUFTS19TSE9XX0xBU1RfTiddLFxuICBtaXNjOiBbJ0FFU19ERUNSWVBUJywgJ0FFU19FTkNSWVBUJywgJ0NSQzMyJywgJ0NVUlJFTlRfREFUQUJBU0UnLCAnQ1VSUkVOVF9VU0VSJywgJ0hBU0gnLCAnSkFWQV9NRVRIT0QnLCAnTE9HR0VEX0lOX1VTRVInLCAnTUQ1JywgJ1JFRkxFQ1QnLCAnU0hBJywgJ1NIQTEnLCAnU0hBMicsICdTVVJST0dBVEVfS0VZJywgJ1ZFUlNJT04nXSxcbiAgYWdncmVnYXRlOiBbJ0FWRycsICdDT0xMRUNUX0xJU1QnLCAnQ09MTEVDVF9TRVQnLCAnQ09SUicsICdDT1VOVCcsICdDT1ZBUl9QT1AnLCAnQ09WQVJfU0FNUCcsICdISVNUT0dSQU1fTlVNRVJJQycsICdNQVgnLCAnTUlOJywgJ05USUxFJywgJ1BFUkNFTlRJTEUnLCAnUEVSQ0VOVElMRV9BUFBST1gnLCAnUkVHUl9BVkdYJywgJ1JFR1JfQVZHWScsICdSRUdSX0NPVU5UJywgJ1JFR1JfSU5URVJDRVBUJywgJ1JFR1JfUjInLCAnUkVHUl9TTE9QRScsICdSRUdSX1NYWCcsICdSRUdSX1NYWScsICdSRUdSX1NZWScsICdTVERERVZfUE9QJywgJ1NURERFVl9TQU1QJywgJ1NVTScsICdWQVJfUE9QJywgJ1ZBUl9TQU1QJywgJ1ZBUklBTkNFJ10sXG4gIHRhYmxlOiBbJ0VYUExPREUnLCAnSU5MSU5FJywgJ0pTT05fVFVQTEUnLCAnUEFSU0VfVVJMX1RVUExFJywgJ1BPU0VYUExPREUnLCAnU1RBQ0snXSxcbiAgLy8gaHR0cHM6Ly9jd2lraS5hcGFjaGUub3JnL2NvbmZsdWVuY2UvZGlzcGxheS9IaXZlL0xhbmd1YWdlTWFudWFsK1dpbmRvd2luZ0FuZEFuYWx5dGljc1xuICB3aW5kb3c6IFsnTEVBRCcsICdMQUcnLCAnRklSU1RfVkFMVUUnLCAnTEFTVF9WQUxVRScsICdSQU5LJywgJ1JPV19OVU1CRVInLCAnREVOU0VfUkFOSycsICdDVU1FX0RJU1QnLCAnUEVSQ0VOVF9SQU5LJywgJ05USUxFJ10sXG4gIC8vIFBhcmFtZXRlcml6ZWQgZGF0YSB0eXBlc1xuICAvLyBodHRwczovL2N3aWtpLmFwYWNoZS5vcmcvY29uZmx1ZW5jZS9wYWdlcy92aWV3cGFnZS5hY3Rpb24/cGFnZUlkPTgyNzA2NDU2XG4gIC8vIFRob3VnaCBpbiByZWFsaXR5IEhpdmUgb25seSBzdXBwb3J0cyBwYXJhbWV0ZXJzIGZvciBERUNJTUFMKCksXG4gIC8vIGl0IGRvZXNuJ3QgaHVydCB0byBhbGxvdyBvdGhlcnMgaW4gaGVyZSBhcyB3ZWxsLlxuICBkYXRhVHlwZXM6IFsnREVDSU1BTCcsICdOVU1FUklDJywgJ1ZBUkNIQVInLCAnQ0hBUiddXG59KTtcbmV4cG9ydHMuZnVuY3Rpb25zID0gZnVuY3Rpb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGl2ZS5mdW5jdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/hive/hive.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/hive/hive.keywords.js":
/*!*************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/hive/hive.keywords.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://cwiki.apache.org/confluence/display/hive/languagemanual+ddl\n  // Non-reserved keywords have proscribed meanings in. HiveQL, but can still be used as table or column names\n  nonReserved: ['ADD', 'ADMIN', 'AFTER', 'ANALYZE', 'ARCHIVE', 'ASC', 'BEFORE', 'BUCKET', 'BUCKETS', 'CASCADE', 'CHANGE', 'CLUSTER', 'CLUSTERED', 'CLUSTERSTATUS', 'COLLECTION', 'COLUMNS', 'COMMENT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONTINUE', 'DATA', 'DATABASES', 'DATETIME', 'DAY', 'DBPROPERTIES', 'DEFERRED', 'DEFINED', 'DELIMITED', 'DEPENDENCY', 'DESC', 'DIRECTORIES', 'DIRECTORY', 'DISABLE', 'DISTRIBUTE', 'ELEM_TYPE', 'ENABLE', 'ESCAPED', 'EXCLUSIVE', 'EXPLAIN', 'EXPORT', 'FIELDS', 'FILE', 'FILEFORMAT', 'FIRST', 'FORMAT', 'FORMATTED', 'FUNCTIONS', 'HOLD_DDLTIME', 'HOUR', 'IDXPROPERTIES', 'IGNORE', 'INDEX', 'INDEXES', 'INPATH', 'INPUTDRIVER', 'INPUTFORMAT', 'ITEMS', 'JAR', 'KEYS', 'KEY_TYPE', 'LIMIT', 'LINES', 'LOAD', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'LONG', 'MAPJOIN', 'MATERIALIZED', 'METADATA', 'MINUS', 'MINUTE', 'MONTH', 'MSCK', 'NOSCAN', 'NO_DROP', 'OFFLINE', 'OPTION', 'OUTPUTDRIVER', 'OUTPUTFORMAT', 'OVERWRITE', 'OWNER', 'PARTITIONED', 'PARTITIONS', 'PLUS', 'PRETTY', 'PRINCIPALS', 'PROTECTION', 'PURGE', 'READ', 'READONLY', 'REBUILD', 'RECORDREADER', 'RECORDWRITER', 'RELOAD', 'RENAME', 'REPAIR', 'REPLACE', 'REPLICATION', 'RESTRICT', 'REWRITE', 'ROLE', 'ROLES', 'SCHEMA', 'SCHEMAS', 'SECOND', 'SEMI', 'SERDE', 'SERDEPROPERTIES', 'SERVER', 'SETS', 'SHARED', 'SHOW', 'SHOW_DATABASE', 'SKEWED', 'SORT', 'SORTED', 'SSL', 'STATISTICS', 'STORED', 'STREAMTABLE', 'STRING', 'STRUCT', 'TABLES', 'TBLPROPERTIES', 'TEMPORARY', 'TERMINATED', 'TINYINT', 'TOUCH', 'TRANSACTIONS', 'UNARCHIVE', 'UNDO', 'UNIONTYPE', 'UNLOCK', 'UNSET', 'UNSIGNED', 'URI', 'USE', 'UTC', 'UTCTIMESTAMP', 'VALUE_TYPE', 'VIEW', 'WHILE', 'YEAR', 'AUTOCOMMIT', 'ISOLATION', 'LEVEL', 'OFFSET', 'SNAPSHOT', 'TRANSACTION', 'WORK', 'WRITE', 'ABORT', 'KEY', 'LAST', 'NORELY', 'NOVALIDATE', 'NULLS', 'RELY', 'VALIDATE', 'DETAIL', 'DOW', 'EXPRESSION', 'OPERATOR', 'QUARTER', 'SUMMARY', 'VECTORIZATION', 'WEEK', 'YEARS', 'MONTHS', 'WEEKS', 'DAYS', 'HOURS', 'MINUTES', 'SECONDS', 'TIMESTAMPTZ', 'ZONE'],\n  reserved: ['ALL', 'ALTER', 'AND', 'ARRAY', 'AS', 'AUTHORIZATION', 'BETWEEN', 'BIGINT', 'BINARY', 'BOOLEAN', 'BOTH', 'BY', 'CASE', 'CAST', 'CHAR', 'COLUMN', 'CONF', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'CURSOR', 'DATABASE', 'DATE', 'DECIMAL', 'DELETE', 'DESCRIBE', 'DISTINCT', 'DOUBLE', 'DROP', 'ELSE', 'END', 'EXCHANGE', 'EXISTS', 'EXTENDED', 'EXTERNAL', 'FALSE', 'FETCH', 'FLOAT', 'FOLLOWING', 'FOR', 'FROM', 'FULL', 'FUNCTION', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'IF', 'IMPORT', 'IN', 'INNER', 'INSERT', 'INT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'JOIN', 'LATERAL', 'LEFT', 'LESS', 'LIKE', 'LOCAL', 'MACRO', 'MAP', 'MORE', 'NONE', 'NOT', 'NULL', 'OF', 'ON', 'OR', 'ORDER', 'OUT', 'OUTER', 'OVER', 'PARTIALSCAN', 'PARTITION', 'PERCENT', 'PRECEDING', 'PRESERVE', 'PROCEDURE', 'RANGE', 'READS', 'REDUCE', 'REVOKE', 'RIGHT', 'ROLLUP', 'ROW', 'ROWS', 'SELECT', 'SET', 'SMALLINT', 'TABLE', 'TABLESAMPLE', 'THEN', 'TIMESTAMP', 'TO', 'TRANSFORM', 'TRIGGER', 'TRUE', 'TRUNCATE', 'UNBOUNDED', 'UNION', 'UNIQUEJOIN', 'UPDATE', 'USER', 'USING', 'UTC_TMESTAMP', 'VALUES', 'VARCHAR', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'COMMIT', 'ONLY', 'REGEXP', 'RLIKE', 'ROLLBACK', 'START', 'CACHE', 'CONSTRAINT', 'FOREIGN', 'PRIMARY', 'REFERENCES', 'DAYOFWEEK', 'EXTRACT', 'FLOOR', 'INTEGER', 'PRECISION', 'VIEWS', 'TIME', 'NUMERIC', 'SYNC'],\n  fileTypes: ['TEXTFILE', 'SEQUENCEFILE', 'ORC', 'CSV', 'TSV', 'PARQUET', 'AVRO', 'RCFILE', 'JSONFILE', 'INPUTFORMAT', 'OUTPUTFORMAT']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=hive.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9oaXZlL2hpdmUua2V5d29yZHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvaGl2ZS9oaXZlLmtleXdvcmRzLmpzP2ZjNWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmtleXdvcmRzID0gdm9pZCAwO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzXCIpO1xuXG52YXIga2V5d29yZHMgPSAoMCwgX3V0aWxzLmZsYXRLZXl3b3JkTGlzdCkoe1xuICAvLyBodHRwczovL2N3aWtpLmFwYWNoZS5vcmcvY29uZmx1ZW5jZS9kaXNwbGF5L2hpdmUvbGFuZ3VhZ2VtYW51YWwrZGRsXG4gIC8vIE5vbi1yZXNlcnZlZCBrZXl3b3JkcyBoYXZlIHByb3NjcmliZWQgbWVhbmluZ3MgaW4uIEhpdmVRTCwgYnV0IGNhbiBzdGlsbCBiZSB1c2VkIGFzIHRhYmxlIG9yIGNvbHVtbiBuYW1lc1xuICBub25SZXNlcnZlZDogWydBREQnLCAnQURNSU4nLCAnQUZURVInLCAnQU5BTFlaRScsICdBUkNISVZFJywgJ0FTQycsICdCRUZPUkUnLCAnQlVDS0VUJywgJ0JVQ0tFVFMnLCAnQ0FTQ0FERScsICdDSEFOR0UnLCAnQ0xVU1RFUicsICdDTFVTVEVSRUQnLCAnQ0xVU1RFUlNUQVRVUycsICdDT0xMRUNUSU9OJywgJ0NPTFVNTlMnLCAnQ09NTUVOVCcsICdDT01QQUNUJywgJ0NPTVBBQ1RJT05TJywgJ0NPTVBVVEUnLCAnQ09OQ0FURU5BVEUnLCAnQ09OVElOVUUnLCAnREFUQScsICdEQVRBQkFTRVMnLCAnREFURVRJTUUnLCAnREFZJywgJ0RCUFJPUEVSVElFUycsICdERUZFUlJFRCcsICdERUZJTkVEJywgJ0RFTElNSVRFRCcsICdERVBFTkRFTkNZJywgJ0RFU0MnLCAnRElSRUNUT1JJRVMnLCAnRElSRUNUT1JZJywgJ0RJU0FCTEUnLCAnRElTVFJJQlVURScsICdFTEVNX1RZUEUnLCAnRU5BQkxFJywgJ0VTQ0FQRUQnLCAnRVhDTFVTSVZFJywgJ0VYUExBSU4nLCAnRVhQT1JUJywgJ0ZJRUxEUycsICdGSUxFJywgJ0ZJTEVGT1JNQVQnLCAnRklSU1QnLCAnRk9STUFUJywgJ0ZPUk1BVFRFRCcsICdGVU5DVElPTlMnLCAnSE9MRF9ERExUSU1FJywgJ0hPVVInLCAnSURYUFJPUEVSVElFUycsICdJR05PUkUnLCAnSU5ERVgnLCAnSU5ERVhFUycsICdJTlBBVEgnLCAnSU5QVVREUklWRVInLCAnSU5QVVRGT1JNQVQnLCAnSVRFTVMnLCAnSkFSJywgJ0tFWVMnLCAnS0VZX1RZUEUnLCAnTElNSVQnLCAnTElORVMnLCAnTE9BRCcsICdMT0NBVElPTicsICdMT0NLJywgJ0xPQ0tTJywgJ0xPR0lDQUwnLCAnTE9ORycsICdNQVBKT0lOJywgJ01BVEVSSUFMSVpFRCcsICdNRVRBREFUQScsICdNSU5VUycsICdNSU5VVEUnLCAnTU9OVEgnLCAnTVNDSycsICdOT1NDQU4nLCAnTk9fRFJPUCcsICdPRkZMSU5FJywgJ09QVElPTicsICdPVVRQVVREUklWRVInLCAnT1VUUFVURk9STUFUJywgJ09WRVJXUklURScsICdPV05FUicsICdQQVJUSVRJT05FRCcsICdQQVJUSVRJT05TJywgJ1BMVVMnLCAnUFJFVFRZJywgJ1BSSU5DSVBBTFMnLCAnUFJPVEVDVElPTicsICdQVVJHRScsICdSRUFEJywgJ1JFQURPTkxZJywgJ1JFQlVJTEQnLCAnUkVDT1JEUkVBREVSJywgJ1JFQ09SRFdSSVRFUicsICdSRUxPQUQnLCAnUkVOQU1FJywgJ1JFUEFJUicsICdSRVBMQUNFJywgJ1JFUExJQ0FUSU9OJywgJ1JFU1RSSUNUJywgJ1JFV1JJVEUnLCAnUk9MRScsICdST0xFUycsICdTQ0hFTUEnLCAnU0NIRU1BUycsICdTRUNPTkQnLCAnU0VNSScsICdTRVJERScsICdTRVJERVBST1BFUlRJRVMnLCAnU0VSVkVSJywgJ1NFVFMnLCAnU0hBUkVEJywgJ1NIT1cnLCAnU0hPV19EQVRBQkFTRScsICdTS0VXRUQnLCAnU09SVCcsICdTT1JURUQnLCAnU1NMJywgJ1NUQVRJU1RJQ1MnLCAnU1RPUkVEJywgJ1NUUkVBTVRBQkxFJywgJ1NUUklORycsICdTVFJVQ1QnLCAnVEFCTEVTJywgJ1RCTFBST1BFUlRJRVMnLCAnVEVNUE9SQVJZJywgJ1RFUk1JTkFURUQnLCAnVElOWUlOVCcsICdUT1VDSCcsICdUUkFOU0FDVElPTlMnLCAnVU5BUkNISVZFJywgJ1VORE8nLCAnVU5JT05UWVBFJywgJ1VOTE9DSycsICdVTlNFVCcsICdVTlNJR05FRCcsICdVUkknLCAnVVNFJywgJ1VUQycsICdVVENUSU1FU1RBTVAnLCAnVkFMVUVfVFlQRScsICdWSUVXJywgJ1dISUxFJywgJ1lFQVInLCAnQVVUT0NPTU1JVCcsICdJU09MQVRJT04nLCAnTEVWRUwnLCAnT0ZGU0VUJywgJ1NOQVBTSE9UJywgJ1RSQU5TQUNUSU9OJywgJ1dPUksnLCAnV1JJVEUnLCAnQUJPUlQnLCAnS0VZJywgJ0xBU1QnLCAnTk9SRUxZJywgJ05PVkFMSURBVEUnLCAnTlVMTFMnLCAnUkVMWScsICdWQUxJREFURScsICdERVRBSUwnLCAnRE9XJywgJ0VYUFJFU1NJT04nLCAnT1BFUkFUT1InLCAnUVVBUlRFUicsICdTVU1NQVJZJywgJ1ZFQ1RPUklaQVRJT04nLCAnV0VFSycsICdZRUFSUycsICdNT05USFMnLCAnV0VFS1MnLCAnREFZUycsICdIT1VSUycsICdNSU5VVEVTJywgJ1NFQ09ORFMnLCAnVElNRVNUQU1QVFonLCAnWk9ORSddLFxuICByZXNlcnZlZDogWydBTEwnLCAnQUxURVInLCAnQU5EJywgJ0FSUkFZJywgJ0FTJywgJ0FVVEhPUklaQVRJT04nLCAnQkVUV0VFTicsICdCSUdJTlQnLCAnQklOQVJZJywgJ0JPT0xFQU4nLCAnQk9USCcsICdCWScsICdDQVNFJywgJ0NBU1QnLCAnQ0hBUicsICdDT0xVTU4nLCAnQ09ORicsICdDUkVBVEUnLCAnQ1JPU1MnLCAnQ1VCRScsICdDVVJSRU5UJywgJ0NVUlJFTlRfREFURScsICdDVVJSRU5UX1RJTUVTVEFNUCcsICdDVVJTT1InLCAnREFUQUJBU0UnLCAnREFURScsICdERUNJTUFMJywgJ0RFTEVURScsICdERVNDUklCRScsICdESVNUSU5DVCcsICdET1VCTEUnLCAnRFJPUCcsICdFTFNFJywgJ0VORCcsICdFWENIQU5HRScsICdFWElTVFMnLCAnRVhURU5ERUQnLCAnRVhURVJOQUwnLCAnRkFMU0UnLCAnRkVUQ0gnLCAnRkxPQVQnLCAnRk9MTE9XSU5HJywgJ0ZPUicsICdGUk9NJywgJ0ZVTEwnLCAnRlVOQ1RJT04nLCAnR1JBTlQnLCAnR1JPVVAnLCAnR1JPVVBJTkcnLCAnSEFWSU5HJywgJ0lGJywgJ0lNUE9SVCcsICdJTicsICdJTk5FUicsICdJTlNFUlQnLCAnSU5UJywgJ0lOVEVSU0VDVCcsICdJTlRFUlZBTCcsICdJTlRPJywgJ0lTJywgJ0pPSU4nLCAnTEFURVJBTCcsICdMRUZUJywgJ0xFU1MnLCAnTElLRScsICdMT0NBTCcsICdNQUNSTycsICdNQVAnLCAnTU9SRScsICdOT05FJywgJ05PVCcsICdOVUxMJywgJ09GJywgJ09OJywgJ09SJywgJ09SREVSJywgJ09VVCcsICdPVVRFUicsICdPVkVSJywgJ1BBUlRJQUxTQ0FOJywgJ1BBUlRJVElPTicsICdQRVJDRU5UJywgJ1BSRUNFRElORycsICdQUkVTRVJWRScsICdQUk9DRURVUkUnLCAnUkFOR0UnLCAnUkVBRFMnLCAnUkVEVUNFJywgJ1JFVk9LRScsICdSSUdIVCcsICdST0xMVVAnLCAnUk9XJywgJ1JPV1MnLCAnU0VMRUNUJywgJ1NFVCcsICdTTUFMTElOVCcsICdUQUJMRScsICdUQUJMRVNBTVBMRScsICdUSEVOJywgJ1RJTUVTVEFNUCcsICdUTycsICdUUkFOU0ZPUk0nLCAnVFJJR0dFUicsICdUUlVFJywgJ1RSVU5DQVRFJywgJ1VOQk9VTkRFRCcsICdVTklPTicsICdVTklRVUVKT0lOJywgJ1VQREFURScsICdVU0VSJywgJ1VTSU5HJywgJ1VUQ19UTUVTVEFNUCcsICdWQUxVRVMnLCAnVkFSQ0hBUicsICdXSEVOJywgJ1dIRVJFJywgJ1dJTkRPVycsICdXSVRIJywgJ0NPTU1JVCcsICdPTkxZJywgJ1JFR0VYUCcsICdSTElLRScsICdST0xMQkFDSycsICdTVEFSVCcsICdDQUNIRScsICdDT05TVFJBSU5UJywgJ0ZPUkVJR04nLCAnUFJJTUFSWScsICdSRUZFUkVOQ0VTJywgJ0RBWU9GV0VFSycsICdFWFRSQUNUJywgJ0ZMT09SJywgJ0lOVEVHRVInLCAnUFJFQ0lTSU9OJywgJ1ZJRVdTJywgJ1RJTUUnLCAnTlVNRVJJQycsICdTWU5DJ10sXG4gIGZpbGVUeXBlczogWydURVhURklMRScsICdTRVFVRU5DRUZJTEUnLCAnT1JDJywgJ0NTVicsICdUU1YnLCAnUEFSUVVFVCcsICdBVlJPJywgJ1JDRklMRScsICdKU09ORklMRScsICdJTlBVVEZPUk1BVCcsICdPVVRQVVRGT1JNQVQnXVxufSk7XG5leHBvcnRzLmtleXdvcmRzID0ga2V5d29yZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oaXZlLmtleXdvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/hive/hive.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.formatter.js":
/*!********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.formatter.js ***!
  \********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _token = __webpack_require__(/*! ../../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar _mariadb = __webpack_require__(/*! ./mariadb.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.keywords.js\");\n\nvar _mariadb2 = __webpack_require__(/*! ./mariadb.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.functions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]', 'REPLACE [LOW_PRIORITY | DELAYED] [INTO]', 'VALUES', // - update:\n'UPDATE [LOW_PRIORITY] [IGNORE]', 'SET', // - delete:\n'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]', 'CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]', 'DROP [TEMPORARY] TABLE [IF EXISTS]', // - alter table:\n'ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]', 'ADD [COLUMN] [IF NOT EXISTS]', '{CHANGE | MODIFY} [COLUMN] [IF EXISTS]', 'DROP [COLUMN] [IF EXISTS]', 'RENAME [TO]', 'RENAME COLUMN', 'ALTER [COLUMN]', '{SET | DROP} DEFAULT', // for alter column\n'SET {VISIBLE | INVISIBLE}', // for alter column\n// https://mariadb.com/docs/reference/mdb/sql-statements/\n'ALTER DATABASE', 'ALTER DATABASE COMMENT', 'ALTER EVENT', 'ALTER FUNCTION', 'ALTER PROCEDURE', 'ALTER SCHEMA', 'ALTER SCHEMA COMMENT', 'ALTER SEQUENCE', 'ALTER SERVER', 'ALTER USER', 'ALTER VIEW', 'ANALYZE', 'ANALYZE TABLE', 'BACKUP LOCK', 'BACKUP STAGE', 'BACKUP UNLOCK', 'BEGIN', 'BINLOG', 'CACHE INDEX', 'CALL', 'CHANGE MASTER TO', 'CHECK TABLE', 'CHECK VIEW', 'CHECKSUM TABLE', 'COMMIT', 'CREATE AGGREGATE FUNCTION', 'CREATE DATABASE', 'CREATE EVENT', 'CREATE FUNCTION', 'CREATE INDEX', 'CREATE PROCEDURE', 'CREATE ROLE', 'CREATE SEQUENCE', 'CREATE SERVER', 'CREATE SPATIAL INDEX', 'CREATE TRIGGER', 'CREATE UNIQUE INDEX', 'CREATE USER', 'DEALLOCATE PREPARE', 'DESCRIBE', 'DO', 'DROP DATABASE', 'DROP EVENT', 'DROP FUNCTION', 'DROP INDEX', 'DROP PREPARE', 'DROP PROCEDURE', 'DROP ROLE', 'DROP SEQUENCE', 'DROP SERVER', 'DROP TRIGGER', 'DROP USER', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FLUSH', 'GET DIAGNOSTICS', 'GET DIAGNOSTICS CONDITION', 'GRANT', 'HANDLER', 'HELP', 'INSTALL PLUGIN', 'INSTALL SONAME', 'KILL', 'LOAD DATA INFILE', 'LOAD INDEX INTO CACHE', 'LOAD XML INFILE', 'LOCK TABLE', 'OPTIMIZE TABLE', 'PREPARE', 'PURGE BINARY LOGS', 'PURGE MASTER LOGS', 'RELEASE SAVEPOINT', 'RENAME TABLE', 'RENAME USER', 'REPAIR TABLE', 'REPAIR VIEW', 'RESET MASTER', 'RESET QUERY CACHE', 'RESET REPLICA', 'RESET SLAVE', 'RESIGNAL', 'RETURNING', 'REVOKE', 'ROLLBACK', 'SAVEPOINT', 'SET CHARACTER SET', 'SET DEFAULT ROLE', 'SET GLOBAL TRANSACTION', 'SET NAMES', 'SET PASSWORD', 'SET ROLE', 'SET STATEMENT', 'SET TRANSACTION', 'SHOW', 'SHOW ALL REPLICAS STATUS', 'SHOW ALL SLAVES STATUS', 'SHOW AUTHORS', 'SHOW BINARY LOGS', 'SHOW BINLOG EVENTS', 'SHOW BINLOG STATUS', 'SHOW CHARACTER SET', 'SHOW CLIENT_STATISTICS', 'SHOW COLLATION', 'SHOW COLUMNS', 'SHOW CONTRIBUTORS', 'SHOW CREATE DATABASE', 'SHOW CREATE EVENT', 'SHOW CREATE FUNCTION', 'SHOW CREATE PACKAGE', 'SHOW CREATE PACKAGE BODY', 'SHOW CREATE PROCEDURE', 'SHOW CREATE SEQUENCE', 'SHOW CREATE TABLE', 'SHOW CREATE TRIGGER', 'SHOW CREATE USER', 'SHOW CREATE VIEW', 'SHOW DATABASES', 'SHOW ENGINE', 'SHOW ENGINE INNODB STATUS', 'SHOW ENGINES', 'SHOW ERRORS', 'SHOW EVENTS', 'SHOW EXPLAIN', 'SHOW FUNCTION CODE', 'SHOW FUNCTION STATUS', 'SHOW GRANTS', 'SHOW INDEX', 'SHOW INDEXES', 'SHOW INDEX_STATISTICS', 'SHOW KEYS', 'SHOW LOCALES', 'SHOW MASTER LOGS', 'SHOW MASTER STATUS', 'SHOW OPEN TABLES', 'SHOW PACKAGE BODY CODE', 'SHOW PACKAGE BODY STATUS', 'SHOW PACKAGE STATUS', 'SHOW PLUGINS', 'SHOW PLUGINS SONAME', 'SHOW PRIVILEGES', 'SHOW PROCEDURE CODE', 'SHOW PROCEDURE STATUS', 'SHOW PROCESSLIST', 'SHOW PROFILE', 'SHOW PROFILES', 'SHOW QUERY_RESPONSE_TIME', 'SHOW RELAYLOG EVENTS', 'SHOW REPLICA', 'SHOW REPLICA HOSTS', 'SHOW REPLICA STATUS', 'SHOW SCHEMAS', 'SHOW SLAVE', 'SHOW SLAVE HOSTS', 'SHOW SLAVE STATUS', 'SHOW STATUS', 'SHOW STORAGE ENGINES', 'SHOW TABLE STATUS', 'SHOW TABLES', 'SHOW TRIGGERS', 'SHOW USER_STATISTICS', 'SHOW VARIABLES', 'SHOW WARNINGS', 'SHOW WSREP_MEMBERSHIP', 'SHOW WSREP_STATUS', 'SHUTDOWN', 'SIGNAL', 'START ALL REPLICAS', 'START ALL SLAVES', 'START REPLICA', 'START SLAVE', 'START TRANSACTION', 'STOP ALL REPLICAS', 'STOP ALL SLAVES', 'STOP REPLICA', 'STOP SLAVE', 'UNINSTALL PLUGIN', 'UNINSTALL SONAME', 'UNLOCK TABLE', 'USE', 'XA BEGIN', 'XA COMMIT', 'XA END', 'XA PREPARE', 'XA RECOVER', 'XA ROLLBACK', 'XA START']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]', 'MINUS [ALL | DISTINCT]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL JOIN', 'NATURAL {LEFT | RIGHT} [OUTER] JOIN', // non-standard joins\n'STRAIGHT_JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', 'CHARACTER SET', '{ROWS | RANGE} BETWEEN']); // For reference: https://mariadb.com/kb/en/sql-statements-structure/\n\nvar MariaDbFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(MariaDbFormatter, _Formatter);\n\n  var _super = _createSuper(MariaDbFormatter);\n\n  function MariaDbFormatter() {\n    _classCallCheck(this, MariaDbFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MariaDbFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE', 'ELSEIF', 'ELSIF'],\n        reservedPhrases: reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: _mariadb.keywords,\n        reservedFunctionNames: _mariadb2.functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: ['\"\"-qq-bs', \"''-qq-bs\", {\n          quote: \"''-raw\",\n          prefixes: ['B', 'X'],\n          requirePrefix: true\n        }],\n        identTypes: ['``'],\n        identChars: {\n          first: '$',\n          rest: '$',\n          allowFirstCharNumber: true\n        },\n        variableTypes: [{\n          regex: '@@?[A-Za-z0-9_.$]+'\n        }, {\n          quote: '\"\"-qq-bs',\n          prefixes: ['@'],\n          requirePrefix: true\n        }, {\n          quote: \"''-qq-bs\",\n          prefixes: ['@'],\n          requirePrefix: true\n        }, {\n          quote: '``',\n          prefixes: ['@'],\n          requirePrefix: true\n        }],\n        paramTypes: {\n          positional: true\n        },\n        lineCommentTypes: ['--', '#'],\n        operators: ['%', ':=', '&', '|', '^', '~', '<<', '>>', '<=>', '&&', '||', '!'],\n        postProcess: postProcess\n      });\n    }\n  }]);\n\n  return MariaDbFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = MariaDbFormatter;\n\nfunction postProcess(tokens) {\n  return tokens.map(function (token, i) {\n    var nextToken = tokens[i + 1] || _token.EOF_TOKEN;\n\n    if (_token.isToken.SET(token) && nextToken.text === '(') {\n      // This is SET datatype, not SET statement\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.RESERVED_FUNCTION_NAME\n      });\n    }\n\n    return token;\n  });\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=mariadb.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.functions.js":
/*!********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.functions.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://mariadb.com/kb/en/information-schema-sql_functions-table/\n  all: ['ADDDATE', 'ADD_MONTHS', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'CAST', 'COUNT', 'CUME_DIST', 'CURDATE', 'CURTIME', 'DATE_ADD', 'DATE_SUB', 'DATE_FORMAT', 'DECODE', 'DENSE_RANK', 'EXTRACT', 'FIRST_VALUE', 'GROUP_CONCAT', 'JSON_ARRAYAGG', 'JSON_OBJECTAGG', 'LAG', 'LEAD', 'MAX', 'MEDIAN', 'MID', 'MIN', 'NOW', 'NTH_VALUE', 'NTILE', 'POSITION', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'RANK', 'ROW_NUMBER', 'SESSION_USER', 'STD', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUBDATE', 'SUBSTR', 'SUBSTRING', 'SUM', 'SYSTEM_USER', 'TRIM', 'TRIM_ORACLE', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'ABS', 'ACOS', 'ADDTIME', 'AES_DECRYPT', 'AES_ENCRYPT', 'ASIN', 'ATAN', 'ATAN2', 'BENCHMARK', 'BIN', 'BINLOG_GTID_POS', 'BIT_COUNT', 'BIT_LENGTH', 'CEIL', 'CEILING', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHR', 'COERCIBILITY', 'COLUMN_CHECK', 'COLUMN_EXISTS', 'COLUMN_LIST', 'COLUMN_JSON', 'COMPRESS', 'CONCAT', 'CONCAT_OPERATOR_ORACLE', 'CONCAT_WS', 'CONNECTION_ID', 'CONV', 'CONVERT_TZ', 'COS', 'COT', 'CRC32', 'DATEDIFF', 'DAYNAME', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'DEGREES', 'DECODE_HISTOGRAM', 'DECODE_ORACLE', 'DES_DECRYPT', 'DES_ENCRYPT', 'ELT', 'ENCODE', 'ENCRYPT', 'EXP', 'EXPORT_SET', 'EXTRACTVALUE', 'FIELD', 'FIND_IN_SET', 'FLOOR', 'FORMAT', 'FOUND_ROWS', 'FROM_BASE64', 'FROM_DAYS', 'FROM_UNIXTIME', 'GET_LOCK', 'GREATEST', 'HEX', 'IFNULL', 'INSTR', 'ISNULL', 'IS_FREE_LOCK', 'IS_USED_LOCK', 'JSON_ARRAY', 'JSON_ARRAY_APPEND', 'JSON_ARRAY_INSERT', 'JSON_COMPACT', 'JSON_CONTAINS', 'JSON_CONTAINS_PATH', 'JSON_DEPTH', 'JSON_DETAILED', 'JSON_EXISTS', 'JSON_EXTRACT', 'JSON_INSERT', 'JSON_KEYS', 'JSON_LENGTH', 'JSON_LOOSE', 'JSON_MERGE', 'JSON_MERGE_PATCH', 'JSON_MERGE_PRESERVE', 'JSON_QUERY', 'JSON_QUOTE', 'JSON_OBJECT', 'JSON_REMOVE', 'JSON_REPLACE', 'JSON_SET', 'JSON_SEARCH', 'JSON_TYPE', 'JSON_UNQUOTE', 'JSON_VALID', 'JSON_VALUE', 'LAST_DAY', 'LAST_INSERT_ID', 'LCASE', 'LEAST', 'LENGTH', 'LENGTHB', 'LN', 'LOAD_FILE', 'LOCATE', 'LOG', 'LOG10', 'LOG2', 'LOWER', 'LPAD', 'LPAD_ORACLE', 'LTRIM', 'LTRIM_ORACLE', 'MAKEDATE', 'MAKETIME', 'MAKE_SET', 'MASTER_GTID_WAIT', 'MASTER_POS_WAIT', 'MD5', 'MONTHNAME', 'NAME_CONST', 'NVL', 'NVL2', 'OCT', 'OCTET_LENGTH', 'ORD', 'PERIOD_ADD', 'PERIOD_DIFF', 'PI', 'POW', 'POWER', 'QUOTE', 'REGEXP_INSTR', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'RADIANS', 'RAND', 'RELEASE_ALL_LOCKS', 'RELEASE_LOCK', 'REPLACE_ORACLE', 'REVERSE', 'ROUND', 'RPAD', 'RPAD_ORACLE', 'RTRIM', 'RTRIM_ORACLE', 'SEC_TO_TIME', 'SHA', 'SHA1', 'SHA2', 'SIGN', 'SIN', 'SLEEP', 'SOUNDEX', 'SPACE', 'SQRT', 'STRCMP', 'STR_TO_DATE', 'SUBSTR_ORACLE', 'SUBSTRING_INDEX', 'SUBTIME', 'SYS_GUID', 'TAN', 'TIMEDIFF', 'TIME_FORMAT', 'TIME_TO_SEC', 'TO_BASE64', 'TO_CHAR', 'TO_DAYS', 'TO_SECONDS', 'UCASE', 'UNCOMPRESS', 'UNCOMPRESSED_LENGTH', 'UNHEX', 'UNIX_TIMESTAMP', 'UPDATEXML', 'UPPER', 'UUID', 'UUID_SHORT', 'VERSION', 'WEEKDAY', 'WEEKOFYEAR', 'WSREP_LAST_WRITTEN_GTID', 'WSREP_LAST_SEEN_GTID', 'WSREP_SYNC_WAIT_UPTO_GTID', 'YEARWEEK', // CASE expression shorthands\n  'COALESCE', 'NULLIF', // Data types with parameters\n  // https://mariadb.com/kb/en/data-types/\n  'TINYINT', 'SMALLINT', 'MEDIUMINT', 'INT', 'INTEGER', 'BIGINT', 'DECIMAL', 'DEC', 'NUMERIC', 'FIXED', // 'NUMBER', // ?? In oracle mode only\n  'FLOAT', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'BIT', 'BINARY', 'BLOB', 'CHAR', 'NATIONAL CHAR', 'CHAR BYTE', 'ENUM', 'VARBINARY', 'VARCHAR', 'NATIONAL VARCHAR', // 'SET' // handled as special-case in postProcess\n  'TIME', 'DATETIME', 'TIMESTAMP', 'YEAR']\n});\nexports.functions = functions;\n//# sourceMappingURL=mariadb.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9tYXJpYWRiL21hcmlhZGIuZnVuY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9tYXJpYWRiL21hcmlhZGIuZnVuY3Rpb25zLmpzPzRkODMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZ1bmN0aW9ucyA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcblxudmFyIGZ1bmN0aW9ucyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vbWFyaWFkYi5jb20va2IvZW4vaW5mb3JtYXRpb24tc2NoZW1hLXNxbF9mdW5jdGlvbnMtdGFibGUvXG4gIGFsbDogWydBREREQVRFJywgJ0FERF9NT05USFMnLCAnQklUX0FORCcsICdCSVRfT1InLCAnQklUX1hPUicsICdDQVNUJywgJ0NPVU5UJywgJ0NVTUVfRElTVCcsICdDVVJEQVRFJywgJ0NVUlRJTUUnLCAnREFURV9BREQnLCAnREFURV9TVUInLCAnREFURV9GT1JNQVQnLCAnREVDT0RFJywgJ0RFTlNFX1JBTksnLCAnRVhUUkFDVCcsICdGSVJTVF9WQUxVRScsICdHUk9VUF9DT05DQVQnLCAnSlNPTl9BUlJBWUFHRycsICdKU09OX09CSkVDVEFHRycsICdMQUcnLCAnTEVBRCcsICdNQVgnLCAnTUVESUFOJywgJ01JRCcsICdNSU4nLCAnTk9XJywgJ05USF9WQUxVRScsICdOVElMRScsICdQT1NJVElPTicsICdQRVJDRU5UX1JBTksnLCAnUEVSQ0VOVElMRV9DT05UJywgJ1BFUkNFTlRJTEVfRElTQycsICdSQU5LJywgJ1JPV19OVU1CRVInLCAnU0VTU0lPTl9VU0VSJywgJ1NURCcsICdTVERERVYnLCAnU1REREVWX1BPUCcsICdTVERERVZfU0FNUCcsICdTVUJEQVRFJywgJ1NVQlNUUicsICdTVUJTVFJJTkcnLCAnU1VNJywgJ1NZU1RFTV9VU0VSJywgJ1RSSU0nLCAnVFJJTV9PUkFDTEUnLCAnVkFSSUFOQ0UnLCAnVkFSX1BPUCcsICdWQVJfU0FNUCcsICdBQlMnLCAnQUNPUycsICdBRERUSU1FJywgJ0FFU19ERUNSWVBUJywgJ0FFU19FTkNSWVBUJywgJ0FTSU4nLCAnQVRBTicsICdBVEFOMicsICdCRU5DSE1BUksnLCAnQklOJywgJ0JJTkxPR19HVElEX1BPUycsICdCSVRfQ09VTlQnLCAnQklUX0xFTkdUSCcsICdDRUlMJywgJ0NFSUxJTkcnLCAnQ0hBUkFDVEVSX0xFTkdUSCcsICdDSEFSX0xFTkdUSCcsICdDSFInLCAnQ09FUkNJQklMSVRZJywgJ0NPTFVNTl9DSEVDSycsICdDT0xVTU5fRVhJU1RTJywgJ0NPTFVNTl9MSVNUJywgJ0NPTFVNTl9KU09OJywgJ0NPTVBSRVNTJywgJ0NPTkNBVCcsICdDT05DQVRfT1BFUkFUT1JfT1JBQ0xFJywgJ0NPTkNBVF9XUycsICdDT05ORUNUSU9OX0lEJywgJ0NPTlYnLCAnQ09OVkVSVF9UWicsICdDT1MnLCAnQ09UJywgJ0NSQzMyJywgJ0RBVEVESUZGJywgJ0RBWU5BTUUnLCAnREFZT0ZNT05USCcsICdEQVlPRldFRUsnLCAnREFZT0ZZRUFSJywgJ0RFR1JFRVMnLCAnREVDT0RFX0hJU1RPR1JBTScsICdERUNPREVfT1JBQ0xFJywgJ0RFU19ERUNSWVBUJywgJ0RFU19FTkNSWVBUJywgJ0VMVCcsICdFTkNPREUnLCAnRU5DUllQVCcsICdFWFAnLCAnRVhQT1JUX1NFVCcsICdFWFRSQUNUVkFMVUUnLCAnRklFTEQnLCAnRklORF9JTl9TRVQnLCAnRkxPT1InLCAnRk9STUFUJywgJ0ZPVU5EX1JPV1MnLCAnRlJPTV9CQVNFNjQnLCAnRlJPTV9EQVlTJywgJ0ZST01fVU5JWFRJTUUnLCAnR0VUX0xPQ0snLCAnR1JFQVRFU1QnLCAnSEVYJywgJ0lGTlVMTCcsICdJTlNUUicsICdJU05VTEwnLCAnSVNfRlJFRV9MT0NLJywgJ0lTX1VTRURfTE9DSycsICdKU09OX0FSUkFZJywgJ0pTT05fQVJSQVlfQVBQRU5EJywgJ0pTT05fQVJSQVlfSU5TRVJUJywgJ0pTT05fQ09NUEFDVCcsICdKU09OX0NPTlRBSU5TJywgJ0pTT05fQ09OVEFJTlNfUEFUSCcsICdKU09OX0RFUFRIJywgJ0pTT05fREVUQUlMRUQnLCAnSlNPTl9FWElTVFMnLCAnSlNPTl9FWFRSQUNUJywgJ0pTT05fSU5TRVJUJywgJ0pTT05fS0VZUycsICdKU09OX0xFTkdUSCcsICdKU09OX0xPT1NFJywgJ0pTT05fTUVSR0UnLCAnSlNPTl9NRVJHRV9QQVRDSCcsICdKU09OX01FUkdFX1BSRVNFUlZFJywgJ0pTT05fUVVFUlknLCAnSlNPTl9RVU9URScsICdKU09OX09CSkVDVCcsICdKU09OX1JFTU9WRScsICdKU09OX1JFUExBQ0UnLCAnSlNPTl9TRVQnLCAnSlNPTl9TRUFSQ0gnLCAnSlNPTl9UWVBFJywgJ0pTT05fVU5RVU9URScsICdKU09OX1ZBTElEJywgJ0pTT05fVkFMVUUnLCAnTEFTVF9EQVknLCAnTEFTVF9JTlNFUlRfSUQnLCAnTENBU0UnLCAnTEVBU1QnLCAnTEVOR1RIJywgJ0xFTkdUSEInLCAnTE4nLCAnTE9BRF9GSUxFJywgJ0xPQ0FURScsICdMT0cnLCAnTE9HMTAnLCAnTE9HMicsICdMT1dFUicsICdMUEFEJywgJ0xQQURfT1JBQ0xFJywgJ0xUUklNJywgJ0xUUklNX09SQUNMRScsICdNQUtFREFURScsICdNQUtFVElNRScsICdNQUtFX1NFVCcsICdNQVNURVJfR1RJRF9XQUlUJywgJ01BU1RFUl9QT1NfV0FJVCcsICdNRDUnLCAnTU9OVEhOQU1FJywgJ05BTUVfQ09OU1QnLCAnTlZMJywgJ05WTDInLCAnT0NUJywgJ09DVEVUX0xFTkdUSCcsICdPUkQnLCAnUEVSSU9EX0FERCcsICdQRVJJT0RfRElGRicsICdQSScsICdQT1cnLCAnUE9XRVInLCAnUVVPVEUnLCAnUkVHRVhQX0lOU1RSJywgJ1JFR0VYUF9SRVBMQUNFJywgJ1JFR0VYUF9TVUJTVFInLCAnUkFESUFOUycsICdSQU5EJywgJ1JFTEVBU0VfQUxMX0xPQ0tTJywgJ1JFTEVBU0VfTE9DSycsICdSRVBMQUNFX09SQUNMRScsICdSRVZFUlNFJywgJ1JPVU5EJywgJ1JQQUQnLCAnUlBBRF9PUkFDTEUnLCAnUlRSSU0nLCAnUlRSSU1fT1JBQ0xFJywgJ1NFQ19UT19USU1FJywgJ1NIQScsICdTSEExJywgJ1NIQTInLCAnU0lHTicsICdTSU4nLCAnU0xFRVAnLCAnU09VTkRFWCcsICdTUEFDRScsICdTUVJUJywgJ1NUUkNNUCcsICdTVFJfVE9fREFURScsICdTVUJTVFJfT1JBQ0xFJywgJ1NVQlNUUklOR19JTkRFWCcsICdTVUJUSU1FJywgJ1NZU19HVUlEJywgJ1RBTicsICdUSU1FRElGRicsICdUSU1FX0ZPUk1BVCcsICdUSU1FX1RPX1NFQycsICdUT19CQVNFNjQnLCAnVE9fQ0hBUicsICdUT19EQVlTJywgJ1RPX1NFQ09ORFMnLCAnVUNBU0UnLCAnVU5DT01QUkVTUycsICdVTkNPTVBSRVNTRURfTEVOR1RIJywgJ1VOSEVYJywgJ1VOSVhfVElNRVNUQU1QJywgJ1VQREFURVhNTCcsICdVUFBFUicsICdVVUlEJywgJ1VVSURfU0hPUlQnLCAnVkVSU0lPTicsICdXRUVLREFZJywgJ1dFRUtPRllFQVInLCAnV1NSRVBfTEFTVF9XUklUVEVOX0dUSUQnLCAnV1NSRVBfTEFTVF9TRUVOX0dUSUQnLCAnV1NSRVBfU1lOQ19XQUlUX1VQVE9fR1RJRCcsICdZRUFSV0VFSycsIC8vIENBU0UgZXhwcmVzc2lvbiBzaG9ydGhhbmRzXG4gICdDT0FMRVNDRScsICdOVUxMSUYnLCAvLyBEYXRhIHR5cGVzIHdpdGggcGFyYW1ldGVyc1xuICAvLyBodHRwczovL21hcmlhZGIuY29tL2tiL2VuL2RhdGEtdHlwZXMvXG4gICdUSU5ZSU5UJywgJ1NNQUxMSU5UJywgJ01FRElVTUlOVCcsICdJTlQnLCAnSU5URUdFUicsICdCSUdJTlQnLCAnREVDSU1BTCcsICdERUMnLCAnTlVNRVJJQycsICdGSVhFRCcsIC8vICdOVU1CRVInLCAvLyA/PyBJbiBvcmFjbGUgbW9kZSBvbmx5XG4gICdGTE9BVCcsICdET1VCTEUnLCAnRE9VQkxFIFBSRUNJU0lPTicsICdSRUFMJywgJ0JJVCcsICdCSU5BUlknLCAnQkxPQicsICdDSEFSJywgJ05BVElPTkFMIENIQVInLCAnQ0hBUiBCWVRFJywgJ0VOVU0nLCAnVkFSQklOQVJZJywgJ1ZBUkNIQVInLCAnTkFUSU9OQUwgVkFSQ0hBUicsIC8vICdTRVQnIC8vIGhhbmRsZWQgYXMgc3BlY2lhbC1jYXNlIGluIHBvc3RQcm9jZXNzXG4gICdUSU1FJywgJ0RBVEVUSU1FJywgJ1RJTUVTVEFNUCcsICdZRUFSJ11cbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSBmdW5jdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXJpYWRiLmZ1bmN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.keywords.js":
/*!*******************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.keywords.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://mariadb.com/kb/en/information-schema-keywords-table/\n  all: ['ACCESSIBLE', 'ACCOUNT', 'ACTION', 'ADD', 'ADMIN', 'AFTER', 'AGAINST', 'AGGREGATE', 'ALL', 'ALGORITHM', 'ALTER', 'ALWAYS', 'ANALYZE', 'AND', 'ANY', 'AS', 'ASC', 'ASCII', 'ASENSITIVE', 'AT', 'ATOMIC', 'AUTHORS', 'AUTO_INCREMENT', 'AUTOEXTEND_SIZE', 'AUTO', 'AVG', 'AVG_ROW_LENGTH', 'BACKUP', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BINLOG', 'BIT', 'BLOB', 'BLOCK', 'BODY', 'BOOL', 'BOOLEAN', 'BOTH', 'BTREE', 'BY', 'BYTE', 'CACHE', 'CALL', 'CASCADE', 'CASCADED', 'CASE', 'CATALOG_NAME', 'CHAIN', 'CHANGE', 'CHANGED', 'CHAR', 'CHARACTER', 'CHARSET', 'CHECK', 'CHECKPOINT', 'CHECKSUM', 'CIPHER', 'CLASS_ORIGIN', 'CLIENT', 'CLOB', 'CLOSE', 'COALESCE', 'CODE', 'COLLATE', 'COLLATION', 'COLUMN', 'COLUMN_NAME', 'COLUMNS', 'COLUMN_ADD', 'COLUMN_CHECK', 'COLUMN_CREATE', 'COLUMN_DELETE', 'COLUMN_GET', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPACT', 'COMPLETION', 'COMPRESSED', 'CONCURRENT', 'CONDITION', 'CONNECTION', 'CONSISTENT', 'CONSTRAINT', 'CONSTRAINT_CATALOG', 'CONSTRAINT_NAME', 'CONSTRAINT_SCHEMA', 'CONTAINS', 'CONTEXT', 'CONTINUE', 'CONTRIBUTORS', 'CONVERT', 'CPU', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_POS', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'CURSOR_NAME', 'CYCLE', 'DATA', 'DATABASE', 'DATABASES', 'DATAFILE', 'DATE', 'DATETIME', 'DAY', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFINER', 'DELAYED', 'DELAY_KEY_WRITE', 'DELETE', 'DELETE_DOMAIN_ID', 'DESC', 'DESCRIBE', 'DES_KEY_FILE', 'DETERMINISTIC', 'DIAGNOSTICS', 'DIRECTORY', 'DISABLE', 'DISCARD', 'DISK', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DO', 'DOUBLE', 'DO_DOMAIN_IDS', 'DROP', 'DUAL', 'DUMPFILE', 'DUPLICATE', 'DYNAMIC', 'EACH', 'ELSE', 'ELSEIF', 'ELSIF', 'EMPTY', 'ENABLE', 'ENCLOSED', 'END', 'ENDS', 'ENGINE', 'ENGINES', 'ENUM', 'ERROR', 'ERRORS', 'ESCAPE', 'ESCAPED', 'EVENT', 'EVENTS', 'EVERY', 'EXAMINED', 'EXCEPT', 'EXCHANGE', 'EXCLUDE', 'EXECUTE', 'EXCEPTION', 'EXISTS', 'EXIT', 'EXPANSION', 'EXPIRE', 'EXPORT', 'EXPLAIN', 'EXTENDED', 'EXTENT_SIZE', 'FALSE', 'FAST', 'FAULTS', 'FEDERATED', 'FETCH', 'FIELDS', 'FILE', 'FIRST', 'FIXED', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FLUSH', 'FOLLOWING', 'FOLLOWS', 'FOR', 'FORCE', 'FOREIGN', 'FORMAT', 'FOUND', 'FROM', 'FULL', 'FULLTEXT', 'FUNCTION', 'GENERAL', 'GENERATED', 'GET_FORMAT', 'GET', 'GLOBAL', 'GOTO', 'GRANT', 'GRANTS', 'GROUP', 'HANDLER', 'HARD', 'HASH', 'HAVING', 'HELP', 'HIGH_PRIORITY', 'HISTORY', 'HOST', 'HOSTS', 'HOUR', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', // 'ID', // conflicts with common column name\n  'IDENTIFIED', 'IF', 'IGNORE', 'IGNORED', 'IGNORE_DOMAIN_IDS', 'IGNORE_SERVER_IDS', 'IMMEDIATE', 'IMPORT', 'INTERSECT', 'IN', 'INCREMENT', 'INDEX', 'INDEXES', 'INFILE', 'INITIAL_SIZE', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INSERT_METHOD', 'INSTALL', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', 'INTERVAL', 'INVISIBLE', 'INTO', 'IO', 'IO_THREAD', 'IPC', 'IS', 'ISOLATION', 'ISOPEN', 'ISSUER', 'ITERATE', 'INVOKER', 'JOIN', 'JSON', 'JSON_TABLE', 'KEY', 'KEYS', 'KEY_BLOCK_SIZE', 'KILL', 'LANGUAGE', 'LAST', 'LAST_VALUE', 'LASTVAL', 'LEADING', 'LEAVE', 'LEAVES', 'LEFT', 'LESS', 'LEVEL', 'LIKE', 'LIMIT', 'LINEAR', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCK', 'LOCKED', 'LOCKS', 'LOGFILE', 'LOGS', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', 'MASTER', 'MASTER_CONNECT_RETRY', 'MASTER_DELAY', 'MASTER_GTID_POS', 'MASTER_HOST', 'MASTER_LOG_FILE', 'MASTER_LOG_POS', 'MASTER_PASSWORD', 'MASTER_PORT', 'MASTER_SERVER_ID', 'MASTER_SSL', 'MASTER_SSL_CA', 'MASTER_SSL_CAPATH', 'MASTER_SSL_CERT', 'MASTER_SSL_CIPHER', 'MASTER_SSL_CRL', 'MASTER_SSL_CRLPATH', 'MASTER_SSL_KEY', 'MASTER_SSL_VERIFY_SERVER_CERT', 'MASTER_USER', 'MASTER_USE_GTID', 'MASTER_HEARTBEAT_PERIOD', 'MATCH', 'MAX_CONNECTIONS_PER_HOUR', 'MAX_QUERIES_PER_HOUR', 'MAX_ROWS', 'MAX_SIZE', 'MAX_STATEMENT_TIME', 'MAX_UPDATES_PER_HOUR', 'MAX_USER_CONNECTIONS', 'MAXVALUE', 'MEDIUM', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MEMORY', 'MERGE', 'MESSAGE_TEXT', 'MICROSECOND', 'MIDDLEINT', 'MIGRATE', 'MINUS', 'MINUTE', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MINVALUE', 'MIN_ROWS', 'MOD', 'MODE', 'MODIFIES', 'MODIFY', 'MONITOR', 'MONTH', 'MUTEX', 'MYSQL', 'MYSQL_ERRNO', 'NAME', 'NAMES', 'NATIONAL', 'NATURAL', 'NCHAR', 'NESTED', 'NEVER', 'NEW', 'NEXT', 'NEXTVAL', 'NO', 'NOMAXVALUE', 'NOMINVALUE', 'NOCACHE', 'NOCYCLE', 'NO_WAIT', 'NOWAIT', 'NODEGROUP', 'NONE', 'NOT', 'NOTFOUND', 'NO_WRITE_TO_BINLOG', 'NULL', 'NUMBER', 'NUMERIC', 'NVARCHAR', 'OF', 'OFFSET', 'OLD_PASSWORD', 'ON', 'ONE', 'ONLINE', 'ONLY', 'OPEN', 'OPTIMIZE', 'OPTIONS', 'OPTION', 'OPTIONALLY', 'OR', 'ORDER', 'ORDINALITY', 'OTHERS', 'OUT', 'OUTER', 'OUTFILE', 'OVER', 'OVERLAPS', 'OWNER', 'PACKAGE', 'PACK_KEYS', 'PAGE', 'PAGE_CHECKSUM', 'PARSER', 'PARSE_VCOL_EXPR', 'PATH', 'PERIOD', 'PARTIAL', 'PARTITION', 'PARTITIONING', 'PARTITIONS', 'PASSWORD', 'PERSISTENT', 'PHASE', 'PLUGIN', 'PLUGINS', 'PORT', 'PORTION', 'PRECEDES', 'PRECEDING', 'PRECISION', 'PREPARE', 'PRESERVE', 'PREV', 'PREVIOUS', 'PRIMARY', 'PRIVILEGES', 'PROCEDURE', 'PROCESS', 'PROCESSLIST', 'PROFILE', 'PROFILES', 'PROXY', 'PURGE', 'QUARTER', 'QUERY', 'QUICK', 'RAISE', 'RANGE', 'RAW', 'READ', 'READ_ONLY', 'READ_WRITE', 'READS', 'REAL', 'REBUILD', 'RECOVER', 'RECURSIVE', 'REDO_BUFFER_SIZE', 'REDOFILE', 'REDUNDANT', 'REFERENCES', 'REGEXP', 'RELAY', 'RELAYLOG', 'RELAY_LOG_FILE', 'RELAY_LOG_POS', 'RELAY_THREAD', 'RELEASE', 'RELOAD', 'REMOVE', 'RENAME', 'REORGANIZE', 'REPAIR', 'REPEATABLE', 'REPLACE', 'REPLAY', 'REPLICA', 'REPLICAS', 'REPLICA_POS', 'REPLICATION', 'REPEAT', 'REQUIRE', 'RESET', 'RESIGNAL', 'RESTART', 'RESTORE', 'RESTRICT', 'RESUME', 'RETURNED_SQLSTATE', 'RETURN', 'RETURNING', 'RETURNS', 'REUSE', 'REVERSE', 'REVOKE', 'RIGHT', 'RLIKE', 'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROW', 'ROWCOUNT', 'ROWNUM', 'ROWS', 'ROWTYPE', 'ROW_COUNT', 'ROW_FORMAT', 'RTREE', 'SAVEPOINT', 'SCHEDULE', 'SCHEMA', 'SCHEMA_NAME', 'SCHEMAS', 'SECOND', 'SECOND_MICROSECOND', 'SECURITY', 'SELECT', 'SENSITIVE', 'SEPARATOR', 'SEQUENCE', 'SERIAL', 'SERIALIZABLE', 'SESSION', 'SERVER', 'SET', 'SETVAL', 'SHARE', 'SHOW', 'SHUTDOWN', 'SIGNAL', 'SIGNED', 'SIMPLE', 'SKIP', 'SLAVE', 'SLAVES', 'SLAVE_POS', 'SLOW', 'SNAPSHOT', 'SMALLINT', 'SOCKET', 'SOFT', 'SOME', 'SONAME', 'SOUNDS', 'SOURCE', 'STAGE', 'STORED', 'SPATIAL', 'SPECIFIC', 'REF_SYSTEM_ID', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQL_BIG_RESULT', 'SQL_BUFFER_RESULT', 'SQL_CACHE', 'SQL_CALC_FOUND_ROWS', 'SQL_NO_CACHE', 'SQL_SMALL_RESULT', 'SQL_THREAD', 'SQL_TSI_SECOND', 'SQL_TSI_MINUTE', 'SQL_TSI_HOUR', 'SQL_TSI_DAY', 'SQL_TSI_WEEK', 'SQL_TSI_MONTH', 'SQL_TSI_QUARTER', 'SQL_TSI_YEAR', 'SSL', 'START', 'STARTING', 'STARTS', 'STATEMENT', 'STATS_AUTO_RECALC', 'STATS_PERSISTENT', 'STATS_SAMPLE_PAGES', 'STATUS', 'STOP', 'STORAGE', 'STRAIGHT_JOIN', 'STRING', 'SUBCLASS_ORIGIN', 'SUBJECT', 'SUBPARTITION', 'SUBPARTITIONS', 'SUPER', 'SUSPEND', 'SWAPS', 'SWITCHES', 'SYSDATE', 'SYSTEM', 'SYSTEM_TIME', 'TABLE', 'TABLE_NAME', 'TABLES', 'TABLESPACE', 'TABLE_CHECKSUM', 'TEMPORARY', 'TEMPTABLE', 'TERMINATED', 'TEXT', 'THAN', 'THEN', 'TIES', 'TIME', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSACTIONAL', 'THREADS', 'TRIGGER', 'TRIGGERS', 'TRUE', 'TRUNCATE', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNCOMMITTED', 'UNDEFINED', 'UNDO_BUFFER_SIZE', 'UNDOFILE', 'UNDO', 'UNICODE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNINSTALL', 'UNSIGNED', 'UNTIL', 'UPDATE', 'UPGRADE', 'USAGE', 'USE', 'USER', 'USER_RESOURCES', 'USE_FRM', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'VALUE', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARCHAR2', 'VARIABLES', 'VARYING', 'VIA', 'VIEW', 'VIRTUAL', 'VISIBLE', 'VERSIONING', 'WAIT', 'WARNINGS', 'WEEK', 'WEIGHT_STRING', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', 'X509', 'XOR', 'XA', 'XML', 'YEAR', 'YEAR_MONTH', 'ZEROFILL']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=mariadb.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.formatter.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.formatter.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _token = __webpack_require__(/*! ../../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar _mysql = __webpack_require__(/*! ./mysql.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.keywords.js\");\n\nvar _mysql2 = __webpack_require__(/*! ./mysql.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.functions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]', 'REPLACE [LOW_PRIORITY | DELAYED] [INTO]', 'VALUES', // - update:\n'UPDATE [LOW_PRIORITY] [IGNORE]', 'SET', // - delete:\n'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]', 'CREATE [TEMPORARY] TABLE [IF NOT EXISTS]', 'DROP [TEMPORARY] TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD [COLUMN]', '{CHANGE | MODIFY} [COLUMN]', 'DROP [COLUMN]', 'RENAME [TO | AS]', 'RENAME COLUMN', 'ALTER [COLUMN]', '{SET | DROP} DEFAULT', // for alter column\n// https://dev.mysql.com/doc/refman/8.0/en/sql-statements.html\n'ALTER DATABASE', 'ALTER EVENT', 'ALTER FUNCTION', 'ALTER INSTANCE', 'ALTER LOGFILE GROUP', 'ALTER PROCEDURE', 'ALTER RESOURCE GROUP', 'ALTER SERVER', 'ALTER TABLESPACE', 'ALTER USER', 'ALTER VIEW', 'ANALYZE TABLE', 'BINLOG', 'CACHE INDEX', 'CALL', 'CHANGE MASTER TO', 'CHANGE REPLICATION FILTER', 'CHANGE REPLICATION SOURCE TO', 'CHECK TABLE', 'CHECKSUM TABLE', 'CLONE', 'COMMIT', 'CREATE DATABASE', 'CREATE EVENT', 'CREATE FUNCTION', 'CREATE FUNCTION', 'CREATE INDEX', 'CREATE LOGFILE GROUP', 'CREATE PROCEDURE', 'CREATE RESOURCE GROUP', 'CREATE ROLE', 'CREATE SERVER', 'CREATE SPATIAL REFERENCE SYSTEM', 'CREATE TABLESPACE', 'CREATE TRIGGER', 'CREATE USER', 'DEALLOCATE PREPARE', 'DESCRIBE', 'DO', 'DROP DATABASE', 'DROP EVENT', 'DROP FUNCTION', 'DROP FUNCTION', 'DROP INDEX', 'DROP LOGFILE GROUP', 'DROP PROCEDURE', 'DROP RESOURCE GROUP', 'DROP ROLE', 'DROP SERVER', 'DROP SPATIAL REFERENCE SYSTEM', 'DROP TABLESPACE', 'DROP TRIGGER', 'DROP USER', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FLUSH', 'GRANT', 'HANDLER', 'HELP', 'IMPORT TABLE', 'INSTALL COMPONENT', 'INSTALL PLUGIN', 'KILL', 'LOAD DATA', 'LOAD INDEX INTO CACHE', 'LOAD XML', 'LOCK INSTANCE FOR BACKUP', 'LOCK TABLES', 'MASTER_POS_WAIT', 'OPTIMIZE TABLE', 'PREPARE', 'PURGE BINARY LOGS', 'RELEASE SAVEPOINT', 'RENAME TABLE', 'RENAME USER', 'REPAIR TABLE', 'RESET', 'RESET MASTER', 'RESET PERSIST', 'RESET REPLICA', 'RESET SLAVE', 'RESTART', 'REVOKE', 'ROLLBACK', 'ROLLBACK TO SAVEPOINT', 'SAVEPOINT', 'SET CHARACTER SET', 'SET DEFAULT ROLE', 'SET NAMES', 'SET PASSWORD', 'SET RESOURCE GROUP', 'SET ROLE', 'SET TRANSACTION', 'SHOW', 'SHOW BINARY LOGS', 'SHOW BINLOG EVENTS', 'SHOW CHARACTER SET', 'SHOW COLLATION', 'SHOW COLUMNS', 'SHOW CREATE DATABASE', 'SHOW CREATE EVENT', 'SHOW CREATE FUNCTION', 'SHOW CREATE PROCEDURE', 'SHOW CREATE TABLE', 'SHOW CREATE TRIGGER', 'SHOW CREATE USER', 'SHOW CREATE VIEW', 'SHOW DATABASES', 'SHOW ENGINE', 'SHOW ENGINES', 'SHOW ERRORS', 'SHOW EVENTS', 'SHOW FUNCTION CODE', 'SHOW FUNCTION STATUS', 'SHOW GRANTS', 'SHOW INDEX', 'SHOW MASTER STATUS', 'SHOW OPEN TABLES', 'SHOW PLUGINS', 'SHOW PRIVILEGES', 'SHOW PROCEDURE CODE', 'SHOW PROCEDURE STATUS', 'SHOW PROCESSLIST', 'SHOW PROFILE', 'SHOW PROFILES', 'SHOW RELAYLOG EVENTS', 'SHOW REPLICA STATUS', 'SHOW REPLICAS', 'SHOW SLAVE', 'SHOW SLAVE HOSTS', 'SHOW STATUS', 'SHOW TABLE STATUS', 'SHOW TABLES', 'SHOW TRIGGERS', 'SHOW VARIABLES', 'SHOW WARNINGS', 'SHUTDOWN', 'SOURCE_POS_WAIT', 'START GROUP_REPLICATION', 'START REPLICA', 'START SLAVE', 'START TRANSACTION', 'STOP GROUP_REPLICATION', 'STOP REPLICA', 'STOP SLAVE', 'TABLE', 'UNINSTALL COMPONENT', 'UNINSTALL PLUGIN', 'UNLOCK INSTANCE', 'UNLOCK TABLES', 'USE', 'XA', // flow control\n// 'IF',\n'ITERATE', 'LEAVE', 'LOOP', 'REPEAT', 'RETURN', 'WHILE']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT} [OUTER] JOIN', // non-standard joins\n'STRAIGHT_JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', 'CHARACTER SET', '{ROWS | RANGE} BETWEEN']); // https://dev.mysql.com/doc/refman/8.0/en/\n\nvar MySqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(MySqlFormatter, _Formatter);\n\n  var _super = _createSuper(MySqlFormatter);\n\n  function MySqlFormatter() {\n    _classCallCheck(this, MySqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MySqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE', 'ELSEIF'],\n        reservedPhrases: reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: _mysql.keywords,\n        reservedFunctionNames: _mysql2.functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: ['\"\"-qq-bs', {\n          quote: \"''-qq-bs\",\n          prefixes: ['N']\n        }, {\n          quote: \"''-raw\",\n          prefixes: ['B', 'X'],\n          requirePrefix: true\n        }],\n        identTypes: ['``'],\n        identChars: {\n          first: '$',\n          rest: '$',\n          allowFirstCharNumber: true\n        },\n        variableTypes: [{\n          regex: '@@?[A-Za-z0-9_.$]+'\n        }, {\n          quote: '\"\"-qq-bs',\n          prefixes: ['@'],\n          requirePrefix: true\n        }, {\n          quote: \"''-qq-bs\",\n          prefixes: ['@'],\n          requirePrefix: true\n        }, {\n          quote: '``',\n          prefixes: ['@'],\n          requirePrefix: true\n        }],\n        paramTypes: {\n          positional: true\n        },\n        lineCommentTypes: ['--', '#'],\n        operators: ['%', ':=', '&', '|', '^', '~', '<<', '>>', '<=>', '->', '->>', '&&', '||', '!'],\n        postProcess: postProcess\n      });\n    }\n  }]);\n\n  return MySqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = MySqlFormatter;\n\nfunction postProcess(tokens) {\n  return tokens.map(function (token, i) {\n    var nextToken = tokens[i + 1] || _token.EOF_TOKEN;\n\n    if (_token.isToken.SET(token) && nextToken.text === '(') {\n      // This is SET datatype, not SET statement\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.RESERVED_FUNCTION_NAME\n      });\n    }\n\n    return token;\n  });\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=mysql.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.functions.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.functions.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html\n  all: ['ABS', 'ACOS', 'ADDDATE', 'ADDTIME', 'AES_DECRYPT', 'AES_ENCRYPT', // 'AND',\n  'ANY_VALUE', 'ASCII', 'ASIN', 'ATAN', 'ATAN2', 'AVG', 'BENCHMARK', 'BIN', 'BIN_TO_UUID', 'BINARY', 'BIT_AND', 'BIT_COUNT', 'BIT_LENGTH', 'BIT_OR', 'BIT_XOR', 'CAN_ACCESS_COLUMN', 'CAN_ACCESS_DATABASE', 'CAN_ACCESS_TABLE', 'CAN_ACCESS_USER', 'CAN_ACCESS_VIEW', 'CAST', 'CEIL', 'CEILING', 'CHAR', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHARSET', 'COALESCE', 'COERCIBILITY', 'COLLATION', 'COMPRESS', 'CONCAT', 'CONCAT_WS', 'CONNECTION_ID', 'CONV', 'CONVERT', 'CONVERT_TZ', 'COS', 'COT', 'COUNT', 'CRC32', 'CUME_DIST', 'CURDATE', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURTIME', 'DATABASE', 'DATE', 'DATE_ADD', 'DATE_FORMAT', 'DATE_SUB', 'DATEDIFF', 'DAY', 'DAYNAME', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'DEFAULT', 'DEGREES', 'DENSE_RANK', 'DIV', 'ELT', 'EXP', 'EXPORT_SET', 'EXTRACT', 'EXTRACTVALUE', 'FIELD', 'FIND_IN_SET', 'FIRST_VALUE', 'FLOOR', 'FORMAT', 'FORMAT_BYTES', 'FORMAT_PICO_TIME', 'FOUND_ROWS', 'FROM_BASE64', 'FROM_DAYS', 'FROM_UNIXTIME', 'GEOMCOLLECTION', 'GEOMETRYCOLLECTION', 'GET_DD_COLUMN_PRIVILEGES', 'GET_DD_CREATE_OPTIONS', 'GET_DD_INDEX_SUB_PART_LENGTH', 'GET_FORMAT', 'GET_LOCK', 'GREATEST', 'GROUP_CONCAT', 'GROUPING', 'GTID_SUBSET', 'GTID_SUBTRACT', 'HEX', 'HOUR', 'ICU_VERSION', 'IF', 'IFNULL', // 'IN',\n  'INET_ATON', 'INET_NTOA', 'INET6_ATON', 'INET6_NTOA', 'INSERT', 'INSTR', 'INTERNAL_AUTO_INCREMENT', 'INTERNAL_AVG_ROW_LENGTH', 'INTERNAL_CHECK_TIME', 'INTERNAL_CHECKSUM', 'INTERNAL_DATA_FREE', 'INTERNAL_DATA_LENGTH', 'INTERNAL_DD_CHAR_LENGTH', 'INTERNAL_GET_COMMENT_OR_ERROR', 'INTERNAL_GET_ENABLED_ROLE_JSON', 'INTERNAL_GET_HOSTNAME', 'INTERNAL_GET_USERNAME', 'INTERNAL_GET_VIEW_WARNING_OR_ERROR', 'INTERNAL_INDEX_COLUMN_CARDINALITY', 'INTERNAL_INDEX_LENGTH', 'INTERNAL_IS_ENABLED_ROLE', 'INTERNAL_IS_MANDATORY_ROLE', 'INTERNAL_KEYS_DISABLED', 'INTERNAL_MAX_DATA_LENGTH', 'INTERNAL_TABLE_ROWS', 'INTERNAL_UPDATE_TIME', 'INTERVAL', 'IS', 'IS_FREE_LOCK', 'IS_IPV4', 'IS_IPV4_COMPAT', 'IS_IPV4_MAPPED', 'IS_IPV6', 'IS NOT', 'IS NOT NULL', 'IS NULL', 'IS_USED_LOCK', 'IS_UUID', 'ISNULL', 'JSON_ARRAY', 'JSON_ARRAY_APPEND', 'JSON_ARRAY_INSERT', 'JSON_ARRAYAGG', 'JSON_CONTAINS', 'JSON_CONTAINS_PATH', 'JSON_DEPTH', 'JSON_EXTRACT', 'JSON_INSERT', 'JSON_KEYS', 'JSON_LENGTH', 'JSON_MERGE', 'JSON_MERGE_PATCH', 'JSON_MERGE_PRESERVE', 'JSON_OBJECT', 'JSON_OBJECTAGG', 'JSON_OVERLAPS', 'JSON_PRETTY', 'JSON_QUOTE', 'JSON_REMOVE', 'JSON_REPLACE', 'JSON_SCHEMA_VALID', 'JSON_SCHEMA_VALIDATION_REPORT', 'JSON_SEARCH', 'JSON_SET', 'JSON_STORAGE_FREE', 'JSON_STORAGE_SIZE', 'JSON_TABLE', 'JSON_TYPE', 'JSON_UNQUOTE', 'JSON_VALID', 'JSON_VALUE', 'LAG', 'LAST_DAY', 'LAST_INSERT_ID', 'LAST_VALUE', 'LCASE', 'LEAD', 'LEAST', 'LEFT', 'LENGTH', 'LIKE', 'LINESTRING', 'LN', 'LOAD_FILE', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATE', 'LOG', 'LOG10', 'LOG2', 'LOWER', 'LPAD', 'LTRIM', 'MAKE_SET', 'MAKEDATE', 'MAKETIME', 'MASTER_POS_WAIT', 'MATCH', 'MAX', 'MBRCONTAINS', 'MBRCOVEREDBY', 'MBRCOVERS', 'MBRDISJOINT', 'MBREQUALS', 'MBRINTERSECTS', 'MBROVERLAPS', 'MBRTOUCHES', 'MBRWITHIN', 'MD5', 'MEMBER OF', 'MICROSECOND', 'MID', 'MIN', 'MINUTE', 'MOD', 'MONTH', 'MONTHNAME', 'MULTILINESTRING', 'MULTIPOINT', 'MULTIPOLYGON', 'NAME_CONST', 'NOT', 'NOT IN', 'NOT LIKE', 'NOT REGEXP', 'NOW', 'NTH_VALUE', 'NTILE', 'NULLIF', 'OCT', 'OCTET_LENGTH', // 'OR',\n  'ORD', 'PERCENT_RANK', 'PERIOD_ADD', 'PERIOD_DIFF', 'PI', 'POINT', 'POLYGON', 'POSITION', 'POW', 'POWER', 'PS_CURRENT_THREAD_ID', 'PS_THREAD_ID', 'QUARTER', 'QUOTE', 'RADIANS', 'RAND', 'RANDOM_BYTES', 'RANK', 'REGEXP', 'REGEXP_INSTR', 'REGEXP_LIKE', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'RELEASE_ALL_LOCKS', 'RELEASE_LOCK', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RLIKE', 'ROLES_GRAPHML', 'ROUND', 'ROW_COUNT', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'SCHEMA', 'SEC_TO_TIME', 'SECOND', 'SESSION_USER', 'SHA1', 'SHA2', 'SIGN', 'SIN', 'SLEEP', 'SOUNDEX', 'SOUNDS LIKE', 'SOURCE_POS_WAIT', 'SPACE', 'SQRT', 'ST_AREA', 'ST_ASBINARY', 'ST_ASGEOJSON', 'ST_ASTEXT', 'ST_BUFFER', 'ST_BUFFER_STRATEGY', 'ST_CENTROID', 'ST_COLLECT', 'ST_CONTAINS', 'ST_CONVEXHULL', 'ST_CROSSES', 'ST_DIFFERENCE', 'ST_DIMENSION', 'ST_DISJOINT', 'ST_DISTANCE', 'ST_DISTANCE_SPHERE', 'ST_ENDPOINT', 'ST_ENVELOPE', 'ST_EQUALS', 'ST_EXTERIORRING', 'ST_FRECHETDISTANCE', 'ST_GEOHASH', 'ST_GEOMCOLLFROMTEXT', 'ST_GEOMCOLLFROMWKB', 'ST_GEOMETRYN', 'ST_GEOMETRYTYPE', 'ST_GEOMFROMGEOJSON', 'ST_GEOMFROMTEXT', 'ST_GEOMFROMWKB', 'ST_HAUSDORFFDISTANCE', 'ST_INTERIORRINGN', 'ST_INTERSECTION', 'ST_INTERSECTS', 'ST_ISCLOSED', 'ST_ISEMPTY', 'ST_ISSIMPLE', 'ST_ISVALID', 'ST_LATFROMGEOHASH', 'ST_LATITUDE', 'ST_LENGTH', 'ST_LINEFROMTEXT', 'ST_LINEFROMWKB', 'ST_LINEINTERPOLATEPOINT', 'ST_LINEINTERPOLATEPOINTS', 'ST_LONGFROMGEOHASH', 'ST_LONGITUDE', 'ST_MAKEENVELOPE', 'ST_MLINEFROMTEXT', 'ST_MLINEFROMWKB', 'ST_MPOINTFROMTEXT', 'ST_MPOINTFROMWKB', 'ST_MPOLYFROMTEXT', 'ST_MPOLYFROMWKB', 'ST_NUMGEOMETRIES', 'ST_NUMINTERIORRING', 'ST_NUMPOINTS', 'ST_OVERLAPS', 'ST_POINTATDISTANCE', 'ST_POINTFROMGEOHASH', 'ST_POINTFROMTEXT', 'ST_POINTFROMWKB', 'ST_POINTN', 'ST_POLYFROMTEXT', 'ST_POLYFROMWKB', 'ST_SIMPLIFY', 'ST_SRID', 'ST_STARTPOINT', 'ST_SWAPXY', 'ST_SYMDIFFERENCE', 'ST_TOUCHES', 'ST_TRANSFORM', 'ST_UNION', 'ST_VALIDATE', 'ST_WITHIN', 'ST_X', 'ST_Y', 'STATEMENT_DIGEST', 'STATEMENT_DIGEST_TEXT', 'STD', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STR_TO_DATE', 'STRCMP', 'SUBDATE', 'SUBSTR', 'SUBSTRING', 'SUBSTRING_INDEX', 'SUBTIME', 'SUM', 'SYSDATE', 'SYSTEM_USER', 'TAN', 'TIME', 'TIME_FORMAT', 'TIME_TO_SEC', 'TIMEDIFF', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TO_BASE64', 'TO_DAYS', 'TO_SECONDS', 'TRIM', 'TRUNCATE', 'UCASE', 'UNCOMPRESS', 'UNCOMPRESSED_LENGTH', 'UNHEX', 'UNIX_TIMESTAMP', 'UPDATEXML', 'UPPER', 'USER', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'UUID', 'UUID_SHORT', 'UUID_TO_BIN', 'VALIDATE_PASSWORD_STRENGTH', 'VALUES', 'VAR_POP', 'VAR_SAMP', 'VARIANCE', 'VERSION', 'WAIT_FOR_EXECUTED_GTID_SET', 'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS', 'WEEK', 'WEEKDAY', 'WEEKOFYEAR', 'WEIGHT_STRING', // 'XOR',\n  'YEAR', 'YEARWEEK', // Data types with parameters\n  // https://dev.mysql.com/doc/refman/8.0/en/data-types.html\n  'BIT', 'TINYINT', 'SMALLINT', 'MEDIUMINT', 'INT', 'INTEGER', 'BIGINT', 'DECIMAL', 'DEC', 'NUMERIC', 'FIXED', 'FLOAT', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'DATETIME', 'TIMESTAMP', 'TIME', 'YEAR', 'CHAR', 'NATIONAL CHAR', 'VARCHAR', 'NATIONAL VARCHAR', 'BINARY', 'VARBINARY', 'BLOB', 'TEXT', 'ENUM' // 'SET' // handled as special-case in postProcess\n  ]\n});\nexports.functions = functions;\n//# sourceMappingURL=mysql.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.keywords.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.keywords.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://dev.mysql.com/doc/refman/8.0/en/keywords.html\n  all: ['ACCESSIBLE', // (R)\n  'ACCOUNT', 'ACTION', 'ACTIVE', 'ADD', // (R)\n  'ADMIN', 'AFTER', 'AGAINST', 'AGGREGATE', 'ALGORITHM', 'ALL', // (R)\n  'ALTER', // (R)\n  'ALWAYS', 'ANALYZE', // (R)\n  'AND', // (R)\n  'ANY', 'ARRAY', 'AS', // (R)\n  'ASC', // (R)\n  'ASCII', 'ASENSITIVE', // (R)\n  'AT', 'ATTRIBUTE', 'AUTHENTICATION', 'AUTOEXTEND_SIZE', 'AUTO_INCREMENT', 'AVG', 'AVG_ROW_LENGTH', 'BACKUP', 'BEFORE', // (R)\n  'BEGIN', 'BETWEEN', // (R)\n  'BIGINT', // (R)\n  'BINARY', // (R)\n  'BINLOG', 'BIT', 'BLOB', // (R)\n  'BLOCK', 'BOOL', 'BOOLEAN', 'BOTH', // (R)\n  'BTREE', 'BUCKETS', 'BY', // (R)\n  'BYTE', 'CACHE', 'CALL', // (R)\n  'CASCADE', // (R)\n  'CASCADED', 'CASE', // (R)\n  'CATALOG_NAME', 'CHAIN', 'CHALLENGE_RESPONSE', 'CHANGE', // (R)\n  'CHANGED', 'CHANNEL', 'CHAR', // (R)\n  'CHARACTER', // (R)\n  'CHARSET', 'CHECK', // (R)\n  'CHECKSUM', 'CIPHER', 'CLASS_ORIGIN', 'CLIENT', 'CLONE', 'CLOSE', 'COALESCE', 'CODE', 'COLLATE', // (R)\n  'COLLATION', 'COLUMN', // (R)\n  'COLUMNS', 'COLUMN_FORMAT', 'COLUMN_NAME', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPACT', 'COMPLETION', 'COMPONENT', 'COMPRESSED', 'COMPRESSION', 'CONCURRENT', 'CONDITION', // (R)\n  'CONNECTION', 'CONSISTENT', 'CONSTRAINT', // (R)\n  'CONSTRAINT_CATALOG', 'CONSTRAINT_NAME', 'CONSTRAINT_SCHEMA', 'CONTAINS', 'CONTEXT', 'CONTINUE', // (R)\n  'CONVERT', // (R)\n  'CPU', 'CREATE', // (R)\n  'CROSS', // (R)\n  'CUBE', // (R)\n  'CUME_DIST', // (R)\n  'CURRENT', 'CURRENT_DATE', // (R)\n  'CURRENT_TIME', // (R)\n  'CURRENT_TIMESTAMP', // (R)\n  'CURRENT_USER', // (R)\n  'CURSOR', // (R)\n  'CURSOR_NAME', 'DATA', 'DATABASE', // (R)\n  'DATABASES', // (R)\n  'DATAFILE', 'DATE', 'DATETIME', 'DAY', 'DAY_HOUR', // (R)\n  'DAY_MICROSECOND', // (R)\n  'DAY_MINUTE', // (R)\n  'DAY_SECOND', // (R)\n  'DEALLOCATE', 'DEC', // (R)\n  'DECIMAL', // (R)\n  'DECLARE', // (R)\n  'DEFAULT', // (R)\n  'DEFAULT_AUTH', 'DEFINER', 'DEFINITION', 'DELAYED', // (R)\n  'DELAY_KEY_WRITE', 'DELETE', // (R)\n  'DENSE_RANK', // (R)\n  'DESC', // (R)\n  'DESCRIBE', // (R)\n  'DESCRIPTION', 'DETERMINISTIC', // (R)\n  'DIAGNOSTICS', 'DIRECTORY', 'DISABLE', 'DISCARD', 'DISK', 'DISTINCT', // (R)\n  'DISTINCTROW', // (R)\n  'DIV', // (R)\n  'DO', 'DOUBLE', // (R)\n  'DROP', // (R)\n  'DUAL', // (R)\n  'DUMPFILE', 'DUPLICATE', 'DYNAMIC', 'EACH', // (R)\n  'ELSE', // (R)\n  'ELSEIF', // (R)\n  'EMPTY', // (R)\n  'ENABLE', 'ENCLOSED', // (R)\n  'ENCRYPTION', 'END', 'ENDS', 'ENFORCED', 'ENGINE', 'ENGINES', 'ENGINE_ATTRIBUTE', 'ENUM', 'ERROR', 'ERRORS', 'ESCAPE', 'ESCAPED', // (R)\n  'EVENT', 'EVENTS', 'EVERY', 'EXCEPT', // (R)\n  'EXCHANGE', 'EXCLUDE', 'EXECUTE', 'EXISTS', // (R)\n  'EXIT', // (R)\n  'EXPANSION', 'EXPIRE', 'EXPLAIN', // (R)\n  'EXPORT', 'EXTENDED', 'EXTENT_SIZE', 'FACTOR', 'FAILED_LOGIN_ATTEMPTS', 'FALSE', // (R)\n  'FAST', 'FAULTS', 'FETCH', // (R)\n  'FIELDS', 'FILE', 'FILE_BLOCK_SIZE', 'FILTER', 'FINISH', 'FIRST', 'FIRST_VALUE', // (R)\n  'FIXED', 'FLOAT', // (R)\n  'FLOAT4', // (R)\n  'FLOAT8', // (R)\n  'FLUSH', 'FOLLOWING', 'FOLLOWS', 'FOR', // (R)\n  'FORCE', // (R)\n  'FOREIGN', // (R)\n  'FORMAT', 'FOUND', 'FROM', // (R)\n  'FULL', 'FULLTEXT', // (R)\n  'FUNCTION', // (R)\n  'GENERAL', 'GENERATED', // (R)\n  'GEOMCOLLECTION', 'GEOMETRY', 'GEOMETRYCOLLECTION', 'GET', // (R)\n  'GET_FORMAT', 'GET_MASTER_PUBLIC_KEY', 'GET_SOURCE_PUBLIC_KEY', 'GLOBAL', 'GRANT', // (R)\n  'GRANTS', 'GROUP', // (R)\n  'GROUPING', // (R)\n  'GROUPS', // (R)\n  'GROUP_REPLICATION', 'GTID_ONLY', 'HANDLER', 'HASH', 'HAVING', // (R)\n  'HELP', 'HIGH_PRIORITY', // (R)\n  'HISTOGRAM', 'HISTORY', 'HOST', 'HOSTS', 'HOUR', 'HOUR_MICROSECOND', // (R)\n  'HOUR_MINUTE', // (R)\n  'HOUR_SECOND', // (R)\n  'IDENTIFIED', 'IF', // (R)\n  'IGNORE', // (R)\n  'IGNORE_SERVER_IDS', 'IMPORT', 'IN', // (R)\n  'INACTIVE', 'INDEX', // (R)\n  'INDEXES', 'INFILE', // (R)\n  'INITIAL', 'INITIAL_SIZE', 'INITIATE', 'INNER', // (R)\n  'INOUT', // (R)\n  'INSENSITIVE', // (R)\n  'INSERT', // (R)\n  'INSERT_METHOD', 'INSTALL', 'INSTANCE', 'IN', // <-- moved over from functions\n  'INT', // (R)\n  'INT1', // (R)\n  'INT2', // (R)\n  'INT3', // (R)\n  'INT4', // (R)\n  'INT8', // (R)\n  'INTEGER', // (R)\n  'INTERSECT', // (R)\n  'INTERVAL', // (R)\n  'INTO', // (R)\n  'INVISIBLE', 'INVOKER', 'IO', 'IO_AFTER_GTIDS', // (R)\n  'IO_BEFORE_GTIDS', // (R)\n  'IO_THREAD', 'IPC', 'IS', // (R)\n  'ISOLATION', 'ISSUER', 'ITERATE', // (R)\n  'JOIN', // (R)\n  'JSON', 'JSON_TABLE', // (R)\n  'JSON_VALUE', 'KEY', // (R)\n  'KEYRING', 'KEYS', // (R)\n  'KEY_BLOCK_SIZE', 'KILL', // (R)\n  'LAG', // (R)\n  'LANGUAGE', 'LAST', 'LAST_VALUE', // (R)\n  'LATERAL', // (R)\n  'LEAD', // (R)\n  'LEADING', // (R)\n  'LEAVE', // (R)\n  'LEAVES', 'LEFT', // (R)\n  'LESS', 'LEVEL', 'LIKE', // (R)\n  'LIMIT', // (R)\n  'LINEAR', // (R)\n  'LINES', // (R)\n  'LINESTRING', 'LIST', 'LOAD', // (R)\n  'LOCAL', 'LOCALTIME', // (R)\n  'LOCALTIMESTAMP', // (R)\n  'LOCK', // (R)\n  'LOCKED', 'LOCKS', 'LOGFILE', 'LOGS', 'LONG', // (R)\n  'LONGBLOB', // (R)\n  'LONGTEXT', // (R)\n  'LOOP', // (R)\n  'LOW_PRIORITY', // (R)\n  'MASTER', 'MASTER_AUTO_POSITION', 'MASTER_BIND', // (R)\n  'MASTER_COMPRESSION_ALGORITHMS', 'MASTER_CONNECT_RETRY', 'MASTER_DELAY', 'MASTER_HEARTBEAT_PERIOD', 'MASTER_HOST', 'MASTER_LOG_FILE', 'MASTER_LOG_POS', 'MASTER_PASSWORD', 'MASTER_PORT', 'MASTER_PUBLIC_KEY_PATH', 'MASTER_RETRY_COUNT', 'MASTER_SSL', 'MASTER_SSL_CA', 'MASTER_SSL_CAPATH', 'MASTER_SSL_CERT', 'MASTER_SSL_CIPHER', 'MASTER_SSL_CRL', 'MASTER_SSL_CRLPATH', 'MASTER_SSL_KEY', 'MASTER_SSL_VERIFY_SERVER_CERT', // (R)\n  'MASTER_TLS_CIPHERSUITES', 'MASTER_TLS_VERSION', 'MASTER_USER', 'MASTER_ZSTD_COMPRESSION_LEVEL', 'MATCH', // (R)\n  'MAXVALUE', // (R)\n  'MAX_CONNECTIONS_PER_HOUR', 'MAX_QUERIES_PER_HOUR', 'MAX_ROWS', 'MAX_SIZE', 'MAX_UPDATES_PER_HOUR', 'MAX_USER_CONNECTIONS', 'MEDIUM', 'MEDIUMBLOB', // (R)\n  'MEDIUMINT', // (R)\n  'MEDIUMTEXT', // (R)\n  'MEMBER', 'MEMORY', 'MERGE', 'MESSAGE_TEXT', 'MICROSECOND', 'MIDDLEINT', // (R)\n  'MIGRATE', 'MINUTE', 'MINUTE_MICROSECOND', // (R)\n  'MINUTE_SECOND', // (R)\n  'MIN_ROWS', 'MOD', // (R)\n  'MODE', 'MODIFIES', // (R)\n  'MODIFY', 'MONTH', 'MULTILINESTRING', 'MULTIPOINT', 'MULTIPOLYGON', 'MUTEX', 'MYSQL_ERRNO', 'NAME', 'NAMES', 'NATIONAL', 'NATURAL', // (R)\n  'NCHAR', 'NDB', 'NDBCLUSTER', 'NESTED', 'NETWORK_NAMESPACE', 'NEVER', 'NEW', 'NEXT', 'NO', 'NODEGROUP', 'NONE', 'NOT', // (R)\n  'NOWAIT', 'NO_WAIT', 'NO_WRITE_TO_BINLOG', // (R)\n  'NTH_VALUE', // (R)\n  'NTILE', // (R)\n  'NULL', // (R)\n  'NULLS', 'NUMBER', 'NUMERIC', // (R)\n  'NVARCHAR', 'OF', // (R)\n  'OFF', 'OFFSET', 'OJ', 'OLD', 'ON', // (R)\n  'ONE', 'ONLY', 'OPEN', 'OPTIMIZE', // (R)\n  'OPTIMIZER_COSTS', // (R)\n  'OPTION', // (R)\n  'OPTIONAL', 'OPTIONALLY', // (R)\n  'OPTIONS', 'OR', // (R)\n  'ORDER', // (R)\n  'ORDINALITY', 'ORGANIZATION', 'OTHERS', 'OUT', // (R)\n  'OUTER', // (R)\n  'OUTFILE', // (R)\n  'OVER', // (R)\n  'OWNER', 'PACK_KEYS', 'PAGE', 'PARSER', 'PARTIAL', 'PARTITION', // (R)\n  'PARTITIONING', 'PARTITIONS', 'PASSWORD', 'PASSWORD_LOCK_TIME', 'PATH', 'PERCENT_RANK', // (R)\n  'PERSIST', 'PERSIST_ONLY', 'PHASE', 'PLUGIN', 'PLUGINS', 'PLUGIN_DIR', 'POINT', 'POLYGON', 'PORT', 'PRECEDES', 'PRECEDING', 'PRECISION', // (R)\n  'PREPARE', 'PRESERVE', 'PREV', 'PRIMARY', // (R)\n  'PRIVILEGES', 'PRIVILEGE_CHECKS_USER', 'PROCEDURE', // (R)\n  'PROCESS', 'PROCESSLIST', 'PROFILE', 'PROFILES', 'PROXY', 'PURGE', // (R)\n  'QUARTER', 'QUERY', 'QUICK', 'RANDOM', 'RANGE', // (R)\n  'RANK', // (R)\n  'READ', // (R)\n  'READS', // (R)\n  'READ_ONLY', 'READ_WRITE', // (R)\n  'REAL', // (R)\n  'REBUILD', 'RECOVER', 'RECURSIVE', // (R)\n  'REDO_BUFFER_SIZE', 'REDUNDANT', 'REFERENCE', 'REFERENCES', // (R)\n  'REGEXP', // (R)\n  'REGISTRATION', 'RELAY', 'RELAYLOG', 'RELAY_LOG_FILE', 'RELAY_LOG_POS', 'RELAY_THREAD', 'RELEASE', // (R)\n  'RELOAD', 'REMOVE', 'RENAME', // (R)\n  'REORGANIZE', 'REPAIR', 'REPEAT', // (R)\n  'REPEATABLE', 'REPLACE', // (R)\n  'REPLICA', 'REPLICAS', 'REPLICATE_DO_DB', 'REPLICATE_DO_TABLE', 'REPLICATE_IGNORE_DB', 'REPLICATE_IGNORE_TABLE', 'REPLICATE_REWRITE_DB', 'REPLICATE_WILD_DO_TABLE', 'REPLICATE_WILD_IGNORE_TABLE', 'REPLICATION', 'REQUIRE', // (R)\n  'REQUIRE_ROW_FORMAT', 'RESET', 'RESIGNAL', // (R)\n  'RESOURCE', 'RESPECT', 'RESTART', 'RESTORE', 'RESTRICT', // (R)\n  'RESUME', 'RETAIN', 'RETURN', // (R)\n  'RETURNED_SQLSTATE', 'RETURNING', 'RETURNS', 'REUSE', 'REVERSE', 'REVOKE', // (R)\n  'RIGHT', // (R)\n  'RLIKE', // (R)\n  'ROLE', 'ROLLBACK', 'ROLLUP', 'ROTATE', 'ROUTINE', 'ROW', // (R)\n  'ROWS', // (R)\n  'ROW_COUNT', 'ROW_FORMAT', 'ROW_NUMBER', // (R)\n  'RTREE', 'SAVEPOINT', 'SCHEDULE', 'SCHEMA', // (R)\n  'SCHEMAS', // (R)\n  'SCHEMA_NAME', 'SECOND', 'SECONDARY', 'SECONDARY_ENGINE', 'SECONDARY_ENGINE_ATTRIBUTE', 'SECONDARY_LOAD', 'SECONDARY_UNLOAD', 'SECOND_MICROSECOND', // (R)\n  'SECURITY', 'SELECT', // (R)\n  'SENSITIVE', // (R)\n  'SEPARATOR', // (R)\n  'SERIAL', 'SERIALIZABLE', 'SERVER', 'SESSION', 'SET', // (R)\n  'SHARE', 'SHOW', // (R)\n  'SHUTDOWN', 'SIGNAL', // (R)\n  'SIGNED', 'SIMPLE', 'SKIP', 'SLAVE', 'SLOW', 'SMALLINT', // (R)\n  'SNAPSHOT', 'SOCKET', 'SOME', 'SONAME', 'SOUNDS', 'SOURCE', 'SOURCE_AUTO_POSITION', 'SOURCE_BIND', 'SOURCE_COMPRESSION_ALGORITHMS', 'SOURCE_CONNECT_RETRY', 'SOURCE_DELAY', 'SOURCE_HEARTBEAT_PERIOD', 'SOURCE_HOST', 'SOURCE_LOG_FILE', 'SOURCE_LOG_POS', 'SOURCE_PASSWORD', 'SOURCE_PORT', 'SOURCE_PUBLIC_KEY_PATH', 'SOURCE_RETRY_COUNT', 'SOURCE_SSL', 'SOURCE_SSL_CA', 'SOURCE_SSL_CAPATH', 'SOURCE_SSL_CERT', 'SOURCE_SSL_CIPHER', 'SOURCE_SSL_CRL', 'SOURCE_SSL_CRLPATH', 'SOURCE_SSL_KEY', 'SOURCE_SSL_VERIFY_SERVER_CERT', 'SOURCE_TLS_CIPHERSUITES', 'SOURCE_TLS_VERSION', 'SOURCE_USER', 'SOURCE_ZSTD_COMPRESSION_LEVEL', 'SPATIAL', // (R)\n  'SPECIFIC', // (R)\n  'SQL', // (R)\n  'SQLEXCEPTION', // (R)\n  'SQLSTATE', // (R)\n  'SQLWARNING', // (R)\n  'SQL_AFTER_GTIDS', 'SQL_AFTER_MTS_GAPS', 'SQL_BEFORE_GTIDS', 'SQL_BIG_RESULT', // (R)\n  'SQL_BUFFER_RESULT', 'SQL_CALC_FOUND_ROWS', // (R)\n  'SQL_NO_CACHE', 'SQL_SMALL_RESULT', // (R)\n  'SQL_THREAD', 'SQL_TSI_DAY', 'SQL_TSI_HOUR', 'SQL_TSI_MINUTE', 'SQL_TSI_MONTH', 'SQL_TSI_QUARTER', 'SQL_TSI_SECOND', 'SQL_TSI_WEEK', 'SQL_TSI_YEAR', 'SRID', 'SSL', // (R)\n  'STACKED', 'START', 'STARTING', // (R)\n  'STARTS', 'STATS_AUTO_RECALC', 'STATS_PERSISTENT', 'STATS_SAMPLE_PAGES', 'STATUS', 'STOP', 'STORAGE', 'STORED', // (R)\n  'STRAIGHT_JOIN', // (R)\n  'STREAM', 'STRING', 'SUBCLASS_ORIGIN', 'SUBJECT', 'SUBPARTITION', 'SUBPARTITIONS', 'SUPER', 'SUSPEND', 'SWAPS', 'SWITCHES', 'SYSTEM', // (R)\n  'TABLE', // (R)\n  'TABLES', 'TABLESPACE', 'TABLE_CHECKSUM', 'TABLE_NAME', 'TEMPORARY', 'TEMPTABLE', 'TERMINATED', // (R)\n  'TEXT', 'THAN', 'THEN', // (R)\n  'THREAD_PRIORITY', 'TIES', 'TIME', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TINYBLOB', // (R)\n  'TINYINT', // (R)\n  'TINYTEXT', // (R)\n  'TLS', 'TO', // (R)\n  'TRAILING', // (R)\n  'TRANSACTION', 'TRIGGER', // (R)\n  'TRIGGERS', 'TRUE', // (R)\n  'TRUNCATE', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNCOMMITTED', 'UNDEFINED', 'UNDO', // (R)\n  'UNDOFILE', 'UNDO_BUFFER_SIZE', 'UNICODE', 'UNINSTALL', 'UNION', // (R)\n  'UNIQUE', // (R)\n  'UNKNOWN', 'UNLOCK', // (R)\n  'UNREGISTER', 'UNSIGNED', // (R)\n  'UNTIL', 'UPDATE', // (R)\n  'UPGRADE', 'USAGE', // (R)\n  'USE', // (R)\n  'USER', 'USER_RESOURCES', 'USE_FRM', 'USING', // (R)\n  'UTC_DATE', // (R)\n  'UTC_TIME', // (R)\n  'UTC_TIMESTAMP', // (R)\n  'VALIDATION', 'VALUE', 'VALUES', // (R)\n  'VARBINARY', // (R)\n  'VARCHAR', // (R)\n  'VARCHARACTER', // (R)\n  'VARIABLES', 'VARYING', // (R)\n  'VCPU', 'VIEW', 'VIRTUAL', // (R)\n  'VISIBLE', 'WAIT', 'WARNINGS', 'WEEK', 'WEIGHT_STRING', 'WHEN', // (R)\n  'WHERE', // (R)\n  'WHILE', // (R)\n  'WINDOW', // (R)\n  'WITH', // (R)\n  'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', // (R)\n  'X509', 'XA', 'XID', 'XML', 'XOR', // (R)\n  'YEAR', 'YEAR_MONTH', // (R)\n  'ZEROFILL', // (R)\n  'ZONE']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=mysql.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9teXNxbC9teXNxbC5rZXl3b3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvbXlzcWwvbXlzcWwua2V5d29yZHMuanM/MzAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBrZXl3b3JkcyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzguMC9lbi9rZXl3b3Jkcy5odG1sXG4gIGFsbDogWydBQ0NFU1NJQkxFJywgLy8gKFIpXG4gICdBQ0NPVU5UJywgJ0FDVElPTicsICdBQ1RJVkUnLCAnQUREJywgLy8gKFIpXG4gICdBRE1JTicsICdBRlRFUicsICdBR0FJTlNUJywgJ0FHR1JFR0FURScsICdBTEdPUklUSE0nLCAnQUxMJywgLy8gKFIpXG4gICdBTFRFUicsIC8vIChSKVxuICAnQUxXQVlTJywgJ0FOQUxZWkUnLCAvLyAoUilcbiAgJ0FORCcsIC8vIChSKVxuICAnQU5ZJywgJ0FSUkFZJywgJ0FTJywgLy8gKFIpXG4gICdBU0MnLCAvLyAoUilcbiAgJ0FTQ0lJJywgJ0FTRU5TSVRJVkUnLCAvLyAoUilcbiAgJ0FUJywgJ0FUVFJJQlVURScsICdBVVRIRU5USUNBVElPTicsICdBVVRPRVhURU5EX1NJWkUnLCAnQVVUT19JTkNSRU1FTlQnLCAnQVZHJywgJ0FWR19ST1dfTEVOR1RIJywgJ0JBQ0tVUCcsICdCRUZPUkUnLCAvLyAoUilcbiAgJ0JFR0lOJywgJ0JFVFdFRU4nLCAvLyAoUilcbiAgJ0JJR0lOVCcsIC8vIChSKVxuICAnQklOQVJZJywgLy8gKFIpXG4gICdCSU5MT0cnLCAnQklUJywgJ0JMT0InLCAvLyAoUilcbiAgJ0JMT0NLJywgJ0JPT0wnLCAnQk9PTEVBTicsICdCT1RIJywgLy8gKFIpXG4gICdCVFJFRScsICdCVUNLRVRTJywgJ0JZJywgLy8gKFIpXG4gICdCWVRFJywgJ0NBQ0hFJywgJ0NBTEwnLCAvLyAoUilcbiAgJ0NBU0NBREUnLCAvLyAoUilcbiAgJ0NBU0NBREVEJywgJ0NBU0UnLCAvLyAoUilcbiAgJ0NBVEFMT0dfTkFNRScsICdDSEFJTicsICdDSEFMTEVOR0VfUkVTUE9OU0UnLCAnQ0hBTkdFJywgLy8gKFIpXG4gICdDSEFOR0VEJywgJ0NIQU5ORUwnLCAnQ0hBUicsIC8vIChSKVxuICAnQ0hBUkFDVEVSJywgLy8gKFIpXG4gICdDSEFSU0VUJywgJ0NIRUNLJywgLy8gKFIpXG4gICdDSEVDS1NVTScsICdDSVBIRVInLCAnQ0xBU1NfT1JJR0lOJywgJ0NMSUVOVCcsICdDTE9ORScsICdDTE9TRScsICdDT0FMRVNDRScsICdDT0RFJywgJ0NPTExBVEUnLCAvLyAoUilcbiAgJ0NPTExBVElPTicsICdDT0xVTU4nLCAvLyAoUilcbiAgJ0NPTFVNTlMnLCAnQ09MVU1OX0ZPUk1BVCcsICdDT0xVTU5fTkFNRScsICdDT01NRU5UJywgJ0NPTU1JVCcsICdDT01NSVRURUQnLCAnQ09NUEFDVCcsICdDT01QTEVUSU9OJywgJ0NPTVBPTkVOVCcsICdDT01QUkVTU0VEJywgJ0NPTVBSRVNTSU9OJywgJ0NPTkNVUlJFTlQnLCAnQ09ORElUSU9OJywgLy8gKFIpXG4gICdDT05ORUNUSU9OJywgJ0NPTlNJU1RFTlQnLCAnQ09OU1RSQUlOVCcsIC8vIChSKVxuICAnQ09OU1RSQUlOVF9DQVRBTE9HJywgJ0NPTlNUUkFJTlRfTkFNRScsICdDT05TVFJBSU5UX1NDSEVNQScsICdDT05UQUlOUycsICdDT05URVhUJywgJ0NPTlRJTlVFJywgLy8gKFIpXG4gICdDT05WRVJUJywgLy8gKFIpXG4gICdDUFUnLCAnQ1JFQVRFJywgLy8gKFIpXG4gICdDUk9TUycsIC8vIChSKVxuICAnQ1VCRScsIC8vIChSKVxuICAnQ1VNRV9ESVNUJywgLy8gKFIpXG4gICdDVVJSRU5UJywgJ0NVUlJFTlRfREFURScsIC8vIChSKVxuICAnQ1VSUkVOVF9USU1FJywgLy8gKFIpXG4gICdDVVJSRU5UX1RJTUVTVEFNUCcsIC8vIChSKVxuICAnQ1VSUkVOVF9VU0VSJywgLy8gKFIpXG4gICdDVVJTT1InLCAvLyAoUilcbiAgJ0NVUlNPUl9OQU1FJywgJ0RBVEEnLCAnREFUQUJBU0UnLCAvLyAoUilcbiAgJ0RBVEFCQVNFUycsIC8vIChSKVxuICAnREFUQUZJTEUnLCAnREFURScsICdEQVRFVElNRScsICdEQVknLCAnREFZX0hPVVInLCAvLyAoUilcbiAgJ0RBWV9NSUNST1NFQ09ORCcsIC8vIChSKVxuICAnREFZX01JTlVURScsIC8vIChSKVxuICAnREFZX1NFQ09ORCcsIC8vIChSKVxuICAnREVBTExPQ0FURScsICdERUMnLCAvLyAoUilcbiAgJ0RFQ0lNQUwnLCAvLyAoUilcbiAgJ0RFQ0xBUkUnLCAvLyAoUilcbiAgJ0RFRkFVTFQnLCAvLyAoUilcbiAgJ0RFRkFVTFRfQVVUSCcsICdERUZJTkVSJywgJ0RFRklOSVRJT04nLCAnREVMQVlFRCcsIC8vIChSKVxuICAnREVMQVlfS0VZX1dSSVRFJywgJ0RFTEVURScsIC8vIChSKVxuICAnREVOU0VfUkFOSycsIC8vIChSKVxuICAnREVTQycsIC8vIChSKVxuICAnREVTQ1JJQkUnLCAvLyAoUilcbiAgJ0RFU0NSSVBUSU9OJywgJ0RFVEVSTUlOSVNUSUMnLCAvLyAoUilcbiAgJ0RJQUdOT1NUSUNTJywgJ0RJUkVDVE9SWScsICdESVNBQkxFJywgJ0RJU0NBUkQnLCAnRElTSycsICdESVNUSU5DVCcsIC8vIChSKVxuICAnRElTVElOQ1RST1cnLCAvLyAoUilcbiAgJ0RJVicsIC8vIChSKVxuICAnRE8nLCAnRE9VQkxFJywgLy8gKFIpXG4gICdEUk9QJywgLy8gKFIpXG4gICdEVUFMJywgLy8gKFIpXG4gICdEVU1QRklMRScsICdEVVBMSUNBVEUnLCAnRFlOQU1JQycsICdFQUNIJywgLy8gKFIpXG4gICdFTFNFJywgLy8gKFIpXG4gICdFTFNFSUYnLCAvLyAoUilcbiAgJ0VNUFRZJywgLy8gKFIpXG4gICdFTkFCTEUnLCAnRU5DTE9TRUQnLCAvLyAoUilcbiAgJ0VOQ1JZUFRJT04nLCAnRU5EJywgJ0VORFMnLCAnRU5GT1JDRUQnLCAnRU5HSU5FJywgJ0VOR0lORVMnLCAnRU5HSU5FX0FUVFJJQlVURScsICdFTlVNJywgJ0VSUk9SJywgJ0VSUk9SUycsICdFU0NBUEUnLCAnRVNDQVBFRCcsIC8vIChSKVxuICAnRVZFTlQnLCAnRVZFTlRTJywgJ0VWRVJZJywgJ0VYQ0VQVCcsIC8vIChSKVxuICAnRVhDSEFOR0UnLCAnRVhDTFVERScsICdFWEVDVVRFJywgJ0VYSVNUUycsIC8vIChSKVxuICAnRVhJVCcsIC8vIChSKVxuICAnRVhQQU5TSU9OJywgJ0VYUElSRScsICdFWFBMQUlOJywgLy8gKFIpXG4gICdFWFBPUlQnLCAnRVhURU5ERUQnLCAnRVhURU5UX1NJWkUnLCAnRkFDVE9SJywgJ0ZBSUxFRF9MT0dJTl9BVFRFTVBUUycsICdGQUxTRScsIC8vIChSKVxuICAnRkFTVCcsICdGQVVMVFMnLCAnRkVUQ0gnLCAvLyAoUilcbiAgJ0ZJRUxEUycsICdGSUxFJywgJ0ZJTEVfQkxPQ0tfU0laRScsICdGSUxURVInLCAnRklOSVNIJywgJ0ZJUlNUJywgJ0ZJUlNUX1ZBTFVFJywgLy8gKFIpXG4gICdGSVhFRCcsICdGTE9BVCcsIC8vIChSKVxuICAnRkxPQVQ0JywgLy8gKFIpXG4gICdGTE9BVDgnLCAvLyAoUilcbiAgJ0ZMVVNIJywgJ0ZPTExPV0lORycsICdGT0xMT1dTJywgJ0ZPUicsIC8vIChSKVxuICAnRk9SQ0UnLCAvLyAoUilcbiAgJ0ZPUkVJR04nLCAvLyAoUilcbiAgJ0ZPUk1BVCcsICdGT1VORCcsICdGUk9NJywgLy8gKFIpXG4gICdGVUxMJywgJ0ZVTExURVhUJywgLy8gKFIpXG4gICdGVU5DVElPTicsIC8vIChSKVxuICAnR0VORVJBTCcsICdHRU5FUkFURUQnLCAvLyAoUilcbiAgJ0dFT01DT0xMRUNUSU9OJywgJ0dFT01FVFJZJywgJ0dFT01FVFJZQ09MTEVDVElPTicsICdHRVQnLCAvLyAoUilcbiAgJ0dFVF9GT1JNQVQnLCAnR0VUX01BU1RFUl9QVUJMSUNfS0VZJywgJ0dFVF9TT1VSQ0VfUFVCTElDX0tFWScsICdHTE9CQUwnLCAnR1JBTlQnLCAvLyAoUilcbiAgJ0dSQU5UUycsICdHUk9VUCcsIC8vIChSKVxuICAnR1JPVVBJTkcnLCAvLyAoUilcbiAgJ0dST1VQUycsIC8vIChSKVxuICAnR1JPVVBfUkVQTElDQVRJT04nLCAnR1RJRF9PTkxZJywgJ0hBTkRMRVInLCAnSEFTSCcsICdIQVZJTkcnLCAvLyAoUilcbiAgJ0hFTFAnLCAnSElHSF9QUklPUklUWScsIC8vIChSKVxuICAnSElTVE9HUkFNJywgJ0hJU1RPUlknLCAnSE9TVCcsICdIT1NUUycsICdIT1VSJywgJ0hPVVJfTUlDUk9TRUNPTkQnLCAvLyAoUilcbiAgJ0hPVVJfTUlOVVRFJywgLy8gKFIpXG4gICdIT1VSX1NFQ09ORCcsIC8vIChSKVxuICAnSURFTlRJRklFRCcsICdJRicsIC8vIChSKVxuICAnSUdOT1JFJywgLy8gKFIpXG4gICdJR05PUkVfU0VSVkVSX0lEUycsICdJTVBPUlQnLCAnSU4nLCAvLyAoUilcbiAgJ0lOQUNUSVZFJywgJ0lOREVYJywgLy8gKFIpXG4gICdJTkRFWEVTJywgJ0lORklMRScsIC8vIChSKVxuICAnSU5JVElBTCcsICdJTklUSUFMX1NJWkUnLCAnSU5JVElBVEUnLCAnSU5ORVInLCAvLyAoUilcbiAgJ0lOT1VUJywgLy8gKFIpXG4gICdJTlNFTlNJVElWRScsIC8vIChSKVxuICAnSU5TRVJUJywgLy8gKFIpXG4gICdJTlNFUlRfTUVUSE9EJywgJ0lOU1RBTEwnLCAnSU5TVEFOQ0UnLCAnSU4nLCAvLyA8LS0gbW92ZWQgb3ZlciBmcm9tIGZ1bmN0aW9uc1xuICAnSU5UJywgLy8gKFIpXG4gICdJTlQxJywgLy8gKFIpXG4gICdJTlQyJywgLy8gKFIpXG4gICdJTlQzJywgLy8gKFIpXG4gICdJTlQ0JywgLy8gKFIpXG4gICdJTlQ4JywgLy8gKFIpXG4gICdJTlRFR0VSJywgLy8gKFIpXG4gICdJTlRFUlNFQ1QnLCAvLyAoUilcbiAgJ0lOVEVSVkFMJywgLy8gKFIpXG4gICdJTlRPJywgLy8gKFIpXG4gICdJTlZJU0lCTEUnLCAnSU5WT0tFUicsICdJTycsICdJT19BRlRFUl9HVElEUycsIC8vIChSKVxuICAnSU9fQkVGT1JFX0dUSURTJywgLy8gKFIpXG4gICdJT19USFJFQUQnLCAnSVBDJywgJ0lTJywgLy8gKFIpXG4gICdJU09MQVRJT04nLCAnSVNTVUVSJywgJ0lURVJBVEUnLCAvLyAoUilcbiAgJ0pPSU4nLCAvLyAoUilcbiAgJ0pTT04nLCAnSlNPTl9UQUJMRScsIC8vIChSKVxuICAnSlNPTl9WQUxVRScsICdLRVknLCAvLyAoUilcbiAgJ0tFWVJJTkcnLCAnS0VZUycsIC8vIChSKVxuICAnS0VZX0JMT0NLX1NJWkUnLCAnS0lMTCcsIC8vIChSKVxuICAnTEFHJywgLy8gKFIpXG4gICdMQU5HVUFHRScsICdMQVNUJywgJ0xBU1RfVkFMVUUnLCAvLyAoUilcbiAgJ0xBVEVSQUwnLCAvLyAoUilcbiAgJ0xFQUQnLCAvLyAoUilcbiAgJ0xFQURJTkcnLCAvLyAoUilcbiAgJ0xFQVZFJywgLy8gKFIpXG4gICdMRUFWRVMnLCAnTEVGVCcsIC8vIChSKVxuICAnTEVTUycsICdMRVZFTCcsICdMSUtFJywgLy8gKFIpXG4gICdMSU1JVCcsIC8vIChSKVxuICAnTElORUFSJywgLy8gKFIpXG4gICdMSU5FUycsIC8vIChSKVxuICAnTElORVNUUklORycsICdMSVNUJywgJ0xPQUQnLCAvLyAoUilcbiAgJ0xPQ0FMJywgJ0xPQ0FMVElNRScsIC8vIChSKVxuICAnTE9DQUxUSU1FU1RBTVAnLCAvLyAoUilcbiAgJ0xPQ0snLCAvLyAoUilcbiAgJ0xPQ0tFRCcsICdMT0NLUycsICdMT0dGSUxFJywgJ0xPR1MnLCAnTE9ORycsIC8vIChSKVxuICAnTE9OR0JMT0InLCAvLyAoUilcbiAgJ0xPTkdURVhUJywgLy8gKFIpXG4gICdMT09QJywgLy8gKFIpXG4gICdMT1dfUFJJT1JJVFknLCAvLyAoUilcbiAgJ01BU1RFUicsICdNQVNURVJfQVVUT19QT1NJVElPTicsICdNQVNURVJfQklORCcsIC8vIChSKVxuICAnTUFTVEVSX0NPTVBSRVNTSU9OX0FMR09SSVRITVMnLCAnTUFTVEVSX0NPTk5FQ1RfUkVUUlknLCAnTUFTVEVSX0RFTEFZJywgJ01BU1RFUl9IRUFSVEJFQVRfUEVSSU9EJywgJ01BU1RFUl9IT1NUJywgJ01BU1RFUl9MT0dfRklMRScsICdNQVNURVJfTE9HX1BPUycsICdNQVNURVJfUEFTU1dPUkQnLCAnTUFTVEVSX1BPUlQnLCAnTUFTVEVSX1BVQkxJQ19LRVlfUEFUSCcsICdNQVNURVJfUkVUUllfQ09VTlQnLCAnTUFTVEVSX1NTTCcsICdNQVNURVJfU1NMX0NBJywgJ01BU1RFUl9TU0xfQ0FQQVRIJywgJ01BU1RFUl9TU0xfQ0VSVCcsICdNQVNURVJfU1NMX0NJUEhFUicsICdNQVNURVJfU1NMX0NSTCcsICdNQVNURVJfU1NMX0NSTFBBVEgnLCAnTUFTVEVSX1NTTF9LRVknLCAnTUFTVEVSX1NTTF9WRVJJRllfU0VSVkVSX0NFUlQnLCAvLyAoUilcbiAgJ01BU1RFUl9UTFNfQ0lQSEVSU1VJVEVTJywgJ01BU1RFUl9UTFNfVkVSU0lPTicsICdNQVNURVJfVVNFUicsICdNQVNURVJfWlNURF9DT01QUkVTU0lPTl9MRVZFTCcsICdNQVRDSCcsIC8vIChSKVxuICAnTUFYVkFMVUUnLCAvLyAoUilcbiAgJ01BWF9DT05ORUNUSU9OU19QRVJfSE9VUicsICdNQVhfUVVFUklFU19QRVJfSE9VUicsICdNQVhfUk9XUycsICdNQVhfU0laRScsICdNQVhfVVBEQVRFU19QRVJfSE9VUicsICdNQVhfVVNFUl9DT05ORUNUSU9OUycsICdNRURJVU0nLCAnTUVESVVNQkxPQicsIC8vIChSKVxuICAnTUVESVVNSU5UJywgLy8gKFIpXG4gICdNRURJVU1URVhUJywgLy8gKFIpXG4gICdNRU1CRVInLCAnTUVNT1JZJywgJ01FUkdFJywgJ01FU1NBR0VfVEVYVCcsICdNSUNST1NFQ09ORCcsICdNSURETEVJTlQnLCAvLyAoUilcbiAgJ01JR1JBVEUnLCAnTUlOVVRFJywgJ01JTlVURV9NSUNST1NFQ09ORCcsIC8vIChSKVxuICAnTUlOVVRFX1NFQ09ORCcsIC8vIChSKVxuICAnTUlOX1JPV1MnLCAnTU9EJywgLy8gKFIpXG4gICdNT0RFJywgJ01PRElGSUVTJywgLy8gKFIpXG4gICdNT0RJRlknLCAnTU9OVEgnLCAnTVVMVElMSU5FU1RSSU5HJywgJ01VTFRJUE9JTlQnLCAnTVVMVElQT0xZR09OJywgJ01VVEVYJywgJ01ZU1FMX0VSUk5PJywgJ05BTUUnLCAnTkFNRVMnLCAnTkFUSU9OQUwnLCAnTkFUVVJBTCcsIC8vIChSKVxuICAnTkNIQVInLCAnTkRCJywgJ05EQkNMVVNURVInLCAnTkVTVEVEJywgJ05FVFdPUktfTkFNRVNQQUNFJywgJ05FVkVSJywgJ05FVycsICdORVhUJywgJ05PJywgJ05PREVHUk9VUCcsICdOT05FJywgJ05PVCcsIC8vIChSKVxuICAnTk9XQUlUJywgJ05PX1dBSVQnLCAnTk9fV1JJVEVfVE9fQklOTE9HJywgLy8gKFIpXG4gICdOVEhfVkFMVUUnLCAvLyAoUilcbiAgJ05USUxFJywgLy8gKFIpXG4gICdOVUxMJywgLy8gKFIpXG4gICdOVUxMUycsICdOVU1CRVInLCAnTlVNRVJJQycsIC8vIChSKVxuICAnTlZBUkNIQVInLCAnT0YnLCAvLyAoUilcbiAgJ09GRicsICdPRkZTRVQnLCAnT0onLCAnT0xEJywgJ09OJywgLy8gKFIpXG4gICdPTkUnLCAnT05MWScsICdPUEVOJywgJ09QVElNSVpFJywgLy8gKFIpXG4gICdPUFRJTUlaRVJfQ09TVFMnLCAvLyAoUilcbiAgJ09QVElPTicsIC8vIChSKVxuICAnT1BUSU9OQUwnLCAnT1BUSU9OQUxMWScsIC8vIChSKVxuICAnT1BUSU9OUycsICdPUicsIC8vIChSKVxuICAnT1JERVInLCAvLyAoUilcbiAgJ09SRElOQUxJVFknLCAnT1JHQU5JWkFUSU9OJywgJ09USEVSUycsICdPVVQnLCAvLyAoUilcbiAgJ09VVEVSJywgLy8gKFIpXG4gICdPVVRGSUxFJywgLy8gKFIpXG4gICdPVkVSJywgLy8gKFIpXG4gICdPV05FUicsICdQQUNLX0tFWVMnLCAnUEFHRScsICdQQVJTRVInLCAnUEFSVElBTCcsICdQQVJUSVRJT04nLCAvLyAoUilcbiAgJ1BBUlRJVElPTklORycsICdQQVJUSVRJT05TJywgJ1BBU1NXT1JEJywgJ1BBU1NXT1JEX0xPQ0tfVElNRScsICdQQVRIJywgJ1BFUkNFTlRfUkFOSycsIC8vIChSKVxuICAnUEVSU0lTVCcsICdQRVJTSVNUX09OTFknLCAnUEhBU0UnLCAnUExVR0lOJywgJ1BMVUdJTlMnLCAnUExVR0lOX0RJUicsICdQT0lOVCcsICdQT0xZR09OJywgJ1BPUlQnLCAnUFJFQ0VERVMnLCAnUFJFQ0VESU5HJywgJ1BSRUNJU0lPTicsIC8vIChSKVxuICAnUFJFUEFSRScsICdQUkVTRVJWRScsICdQUkVWJywgJ1BSSU1BUlknLCAvLyAoUilcbiAgJ1BSSVZJTEVHRVMnLCAnUFJJVklMRUdFX0NIRUNLU19VU0VSJywgJ1BST0NFRFVSRScsIC8vIChSKVxuICAnUFJPQ0VTUycsICdQUk9DRVNTTElTVCcsICdQUk9GSUxFJywgJ1BST0ZJTEVTJywgJ1BST1hZJywgJ1BVUkdFJywgLy8gKFIpXG4gICdRVUFSVEVSJywgJ1FVRVJZJywgJ1FVSUNLJywgJ1JBTkRPTScsICdSQU5HRScsIC8vIChSKVxuICAnUkFOSycsIC8vIChSKVxuICAnUkVBRCcsIC8vIChSKVxuICAnUkVBRFMnLCAvLyAoUilcbiAgJ1JFQURfT05MWScsICdSRUFEX1dSSVRFJywgLy8gKFIpXG4gICdSRUFMJywgLy8gKFIpXG4gICdSRUJVSUxEJywgJ1JFQ09WRVInLCAnUkVDVVJTSVZFJywgLy8gKFIpXG4gICdSRURPX0JVRkZFUl9TSVpFJywgJ1JFRFVOREFOVCcsICdSRUZFUkVOQ0UnLCAnUkVGRVJFTkNFUycsIC8vIChSKVxuICAnUkVHRVhQJywgLy8gKFIpXG4gICdSRUdJU1RSQVRJT04nLCAnUkVMQVknLCAnUkVMQVlMT0cnLCAnUkVMQVlfTE9HX0ZJTEUnLCAnUkVMQVlfTE9HX1BPUycsICdSRUxBWV9USFJFQUQnLCAnUkVMRUFTRScsIC8vIChSKVxuICAnUkVMT0FEJywgJ1JFTU9WRScsICdSRU5BTUUnLCAvLyAoUilcbiAgJ1JFT1JHQU5JWkUnLCAnUkVQQUlSJywgJ1JFUEVBVCcsIC8vIChSKVxuICAnUkVQRUFUQUJMRScsICdSRVBMQUNFJywgLy8gKFIpXG4gICdSRVBMSUNBJywgJ1JFUExJQ0FTJywgJ1JFUExJQ0FURV9ET19EQicsICdSRVBMSUNBVEVfRE9fVEFCTEUnLCAnUkVQTElDQVRFX0lHTk9SRV9EQicsICdSRVBMSUNBVEVfSUdOT1JFX1RBQkxFJywgJ1JFUExJQ0FURV9SRVdSSVRFX0RCJywgJ1JFUExJQ0FURV9XSUxEX0RPX1RBQkxFJywgJ1JFUExJQ0FURV9XSUxEX0lHTk9SRV9UQUJMRScsICdSRVBMSUNBVElPTicsICdSRVFVSVJFJywgLy8gKFIpXG4gICdSRVFVSVJFX1JPV19GT1JNQVQnLCAnUkVTRVQnLCAnUkVTSUdOQUwnLCAvLyAoUilcbiAgJ1JFU09VUkNFJywgJ1JFU1BFQ1QnLCAnUkVTVEFSVCcsICdSRVNUT1JFJywgJ1JFU1RSSUNUJywgLy8gKFIpXG4gICdSRVNVTUUnLCAnUkVUQUlOJywgJ1JFVFVSTicsIC8vIChSKVxuICAnUkVUVVJORURfU1FMU1RBVEUnLCAnUkVUVVJOSU5HJywgJ1JFVFVSTlMnLCAnUkVVU0UnLCAnUkVWRVJTRScsICdSRVZPS0UnLCAvLyAoUilcbiAgJ1JJR0hUJywgLy8gKFIpXG4gICdSTElLRScsIC8vIChSKVxuICAnUk9MRScsICdST0xMQkFDSycsICdST0xMVVAnLCAnUk9UQVRFJywgJ1JPVVRJTkUnLCAnUk9XJywgLy8gKFIpXG4gICdST1dTJywgLy8gKFIpXG4gICdST1dfQ09VTlQnLCAnUk9XX0ZPUk1BVCcsICdST1dfTlVNQkVSJywgLy8gKFIpXG4gICdSVFJFRScsICdTQVZFUE9JTlQnLCAnU0NIRURVTEUnLCAnU0NIRU1BJywgLy8gKFIpXG4gICdTQ0hFTUFTJywgLy8gKFIpXG4gICdTQ0hFTUFfTkFNRScsICdTRUNPTkQnLCAnU0VDT05EQVJZJywgJ1NFQ09OREFSWV9FTkdJTkUnLCAnU0VDT05EQVJZX0VOR0lORV9BVFRSSUJVVEUnLCAnU0VDT05EQVJZX0xPQUQnLCAnU0VDT05EQVJZX1VOTE9BRCcsICdTRUNPTkRfTUlDUk9TRUNPTkQnLCAvLyAoUilcbiAgJ1NFQ1VSSVRZJywgJ1NFTEVDVCcsIC8vIChSKVxuICAnU0VOU0lUSVZFJywgLy8gKFIpXG4gICdTRVBBUkFUT1InLCAvLyAoUilcbiAgJ1NFUklBTCcsICdTRVJJQUxJWkFCTEUnLCAnU0VSVkVSJywgJ1NFU1NJT04nLCAnU0VUJywgLy8gKFIpXG4gICdTSEFSRScsICdTSE9XJywgLy8gKFIpXG4gICdTSFVURE9XTicsICdTSUdOQUwnLCAvLyAoUilcbiAgJ1NJR05FRCcsICdTSU1QTEUnLCAnU0tJUCcsICdTTEFWRScsICdTTE9XJywgJ1NNQUxMSU5UJywgLy8gKFIpXG4gICdTTkFQU0hPVCcsICdTT0NLRVQnLCAnU09NRScsICdTT05BTUUnLCAnU09VTkRTJywgJ1NPVVJDRScsICdTT1VSQ0VfQVVUT19QT1NJVElPTicsICdTT1VSQ0VfQklORCcsICdTT1VSQ0VfQ09NUFJFU1NJT05fQUxHT1JJVEhNUycsICdTT1VSQ0VfQ09OTkVDVF9SRVRSWScsICdTT1VSQ0VfREVMQVknLCAnU09VUkNFX0hFQVJUQkVBVF9QRVJJT0QnLCAnU09VUkNFX0hPU1QnLCAnU09VUkNFX0xPR19GSUxFJywgJ1NPVVJDRV9MT0dfUE9TJywgJ1NPVVJDRV9QQVNTV09SRCcsICdTT1VSQ0VfUE9SVCcsICdTT1VSQ0VfUFVCTElDX0tFWV9QQVRIJywgJ1NPVVJDRV9SRVRSWV9DT1VOVCcsICdTT1VSQ0VfU1NMJywgJ1NPVVJDRV9TU0xfQ0EnLCAnU09VUkNFX1NTTF9DQVBBVEgnLCAnU09VUkNFX1NTTF9DRVJUJywgJ1NPVVJDRV9TU0xfQ0lQSEVSJywgJ1NPVVJDRV9TU0xfQ1JMJywgJ1NPVVJDRV9TU0xfQ1JMUEFUSCcsICdTT1VSQ0VfU1NMX0tFWScsICdTT1VSQ0VfU1NMX1ZFUklGWV9TRVJWRVJfQ0VSVCcsICdTT1VSQ0VfVExTX0NJUEhFUlNVSVRFUycsICdTT1VSQ0VfVExTX1ZFUlNJT04nLCAnU09VUkNFX1VTRVInLCAnU09VUkNFX1pTVERfQ09NUFJFU1NJT05fTEVWRUwnLCAnU1BBVElBTCcsIC8vIChSKVxuICAnU1BFQ0lGSUMnLCAvLyAoUilcbiAgJ1NRTCcsIC8vIChSKVxuICAnU1FMRVhDRVBUSU9OJywgLy8gKFIpXG4gICdTUUxTVEFURScsIC8vIChSKVxuICAnU1FMV0FSTklORycsIC8vIChSKVxuICAnU1FMX0FGVEVSX0dUSURTJywgJ1NRTF9BRlRFUl9NVFNfR0FQUycsICdTUUxfQkVGT1JFX0dUSURTJywgJ1NRTF9CSUdfUkVTVUxUJywgLy8gKFIpXG4gICdTUUxfQlVGRkVSX1JFU1VMVCcsICdTUUxfQ0FMQ19GT1VORF9ST1dTJywgLy8gKFIpXG4gICdTUUxfTk9fQ0FDSEUnLCAnU1FMX1NNQUxMX1JFU1VMVCcsIC8vIChSKVxuICAnU1FMX1RIUkVBRCcsICdTUUxfVFNJX0RBWScsICdTUUxfVFNJX0hPVVInLCAnU1FMX1RTSV9NSU5VVEUnLCAnU1FMX1RTSV9NT05USCcsICdTUUxfVFNJX1FVQVJURVInLCAnU1FMX1RTSV9TRUNPTkQnLCAnU1FMX1RTSV9XRUVLJywgJ1NRTF9UU0lfWUVBUicsICdTUklEJywgJ1NTTCcsIC8vIChSKVxuICAnU1RBQ0tFRCcsICdTVEFSVCcsICdTVEFSVElORycsIC8vIChSKVxuICAnU1RBUlRTJywgJ1NUQVRTX0FVVE9fUkVDQUxDJywgJ1NUQVRTX1BFUlNJU1RFTlQnLCAnU1RBVFNfU0FNUExFX1BBR0VTJywgJ1NUQVRVUycsICdTVE9QJywgJ1NUT1JBR0UnLCAnU1RPUkVEJywgLy8gKFIpXG4gICdTVFJBSUdIVF9KT0lOJywgLy8gKFIpXG4gICdTVFJFQU0nLCAnU1RSSU5HJywgJ1NVQkNMQVNTX09SSUdJTicsICdTVUJKRUNUJywgJ1NVQlBBUlRJVElPTicsICdTVUJQQVJUSVRJT05TJywgJ1NVUEVSJywgJ1NVU1BFTkQnLCAnU1dBUFMnLCAnU1dJVENIRVMnLCAnU1lTVEVNJywgLy8gKFIpXG4gICdUQUJMRScsIC8vIChSKVxuICAnVEFCTEVTJywgJ1RBQkxFU1BBQ0UnLCAnVEFCTEVfQ0hFQ0tTVU0nLCAnVEFCTEVfTkFNRScsICdURU1QT1JBUlknLCAnVEVNUFRBQkxFJywgJ1RFUk1JTkFURUQnLCAvLyAoUilcbiAgJ1RFWFQnLCAnVEhBTicsICdUSEVOJywgLy8gKFIpXG4gICdUSFJFQURfUFJJT1JJVFknLCAnVElFUycsICdUSU1FJywgJ1RJTUVTVEFNUCcsICdUSU1FU1RBTVBBREQnLCAnVElNRVNUQU1QRElGRicsICdUSU5ZQkxPQicsIC8vIChSKVxuICAnVElOWUlOVCcsIC8vIChSKVxuICAnVElOWVRFWFQnLCAvLyAoUilcbiAgJ1RMUycsICdUTycsIC8vIChSKVxuICAnVFJBSUxJTkcnLCAvLyAoUilcbiAgJ1RSQU5TQUNUSU9OJywgJ1RSSUdHRVInLCAvLyAoUilcbiAgJ1RSSUdHRVJTJywgJ1RSVUUnLCAvLyAoUilcbiAgJ1RSVU5DQVRFJywgJ1RZUEUnLCAnVFlQRVMnLCAnVU5CT1VOREVEJywgJ1VOQ09NTUlUVEVEJywgJ1VOREVGSU5FRCcsICdVTkRPJywgLy8gKFIpXG4gICdVTkRPRklMRScsICdVTkRPX0JVRkZFUl9TSVpFJywgJ1VOSUNPREUnLCAnVU5JTlNUQUxMJywgJ1VOSU9OJywgLy8gKFIpXG4gICdVTklRVUUnLCAvLyAoUilcbiAgJ1VOS05PV04nLCAnVU5MT0NLJywgLy8gKFIpXG4gICdVTlJFR0lTVEVSJywgJ1VOU0lHTkVEJywgLy8gKFIpXG4gICdVTlRJTCcsICdVUERBVEUnLCAvLyAoUilcbiAgJ1VQR1JBREUnLCAnVVNBR0UnLCAvLyAoUilcbiAgJ1VTRScsIC8vIChSKVxuICAnVVNFUicsICdVU0VSX1JFU09VUkNFUycsICdVU0VfRlJNJywgJ1VTSU5HJywgLy8gKFIpXG4gICdVVENfREFURScsIC8vIChSKVxuICAnVVRDX1RJTUUnLCAvLyAoUilcbiAgJ1VUQ19USU1FU1RBTVAnLCAvLyAoUilcbiAgJ1ZBTElEQVRJT04nLCAnVkFMVUUnLCAnVkFMVUVTJywgLy8gKFIpXG4gICdWQVJCSU5BUlknLCAvLyAoUilcbiAgJ1ZBUkNIQVInLCAvLyAoUilcbiAgJ1ZBUkNIQVJBQ1RFUicsIC8vIChSKVxuICAnVkFSSUFCTEVTJywgJ1ZBUllJTkcnLCAvLyAoUilcbiAgJ1ZDUFUnLCAnVklFVycsICdWSVJUVUFMJywgLy8gKFIpXG4gICdWSVNJQkxFJywgJ1dBSVQnLCAnV0FSTklOR1MnLCAnV0VFSycsICdXRUlHSFRfU1RSSU5HJywgJ1dIRU4nLCAvLyAoUilcbiAgJ1dIRVJFJywgLy8gKFIpXG4gICdXSElMRScsIC8vIChSKVxuICAnV0lORE9XJywgLy8gKFIpXG4gICdXSVRIJywgLy8gKFIpXG4gICdXSVRIT1VUJywgJ1dPUksnLCAnV1JBUFBFUicsICdXUklURScsIC8vIChSKVxuICAnWDUwOScsICdYQScsICdYSUQnLCAnWE1MJywgJ1hPUicsIC8vIChSKVxuICAnWUVBUicsICdZRUFSX01PTlRIJywgLy8gKFIpXG4gICdaRVJPRklMTCcsIC8vIChSKVxuICAnWk9ORSddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW15c3FsLmtleXdvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.formatter.js":
/*!**************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.formatter.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _n1ql = __webpack_require__(/*! ./n1ql.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.functions.js\");\n\nvar _n1ql2 = __webpack_require__(/*! ./n1ql.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE FROM', // - merge:\n'MERGE INTO', 'WHEN [NOT] MATCHED THEN', 'UPDATE SET', 'INSERT', // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n'ADVISE', 'ALTER INDEX', 'BEGIN TRANSACTION', 'BUILD INDEX', 'COMMIT TRANSACTION', 'CREATE COLLECTION', 'CREATE FUNCTION', 'CREATE INDEX', 'CREATE PRIMARY INDEX', 'CREATE SCOPE', 'DROP COLLECTION', 'DROP FUNCTION', 'DROP INDEX', 'DROP PRIMARY INDEX', 'DROP SCOPE', 'EXECUTE', 'EXECUTE FUNCTION', 'EXPLAIN', 'GRANT', 'INFER', 'PREPARE', 'RETURNING', 'REVOKE', 'ROLLBACK TRANSACTION', 'SAVEPOINT', 'SET TRANSACTION', 'UPDATE STATISTICS', 'UPSERT', // other\n'LET', 'NEST', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SHOW', 'UNNEST', 'USE KEYS']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', 'INNER JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['{ROWS | RANGE | GROUPS} BETWEEN']); // For reference: http://docs.couchbase.com.s3-website-us-west-1.amazonaws.com/server/6.0/n1ql/n1ql-language-reference/index.html\n\nvar N1qlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(N1qlFormatter, _Formatter);\n\n  var _super = _createSuper(N1qlFormatter);\n\n  function N1qlFormatter() {\n    _classCallCheck(this, N1qlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(N1qlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: _n1ql2.keywords,\n        reservedFunctionNames: _n1ql.functions,\n        // NOTE: single quotes are actually not supported in N1QL,\n        // but we support them anyway as all other SQL dialects do,\n        // which simplifies writing tests that are shared between all dialects.\n        stringTypes: ['\"\"-bs', \"''-bs\"],\n        identTypes: ['``'],\n        extraParens: ['[]', '{}'],\n        paramTypes: {\n          positional: true,\n          numbered: ['$'],\n          named: ['$']\n        },\n        lineCommentTypes: ['#', '--'],\n        operators: ['%', '==', ':', '||']\n      });\n    }\n  }]);\n\n  return N1qlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = N1qlFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=n1ql.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9uMXFsL24xcWwuZm9ybWF0dGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL24xcWwvbjFxbC5mb3JtYXR0ZXIuanM/YjgyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH0sIF90eXBlb2Yob2JqKTsgfVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfZXhwYW5kUGhyYXNlcyA9IHJlcXVpcmUoXCIuLi8uLi9leHBhbmRQaHJhc2VzXCIpO1xuXG52YXIgX0Zvcm1hdHRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9mb3JtYXR0ZXIvRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Ub2tlbml6ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9sZXhlci9Ub2tlbml6ZXJcIikpO1xuXG52YXIgX24xcWwgPSByZXF1aXJlKFwiLi9uMXFsLmZ1bmN0aW9uc1wiKTtcblxudmFyIF9uMXFsMiA9IHJlcXVpcmUoXCIuL24xcWwua2V5d29yZHNcIik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzdWJDbGFzcywgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogZmFsc2UgfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gZWxzZSBpZiAoY2FsbCAhPT0gdm9pZCAwKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbnZhciByZXNlcnZlZFNlbGVjdCA9ICgwLCBfZXhwYW5kUGhyYXNlcy5leHBhbmRQaHJhc2VzKShbJ1NFTEVDVCBbQUxMIHwgRElTVElOQ1RdJ10pO1xudmFyIHJlc2VydmVkQ29tbWFuZHMgPSAoMCwgX2V4cGFuZFBocmFzZXMuZXhwYW5kUGhyYXNlcykoWy8vIHF1ZXJpZXNcbidXSVRIJywgJ0ZST00nLCAnV0hFUkUnLCAnR1JPVVAgQlknLCAnSEFWSU5HJywgJ1dJTkRPVycsICdQQVJUSVRJT04gQlknLCAnT1JERVIgQlknLCAnTElNSVQnLCAnT0ZGU0VUJywgLy8gRGF0YSBtYW5pcHVsYXRpb25cbi8vIC0gaW5zZXJ0OlxuJ0lOU0VSVCBJTlRPJywgJ1ZBTFVFUycsIC8vIC0gdXBkYXRlOlxuJ1VQREFURScsICdTRVQnLCAvLyAtIGRlbGV0ZTpcbidERUxFVEUgRlJPTScsIC8vIC0gbWVyZ2U6XG4nTUVSR0UgSU5UTycsICdXSEVOIFtOT1RdIE1BVENIRUQgVEhFTicsICdVUERBVEUgU0VUJywgJ0lOU0VSVCcsIC8vIGh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L24xcWwvbjFxbC1sYW5ndWFnZS1yZWZlcmVuY2UvcmVzZXJ2ZWR3b3Jkcy5odG1sXG4nQURWSVNFJywgJ0FMVEVSIElOREVYJywgJ0JFR0lOIFRSQU5TQUNUSU9OJywgJ0JVSUxEIElOREVYJywgJ0NPTU1JVCBUUkFOU0FDVElPTicsICdDUkVBVEUgQ09MTEVDVElPTicsICdDUkVBVEUgRlVOQ1RJT04nLCAnQ1JFQVRFIElOREVYJywgJ0NSRUFURSBQUklNQVJZIElOREVYJywgJ0NSRUFURSBTQ09QRScsICdEUk9QIENPTExFQ1RJT04nLCAnRFJPUCBGVU5DVElPTicsICdEUk9QIElOREVYJywgJ0RST1AgUFJJTUFSWSBJTkRFWCcsICdEUk9QIFNDT1BFJywgJ0VYRUNVVEUnLCAnRVhFQ1VURSBGVU5DVElPTicsICdFWFBMQUlOJywgJ0dSQU5UJywgJ0lORkVSJywgJ1BSRVBBUkUnLCAnUkVUVVJOSU5HJywgJ1JFVk9LRScsICdST0xMQkFDSyBUUkFOU0FDVElPTicsICdTQVZFUE9JTlQnLCAnU0VUIFRSQU5TQUNUSU9OJywgJ1VQREFURSBTVEFUSVNUSUNTJywgJ1VQU0VSVCcsIC8vIG90aGVyXG4nTEVUJywgJ05FU1QnLCAnU0VUIENVUlJFTlQgU0NIRU1BJywgJ1NFVCBTQ0hFTUEnLCAnU0hPVycsICdVTk5FU1QnLCAnVVNFIEtFWVMnXSk7XG52YXIgcmVzZXJ2ZWRTZXRPcGVyYXRpb25zID0gKDAsIF9leHBhbmRQaHJhc2VzLmV4cGFuZFBocmFzZXMpKFsnVU5JT04gW0FMTF0nLCAnRVhDRVBUIFtBTExdJywgJ0lOVEVSU0VDVCBbQUxMXSddKTtcbnZhciByZXNlcnZlZEpvaW5zID0gKDAsIF9leHBhbmRQaHJhc2VzLmV4cGFuZFBocmFzZXMpKFsnSk9JTicsICd7TEVGVCB8IFJJR0hUfSBbT1VURVJdIEpPSU4nLCAnSU5ORVIgSk9JTiddKTtcbnZhciByZXNlcnZlZFBocmFzZXMgPSAoMCwgX2V4cGFuZFBocmFzZXMuZXhwYW5kUGhyYXNlcykoWyd7Uk9XUyB8IFJBTkdFIHwgR1JPVVBTfSBCRVRXRUVOJ10pOyAvLyBGb3IgcmVmZXJlbmNlOiBodHRwOi8vZG9jcy5jb3VjaGJhc2UuY29tLnMzLXdlYnNpdGUtdXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc2VydmVyLzYuMC9uMXFsL24xcWwtbGFuZ3VhZ2UtcmVmZXJlbmNlL2luZGV4Lmh0bWxcblxudmFyIE4xcWxGb3JtYXR0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Gb3JtYXR0ZXIpIHtcbiAgX2luaGVyaXRzKE4xcWxGb3JtYXR0ZXIsIF9Gb3JtYXR0ZXIpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTjFxbEZvcm1hdHRlcik7XG5cbiAgZnVuY3Rpb24gTjFxbEZvcm1hdHRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTjFxbEZvcm1hdHRlcik7XG5cbiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTjFxbEZvcm1hdHRlciwgW3tcbiAgICBrZXk6IFwidG9rZW5pemVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRva2VuaXplcigpIHtcbiAgICAgIHJldHVybiBuZXcgX1Rva2VuaXplcltcImRlZmF1bHRcIl0oe1xuICAgICAgICByZXNlcnZlZENvbW1hbmRzOiByZXNlcnZlZENvbW1hbmRzLFxuICAgICAgICByZXNlcnZlZFNlbGVjdDogcmVzZXJ2ZWRTZWxlY3QsXG4gICAgICAgIHJlc2VydmVkU2V0T3BlcmF0aW9uczogcmVzZXJ2ZWRTZXRPcGVyYXRpb25zLFxuICAgICAgICByZXNlcnZlZEpvaW5zOiByZXNlcnZlZEpvaW5zLFxuICAgICAgICByZXNlcnZlZERlcGVuZGVudENsYXVzZXM6IFsnV0hFTicsICdFTFNFJ10sXG4gICAgICAgIHJlc2VydmVkUGhyYXNlczogcmVzZXJ2ZWRQaHJhc2VzLFxuICAgICAgICBzdXBwb3J0c1hvcjogdHJ1ZSxcbiAgICAgICAgcmVzZXJ2ZWRLZXl3b3JkczogX24xcWwyLmtleXdvcmRzLFxuICAgICAgICByZXNlcnZlZEZ1bmN0aW9uTmFtZXM6IF9uMXFsLmZ1bmN0aW9ucyxcbiAgICAgICAgLy8gTk9URTogc2luZ2xlIHF1b3RlcyBhcmUgYWN0dWFsbHkgbm90IHN1cHBvcnRlZCBpbiBOMVFMLFxuICAgICAgICAvLyBidXQgd2Ugc3VwcG9ydCB0aGVtIGFueXdheSBhcyBhbGwgb3RoZXIgU1FMIGRpYWxlY3RzIGRvLFxuICAgICAgICAvLyB3aGljaCBzaW1wbGlmaWVzIHdyaXRpbmcgdGVzdHMgdGhhdCBhcmUgc2hhcmVkIGJldHdlZW4gYWxsIGRpYWxlY3RzLlxuICAgICAgICBzdHJpbmdUeXBlczogWydcIlwiLWJzJywgXCInJy1ic1wiXSxcbiAgICAgICAgaWRlbnRUeXBlczogWydgYCddLFxuICAgICAgICBleHRyYVBhcmVuczogWydbXScsICd7fSddLFxuICAgICAgICBwYXJhbVR5cGVzOiB7XG4gICAgICAgICAgcG9zaXRpb25hbDogdHJ1ZSxcbiAgICAgICAgICBudW1iZXJlZDogWyckJ10sXG4gICAgICAgICAgbmFtZWQ6IFsnJCddXG4gICAgICAgIH0sXG4gICAgICAgIGxpbmVDb21tZW50VHlwZXM6IFsnIycsICctLSddLFxuICAgICAgICBvcGVyYXRvcnM6IFsnJScsICc9PScsICc6JywgJ3x8J11cbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBOMXFsRm9ybWF0dGVyO1xufShfRm9ybWF0dGVyMltcImRlZmF1bHRcIl0pO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IE4xcWxGb3JtYXR0ZXI7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW4xcWwuZm9ybWF0dGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.functions.js":
/*!**************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.functions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/functions.html\n  all: ['ABORT', 'ABS', 'ACOS', 'ADVISOR', 'ARRAY_AGG', 'ARRAY_AGG', 'ARRAY_APPEND', 'ARRAY_AVG', 'ARRAY_BINARY_SEARCH', 'ARRAY_CONCAT', 'ARRAY_CONTAINS', 'ARRAY_COUNT', 'ARRAY_DISTINCT', 'ARRAY_EXCEPT', 'ARRAY_FLATTEN', 'ARRAY_IFNULL', 'ARRAY_INSERT', 'ARRAY_INTERSECT', 'ARRAY_LENGTH', 'ARRAY_MAX', 'ARRAY_MIN', 'ARRAY_MOVE', 'ARRAY_POSITION', 'ARRAY_PREPEND', 'ARRAY_PUT', 'ARRAY_RANGE', 'ARRAY_REMOVE', 'ARRAY_REPEAT', 'ARRAY_REPLACE', 'ARRAY_REVERSE', 'ARRAY_SORT', 'ARRAY_STAR', 'ARRAY_SUM', 'ARRAY_SYMDIFF', 'ARRAY_SYMDIFF1', 'ARRAY_SYMDIFFN', 'ARRAY_UNION', 'ASIN', 'ATAN', 'ATAN2', 'AVG', 'BASE64', 'BASE64_DECODE', 'BASE64_ENCODE', 'BITAND ', 'BITCLEAR ', 'BITNOT ', 'BITOR ', 'BITSET ', 'BITSHIFT ', 'BITTEST ', 'BITXOR ', 'CEIL', 'CLOCK_LOCAL', 'CLOCK_MILLIS', 'CLOCK_STR', 'CLOCK_TZ', 'CLOCK_UTC', 'COALESCE', 'CONCAT', 'CONCAT2', 'CONTAINS', 'CONTAINS_TOKEN', 'CONTAINS_TOKEN_LIKE', 'CONTAINS_TOKEN_REGEXP', 'COS', 'COUNT', 'COUNT', 'COUNTN', 'CUME_DIST', 'CURL', 'DATE_ADD_MILLIS', 'DATE_ADD_STR', 'DATE_DIFF_MILLIS', 'DATE_DIFF_STR', 'DATE_FORMAT_STR', 'DATE_PART_MILLIS', 'DATE_PART_STR', 'DATE_RANGE_MILLIS', 'DATE_RANGE_STR', 'DATE_TRUNC_MILLIS', 'DATE_TRUNC_STR', 'DECODE', 'DECODE_JSON', 'DEGREES', 'DENSE_RANK', 'DURATION_TO_STR', // 'E',\n  'ENCODED_SIZE', 'ENCODE_JSON', 'EXP', 'FIRST_VALUE', 'FLOOR', 'GREATEST', 'HAS_TOKEN', 'IFINF', 'IFMISSING', 'IFMISSINGORNULL', 'IFNAN', 'IFNANORINF', 'IFNULL', 'INITCAP', 'ISARRAY', 'ISATOM', 'ISBITSET', 'ISBOOLEAN', 'ISNUMBER', 'ISOBJECT', 'ISSTRING', 'LAG', 'LAST_VALUE', 'LEAD', 'LEAST', 'LENGTH', 'LN', 'LOG', 'LOWER', 'LTRIM', 'MAX', 'MEAN', 'MEDIAN', 'META', 'MILLIS', 'MILLIS_TO_LOCAL', 'MILLIS_TO_STR', 'MILLIS_TO_TZ', 'MILLIS_TO_UTC', 'MILLIS_TO_ZONE_NAME', 'MIN', 'MISSINGIF', 'NANIF', 'NEGINFIF', 'NOW_LOCAL', 'NOW_MILLIS', 'NOW_STR', 'NOW_TZ', 'NOW_UTC', 'NTH_VALUE', 'NTILE', 'NULLIF', 'NVL', 'NVL2', 'OBJECT_ADD', 'OBJECT_CONCAT', 'OBJECT_INNER_PAIRS', 'OBJECT_INNER_VALUES', 'OBJECT_LENGTH', 'OBJECT_NAMES', 'OBJECT_PAIRS', 'OBJECT_PUT', 'OBJECT_REMOVE', 'OBJECT_RENAME', 'OBJECT_REPLACE', 'OBJECT_UNWRAP', 'OBJECT_VALUES', 'PAIRS', 'PERCENT_RANK', 'PI', 'POLY_LENGTH', 'POSINFIF', 'POSITION', 'POWER', 'RADIANS', 'RANDOM', 'RANK', 'RATIO_TO_REPORT', 'REGEXP_CONTAINS', 'REGEXP_LIKE', 'REGEXP_MATCHES', 'REGEXP_POSITION', 'REGEXP_REPLACE', 'REGEXP_SPLIT', 'REGEX_CONTAINS', 'REGEX_LIKE', 'REGEX_MATCHES', 'REGEX_POSITION', 'REGEX_REPLACE', 'REGEX_SPLIT', 'REPEAT', 'REPLACE', 'REVERSE', 'ROUND', 'ROW_NUMBER', 'RTRIM', 'SEARCH', 'SEARCH_META', 'SEARCH_SCORE', 'SIGN', 'SIN', 'SPLIT', 'SQRT', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STR_TO_DURATION', 'STR_TO_MILLIS', 'STR_TO_TZ', 'STR_TO_UTC', 'STR_TO_ZONE_NAME', 'SUBSTR', 'SUFFIXES', 'SUM', 'TAN', 'TITLE', 'TOARRAY', 'TOATOM', 'TOBOOLEAN', 'TOKENS', 'TOKENS', 'TONUMBER', 'TOOBJECT', 'TOSTRING', 'TRIM', 'TRUNC', // 'TYPE', // disabled\n  'UPPER', 'UUID', 'VARIANCE', 'VARIANCE_POP', 'VARIANCE_SAMP', 'VAR_POP', 'VAR_SAMP', 'WEEKDAY_MILLIS', 'WEEKDAY_STR', // type casting\n  // not implemented in N1QL, but added here now for the sake of tests\n  // https://docs.couchbase.com/server/current/analytics/3_query.html#Vs_SQL-92\n  'CAST']\n});\nexports.functions = functions;\n//# sourceMappingURL=n1ql.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9uMXFsL24xcWwuZnVuY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9uMXFsL24xcWwuZnVuY3Rpb25zLmpzP2Y2OTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZ1bmN0aW9ucyA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcblxudmFyIGZ1bmN0aW9ucyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L24xcWwvbjFxbC1sYW5ndWFnZS1yZWZlcmVuY2UvZnVuY3Rpb25zLmh0bWxcbiAgYWxsOiBbJ0FCT1JUJywgJ0FCUycsICdBQ09TJywgJ0FEVklTT1InLCAnQVJSQVlfQUdHJywgJ0FSUkFZX0FHRycsICdBUlJBWV9BUFBFTkQnLCAnQVJSQVlfQVZHJywgJ0FSUkFZX0JJTkFSWV9TRUFSQ0gnLCAnQVJSQVlfQ09OQ0FUJywgJ0FSUkFZX0NPTlRBSU5TJywgJ0FSUkFZX0NPVU5UJywgJ0FSUkFZX0RJU1RJTkNUJywgJ0FSUkFZX0VYQ0VQVCcsICdBUlJBWV9GTEFUVEVOJywgJ0FSUkFZX0lGTlVMTCcsICdBUlJBWV9JTlNFUlQnLCAnQVJSQVlfSU5URVJTRUNUJywgJ0FSUkFZX0xFTkdUSCcsICdBUlJBWV9NQVgnLCAnQVJSQVlfTUlOJywgJ0FSUkFZX01PVkUnLCAnQVJSQVlfUE9TSVRJT04nLCAnQVJSQVlfUFJFUEVORCcsICdBUlJBWV9QVVQnLCAnQVJSQVlfUkFOR0UnLCAnQVJSQVlfUkVNT1ZFJywgJ0FSUkFZX1JFUEVBVCcsICdBUlJBWV9SRVBMQUNFJywgJ0FSUkFZX1JFVkVSU0UnLCAnQVJSQVlfU09SVCcsICdBUlJBWV9TVEFSJywgJ0FSUkFZX1NVTScsICdBUlJBWV9TWU1ESUZGJywgJ0FSUkFZX1NZTURJRkYxJywgJ0FSUkFZX1NZTURJRkZOJywgJ0FSUkFZX1VOSU9OJywgJ0FTSU4nLCAnQVRBTicsICdBVEFOMicsICdBVkcnLCAnQkFTRTY0JywgJ0JBU0U2NF9ERUNPREUnLCAnQkFTRTY0X0VOQ09ERScsICdCSVRBTkQgJywgJ0JJVENMRUFSICcsICdCSVROT1QgJywgJ0JJVE9SICcsICdCSVRTRVQgJywgJ0JJVFNISUZUICcsICdCSVRURVNUICcsICdCSVRYT1IgJywgJ0NFSUwnLCAnQ0xPQ0tfTE9DQUwnLCAnQ0xPQ0tfTUlMTElTJywgJ0NMT0NLX1NUUicsICdDTE9DS19UWicsICdDTE9DS19VVEMnLCAnQ09BTEVTQ0UnLCAnQ09OQ0FUJywgJ0NPTkNBVDInLCAnQ09OVEFJTlMnLCAnQ09OVEFJTlNfVE9LRU4nLCAnQ09OVEFJTlNfVE9LRU5fTElLRScsICdDT05UQUlOU19UT0tFTl9SRUdFWFAnLCAnQ09TJywgJ0NPVU5UJywgJ0NPVU5UJywgJ0NPVU5UTicsICdDVU1FX0RJU1QnLCAnQ1VSTCcsICdEQVRFX0FERF9NSUxMSVMnLCAnREFURV9BRERfU1RSJywgJ0RBVEVfRElGRl9NSUxMSVMnLCAnREFURV9ESUZGX1NUUicsICdEQVRFX0ZPUk1BVF9TVFInLCAnREFURV9QQVJUX01JTExJUycsICdEQVRFX1BBUlRfU1RSJywgJ0RBVEVfUkFOR0VfTUlMTElTJywgJ0RBVEVfUkFOR0VfU1RSJywgJ0RBVEVfVFJVTkNfTUlMTElTJywgJ0RBVEVfVFJVTkNfU1RSJywgJ0RFQ09ERScsICdERUNPREVfSlNPTicsICdERUdSRUVTJywgJ0RFTlNFX1JBTksnLCAnRFVSQVRJT05fVE9fU1RSJywgLy8gJ0UnLFxuICAnRU5DT0RFRF9TSVpFJywgJ0VOQ09ERV9KU09OJywgJ0VYUCcsICdGSVJTVF9WQUxVRScsICdGTE9PUicsICdHUkVBVEVTVCcsICdIQVNfVE9LRU4nLCAnSUZJTkYnLCAnSUZNSVNTSU5HJywgJ0lGTUlTU0lOR09STlVMTCcsICdJRk5BTicsICdJRk5BTk9SSU5GJywgJ0lGTlVMTCcsICdJTklUQ0FQJywgJ0lTQVJSQVknLCAnSVNBVE9NJywgJ0lTQklUU0VUJywgJ0lTQk9PTEVBTicsICdJU05VTUJFUicsICdJU09CSkVDVCcsICdJU1NUUklORycsICdMQUcnLCAnTEFTVF9WQUxVRScsICdMRUFEJywgJ0xFQVNUJywgJ0xFTkdUSCcsICdMTicsICdMT0cnLCAnTE9XRVInLCAnTFRSSU0nLCAnTUFYJywgJ01FQU4nLCAnTUVESUFOJywgJ01FVEEnLCAnTUlMTElTJywgJ01JTExJU19UT19MT0NBTCcsICdNSUxMSVNfVE9fU1RSJywgJ01JTExJU19UT19UWicsICdNSUxMSVNfVE9fVVRDJywgJ01JTExJU19UT19aT05FX05BTUUnLCAnTUlOJywgJ01JU1NJTkdJRicsICdOQU5JRicsICdORUdJTkZJRicsICdOT1dfTE9DQUwnLCAnTk9XX01JTExJUycsICdOT1dfU1RSJywgJ05PV19UWicsICdOT1dfVVRDJywgJ05USF9WQUxVRScsICdOVElMRScsICdOVUxMSUYnLCAnTlZMJywgJ05WTDInLCAnT0JKRUNUX0FERCcsICdPQkpFQ1RfQ09OQ0FUJywgJ09CSkVDVF9JTk5FUl9QQUlSUycsICdPQkpFQ1RfSU5ORVJfVkFMVUVTJywgJ09CSkVDVF9MRU5HVEgnLCAnT0JKRUNUX05BTUVTJywgJ09CSkVDVF9QQUlSUycsICdPQkpFQ1RfUFVUJywgJ09CSkVDVF9SRU1PVkUnLCAnT0JKRUNUX1JFTkFNRScsICdPQkpFQ1RfUkVQTEFDRScsICdPQkpFQ1RfVU5XUkFQJywgJ09CSkVDVF9WQUxVRVMnLCAnUEFJUlMnLCAnUEVSQ0VOVF9SQU5LJywgJ1BJJywgJ1BPTFlfTEVOR1RIJywgJ1BPU0lORklGJywgJ1BPU0lUSU9OJywgJ1BPV0VSJywgJ1JBRElBTlMnLCAnUkFORE9NJywgJ1JBTksnLCAnUkFUSU9fVE9fUkVQT1JUJywgJ1JFR0VYUF9DT05UQUlOUycsICdSRUdFWFBfTElLRScsICdSRUdFWFBfTUFUQ0hFUycsICdSRUdFWFBfUE9TSVRJT04nLCAnUkVHRVhQX1JFUExBQ0UnLCAnUkVHRVhQX1NQTElUJywgJ1JFR0VYX0NPTlRBSU5TJywgJ1JFR0VYX0xJS0UnLCAnUkVHRVhfTUFUQ0hFUycsICdSRUdFWF9QT1NJVElPTicsICdSRUdFWF9SRVBMQUNFJywgJ1JFR0VYX1NQTElUJywgJ1JFUEVBVCcsICdSRVBMQUNFJywgJ1JFVkVSU0UnLCAnUk9VTkQnLCAnUk9XX05VTUJFUicsICdSVFJJTScsICdTRUFSQ0gnLCAnU0VBUkNIX01FVEEnLCAnU0VBUkNIX1NDT1JFJywgJ1NJR04nLCAnU0lOJywgJ1NQTElUJywgJ1NRUlQnLCAnU1REREVWJywgJ1NURERFVl9QT1AnLCAnU1REREVWX1NBTVAnLCAnU1RSX1RPX0RVUkFUSU9OJywgJ1NUUl9UT19NSUxMSVMnLCAnU1RSX1RPX1RaJywgJ1NUUl9UT19VVEMnLCAnU1RSX1RPX1pPTkVfTkFNRScsICdTVUJTVFInLCAnU1VGRklYRVMnLCAnU1VNJywgJ1RBTicsICdUSVRMRScsICdUT0FSUkFZJywgJ1RPQVRPTScsICdUT0JPT0xFQU4nLCAnVE9LRU5TJywgJ1RPS0VOUycsICdUT05VTUJFUicsICdUT09CSkVDVCcsICdUT1NUUklORycsICdUUklNJywgJ1RSVU5DJywgLy8gJ1RZUEUnLCAvLyBkaXNhYmxlZFxuICAnVVBQRVInLCAnVVVJRCcsICdWQVJJQU5DRScsICdWQVJJQU5DRV9QT1AnLCAnVkFSSUFOQ0VfU0FNUCcsICdWQVJfUE9QJywgJ1ZBUl9TQU1QJywgJ1dFRUtEQVlfTUlMTElTJywgJ1dFRUtEQVlfU1RSJywgLy8gdHlwZSBjYXN0aW5nXG4gIC8vIG5vdCBpbXBsZW1lbnRlZCBpbiBOMVFMLCBidXQgYWRkZWQgaGVyZSBub3cgZm9yIHRoZSBzYWtlIG9mIHRlc3RzXG4gIC8vIGh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L2FuYWx5dGljcy8zX3F1ZXJ5Lmh0bWwjVnNfU1FMLTkyXG4gICdDQVNUJ11cbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSBmdW5jdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uMXFsLmZ1bmN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.keywords.js":
/*!*************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.keywords.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n  all: ['ADVISE', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'AT', 'BEGIN', 'BETWEEN', 'BINARY', 'BOOLEAN', 'BREAK', 'BUCKET', 'BUILD', 'BY', 'CALL', 'CASE', 'CAST', 'CLUSTER', 'COLLATE', 'COLLECTION', 'COMMIT', 'COMMITTED', 'CONNECT', 'CONTINUE', 'CORRELATED', 'COVER', 'CREATE', 'CURRENT', 'DATABASE', 'DATASET', 'DATASTORE', 'DECLARE', 'DECREMENT', 'DELETE', 'DERIVED', 'DESC', 'DESCRIBE', 'DISTINCT', 'DO', 'DROP', 'EACH', 'ELEMENT', 'ELSE', 'END', 'EVERY', 'EXCEPT', 'EXCLUDE', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'FALSE', 'FETCH', 'FILTER', 'FIRST', 'FLATTEN', 'FLUSH', 'FOLLOWING', 'FOR', 'FORCE', 'FROM', 'FTS', 'FUNCTION', 'GOLANG', 'GRANT', 'GROUP', 'GROUPS', 'GSI', 'HASH', 'HAVING', 'IF', 'ISOLATION', 'IGNORE', 'ILIKE', 'IN', 'INCLUDE', 'INCREMENT', 'INDEX', 'INFER', 'INLINE', 'INNER', 'INSERT', 'INTERSECT', 'INTO', 'IS', 'JAVASCRIPT', 'JOIN', 'KEY', 'KEYS', 'KEYSPACE', 'KNOWN', 'LANGUAGE', 'LAST', 'LEFT', 'LET', 'LETTING', 'LEVEL', 'LIKE', 'LIMIT', 'LSM', 'MAP', 'MAPPING', 'MATCHED', 'MATERIALIZED', 'MERGE', 'MINUS', 'MISSING', 'NAMESPACE', 'NEST', 'NL', 'NO', 'NOT', 'NTH_VALUE', 'NULL', 'NULLS', 'NUMBER', 'OBJECT', 'OFFSET', 'ON', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OTHERS', 'OUTER', 'OVER', 'PARSE', 'PARTITION', 'PASSWORD', 'PATH', 'POOL', 'PRECEDING', 'PREPARE', 'PRIMARY', 'PRIVATE', 'PRIVILEGE', 'PROBE', 'PROCEDURE', 'PUBLIC', 'RANGE', 'RAW', 'REALM', 'REDUCE', 'RENAME', 'RESPECT', 'RETURN', 'RETURNING', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'ROW', 'ROWS', 'SATISFIES', 'SAVEPOINT', 'SCHEMA', 'SCOPE', 'SELECT', 'SELF', 'SEMI', 'SET', 'SHOW', 'SOME', 'START', 'STATISTICS', 'STRING', 'SYSTEM', 'THEN', 'TIES', 'TO', 'TRAN', 'TRANSACTION', 'TRIGGER', 'TRUE', 'TRUNCATE', 'UNBOUNDED', 'UNDER', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UNSET', 'UPDATE', 'UPSERT', 'USE', 'USER', 'USING', 'VALIDATE', 'VALUE', 'VALUED', 'VALUES', 'VIA', 'VIEW', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WITHIN', 'WORK', 'XOR']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=n1ql.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9uMXFsL24xcWwua2V5d29yZHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvbjFxbC9uMXFsLmtleXdvcmRzLmpzPzAzZTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmtleXdvcmRzID0gdm9pZCAwO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzXCIpO1xuXG52YXIga2V5d29yZHMgPSAoMCwgX3V0aWxzLmZsYXRLZXl3b3JkTGlzdCkoe1xuICAvLyBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9uMXFsL24xcWwtbGFuZ3VhZ2UtcmVmZXJlbmNlL3Jlc2VydmVkd29yZHMuaHRtbFxuICBhbGw6IFsnQURWSVNFJywgJ0FMTCcsICdBTFRFUicsICdBTkFMWVpFJywgJ0FORCcsICdBTlknLCAnQVJSQVknLCAnQVMnLCAnQVNDJywgJ0FUJywgJ0JFR0lOJywgJ0JFVFdFRU4nLCAnQklOQVJZJywgJ0JPT0xFQU4nLCAnQlJFQUsnLCAnQlVDS0VUJywgJ0JVSUxEJywgJ0JZJywgJ0NBTEwnLCAnQ0FTRScsICdDQVNUJywgJ0NMVVNURVInLCAnQ09MTEFURScsICdDT0xMRUNUSU9OJywgJ0NPTU1JVCcsICdDT01NSVRURUQnLCAnQ09OTkVDVCcsICdDT05USU5VRScsICdDT1JSRUxBVEVEJywgJ0NPVkVSJywgJ0NSRUFURScsICdDVVJSRU5UJywgJ0RBVEFCQVNFJywgJ0RBVEFTRVQnLCAnREFUQVNUT1JFJywgJ0RFQ0xBUkUnLCAnREVDUkVNRU5UJywgJ0RFTEVURScsICdERVJJVkVEJywgJ0RFU0MnLCAnREVTQ1JJQkUnLCAnRElTVElOQ1QnLCAnRE8nLCAnRFJPUCcsICdFQUNIJywgJ0VMRU1FTlQnLCAnRUxTRScsICdFTkQnLCAnRVZFUlknLCAnRVhDRVBUJywgJ0VYQ0xVREUnLCAnRVhFQ1VURScsICdFWElTVFMnLCAnRVhQTEFJTicsICdGQUxTRScsICdGRVRDSCcsICdGSUxURVInLCAnRklSU1QnLCAnRkxBVFRFTicsICdGTFVTSCcsICdGT0xMT1dJTkcnLCAnRk9SJywgJ0ZPUkNFJywgJ0ZST00nLCAnRlRTJywgJ0ZVTkNUSU9OJywgJ0dPTEFORycsICdHUkFOVCcsICdHUk9VUCcsICdHUk9VUFMnLCAnR1NJJywgJ0hBU0gnLCAnSEFWSU5HJywgJ0lGJywgJ0lTT0xBVElPTicsICdJR05PUkUnLCAnSUxJS0UnLCAnSU4nLCAnSU5DTFVERScsICdJTkNSRU1FTlQnLCAnSU5ERVgnLCAnSU5GRVInLCAnSU5MSU5FJywgJ0lOTkVSJywgJ0lOU0VSVCcsICdJTlRFUlNFQ1QnLCAnSU5UTycsICdJUycsICdKQVZBU0NSSVBUJywgJ0pPSU4nLCAnS0VZJywgJ0tFWVMnLCAnS0VZU1BBQ0UnLCAnS05PV04nLCAnTEFOR1VBR0UnLCAnTEFTVCcsICdMRUZUJywgJ0xFVCcsICdMRVRUSU5HJywgJ0xFVkVMJywgJ0xJS0UnLCAnTElNSVQnLCAnTFNNJywgJ01BUCcsICdNQVBQSU5HJywgJ01BVENIRUQnLCAnTUFURVJJQUxJWkVEJywgJ01FUkdFJywgJ01JTlVTJywgJ01JU1NJTkcnLCAnTkFNRVNQQUNFJywgJ05FU1QnLCAnTkwnLCAnTk8nLCAnTk9UJywgJ05USF9WQUxVRScsICdOVUxMJywgJ05VTExTJywgJ05VTUJFUicsICdPQkpFQ1QnLCAnT0ZGU0VUJywgJ09OJywgJ09QVElPTicsICdPUFRJT05TJywgJ09SJywgJ09SREVSJywgJ09USEVSUycsICdPVVRFUicsICdPVkVSJywgJ1BBUlNFJywgJ1BBUlRJVElPTicsICdQQVNTV09SRCcsICdQQVRIJywgJ1BPT0wnLCAnUFJFQ0VESU5HJywgJ1BSRVBBUkUnLCAnUFJJTUFSWScsICdQUklWQVRFJywgJ1BSSVZJTEVHRScsICdQUk9CRScsICdQUk9DRURVUkUnLCAnUFVCTElDJywgJ1JBTkdFJywgJ1JBVycsICdSRUFMTScsICdSRURVQ0UnLCAnUkVOQU1FJywgJ1JFU1BFQ1QnLCAnUkVUVVJOJywgJ1JFVFVSTklORycsICdSRVZPS0UnLCAnUklHSFQnLCAnUk9MRScsICdST0xMQkFDSycsICdST1cnLCAnUk9XUycsICdTQVRJU0ZJRVMnLCAnU0FWRVBPSU5UJywgJ1NDSEVNQScsICdTQ09QRScsICdTRUxFQ1QnLCAnU0VMRicsICdTRU1JJywgJ1NFVCcsICdTSE9XJywgJ1NPTUUnLCAnU1RBUlQnLCAnU1RBVElTVElDUycsICdTVFJJTkcnLCAnU1lTVEVNJywgJ1RIRU4nLCAnVElFUycsICdUTycsICdUUkFOJywgJ1RSQU5TQUNUSU9OJywgJ1RSSUdHRVInLCAnVFJVRScsICdUUlVOQ0FURScsICdVTkJPVU5ERUQnLCAnVU5ERVInLCAnVU5JT04nLCAnVU5JUVVFJywgJ1VOS05PV04nLCAnVU5ORVNUJywgJ1VOU0VUJywgJ1VQREFURScsICdVUFNFUlQnLCAnVVNFJywgJ1VTRVInLCAnVVNJTkcnLCAnVkFMSURBVEUnLCAnVkFMVUUnLCAnVkFMVUVEJywgJ1ZBTFVFUycsICdWSUEnLCAnVklFVycsICdXSEVOJywgJ1dIRVJFJywgJ1dISUxFJywgJ1dJTkRPVycsICdXSVRIJywgJ1dJVEhJTicsICdXT1JLJywgJ1hPUiddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW4xcWwua2V5d29yZHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.formatter.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.formatter.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _token = __webpack_require__(/*! ../../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar _plsql = __webpack_require__(/*! ./plsql.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.keywords.js\");\n\nvar _plsql2 = __webpack_require__(/*! ./plsql.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.functions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT | UNIQUE]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER [SIBLINGS] BY', 'OFFSET', 'FETCH {FIRST | NEXT}', 'FOR UPDATE', // Data manipulation\n// - insert:\n'INSERT [INTO | ALL INTO]', 'VALUES', // - update:\n'UPDATE [ONLY]', 'SET', // - delete:\n'DELETE FROM [ONLY]', // - truncate:\n'TRUNCATE TABLE', // - merge:\n'MERGE [INTO]', 'WHEN [NOT] MATCHED [THEN]', 'UPDATE SET', // Data definition\n'CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW', 'CREATE MATERIALIZED VIEW', 'CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE', 'DROP TABLE', // - alter table:\n'ALTER TABLE', 'ADD', 'DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}', 'MODIFY', 'RENAME TO', 'RENAME COLUMN', // other\n'BEGIN', 'CONNECT BY', 'DECLARE', 'EXCEPT', 'EXCEPTION', 'LOOP', 'RETURNING', 'START WITH', 'SET SCHEMA']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN', // non-standard joins\n'{CROSS | OUTER} APPLY']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', 'ON COMMIT', '{ROWS | RANGE} BETWEEN']);\n\nvar PlSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(PlSqlFormatter, _Formatter);\n\n  var _super = _createSuper(PlSqlFormatter);\n\n  function PlSqlFormatter() {\n    _classCallCheck(this, PlSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PlSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: _plsql.keywords,\n        reservedFunctionNames: _plsql2.functions,\n        stringTypes: [{\n          quote: \"''-qq\",\n          prefixes: ['N']\n        }, {\n          quote: \"q''\",\n          prefixes: ['N']\n        }],\n        // PL/SQL doesn't actually support escaping of quotes in identifiers,\n        // but for the sake of simpler testing we'll support this anyway\n        // as all other SQL dialects with \"identifiers\" do.\n        identTypes: [\"\\\"\\\"-qq\"],\n        identChars: {\n          rest: '$#'\n        },\n        variableTypes: [{\n          regex: '&{1,2}[A-Za-z][A-Za-z0-9_$#]*'\n        }],\n        paramTypes: {\n          numbered: [':'],\n          named: [':']\n        },\n        paramChars: {},\n        // Empty object used on purpose to not allow $ and # chars as specified in identChars\n        operators: ['**', ':=', '%', '~=', '^=', // '..', // Conflicts with float followed by dot (so \"2..3\" gets parsed as [\"2.\", \".\", \"3\"])\n        '>>', '<<', '=>', '@', '||'],\n        postProcess: postProcess\n      });\n    }\n  }]);\n\n  return PlSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = PlSqlFormatter;\n\nfunction postProcess(tokens) {\n  var previousReservedToken = _token.EOF_TOKEN;\n  return tokens.map(function (token) {\n    // BY [SET]\n    if (_token.isToken.SET(token) && _token.isToken.BY(previousReservedToken)) {\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.RESERVED_KEYWORD\n      });\n    }\n\n    if ((0, _token.isReserved)(token.type)) {\n      previousReservedToken = token;\n    }\n\n    return token;\n  });\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=plsql.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.functions.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.functions.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions001.htm\n  numeric: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'ATAN2', 'BITAND', 'CEIL', 'COS', 'COSH', 'EXP', 'FLOOR', 'LN', 'LOG', 'MOD', 'NANVL', 'POWER', 'REMAINDER', 'ROUND', 'SIGN', 'SIN', 'SINH', 'SQRT', 'TAN', 'TANH', 'TRUNC', 'WIDTH_BUCKET'],\n  character: ['CHR', 'CONCAT', 'INITCAP', 'LOWER', 'LPAD', 'LTRIM', 'NLS_INITCAP', 'NLS_LOWER', 'NLSSORT', 'NLS_UPPER', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPLACE', 'RPAD', 'RTRIM', 'SOUNDEX', 'SUBSTR', 'TRANSLATE', 'TREAT', 'TRIM', 'UPPER', 'NLS_CHARSET_DECL_LEN', 'NLS_CHARSET_ID', 'NLS_CHARSET_NAME', 'ASCII', 'INSTR', 'LENGTH', 'REGEXP_INSTR'],\n  datetime: ['ADD_MONTHS', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'DBTIMEZONE', 'EXTRACT', 'FROM_TZ', 'LAST_DAY', 'LOCALTIMESTAMP', 'MONTHS_BETWEEN', 'NEW_TIME', 'NEXT_DAY', 'NUMTODSINTERVAL', 'NUMTOYMINTERVAL', 'ROUND', 'SESSIONTIMEZONE', 'SYS_EXTRACT_UTC', 'SYSDATE', 'SYSTIMESTAMP', 'TO_CHAR', 'TO_TIMESTAMP', 'TO_TIMESTAMP_TZ', 'TO_DSINTERVAL', 'TO_YMINTERVAL', 'TRUNC', 'TZ_OFFSET'],\n  comparison: ['GREATEST', 'LEAST'],\n  conversion: ['ASCIISTR', 'BIN_TO_NUM', 'CAST', 'CHARTOROWID', 'COMPOSE', 'CONVERT', 'DECOMPOSE', 'HEXTORAW', 'NUMTODSINTERVAL', 'NUMTOYMINTERVAL', 'RAWTOHEX', 'RAWTONHEX', 'ROWIDTOCHAR', 'ROWIDTONCHAR', 'SCN_TO_TIMESTAMP', 'TIMESTAMP_TO_SCN', 'TO_BINARY_DOUBLE', 'TO_BINARY_FLOAT', 'TO_CHAR', 'TO_CLOB', 'TO_DATE', 'TO_DSINTERVAL', 'TO_LOB', 'TO_MULTI_BYTE', 'TO_NCHAR', 'TO_NCLOB', 'TO_NUMBER', 'TO_DSINTERVAL', 'TO_SINGLE_BYTE', 'TO_TIMESTAMP', 'TO_TIMESTAMP_TZ', 'TO_YMINTERVAL', 'TO_YMINTERVAL', 'TRANSLATE', 'UNISTR'],\n  largeObject: ['BFILENAME', 'EMPTY_BLOB,', 'EMPTY_CLOB'],\n  collection: ['CARDINALITY', 'COLLECT', 'POWERMULTISET', 'POWERMULTISET_BY_CARDINALITY', 'SET'],\n  hierarchical: ['SYS_CONNECT_BY_PATH'],\n  dataMining: ['CLUSTER_ID', 'CLUSTER_PROBABILITY', 'CLUSTER_SET', 'FEATURE_ID', 'FEATURE_SET', 'FEATURE_VALUE', 'PREDICTION', 'PREDICTION_COST', 'PREDICTION_DETAILS', 'PREDICTION_PROBABILITY', 'PREDICTION_SET'],\n  xml: ['APPENDCHILDXML', 'DELETEXML', 'DEPTH', 'EXTRACT', 'EXISTSNODE', 'EXTRACTVALUE', 'INSERTCHILDXML', 'INSERTXMLBEFORE', 'PATH', 'SYS_DBURIGEN', 'SYS_XMLAGG', 'SYS_XMLGEN', 'UPDATEXML', 'XMLAGG', 'XMLCDATA', 'XMLCOLATTVAL', 'XMLCOMMENT', 'XMLCONCAT', 'XMLFOREST', 'XMLPARSE', 'XMLPI', 'XMLQUERY', 'XMLROOT', 'XMLSEQUENCE', 'XMLSERIALIZE', 'XMLTABLE', 'XMLTRANSFORM'],\n  encoding: ['DECODE', 'DUMP', 'ORA_HASH', 'VSIZE'],\n  nullRelated: ['COALESCE', 'LNNVL', 'NULLIF', 'NVL', 'NVL2'],\n  env: ['SYS_CONTEXT', 'SYS_GUID', 'SYS_TYPEID', 'UID', 'USER', 'USERENV'],\n  aggregate: ['AVG', 'COLLECT', 'CORR', 'CORR_S', 'CORR_K', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'CUME_DIST', 'DENSE_RANK', 'FIRST', 'GROUP_ID', 'GROUPING', 'GROUPING_ID', 'LAST', 'MAX', 'MEDIAN', 'MIN', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'RANK', 'REGR_SLOPE', 'REGR_INTERCEPT', 'REGR_COUNT', 'REGR_R2', 'REGR_AVGX', 'REGR_AVGY', 'REGR_SXX', 'REGR_SYY', 'REGR_SXY', 'STATS_BINOMIAL_TEST', 'STATS_CROSSTAB', 'STATS_F_TEST', 'STATS_KS_TEST', 'STATS_MODE', 'STATS_MW_TEST', 'STATS_ONE_WAY_ANOVA', 'STATS_T_TEST_ONE', 'STATS_T_TEST_PAIRED', 'STATS_T_TEST_INDEP', 'STATS_T_TEST_INDEPU', 'STATS_WSR_TEST', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  // Windowing functions (minus the ones already listed in aggregates)\n  window: ['FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'NTILE', 'RATIO_TO_REPORT', 'ROW_NUMBER'],\n  objectReference: ['DEREF', 'MAKE_REF', 'REF', 'REFTOHEX', 'VALUE'],\n  model: ['CV', 'ITERATION_NUMBER', 'PRESENTNNV', 'PRESENTV', 'PREVIOUS'],\n  // Parameterized data types\n  // https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/Data-Types.html\n  dataTypes: [// Oracle builtin data types\n  'VARCHAR2', 'NVARCHAR2', 'NUMBER', 'FLOAT', 'TIMESTAMP', 'INTERVAL YEAR', 'INTERVAL DAY', 'RAW', 'UROWID', 'NCHAR', // ANSI Data Types\n  'CHARACTER', 'CHAR', 'CHARACTER VARYING', 'CHAR VARYING', 'NATIONAL CHARACTER', 'NATIONAL CHAR', 'NATIONAL CHARACTER VARYING', 'NATIONAL CHAR VARYING', 'NCHAR VARYING', 'NUMERIC', 'DECIMAL', 'FLOAT', // SQL/DS and DB2 Data Types\n  'VARCHAR']\n});\nexports.functions = functions;\n//# sourceMappingURL=plsql.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9wbHNxbC9wbHNxbC5mdW5jdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL3Bsc3FsL3Bsc3FsLmZ1bmN0aW9ucy5qcz82ZjM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBmdW5jdGlvbnMgPSAoMCwgX3V0aWxzLmZsYXRLZXl3b3JkTGlzdCkoe1xuICAvLyBodHRwczovL2RvY3Mub3JhY2xlLmNvbS9jZC9CMTkzMDZfMDEvc2VydmVyLjEwMi9iMTQyMDAvZnVuY3Rpb25zMDAxLmh0bVxuICBudW1lcmljOiBbJ0FCUycsICdBQ09TJywgJ0FTSU4nLCAnQVRBTicsICdBVEFOMicsICdCSVRBTkQnLCAnQ0VJTCcsICdDT1MnLCAnQ09TSCcsICdFWFAnLCAnRkxPT1InLCAnTE4nLCAnTE9HJywgJ01PRCcsICdOQU5WTCcsICdQT1dFUicsICdSRU1BSU5ERVInLCAnUk9VTkQnLCAnU0lHTicsICdTSU4nLCAnU0lOSCcsICdTUVJUJywgJ1RBTicsICdUQU5IJywgJ1RSVU5DJywgJ1dJRFRIX0JVQ0tFVCddLFxuICBjaGFyYWN0ZXI6IFsnQ0hSJywgJ0NPTkNBVCcsICdJTklUQ0FQJywgJ0xPV0VSJywgJ0xQQUQnLCAnTFRSSU0nLCAnTkxTX0lOSVRDQVAnLCAnTkxTX0xPV0VSJywgJ05MU1NPUlQnLCAnTkxTX1VQUEVSJywgJ1JFR0VYUF9SRVBMQUNFJywgJ1JFR0VYUF9TVUJTVFInLCAnUkVQTEFDRScsICdSUEFEJywgJ1JUUklNJywgJ1NPVU5ERVgnLCAnU1VCU1RSJywgJ1RSQU5TTEFURScsICdUUkVBVCcsICdUUklNJywgJ1VQUEVSJywgJ05MU19DSEFSU0VUX0RFQ0xfTEVOJywgJ05MU19DSEFSU0VUX0lEJywgJ05MU19DSEFSU0VUX05BTUUnLCAnQVNDSUknLCAnSU5TVFInLCAnTEVOR1RIJywgJ1JFR0VYUF9JTlNUUiddLFxuICBkYXRldGltZTogWydBRERfTU9OVEhTJywgJ0NVUlJFTlRfREFURScsICdDVVJSRU5UX1RJTUVTVEFNUCcsICdEQlRJTUVaT05FJywgJ0VYVFJBQ1QnLCAnRlJPTV9UWicsICdMQVNUX0RBWScsICdMT0NBTFRJTUVTVEFNUCcsICdNT05USFNfQkVUV0VFTicsICdORVdfVElNRScsICdORVhUX0RBWScsICdOVU1UT0RTSU5URVJWQUwnLCAnTlVNVE9ZTUlOVEVSVkFMJywgJ1JPVU5EJywgJ1NFU1NJT05USU1FWk9ORScsICdTWVNfRVhUUkFDVF9VVEMnLCAnU1lTREFURScsICdTWVNUSU1FU1RBTVAnLCAnVE9fQ0hBUicsICdUT19USU1FU1RBTVAnLCAnVE9fVElNRVNUQU1QX1RaJywgJ1RPX0RTSU5URVJWQUwnLCAnVE9fWU1JTlRFUlZBTCcsICdUUlVOQycsICdUWl9PRkZTRVQnXSxcbiAgY29tcGFyaXNvbjogWydHUkVBVEVTVCcsICdMRUFTVCddLFxuICBjb252ZXJzaW9uOiBbJ0FTQ0lJU1RSJywgJ0JJTl9UT19OVU0nLCAnQ0FTVCcsICdDSEFSVE9ST1dJRCcsICdDT01QT1NFJywgJ0NPTlZFUlQnLCAnREVDT01QT1NFJywgJ0hFWFRPUkFXJywgJ05VTVRPRFNJTlRFUlZBTCcsICdOVU1UT1lNSU5URVJWQUwnLCAnUkFXVE9IRVgnLCAnUkFXVE9OSEVYJywgJ1JPV0lEVE9DSEFSJywgJ1JPV0lEVE9OQ0hBUicsICdTQ05fVE9fVElNRVNUQU1QJywgJ1RJTUVTVEFNUF9UT19TQ04nLCAnVE9fQklOQVJZX0RPVUJMRScsICdUT19CSU5BUllfRkxPQVQnLCAnVE9fQ0hBUicsICdUT19DTE9CJywgJ1RPX0RBVEUnLCAnVE9fRFNJTlRFUlZBTCcsICdUT19MT0InLCAnVE9fTVVMVElfQllURScsICdUT19OQ0hBUicsICdUT19OQ0xPQicsICdUT19OVU1CRVInLCAnVE9fRFNJTlRFUlZBTCcsICdUT19TSU5HTEVfQllURScsICdUT19USU1FU1RBTVAnLCAnVE9fVElNRVNUQU1QX1RaJywgJ1RPX1lNSU5URVJWQUwnLCAnVE9fWU1JTlRFUlZBTCcsICdUUkFOU0xBVEUnLCAnVU5JU1RSJ10sXG4gIGxhcmdlT2JqZWN0OiBbJ0JGSUxFTkFNRScsICdFTVBUWV9CTE9CLCcsICdFTVBUWV9DTE9CJ10sXG4gIGNvbGxlY3Rpb246IFsnQ0FSRElOQUxJVFknLCAnQ09MTEVDVCcsICdQT1dFUk1VTFRJU0VUJywgJ1BPV0VSTVVMVElTRVRfQllfQ0FSRElOQUxJVFknLCAnU0VUJ10sXG4gIGhpZXJhcmNoaWNhbDogWydTWVNfQ09OTkVDVF9CWV9QQVRIJ10sXG4gIGRhdGFNaW5pbmc6IFsnQ0xVU1RFUl9JRCcsICdDTFVTVEVSX1BST0JBQklMSVRZJywgJ0NMVVNURVJfU0VUJywgJ0ZFQVRVUkVfSUQnLCAnRkVBVFVSRV9TRVQnLCAnRkVBVFVSRV9WQUxVRScsICdQUkVESUNUSU9OJywgJ1BSRURJQ1RJT05fQ09TVCcsICdQUkVESUNUSU9OX0RFVEFJTFMnLCAnUFJFRElDVElPTl9QUk9CQUJJTElUWScsICdQUkVESUNUSU9OX1NFVCddLFxuICB4bWw6IFsnQVBQRU5EQ0hJTERYTUwnLCAnREVMRVRFWE1MJywgJ0RFUFRIJywgJ0VYVFJBQ1QnLCAnRVhJU1RTTk9ERScsICdFWFRSQUNUVkFMVUUnLCAnSU5TRVJUQ0hJTERYTUwnLCAnSU5TRVJUWE1MQkVGT1JFJywgJ1BBVEgnLCAnU1lTX0RCVVJJR0VOJywgJ1NZU19YTUxBR0cnLCAnU1lTX1hNTEdFTicsICdVUERBVEVYTUwnLCAnWE1MQUdHJywgJ1hNTENEQVRBJywgJ1hNTENPTEFUVFZBTCcsICdYTUxDT01NRU5UJywgJ1hNTENPTkNBVCcsICdYTUxGT1JFU1QnLCAnWE1MUEFSU0UnLCAnWE1MUEknLCAnWE1MUVVFUlknLCAnWE1MUk9PVCcsICdYTUxTRVFVRU5DRScsICdYTUxTRVJJQUxJWkUnLCAnWE1MVEFCTEUnLCAnWE1MVFJBTlNGT1JNJ10sXG4gIGVuY29kaW5nOiBbJ0RFQ09ERScsICdEVU1QJywgJ09SQV9IQVNIJywgJ1ZTSVpFJ10sXG4gIG51bGxSZWxhdGVkOiBbJ0NPQUxFU0NFJywgJ0xOTlZMJywgJ05VTExJRicsICdOVkwnLCAnTlZMMiddLFxuICBlbnY6IFsnU1lTX0NPTlRFWFQnLCAnU1lTX0dVSUQnLCAnU1lTX1RZUEVJRCcsICdVSUQnLCAnVVNFUicsICdVU0VSRU5WJ10sXG4gIGFnZ3JlZ2F0ZTogWydBVkcnLCAnQ09MTEVDVCcsICdDT1JSJywgJ0NPUlJfUycsICdDT1JSX0snLCAnQ09VTlQnLCAnQ09WQVJfUE9QJywgJ0NPVkFSX1NBTVAnLCAnQ1VNRV9ESVNUJywgJ0RFTlNFX1JBTksnLCAnRklSU1QnLCAnR1JPVVBfSUQnLCAnR1JPVVBJTkcnLCAnR1JPVVBJTkdfSUQnLCAnTEFTVCcsICdNQVgnLCAnTUVESUFOJywgJ01JTicsICdQRVJDRU5USUxFX0NPTlQnLCAnUEVSQ0VOVElMRV9ESVNDJywgJ1BFUkNFTlRfUkFOSycsICdSQU5LJywgJ1JFR1JfU0xPUEUnLCAnUkVHUl9JTlRFUkNFUFQnLCAnUkVHUl9DT1VOVCcsICdSRUdSX1IyJywgJ1JFR1JfQVZHWCcsICdSRUdSX0FWR1knLCAnUkVHUl9TWFgnLCAnUkVHUl9TWVknLCAnUkVHUl9TWFknLCAnU1RBVFNfQklOT01JQUxfVEVTVCcsICdTVEFUU19DUk9TU1RBQicsICdTVEFUU19GX1RFU1QnLCAnU1RBVFNfS1NfVEVTVCcsICdTVEFUU19NT0RFJywgJ1NUQVRTX01XX1RFU1QnLCAnU1RBVFNfT05FX1dBWV9BTk9WQScsICdTVEFUU19UX1RFU1RfT05FJywgJ1NUQVRTX1RfVEVTVF9QQUlSRUQnLCAnU1RBVFNfVF9URVNUX0lOREVQJywgJ1NUQVRTX1RfVEVTVF9JTkRFUFUnLCAnU1RBVFNfV1NSX1RFU1QnLCAnU1REREVWJywgJ1NURERFVl9QT1AnLCAnU1REREVWX1NBTVAnLCAnU1VNJywgJ1ZBUl9QT1AnLCAnVkFSX1NBTVAnLCAnVkFSSUFOQ0UnXSxcbiAgLy8gV2luZG93aW5nIGZ1bmN0aW9ucyAobWludXMgdGhlIG9uZXMgYWxyZWFkeSBsaXN0ZWQgaW4gYWdncmVnYXRlcylcbiAgd2luZG93OiBbJ0ZJUlNUX1ZBTFVFJywgJ0xBRycsICdMQVNUX1ZBTFVFJywgJ0xFQUQnLCAnTlRJTEUnLCAnUkFUSU9fVE9fUkVQT1JUJywgJ1JPV19OVU1CRVInXSxcbiAgb2JqZWN0UmVmZXJlbmNlOiBbJ0RFUkVGJywgJ01BS0VfUkVGJywgJ1JFRicsICdSRUZUT0hFWCcsICdWQUxVRSddLFxuICBtb2RlbDogWydDVicsICdJVEVSQVRJT05fTlVNQkVSJywgJ1BSRVNFTlROTlYnLCAnUFJFU0VOVFYnLCAnUFJFVklPVVMnXSxcbiAgLy8gUGFyYW1ldGVyaXplZCBkYXRhIHR5cGVzXG4gIC8vIGh0dHBzOi8vZG9jcy5vcmFjbGUuY29tL2VuL2RhdGFiYXNlL29yYWNsZS9vcmFjbGUtZGF0YWJhc2UvMTkvc3FscmYvRGF0YS1UeXBlcy5odG1sXG4gIGRhdGFUeXBlczogWy8vIE9yYWNsZSBidWlsdGluIGRhdGEgdHlwZXNcbiAgJ1ZBUkNIQVIyJywgJ05WQVJDSEFSMicsICdOVU1CRVInLCAnRkxPQVQnLCAnVElNRVNUQU1QJywgJ0lOVEVSVkFMIFlFQVInLCAnSU5URVJWQUwgREFZJywgJ1JBVycsICdVUk9XSUQnLCAnTkNIQVInLCAvLyBBTlNJIERhdGEgVHlwZXNcbiAgJ0NIQVJBQ1RFUicsICdDSEFSJywgJ0NIQVJBQ1RFUiBWQVJZSU5HJywgJ0NIQVIgVkFSWUlORycsICdOQVRJT05BTCBDSEFSQUNURVInLCAnTkFUSU9OQUwgQ0hBUicsICdOQVRJT05BTCBDSEFSQUNURVIgVkFSWUlORycsICdOQVRJT05BTCBDSEFSIFZBUllJTkcnLCAnTkNIQVIgVkFSWUlORycsICdOVU1FUklDJywgJ0RFQ0lNQUwnLCAnRkxPQVQnLCAvLyBTUUwvRFMgYW5kIERCMiBEYXRhIFR5cGVzXG4gICdWQVJDSEFSJ11cbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSBmdW5jdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wbHNxbC5mdW5jdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.keywords.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.keywords.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://docs.oracle.com/cd/B19306_01/appdev.102/b14261/reservewords.htm\n  all: [// 'A',\n  'ADD', 'AGENT', 'AGGREGATE', 'ALL', 'ALTER', 'AND', 'ANY', 'ARRAY', 'ARROW', 'AS', 'ASC', 'AT', 'ATTRIBUTE', 'AUTHID', 'AVG', 'BEGIN', 'BETWEEN', 'BFILE_BASE', 'BINARY', 'BLOB_BASE', 'BLOCK', 'BODY', 'BOTH', 'BOUND', 'BULK', 'BY', 'BYTE', // 'C',\n  'CALL', 'CALLING', 'CASCADE', 'CASE', 'CHAR', 'CHAR_BASE', 'CHARACTER', 'CHARSET', 'CHARSETFORM', 'CHARSETID', 'CHECK', 'CLOB_BASE', 'CLOSE', 'CLUSTER', 'CLUSTERS', 'COLAUTH', 'COLLECT', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPILED', 'COMPRESS', 'CONNECT', 'CONSTANT', 'CONSTRUCTOR', 'CONTEXT', 'CONVERT', 'COUNT', 'CRASH', 'CREATE', 'CURRENT', 'CURSOR', 'CUSTOMDATUM', 'DANGLING', 'DATA', 'DATE', 'DATE_BASE', 'DAY', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFINE', 'DELETE', 'DESC', 'DETERMINISTIC', 'DISTINCT', 'DOUBLE', 'DROP', 'DURATION', 'ELEMENT', 'ELSE', 'ELSIF', 'EMPTY', 'END', 'ESCAPE', 'EXCEPT', 'EXCEPTION', 'EXCEPTIONS', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXIT', 'EXTERNAL', 'FETCH', 'FINAL', 'FIXED', 'FLOAT', 'FOR', 'FORALL', 'FORCE', 'FORM', 'FROM', 'FUNCTION', 'GENERAL', 'GOTO', 'GRANT', 'GROUP', 'HASH', 'HAVING', 'HEAP', 'HIDDEN', 'HOUR', 'IDENTIFIED', 'IF', 'IMMEDIATE', 'IN', 'INCLUDING', 'INDEX', 'INDEXES', 'INDICATOR', 'INDICES', 'INFINITE', 'INSERT', 'INSTANTIABLE', 'INT', 'INTERFACE', 'INTERSECT', 'INTERVAL', 'INTO', 'INVALIDATE', 'IS', 'ISOLATION', 'JAVA', 'LANGUAGE', 'LARGE', 'LEADING', 'LENGTH', 'LEVEL', 'LIBRARY', 'LIKE', 'LIKE2', 'LIKE4', 'LIKEC', 'LIMIT', 'LIMITED', 'LOCAL', 'LOCK', 'LONG', 'LOOP', 'MAP', 'MAX', 'MAXLEN', 'MEMBER', 'MERGE', 'MIN', 'MINUS', 'MINUTE', 'MOD', 'MODE', 'MODIFY', 'MONTH', 'MULTISET', 'NAME', 'NAN', 'NATIONAL', 'NATIVE', 'NCHAR', 'NEW', 'NOCOMPRESS', 'NOCOPY', 'NOT', 'NOWAIT', 'NULL', 'NUMBER_BASE', 'OBJECT', 'OCICOLL', 'OCIDATE', 'OCIDATETIME', 'OCIDURATION', 'OCIINTERVAL', 'OCILOBLOCATOR', 'OCINUMBER', 'OCIRAW', 'OCIREF', 'OCIREFCURSOR', 'OCIROWID', 'OCISTRING', 'OCITYPE', 'OF', 'ON', 'ONLY', 'OPAQUE', 'OPEN', 'OPERATOR', 'OPTION', 'OR', 'ORACLE', 'ORADATA', 'ORDER', 'OVERLAPS', 'ORGANIZATION', 'ORLANY', 'ORLVARY', 'OTHERS', 'OUT', 'OVERRIDING', 'PACKAGE', 'PARALLEL_ENABLE', 'PARAMETER', 'PARAMETERS', 'PARTITION', 'PASCAL', 'PIPE', 'PIPELINED', 'PRAGMA', 'PRECISION', 'PRIOR', 'PRIVATE', 'PROCEDURE', 'PUBLIC', 'RAISE', 'RANGE', 'RAW', 'READ', 'RECORD', 'REF', 'REFERENCE', 'REM', 'REMAINDER', 'RENAME', 'RESOURCE', 'RESULT', 'RETURN', 'RETURNING', 'REVERSE', 'REVOKE', 'ROLLBACK', 'ROW', 'SAMPLE', 'SAVE', 'SAVEPOINT', 'SB1', 'SB2', 'SB4', 'SECOND', 'SEGMENT', 'SELECT', 'SELF', 'SEPARATE', 'SEQUENCE', 'SERIALIZABLE', 'SET', 'SHARE', 'SHORT', 'SIZE', 'SIZE_T', 'SOME', 'SPARSE', 'SQL', 'SQLCODE', 'SQLDATA', 'SQLNAME', 'SQLSTATE', 'STANDARD', 'START', 'STATIC', 'STDDEV', 'STORED', 'STRING', 'STRUCT', 'STYLE', 'SUBMULTISET', 'SUBPARTITION', 'SUBSTITUTABLE', 'SUBTYPE', 'SUM', 'SYNONYM', 'TABAUTH', 'TABLE', 'TDO', 'THE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_ABBR', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TIMEZONE_REGION', 'TO', 'TRAILING', 'TRANSAC', 'TRANSACTIONAL', 'TRUSTED', 'TYPE', 'UB1', 'UB2', 'UB4', 'UNDER', 'UNION', 'UNIQUE', 'UNSIGNED', 'UNTRUSTED', 'UPDATE', 'USE', 'USING', 'VALIST', 'VALUE', 'VALUES', 'VARIABLE', 'VARIANCE', 'VARRAY', 'VARYING', 'VIEW', 'VIEWS', 'VOID', 'WHEN', 'WHERE', 'WHILE', 'WITH', 'WORK', 'WRAPPED', 'WRITE', 'YEAR', 'ZONE']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=plsql.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9wbHNxbC9wbHNxbC5rZXl3b3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvcGxzcWwvcGxzcWwua2V5d29yZHMuanM/YWYzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBrZXl3b3JkcyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vZG9jcy5vcmFjbGUuY29tL2NkL0IxOTMwNl8wMS9hcHBkZXYuMTAyL2IxNDI2MS9yZXNlcnZld29yZHMuaHRtXG4gIGFsbDogWy8vICdBJyxcbiAgJ0FERCcsICdBR0VOVCcsICdBR0dSRUdBVEUnLCAnQUxMJywgJ0FMVEVSJywgJ0FORCcsICdBTlknLCAnQVJSQVknLCAnQVJST1cnLCAnQVMnLCAnQVNDJywgJ0FUJywgJ0FUVFJJQlVURScsICdBVVRISUQnLCAnQVZHJywgJ0JFR0lOJywgJ0JFVFdFRU4nLCAnQkZJTEVfQkFTRScsICdCSU5BUlknLCAnQkxPQl9CQVNFJywgJ0JMT0NLJywgJ0JPRFknLCAnQk9USCcsICdCT1VORCcsICdCVUxLJywgJ0JZJywgJ0JZVEUnLCAvLyAnQycsXG4gICdDQUxMJywgJ0NBTExJTkcnLCAnQ0FTQ0FERScsICdDQVNFJywgJ0NIQVInLCAnQ0hBUl9CQVNFJywgJ0NIQVJBQ1RFUicsICdDSEFSU0VUJywgJ0NIQVJTRVRGT1JNJywgJ0NIQVJTRVRJRCcsICdDSEVDSycsICdDTE9CX0JBU0UnLCAnQ0xPU0UnLCAnQ0xVU1RFUicsICdDTFVTVEVSUycsICdDT0xBVVRIJywgJ0NPTExFQ1QnLCAnQ09MVU1OUycsICdDT01NRU5UJywgJ0NPTU1JVCcsICdDT01NSVRURUQnLCAnQ09NUElMRUQnLCAnQ09NUFJFU1MnLCAnQ09OTkVDVCcsICdDT05TVEFOVCcsICdDT05TVFJVQ1RPUicsICdDT05URVhUJywgJ0NPTlZFUlQnLCAnQ09VTlQnLCAnQ1JBU0gnLCAnQ1JFQVRFJywgJ0NVUlJFTlQnLCAnQ1VSU09SJywgJ0NVU1RPTURBVFVNJywgJ0RBTkdMSU5HJywgJ0RBVEEnLCAnREFURScsICdEQVRFX0JBU0UnLCAnREFZJywgJ0RFQ0lNQUwnLCAnREVDTEFSRScsICdERUZBVUxUJywgJ0RFRklORScsICdERUxFVEUnLCAnREVTQycsICdERVRFUk1JTklTVElDJywgJ0RJU1RJTkNUJywgJ0RPVUJMRScsICdEUk9QJywgJ0RVUkFUSU9OJywgJ0VMRU1FTlQnLCAnRUxTRScsICdFTFNJRicsICdFTVBUWScsICdFTkQnLCAnRVNDQVBFJywgJ0VYQ0VQVCcsICdFWENFUFRJT04nLCAnRVhDRVBUSU9OUycsICdFWENMVVNJVkUnLCAnRVhFQ1VURScsICdFWElTVFMnLCAnRVhJVCcsICdFWFRFUk5BTCcsICdGRVRDSCcsICdGSU5BTCcsICdGSVhFRCcsICdGTE9BVCcsICdGT1InLCAnRk9SQUxMJywgJ0ZPUkNFJywgJ0ZPUk0nLCAnRlJPTScsICdGVU5DVElPTicsICdHRU5FUkFMJywgJ0dPVE8nLCAnR1JBTlQnLCAnR1JPVVAnLCAnSEFTSCcsICdIQVZJTkcnLCAnSEVBUCcsICdISURERU4nLCAnSE9VUicsICdJREVOVElGSUVEJywgJ0lGJywgJ0lNTUVESUFURScsICdJTicsICdJTkNMVURJTkcnLCAnSU5ERVgnLCAnSU5ERVhFUycsICdJTkRJQ0FUT1InLCAnSU5ESUNFUycsICdJTkZJTklURScsICdJTlNFUlQnLCAnSU5TVEFOVElBQkxFJywgJ0lOVCcsICdJTlRFUkZBQ0UnLCAnSU5URVJTRUNUJywgJ0lOVEVSVkFMJywgJ0lOVE8nLCAnSU5WQUxJREFURScsICdJUycsICdJU09MQVRJT04nLCAnSkFWQScsICdMQU5HVUFHRScsICdMQVJHRScsICdMRUFESU5HJywgJ0xFTkdUSCcsICdMRVZFTCcsICdMSUJSQVJZJywgJ0xJS0UnLCAnTElLRTInLCAnTElLRTQnLCAnTElLRUMnLCAnTElNSVQnLCAnTElNSVRFRCcsICdMT0NBTCcsICdMT0NLJywgJ0xPTkcnLCAnTE9PUCcsICdNQVAnLCAnTUFYJywgJ01BWExFTicsICdNRU1CRVInLCAnTUVSR0UnLCAnTUlOJywgJ01JTlVTJywgJ01JTlVURScsICdNT0QnLCAnTU9ERScsICdNT0RJRlknLCAnTU9OVEgnLCAnTVVMVElTRVQnLCAnTkFNRScsICdOQU4nLCAnTkFUSU9OQUwnLCAnTkFUSVZFJywgJ05DSEFSJywgJ05FVycsICdOT0NPTVBSRVNTJywgJ05PQ09QWScsICdOT1QnLCAnTk9XQUlUJywgJ05VTEwnLCAnTlVNQkVSX0JBU0UnLCAnT0JKRUNUJywgJ09DSUNPTEwnLCAnT0NJREFURScsICdPQ0lEQVRFVElNRScsICdPQ0lEVVJBVElPTicsICdPQ0lJTlRFUlZBTCcsICdPQ0lMT0JMT0NBVE9SJywgJ09DSU5VTUJFUicsICdPQ0lSQVcnLCAnT0NJUkVGJywgJ09DSVJFRkNVUlNPUicsICdPQ0lST1dJRCcsICdPQ0lTVFJJTkcnLCAnT0NJVFlQRScsICdPRicsICdPTicsICdPTkxZJywgJ09QQVFVRScsICdPUEVOJywgJ09QRVJBVE9SJywgJ09QVElPTicsICdPUicsICdPUkFDTEUnLCAnT1JBREFUQScsICdPUkRFUicsICdPVkVSTEFQUycsICdPUkdBTklaQVRJT04nLCAnT1JMQU5ZJywgJ09STFZBUlknLCAnT1RIRVJTJywgJ09VVCcsICdPVkVSUklESU5HJywgJ1BBQ0tBR0UnLCAnUEFSQUxMRUxfRU5BQkxFJywgJ1BBUkFNRVRFUicsICdQQVJBTUVURVJTJywgJ1BBUlRJVElPTicsICdQQVNDQUwnLCAnUElQRScsICdQSVBFTElORUQnLCAnUFJBR01BJywgJ1BSRUNJU0lPTicsICdQUklPUicsICdQUklWQVRFJywgJ1BST0NFRFVSRScsICdQVUJMSUMnLCAnUkFJU0UnLCAnUkFOR0UnLCAnUkFXJywgJ1JFQUQnLCAnUkVDT1JEJywgJ1JFRicsICdSRUZFUkVOQ0UnLCAnUkVNJywgJ1JFTUFJTkRFUicsICdSRU5BTUUnLCAnUkVTT1VSQ0UnLCAnUkVTVUxUJywgJ1JFVFVSTicsICdSRVRVUk5JTkcnLCAnUkVWRVJTRScsICdSRVZPS0UnLCAnUk9MTEJBQ0snLCAnUk9XJywgJ1NBTVBMRScsICdTQVZFJywgJ1NBVkVQT0lOVCcsICdTQjEnLCAnU0IyJywgJ1NCNCcsICdTRUNPTkQnLCAnU0VHTUVOVCcsICdTRUxFQ1QnLCAnU0VMRicsICdTRVBBUkFURScsICdTRVFVRU5DRScsICdTRVJJQUxJWkFCTEUnLCAnU0VUJywgJ1NIQVJFJywgJ1NIT1JUJywgJ1NJWkUnLCAnU0laRV9UJywgJ1NPTUUnLCAnU1BBUlNFJywgJ1NRTCcsICdTUUxDT0RFJywgJ1NRTERBVEEnLCAnU1FMTkFNRScsICdTUUxTVEFURScsICdTVEFOREFSRCcsICdTVEFSVCcsICdTVEFUSUMnLCAnU1REREVWJywgJ1NUT1JFRCcsICdTVFJJTkcnLCAnU1RSVUNUJywgJ1NUWUxFJywgJ1NVQk1VTFRJU0VUJywgJ1NVQlBBUlRJVElPTicsICdTVUJTVElUVVRBQkxFJywgJ1NVQlRZUEUnLCAnU1VNJywgJ1NZTk9OWU0nLCAnVEFCQVVUSCcsICdUQUJMRScsICdURE8nLCAnVEhFJywgJ1RIRU4nLCAnVElNRScsICdUSU1FU1RBTVAnLCAnVElNRVpPTkVfQUJCUicsICdUSU1FWk9ORV9IT1VSJywgJ1RJTUVaT05FX01JTlVURScsICdUSU1FWk9ORV9SRUdJT04nLCAnVE8nLCAnVFJBSUxJTkcnLCAnVFJBTlNBQycsICdUUkFOU0FDVElPTkFMJywgJ1RSVVNURUQnLCAnVFlQRScsICdVQjEnLCAnVUIyJywgJ1VCNCcsICdVTkRFUicsICdVTklPTicsICdVTklRVUUnLCAnVU5TSUdORUQnLCAnVU5UUlVTVEVEJywgJ1VQREFURScsICdVU0UnLCAnVVNJTkcnLCAnVkFMSVNUJywgJ1ZBTFVFJywgJ1ZBTFVFUycsICdWQVJJQUJMRScsICdWQVJJQU5DRScsICdWQVJSQVknLCAnVkFSWUlORycsICdWSUVXJywgJ1ZJRVdTJywgJ1ZPSUQnLCAnV0hFTicsICdXSEVSRScsICdXSElMRScsICdXSVRIJywgJ1dPUksnLCAnV1JBUFBFRCcsICdXUklURScsICdZRUFSJywgJ1pPTkUnXVxufSk7XG5leHBvcnRzLmtleXdvcmRzID0ga2V5d29yZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wbHNxbC5rZXl3b3Jkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.formatter.js":
/*!**************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.formatter.js ***!
  \**************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _postgresql = __webpack_require__(/*! ./postgresql.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.functions.js\");\n\nvar _postgresql2 = __webpack_require__(/*! ./postgresql.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY [ALL | DISTINCT]', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE [ONLY]', 'SET', 'WHERE CURRENT OF', // - delete:\n'DELETE FROM [ONLY]', // - truncate:\n'TRUNCATE [TABLE] [ONLY]', // Data definition\n'CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW', 'CREATE MATERIALIZED VIEW [IF NOT EXISTS]', 'CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE [IF EXISTS] [ONLY]', 'ALTER TABLE ALL IN TABLESPACE', 'RENAME [COLUMN]', 'RENAME TO', 'ADD [COLUMN] [IF NOT EXISTS]', 'DROP [COLUMN] [IF EXISTS]', 'ALTER [COLUMN]', '[SET DATA] TYPE', // for alter column\n'{SET | DROP} DEFAULT', // for alter column\n'{SET | DROP} NOT NULL', // for alter column\n// https://www.postgresql.org/docs/14/sql-commands.html\n'ABORT', 'ALTER AGGREGATE', 'ALTER COLLATION', 'ALTER CONVERSION', 'ALTER DATABASE', 'ALTER DEFAULT PRIVILEGES', 'ALTER DOMAIN', 'ALTER EVENT TRIGGER', 'ALTER EXTENSION', 'ALTER FOREIGN DATA WRAPPER', 'ALTER FOREIGN TABLE', 'ALTER FUNCTION', 'ALTER GROUP', 'ALTER INDEX', 'ALTER LANGUAGE', 'ALTER LARGE OBJECT', 'ALTER MATERIALIZED VIEW', 'ALTER OPERATOR', 'ALTER OPERATOR CLASS', 'ALTER OPERATOR FAMILY', 'ALTER POLICY', 'ALTER PROCEDURE', 'ALTER PUBLICATION', 'ALTER ROLE', 'ALTER ROUTINE', 'ALTER RULE', 'ALTER SCHEMA', 'ALTER SEQUENCE', 'ALTER SERVER', 'ALTER STATISTICS', 'ALTER SUBSCRIPTION', 'ALTER SYSTEM', 'ALTER TABLESPACE', 'ALTER TEXT SEARCH CONFIGURATION', 'ALTER TEXT SEARCH DICTIONARY', 'ALTER TEXT SEARCH PARSER', 'ALTER TEXT SEARCH TEMPLATE', 'ALTER TRIGGER', 'ALTER TYPE', 'ALTER USER', 'ALTER USER MAPPING', 'ALTER VIEW', 'ANALYZE', 'BEGIN', 'CALL', 'CHECKPOINT', 'CLOSE', 'CLUSTER', 'COMMENT', 'COMMIT', 'COMMIT PREPARED', 'COPY', 'CREATE ACCESS METHOD', 'CREATE AGGREGATE', 'CREATE CAST', 'CREATE COLLATION', 'CREATE CONVERSION', 'CREATE DATABASE', 'CREATE DOMAIN', 'CREATE EVENT TRIGGER', 'CREATE EXTENSION', 'CREATE FOREIGN DATA WRAPPER', 'CREATE FOREIGN TABLE', 'CREATE FUNCTION', 'CREATE GROUP', 'CREATE INDEX', 'CREATE LANGUAGE', 'CREATE OPERATOR', 'CREATE OPERATOR CLASS', 'CREATE OPERATOR FAMILY', 'CREATE POLICY', 'CREATE PROCEDURE', 'CREATE PUBLICATION', 'CREATE ROLE', 'CREATE RULE', 'CREATE SCHEMA', 'CREATE SEQUENCE', 'CREATE SERVER', 'CREATE STATISTICS', 'CREATE SUBSCRIPTION', 'CREATE TABLESPACE', 'CREATE TEXT SEARCH CONFIGURATION', 'CREATE TEXT SEARCH DICTIONARY', 'CREATE TEXT SEARCH PARSER', 'CREATE TEXT SEARCH TEMPLATE', 'CREATE TRANSFORM', 'CREATE TRIGGER', 'CREATE TYPE', 'CREATE USER', 'CREATE USER MAPPING', 'DEALLOCATE', 'DECLARE', 'DISCARD', 'DO', 'DROP ACCESS METHOD', 'DROP AGGREGATE', 'DROP CAST', 'DROP COLLATION', 'DROP CONVERSION', 'DROP DATABASE', 'DROP DOMAIN', 'DROP EVENT TRIGGER', 'DROP EXTENSION', 'DROP FOREIGN DATA WRAPPER', 'DROP FOREIGN TABLE', 'DROP FUNCTION', 'DROP GROUP', 'DROP INDEX', 'DROP LANGUAGE', 'DROP MATERIALIZED VIEW', 'DROP OPERATOR', 'DROP OPERATOR CLASS', 'DROP OPERATOR FAMILY', 'DROP OWNED', 'DROP POLICY', 'DROP PROCEDURE', 'DROP PUBLICATION', 'DROP ROLE', 'DROP ROUTINE', 'DROP RULE', 'DROP SCHEMA', 'DROP SEQUENCE', 'DROP SERVER', 'DROP STATISTICS', 'DROP SUBSCRIPTION', 'DROP TABLESPACE', 'DROP TEXT SEARCH CONFIGURATION', 'DROP TEXT SEARCH DICTIONARY', 'DROP TEXT SEARCH PARSER', 'DROP TEXT SEARCH TEMPLATE', 'DROP TRANSFORM', 'DROP TRIGGER', 'DROP TYPE', 'DROP USER', 'DROP USER MAPPING', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FETCH', 'GRANT', 'IMPORT FOREIGN SCHEMA', 'LISTEN', 'LOAD', 'LOCK', 'MOVE', 'NOTIFY', 'PREPARE', 'PREPARE TRANSACTION', 'REASSIGN OWNED', 'REFRESH MATERIALIZED VIEW', 'REINDEX', 'RELEASE SAVEPOINT', 'RESET', 'RETURNING', 'REVOKE', 'ROLLBACK', 'ROLLBACK PREPARED', 'ROLLBACK TO SAVEPOINT', 'SAVEPOINT', 'SECURITY LABEL', 'SELECT INTO', 'SET CONSTRAINTS', 'SET ROLE', 'SET SESSION AUTHORIZATION', 'SET TRANSACTION', 'SHOW', 'START TRANSACTION', 'UNLISTEN', 'VACUUM', // other\n'AFTER', 'SET SCHEMA']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', '{ROWS | RANGE | GROUPS} BETWEEN', // https://www.postgresql.org/docs/current/datatype-datetime.html\n'{TIMESTAMP | TIME} {WITH | WITHOUT} TIME ZONE']); // https://www.postgresql.org/docs/14/index.html\n\nvar PostgreSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(PostgreSqlFormatter, _Formatter);\n\n  var _super = _createSuper(PostgreSqlFormatter);\n\n  function PostgreSqlFormatter() {\n    _classCallCheck(this, PostgreSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PostgreSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _postgresql2.keywords,\n        reservedFunctionNames: _postgresql.functions,\n        nestedBlockComments: true,\n        extraParens: ['[]'],\n        stringTypes: ['$$', {\n          quote: \"''-qq\",\n          prefixes: ['U&']\n        }, {\n          quote: \"''-bs\",\n          prefixes: ['E'],\n          requirePrefix: true\n        }, {\n          quote: \"''-raw\",\n          prefixes: ['B', 'X'],\n          requirePrefix: true\n        }],\n        identTypes: [{\n          quote: '\"\"-qq',\n          prefixes: ['U&']\n        }],\n        identChars: {\n          rest: '$'\n        },\n        paramTypes: {\n          numbered: ['$']\n        },\n        operators: [// Arithmetic\n        '%', '^', '|/', '||/', '@', // Assignment\n        ':=', // Bitwise\n        '&', '|', '#', '~', '<<', '>>', // Byte comparison\n        '~>~', '~<~', '~>=~', '~<=~', // Geometric\n        '@-@', '@@', '##', '<->', '&&', '&<', '&>', '<<|', '&<|', '|>>', '|&>', '<^', '^>', '?#', '?-', '?|', '?-|', '?||', '@>', '<@', '~=', // JSON\n        '?', '@?', '?&', '->', '->>', '#>', '#>>', '#-', // Named function params\n        '=>', // Network address\n        '>>=', '<<=', // Pattern matching\n        '~~', '~~*', '!~~', '!~~*', // POSIX RegExp\n        '~', '~*', '!~', '!~*', // Range/multirange\n        '-|-', // String concatenation\n        '||', // Text search\n        '@@@', '!!', // Trigram/trigraph\n        '<%', '%>', '<<%', '%>>', '<<->', '<->>', '<<<->', '<->>>', // Type cast\n        '::']\n      });\n    }\n  }]);\n\n  return PostgreSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = PostgreSqlFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=postgresql.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.functions.js":
/*!**************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.functions.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://www.postgresql.org/docs/14/functions.html\n  //\n  // https://www.postgresql.org/docs/14/functions-math.html\n  math: ['ABS', 'ACOS', 'ACOSD', 'ACOSH', 'ASIN', 'ASIND', 'ASINH', 'ATAN', 'ATAN2', 'ATAN2D', 'ATAND', 'ATANH', 'CBRT', 'CEIL', 'CEILING', 'COS', 'COSD', 'COSH', 'COT', 'COTD', 'DEGREES', 'DIV', 'EXP', 'FACTORIAL', 'FLOOR', 'GCD', 'LCM', 'LN', 'LOG', 'LOG10', 'MIN_SCALE', 'MOD', 'PI', 'POWER', 'RADIANS', 'RANDOM', 'ROUND', 'SCALE', 'SETSEED', 'SIGN', 'SIN', 'SIND', 'SINH', 'SQRT', 'TAN', 'TAND', 'TANH', 'TRIM_SCALE', 'TRUNC', 'WIDTH_BUCKET'],\n  // https://www.postgresql.org/docs/14/functions-string.html\n  string: ['ABS', 'ASCII', 'BIT_LENGTH', 'BTRIM', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHR', 'CONCAT', 'CONCAT_WS', 'FORMAT', 'INITCAP', 'LEFT', 'LENGTH', 'LOWER', 'LPAD', 'LTRIM', 'MD5', 'NORMALIZE', 'OCTET_LENGTH', 'OVERLAY', 'PARSE_IDENT', 'PG_CLIENT_ENCODING', 'POSITION', 'QUOTE_IDENT', 'QUOTE_LITERAL', 'QUOTE_NULLABLE', 'REGEXP_MATCH', 'REGEXP_MATCHES', 'REGEXP_REPLACE', 'REGEXP_SPLIT_TO_ARRAY', 'REGEXP_SPLIT_TO_TABLE', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RPAD', 'RTRIM', 'SPLIT_PART', 'SPRINTF', 'STARTS_WITH', 'STRING_AGG', 'STRING_TO_ARRAY', 'STRING_TO_TABLE', 'STRPOS', 'SUBSTR', 'SUBSTRING', 'TO_ASCII', 'TO_HEX', 'TRANSLATE', 'TRIM', 'UNISTR', 'UPPER'],\n  // https://www.postgresql.org/docs/14/functions-binarystring.html\n  binary: ['BIT_COUNT', 'BIT_LENGTH', 'BTRIM', 'CONVERT', 'CONVERT_FROM', 'CONVERT_TO', 'DECODE', 'ENCODE', 'GET_BIT', 'GET_BYTE', 'LENGTH', 'LTRIM', 'MD5', 'OCTET_LENGTH', 'OVERLAY', 'POSITION', 'RTRIM', 'SET_BIT', 'SET_BYTE', 'SHA224', 'SHA256', 'SHA384', 'SHA512', 'STRING_AGG', 'SUBSTR', 'SUBSTRING', 'TRIM'],\n  // https://www.postgresql.org/docs/14/functions-bitstring.html\n  bitstring: ['BIT_COUNT', 'BIT_LENGTH', 'GET_BIT', 'LENGTH', 'OCTET_LENGTH', 'OVERLAY', 'POSITION', 'SET_BIT', 'SUBSTRING'],\n  // https://www.postgresql.org/docs/14/functions-matching.html\n  pattern: ['REGEXP_MATCH', 'REGEXP_MATCHES', 'REGEXP_REPLACE', 'REGEXP_SPLIT_TO_ARRAY', 'REGEXP_SPLIT_TO_TABLE'],\n  // https://www.postgresql.org/docs/14/functions-formatting.html\n  datatype: ['TO_CHAR', 'TO_DATE', 'TO_NUMBER', 'TO_TIMESTAMP'],\n  // https://www.postgresql.org/docs/14/functions-datetime.html\n  datetime: [// 'AGE',\n  'CLOCK_TIMESTAMP', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATE_BIN', 'DATE_PART', 'DATE_TRUNC', 'EXTRACT', 'ISFINITE', 'JUSTIFY_DAYS', 'JUSTIFY_HOURS', 'JUSTIFY_INTERVAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'MAKE_DATE', 'MAKE_INTERVAL', 'MAKE_TIME', 'MAKE_TIMESTAMP', 'MAKE_TIMESTAMPTZ', 'NOW', 'PG_SLEEP', 'PG_SLEEP_FOR', 'PG_SLEEP_UNTIL', 'STATEMENT_TIMESTAMP', 'TIMEOFDAY', 'TO_TIMESTAMP', 'TRANSACTION_TIMESTAMP'],\n  // https://www.postgresql.org/docs/14/functions-enum.html\n  \"enum\": ['ENUM_FIRST', 'ENUM_LAST', 'ENUM_RANGE'],\n  // https://www.postgresql.org/docs/14/functions-geometry.html\n  geometry: ['AREA', 'BOUND_BOX', 'BOX', 'CENTER', 'CIRCLE', 'DIAGONAL', 'DIAMETER', 'HEIGHT', 'ISCLOSED', 'ISOPEN', 'LENGTH', 'LINE', 'LSEG', 'NPOINTS', 'PATH', 'PCLOSE', 'POINT', 'POLYGON', 'POPEN', 'RADIUS', 'SLOPE', 'WIDTH'],\n  // https://www.postgresql.org/docs/14/functions-net.html\n  network: ['ABBREV', 'BROADCAST', 'FAMILY', 'HOST', 'HOSTMASK', 'INET_MERGE', 'INET_SAME_FAMILY', 'MACADDR8_SET7BIT', 'MASKLEN', 'NETMASK', 'NETWORK', 'SET_MASKLEN', 'TEXT', 'TRUNC'],\n  // https://www.postgresql.org/docs/14/functions-textsearch.html\n  textsearch: ['ARRAY_TO_TSVECTOR', 'GET_CURRENT_TS_CONFIG', 'JSONB_TO_TSVECTOR', 'JSON_TO_TSVECTOR', 'LENGTH', 'NUMNODE', 'PHRASETO_TSQUERY', 'PLAINTO_TSQUERY', 'QUERYTREE', 'SETWEIGHT', 'STRIP', 'TO_TSQUERY', 'TO_TSVECTOR', 'TSQUERY_PHRASE', 'TSVECTOR_TO_ARRAY', 'TS_DEBUG', 'TS_DELETE', 'TS_FILTER', 'TS_HEADLINE', 'TS_LEXIZE', 'TS_PARSE', 'TS_RANK', 'TS_RANK_CD', 'TS_REWRITE', 'TS_STAT', 'TS_TOKEN_TYPE', 'WEBSEARCH_TO_TSQUERY'],\n  // https://www.postgresql.org/docs/14/functions-uuid.html\n  uuid: ['UUID'],\n  // https://www.postgresql.org/docs/14/functions-xml.html\n  xml: ['CURSOR_TO_XML', 'CURSOR_TO_XMLSCHEMA', 'DATABASE_TO_XML', 'DATABASE_TO_XMLSCHEMA', 'DATABASE_TO_XML_AND_XMLSCHEMA', 'NEXTVAL', 'QUERY_TO_XML', 'QUERY_TO_XMLSCHEMA', 'QUERY_TO_XML_AND_XMLSCHEMA', 'SCHEMA_TO_XML', 'SCHEMA_TO_XMLSCHEMA', 'SCHEMA_TO_XML_AND_XMLSCHEMA', 'STRING', 'TABLE_TO_XML', 'TABLE_TO_XMLSCHEMA', 'TABLE_TO_XML_AND_XMLSCHEMA', 'XMLAGG', 'XMLCOMMENT', 'XMLCONCAT', 'XMLELEMENT', 'XMLEXISTS', 'XMLFOREST', 'XMLPARSE', 'XMLPI', 'XMLROOT', 'XMLSERIALIZE', 'XMLTABLE', 'XML_IS_WELL_FORMED', 'XML_IS_WELL_FORMED_CONTENT', 'XML_IS_WELL_FORMED_DOCUMENT', 'XPATH', 'XPATH_EXISTS'],\n  // https://www.postgresql.org/docs/14/functions-json.html\n  json: ['ARRAY_TO_JSON', 'JSONB_AGG', 'JSONB_ARRAY_ELEMENTS', 'JSONB_ARRAY_ELEMENTS_TEXT', 'JSONB_ARRAY_LENGTH', 'JSONB_BUILD_ARRAY', 'JSONB_BUILD_OBJECT', 'JSONB_EACH', 'JSONB_EACH_TEXT', 'JSONB_EXTRACT_PATH', 'JSONB_EXTRACT_PATH_TEXT', 'JSONB_INSERT', 'JSONB_OBJECT', 'JSONB_OBJECT_AGG', 'JSONB_OBJECT_KEYS', 'JSONB_PATH_EXISTS', 'JSONB_PATH_EXISTS_TZ', 'JSONB_PATH_MATCH', 'JSONB_PATH_MATCH_TZ', 'JSONB_PATH_QUERY', 'JSONB_PATH_QUERY_ARRAY', 'JSONB_PATH_QUERY_ARRAY_TZ', 'JSONB_PATH_QUERY_FIRST', 'JSONB_PATH_QUERY_FIRST_TZ', 'JSONB_PATH_QUERY_TZ', 'JSONB_POPULATE_RECORD', 'JSONB_POPULATE_RECORDSET', 'JSONB_PRETTY', 'JSONB_SET', 'JSONB_SET_LAX', 'JSONB_STRIP_NULLS', 'JSONB_TO_RECORD', 'JSONB_TO_RECORDSET', 'JSONB_TYPEOF', 'JSON_AGG', 'JSON_ARRAY_ELEMENTS', 'JSON_ARRAY_ELEMENTS_TEXT', 'JSON_ARRAY_LENGTH', 'JSON_BUILD_ARRAY', 'JSON_BUILD_OBJECT', 'JSON_EACH', 'JSON_EACH_TEXT', 'JSON_EXTRACT_PATH', 'JSON_EXTRACT_PATH_TEXT', 'JSON_OBJECT', 'JSON_OBJECT_AGG', 'JSON_OBJECT_KEYS', 'JSON_POPULATE_RECORD', 'JSON_POPULATE_RECORDSET', 'JSON_STRIP_NULLS', 'JSON_TO_RECORD', 'JSON_TO_RECORDSET', 'JSON_TYPEOF', 'ROW_TO_JSON', 'TO_JSON', 'TO_JSONB', 'TO_TIMESTAMP'],\n  // https://www.postgresql.org/docs/14/functions-sequence.html\n  sequence: ['CURRVAL', 'LASTVAL', 'NEXTVAL', 'SETVAL'],\n  // https://www.postgresql.org/docs/14/functions-conditional.html\n  conditional: [// 'CASE',\n  'COALESCE', 'GREATEST', 'LEAST', 'NULLIF'],\n  // https://www.postgresql.org/docs/14/functions-array.html\n  array: ['ARRAY_AGG', 'ARRAY_APPEND', 'ARRAY_CAT', 'ARRAY_DIMS', 'ARRAY_FILL', 'ARRAY_LENGTH', 'ARRAY_LOWER', 'ARRAY_NDIMS', 'ARRAY_POSITION', 'ARRAY_POSITIONS', 'ARRAY_PREPEND', 'ARRAY_REMOVE', 'ARRAY_REPLACE', 'ARRAY_TO_STRING', 'ARRAY_UPPER', 'CARDINALITY', 'STRING_TO_ARRAY', 'TRIM_ARRAY', 'UNNEST'],\n  // https://www.postgresql.org/docs/14/functions-range.html\n  range: ['ISEMPTY', 'LOWER', 'LOWER_INC', 'LOWER_INF', 'MULTIRANGE', 'RANGE_MERGE', 'UPPER', 'UPPER_INC', 'UPPER_INF'],\n  // https://www.postgresql.org/docs/14/functions-aggregate.html\n  aggregate: [// 'ANY',\n  'ARRAY_AGG', 'AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'BOOL_AND', 'BOOL_OR', 'COALESCE', 'CORR', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'CUME_DIST', 'DENSE_RANK', 'EVERY', 'GROUPING', 'JSONB_AGG', 'JSONB_OBJECT_AGG', 'JSON_AGG', 'JSON_OBJECT_AGG', 'MAX', 'MIN', 'MODE', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'RANGE_AGG', 'RANGE_INTERSECT_AGG', 'RANK', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', // 'SOME',\n  'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STRING_AGG', 'SUM', 'TO_JSON', 'TO_JSONB', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'XMLAGG'],\n  // https://www.postgresql.org/docs/14/functions-window.html\n  window: ['CUME_DIST', 'DENSE_RANK', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'RANK', 'ROW_NUMBER'],\n  // https://www.postgresql.org/docs/14/functions-srf.html\n  set: ['GENERATE_SERIES', 'GENERATE_SUBSCRIPTS'],\n  // https://www.postgresql.org/docs/14/functions-info.html\n  sysInfo: ['ACLDEFAULT', 'ACLEXPLODE', 'COL_DESCRIPTION', 'CURRENT_CATALOG', 'CURRENT_DATABASE', 'CURRENT_QUERY', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_SCHEMAS', 'CURRENT_USER', 'FORMAT_TYPE', 'HAS_ANY_COLUMN_PRIVILEGE', 'HAS_COLUMN_PRIVILEGE', 'HAS_DATABASE_PRIVILEGE', 'HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE', 'HAS_FUNCTION_PRIVILEGE', 'HAS_LANGUAGE_PRIVILEGE', 'HAS_SCHEMA_PRIVILEGE', 'HAS_SEQUENCE_PRIVILEGE', 'HAS_SERVER_PRIVILEGE', 'HAS_TABLESPACE_PRIVILEGE', 'HAS_TABLE_PRIVILEGE', 'HAS_TYPE_PRIVILEGE', 'INET_CLIENT_ADDR', 'INET_CLIENT_PORT', 'INET_SERVER_ADDR', 'INET_SERVER_PORT', 'MAKEACLITEM', 'OBJ_DESCRIPTION', 'PG_BACKEND_PID', 'PG_BLOCKING_PIDS', 'PG_COLLATION_IS_VISIBLE', 'PG_CONF_LOAD_TIME', 'PG_CONTROL_CHECKPOINT', 'PG_CONTROL_INIT', 'PG_CONTROL_SYSTEM', 'PG_CONVERSION_IS_VISIBLE', 'PG_CURRENT_LOGFILE', 'PG_CURRENT_SNAPSHOT', 'PG_CURRENT_XACT_ID', 'PG_CURRENT_XACT_ID_IF_ASSIGNED', 'PG_DESCRIBE_OBJECT', 'PG_FUNCTION_IS_VISIBLE', 'PG_GET_CATALOG_FOREIGN_KEYS', 'PG_GET_CONSTRAINTDEF', 'PG_GET_EXPR', 'PG_GET_FUNCTIONDEF', 'PG_GET_FUNCTION_ARGUMENTS', 'PG_GET_FUNCTION_IDENTITY_ARGUMENTS', 'PG_GET_FUNCTION_RESULT', 'PG_GET_INDEXDEF', 'PG_GET_KEYWORDS', 'PG_GET_OBJECT_ADDRESS', 'PG_GET_OWNED_SEQUENCE', 'PG_GET_RULEDEF', 'PG_GET_SERIAL_SEQUENCE', 'PG_GET_STATISTICSOBJDEF', 'PG_GET_TRIGGERDEF', 'PG_GET_USERBYID', 'PG_GET_VIEWDEF', 'PG_HAS_ROLE', 'PG_IDENTIFY_OBJECT', 'PG_IDENTIFY_OBJECT_AS_ADDRESS', 'PG_INDEXAM_HAS_PROPERTY', 'PG_INDEX_COLUMN_HAS_PROPERTY', 'PG_INDEX_HAS_PROPERTY', 'PG_IS_OTHER_TEMP_SCHEMA', 'PG_JIT_AVAILABLE', 'PG_LAST_COMMITTED_XACT', 'PG_LISTENING_CHANNELS', 'PG_MY_TEMP_SCHEMA', 'PG_NOTIFICATION_QUEUE_USAGE', 'PG_OPCLASS_IS_VISIBLE', 'PG_OPERATOR_IS_VISIBLE', 'PG_OPFAMILY_IS_VISIBLE', 'PG_OPTIONS_TO_TABLE', 'PG_POSTMASTER_START_TIME', 'PG_SAFE_SNAPSHOT_BLOCKING_PIDS', 'PG_SNAPSHOT_XIP', 'PG_SNAPSHOT_XMAX', 'PG_SNAPSHOT_XMIN', 'PG_STATISTICS_OBJ_IS_VISIBLE', 'PG_TABLESPACE_DATABASES', 'PG_TABLESPACE_LOCATION', 'PG_TABLE_IS_VISIBLE', 'PG_TRIGGER_DEPTH', 'PG_TS_CONFIG_IS_VISIBLE', 'PG_TS_DICT_IS_VISIBLE', 'PG_TS_PARSER_IS_VISIBLE', 'PG_TS_TEMPLATE_IS_VISIBLE', 'PG_TYPEOF', 'PG_TYPE_IS_VISIBLE', 'PG_VISIBLE_IN_SNAPSHOT', 'PG_XACT_COMMIT_TIMESTAMP', 'PG_XACT_COMMIT_TIMESTAMP_ORIGIN', 'PG_XACT_STATUS', 'PQSERVERVERSION', 'ROW_SECURITY_ACTIVE', 'SESSION_USER', 'SHOBJ_DESCRIPTION', 'TO_REGCLASS', 'TO_REGCOLLATION', 'TO_REGNAMESPACE', 'TO_REGOPER', 'TO_REGOPERATOR', 'TO_REGPROC', 'TO_REGPROCEDURE', 'TO_REGROLE', 'TO_REGTYPE', 'TXID_CURRENT', 'TXID_CURRENT_IF_ASSIGNED', 'TXID_CURRENT_SNAPSHOT', 'TXID_SNAPSHOT_XIP', 'TXID_SNAPSHOT_XMAX', 'TXID_SNAPSHOT_XMIN', 'TXID_STATUS', 'TXID_VISIBLE_IN_SNAPSHOT', 'USER', 'VERSION'],\n  // https://www.postgresql.org/docs/14/functions-admin.html\n  sysAdmin: ['BRIN_DESUMMARIZE_RANGE', 'BRIN_SUMMARIZE_NEW_VALUES', 'BRIN_SUMMARIZE_RANGE', 'CONVERT_FROM', 'CURRENT_SETTING', 'GIN_CLEAN_PENDING_LIST', 'PG_ADVISORY_LOCK', 'PG_ADVISORY_LOCK_SHARED', 'PG_ADVISORY_UNLOCK', 'PG_ADVISORY_UNLOCK_ALL', 'PG_ADVISORY_UNLOCK_SHARED', 'PG_ADVISORY_XACT_LOCK', 'PG_ADVISORY_XACT_LOCK_SHARED', 'PG_BACKUP_START_TIME', 'PG_CANCEL_BACKEND', 'PG_COLLATION_ACTUAL_VERSION', 'PG_COLUMN_COMPRESSION', 'PG_COLUMN_SIZE', 'PG_COPY_LOGICAL_REPLICATION_SLOT', 'PG_COPY_PHYSICAL_REPLICATION_SLOT', 'PG_CREATE_LOGICAL_REPLICATION_SLOT', 'PG_CREATE_PHYSICAL_REPLICATION_SLOT', 'PG_CREATE_RESTORE_POINT', 'PG_CURRENT_WAL_FLUSH_LSN', 'PG_CURRENT_WAL_INSERT_LSN', 'PG_CURRENT_WAL_LSN', 'PG_DATABASE_SIZE', 'PG_DROP_REPLICATION_SLOT', 'PG_EXPORT_SNAPSHOT', 'PG_FILENODE_RELATION', 'PG_GET_WAL_REPLAY_PAUSE_STATE', 'PG_IMPORT_SYSTEM_COLLATIONS', 'PG_INDEXES_SIZE', 'PG_IS_IN_BACKUP', 'PG_IS_IN_RECOVERY', 'PG_IS_WAL_REPLAY_PAUSED', 'PG_LAST_WAL_RECEIVE_LSN', 'PG_LAST_WAL_REPLAY_LSN', 'PG_LAST_XACT_REPLAY_TIMESTAMP', 'PG_LOGICAL_EMIT_MESSAGE', 'PG_LOGICAL_SLOT_GET_BINARY_CHANGES', 'PG_LOGICAL_SLOT_GET_CHANGES', 'PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES', 'PG_LOGICAL_SLOT_PEEK_CHANGES', 'PG_LOG_BACKEND_MEMORY_CONTEXTS', 'PG_LS_ARCHIVE_STATUSDIR', 'PG_LS_DIR', 'PG_LS_LOGDIR', 'PG_LS_TMPDIR', 'PG_LS_WALDIR', 'PG_PARTITION_ANCESTORS', 'PG_PARTITION_ROOT', 'PG_PARTITION_TREE', 'PG_PROMOTE', 'PG_READ_BINARY_FILE', 'PG_READ_FILE', 'PG_RELATION_FILENODE', 'PG_RELATION_FILEPATH', 'PG_RELATION_SIZE', 'PG_RELOAD_CONF', 'PG_REPLICATION_ORIGIN_ADVANCE', 'PG_REPLICATION_ORIGIN_CREATE', 'PG_REPLICATION_ORIGIN_DROP', 'PG_REPLICATION_ORIGIN_OID', 'PG_REPLICATION_ORIGIN_PROGRESS', 'PG_REPLICATION_ORIGIN_SESSION_IS_SETUP', 'PG_REPLICATION_ORIGIN_SESSION_PROGRESS', 'PG_REPLICATION_ORIGIN_SESSION_RESET', 'PG_REPLICATION_ORIGIN_SESSION_SETUP', 'PG_REPLICATION_ORIGIN_XACT_RESET', 'PG_REPLICATION_ORIGIN_XACT_SETUP', 'PG_REPLICATION_SLOT_ADVANCE', 'PG_ROTATE_LOGFILE', 'PG_SIZE_BYTES', 'PG_SIZE_PRETTY', 'PG_START_BACKUP', 'PG_STAT_FILE', 'PG_STOP_BACKUP', 'PG_SWITCH_WAL', 'PG_TABLESPACE_SIZE', 'PG_TABLE_SIZE', 'PG_TERMINATE_BACKEND', 'PG_TOTAL_RELATION_SIZE', 'PG_TRY_ADVISORY_LOCK', 'PG_TRY_ADVISORY_LOCK_SHARED', 'PG_TRY_ADVISORY_XACT_LOCK', 'PG_TRY_ADVISORY_XACT_LOCK_SHARED', 'PG_WALFILE_NAME', 'PG_WALFILE_NAME_OFFSET', 'PG_WAL_LSN_DIFF', 'PG_WAL_REPLAY_PAUSE', 'PG_WAL_REPLAY_RESUME', 'SET_CONFIG'],\n  // https://www.postgresql.org/docs/14/functions-trigger.html\n  trigger: ['SUPPRESS_REDUNDANT_UPDATES_TRIGGER', 'TSVECTOR_UPDATE_TRIGGER', 'TSVECTOR_UPDATE_TRIGGER_COLUMN'],\n  // https://www.postgresql.org/docs/14/functions-event-triggers.html\n  eventTrigger: ['PG_EVENT_TRIGGER_DDL_COMMANDS', 'PG_EVENT_TRIGGER_DROPPED_OBJECTS', 'PG_EVENT_TRIGGER_TABLE_REWRITE_OID', 'PG_EVENT_TRIGGER_TABLE_REWRITE_REASON', 'PG_GET_OBJECT_ADDRESS'],\n  // https://www.postgresql.org/docs/14/functions-statistics.html\n  stats: ['PG_MCV_LIST_ITEMS'],\n  cast: ['CAST'],\n  // Parameterized data types\n  // https://www.postgresql.org/docs/current/datatype.html\n  dataTypes: ['BIT', 'BIT VARYING', 'CHARACTER', 'CHARACTER VARYING', 'VARCHAR', 'CHAR', 'DECIMAL', 'NUMERIC', 'TIME', 'TIMESTAMP', 'ENUM']\n});\nexports.functions = functions;\n//# sourceMappingURL=postgresql.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.keywords.js":
/*!*************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.keywords.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://www.postgresql.org/docs/14/sql-keywords-appendix.html\n  all: ['ABORT', 'ABSOLUTE', 'ACCESS', 'ACTION', 'ADD', 'ADMIN', 'AFTER', 'AGGREGATE', 'ALL', // reserved\n  'ALSO', 'ALTER', 'ALWAYS', 'ANALYSE', // reserved\n  'ANALYZE', // reserved\n  'AND', // reserved\n  'ANY', // reserved\n  'ARRAY', // reserved, requires AS\n  'AS', // reserved, requires AS\n  'ASC', // reserved\n  'ASENSITIVE', 'ASSERTION', 'ASSIGNMENT', 'ASYMMETRIC', // reserved\n  'AT', 'ATOMIC', 'ATTACH', 'ATTRIBUTE', 'AUTHORIZATION', // reserved (can be function or type)\n  'BACKWARD', 'BEFORE', 'BEGIN', 'BETWEEN', // (cannot be function or type)\n  'BIGINT', // (cannot be function or type)\n  'BINARY', // reserved (can be function or type)\n  'BIT', // (cannot be function or type)\n  'BOOLEAN', // (cannot be function or type)\n  'BOTH', // reserved\n  'BREADTH', 'BY', 'CACHE', 'CALL', 'CALLED', 'CASCADE', 'CASCADED', 'CASE', // reserved\n  'CAST', // reserved\n  'CATALOG', 'CHAIN', 'CHAR', // (cannot be function or type), requires AS\n  'CHARACTER', // (cannot be function or type), requires AS\n  'CHARACTERISTICS', 'CHECK', // reserved\n  'CHECKPOINT', 'CLASS', 'CLOSE', 'CLUSTER', 'COALESCE', // (cannot be function or type)\n  'COLLATE', // reserved\n  'COLLATION', // reserved (can be function or type)\n  'COLUMN', // reserved\n  'COLUMNS', 'COMMENT', 'COMMENTS', 'COMMIT', 'COMMITTED', 'COMPRESSION', 'CONCURRENTLY', // reserved (can be function or type)\n  'CONFIGURATION', 'CONFLICT', 'CONNECTION', 'CONSTRAINT', // reserved\n  'CONSTRAINTS', 'CONTENT', 'CONTINUE', 'CONVERSION', 'COPY', 'COST', 'CREATE', // reserved, requires AS\n  'CROSS', // reserved (can be function or type)\n  'CSV', 'CUBE', 'CURRENT', 'CURRENT_CATALOG', // reserved\n  'CURRENT_DATE', // reserved\n  'CURRENT_ROLE', // reserved\n  'CURRENT_SCHEMA', // reserved (can be function or type)\n  'CURRENT_TIME', // reserved\n  'CURRENT_TIMESTAMP', // reserved\n  'CURRENT_USER', // reserved\n  'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DAY', // requires AS\n  'DEALLOCATE', 'DEC', // (cannot be function or type)\n  'DECIMAL', // (cannot be function or type)\n  'DECLARE', 'DEFAULT', // reserved\n  'DEFAULTS', 'DEFERRABLE', // reserved\n  'DEFERRED', 'DEFINER', 'DELETE', 'DELIMITER', 'DELIMITERS', 'DEPENDS', 'DEPTH', 'DESC', // reserved\n  'DETACH', 'DICTIONARY', 'DISABLE', 'DISCARD', 'DISTINCT', // reserved\n  'DO', // reserved\n  'DOCUMENT', 'DOMAIN', 'DOUBLE', 'DROP', 'EACH', 'ELSE', // reserved\n  'ENABLE', 'ENCODING', 'ENCRYPTED', 'END', // reserved\n  'ENUM', 'ESCAPE', 'EVENT', 'EXCEPT', // reserved, requires AS\n  'EXCLUDE', 'EXCLUDING', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', // (cannot be function or type)\n  'EXPLAIN', 'EXPRESSION', 'EXTENSION', 'EXTERNAL', 'EXTRACT', // (cannot be function or type)\n  'FALSE', // reserved\n  'FAMILY', 'FETCH', // reserved, requires AS\n  'FILTER', // requires AS\n  'FINALIZE', 'FIRST', 'FLOAT', // (cannot be function or type)\n  'FOLLOWING', 'FOR', // reserved, requires AS\n  'FORCE', 'FOREIGN', // reserved\n  'FORWARD', 'FREEZE', // reserved (can be function or type)\n  'FROM', // reserved, requires AS\n  'FULL', // reserved (can be function or type)\n  'FUNCTION', 'FUNCTIONS', 'GENERATED', 'GLOBAL', 'GRANT', // reserved, requires AS\n  'GRANTED', 'GREATEST', // (cannot be function or type)\n  'GROUP', // reserved, requires AS\n  'GROUPING', // (cannot be function or type)\n  'GROUPS', 'HANDLER', 'HAVING', // reserved, requires AS\n  'HEADER', 'HOLD', 'HOUR', // requires AS\n  'IDENTITY', 'IF', 'ILIKE', // reserved (can be function or type)\n  'IMMEDIATE', 'IMMUTABLE', 'IMPLICIT', 'IMPORT', 'IN', // reserved\n  'INCLUDE', 'INCLUDING', 'INCREMENT', 'INDEX', 'INDEXES', 'INHERIT', 'INHERITS', 'INITIALLY', // reserved\n  'INLINE', 'INNER', // reserved (can be function or type)\n  'INOUT', // (cannot be function or type)\n  'INPUT', 'INSENSITIVE', 'INSERT', 'INSTEAD', 'INT', // (cannot be function or type)\n  'INTEGER', // (cannot be function or type)\n  'INTERSECT', // reserved, requires AS\n  'INTERVAL', // (cannot be function or type)\n  'INTO', // reserved, requires AS\n  'INVOKER', 'IS', // reserved (can be function or type)\n  'ISNULL', // reserved (can be function or type), requires AS\n  'ISOLATION', 'JOIN', // reserved (can be function or type)\n  'KEY', 'LABEL', 'LANGUAGE', 'LARGE', 'LAST', 'LATERAL', // reserved\n  'LEADING', // reserved\n  'LEAKPROOF', 'LEAST', // (cannot be function or type)\n  'LEFT', // reserved (can be function or type)\n  'LEVEL', 'LIKE', // reserved (can be function or type)\n  'LIMIT', // reserved, requires AS\n  'LISTEN', 'LOAD', 'LOCAL', 'LOCALTIME', // reserved\n  'LOCALTIMESTAMP', // reserved\n  'LOCATION', 'LOCK', 'LOCKED', 'LOGGED', 'MAPPING', 'MATCH', 'MATERIALIZED', 'MAXVALUE', 'METHOD', 'MINUTE', // requires AS\n  'MINVALUE', 'MODE', 'MONTH', // requires AS\n  'MOVE', 'NAME', 'NAMES', 'NATIONAL', // (cannot be function or type)\n  'NATURAL', // reserved (can be function or type)\n  'NCHAR', // (cannot be function or type)\n  'NEW', 'NEXT', 'NFC', 'NFD', 'NFKC', 'NFKD', 'NO', 'NONE', // (cannot be function or type)\n  'NORMALIZE', // (cannot be function or type)\n  'NORMALIZED', 'NOT', // reserved\n  'NOTHING', 'NOTIFY', 'NOTNULL', // reserved (can be function or type), requires AS\n  'NOWAIT', 'NULL', // reserved\n  'NULLIF', // (cannot be function or type)\n  'NULLS', 'NUMERIC', // (cannot be function or type)\n  'OBJECT', 'OF', 'OFF', 'OFFSET', // reserved, requires AS\n  'OIDS', 'OLD', 'ON', // reserved, requires AS\n  'ONLY', // reserved\n  'OPERATOR', 'OPTION', 'OPTIONS', 'OR', // reserved\n  'ORDER', // reserved, requires AS\n  'ORDINALITY', 'OTHERS', 'OUT', // (cannot be function or type)\n  'OUTER', // reserved (can be function or type)\n  'OVER', // requires AS\n  'OVERLAPS', // reserved (can be function or type), requires AS\n  'OVERLAY', // (cannot be function or type)\n  'OVERRIDING', 'OWNED', 'OWNER', 'PARALLEL', 'PARSER', 'PARTIAL', 'PARTITION', 'PASSING', 'PASSWORD', 'PLACING', // reserved\n  'PLANS', 'POLICY', 'POSITION', // (cannot be function or type)\n  'PRECEDING', 'PRECISION', // (cannot be function or type), requires AS\n  'PREPARE', 'PREPARED', 'PRESERVE', 'PRIMARY', // reserved\n  'PRIOR', 'PRIVILEGES', 'PROCEDURAL', 'PROCEDURE', 'PROCEDURES', 'PROGRAM', 'PUBLICATION', 'QUOTE', 'RANGE', 'READ', 'REAL', // (cannot be function or type)\n  'REASSIGN', 'RECHECK', 'RECURSIVE', 'REF', 'REFERENCES', // reserved\n  'REFERENCING', 'REFRESH', 'REINDEX', 'RELATIVE', 'RELEASE', 'RENAME', 'REPEATABLE', 'REPLACE', 'REPLICA', 'RESET', 'RESTART', 'RESTRICT', 'RETURN', 'RETURNING', // reserved, requires AS\n  'RETURNS', 'REVOKE', 'RIGHT', // reserved (can be function or type)\n  'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROUTINES', 'ROW', // (cannot be function or type)\n  'ROWS', 'RULE', 'SAVEPOINT', 'SCHEMA', 'SCHEMAS', 'SCROLL', 'SEARCH', 'SECOND', // requires AS\n  'SECURITY', 'SELECT', // reserved\n  'SEQUENCE', 'SEQUENCES', 'SERIALIZABLE', 'SERVER', 'SESSION', 'SESSION_USER', // reserved\n  'SET', 'SETOF', // (cannot be function or type)\n  'SETS', 'SHARE', 'SHOW', 'SIMILAR', // reserved (can be function or type)\n  'SIMPLE', 'SKIP', 'SMALLINT', // (cannot be function or type)\n  'SNAPSHOT', 'SOME', // reserved\n  'SQL', 'STABLE', 'STANDALONE', 'START', 'STATEMENT', 'STATISTICS', 'STDIN', 'STDOUT', 'STORAGE', 'STORED', 'STRICT', 'STRIP', 'SUBSCRIPTION', 'SUBSTRING', // (cannot be function or type)\n  'SUPPORT', 'SYMMETRIC', // reserved\n  'SYSID', 'SYSTEM', 'TABLE', // reserved\n  'TABLES', 'TABLESAMPLE', // reserved (can be function or type)\n  'TABLESPACE', 'TEMP', 'TEMPLATE', 'TEMPORARY', 'TEXT', 'THEN', // reserved\n  'TIES', 'TIME', // (cannot be function or type)\n  'TIMESTAMP', // (cannot be function or type)\n  'TO', // reserved, requires AS\n  'TRAILING', // reserved\n  'TRANSACTION', 'TRANSFORM', 'TREAT', // (cannot be function or type)\n  'TRIGGER', 'TRIM', // (cannot be function or type)\n  'TRUE', // reserved\n  'TRUNCATE', 'TRUSTED', 'TYPE', 'TYPES', 'UESCAPE', 'UNBOUNDED', 'UNCOMMITTED', 'UNENCRYPTED', 'UNION', // reserved, requires AS\n  'UNIQUE', // reserved\n  'UNKNOWN', 'UNLISTEN', 'UNLOGGED', 'UNTIL', 'UPDATE', 'USER', // reserved\n  'USING', // reserved\n  'VACUUM', 'VALID', 'VALIDATE', 'VALIDATOR', 'VALUE', 'VALUES', // (cannot be function or type)\n  'VARCHAR', // (cannot be function or type)\n  'VARIADIC', // reserved\n  'VARYING', // requires AS\n  'VERBOSE', // reserved (can be function or type)\n  'VERSION', 'VIEW', 'VIEWS', 'VOLATILE', 'WHEN', // reserved\n  'WHERE', // reserved, requires AS\n  'WHITESPACE', 'WINDOW', // reserved, requires AS\n  'WITH', // reserved, requires AS\n  'WITHIN', // requires AS\n  'WITHOUT', // requires AS\n  'WORK', 'WRAPPER', 'WRITE', 'XML', 'XMLATTRIBUTES', // (cannot be function or type)\n  'XMLCONCAT', // (cannot be function or type)\n  'XMLELEMENT', // (cannot be function or type)\n  'XMLEXISTS', // (cannot be function or type)\n  'XMLFOREST', // (cannot be function or type)\n  'XMLNAMESPACES', // (cannot be function or type)\n  'XMLPARSE', // (cannot be function or type)\n  'XMLPI', // (cannot be function or type)\n  'XMLROOT', // (cannot be function or type)\n  'XMLSERIALIZE', // (cannot be function or type)\n  'XMLTABLE', // (cannot be function or type)\n  'YEAR', // requires AS\n  'YES', 'ZONE']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=postgresql.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.formatter.js":
/*!**********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.formatter.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _redshift = __webpack_require__(/*! ./redshift.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.functions.js\");\n\nvar _redshift2 = __webpack_require__(/*! ./redshift.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE [OR REPLACE | MATERIALIZED] VIEW', 'CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ALTER TABLE APPEND', 'ADD [COLUMN]', 'DROP [COLUMN]', 'RENAME TO', 'RENAME COLUMN', 'ALTER COLUMN', 'TYPE', // for alter column\n'ENCODE', // for alter column\n// https://docs.aws.amazon.com/redshift/latest/dg/c_SQL_commands.html\n'ABORT', 'ALTER DATABASE', 'ALTER DATASHARE', 'ALTER DEFAULT PRIVILEGES', 'ALTER GROUP', 'ALTER MATERIALIZED VIEW', 'ALTER PROCEDURE', 'ALTER SCHEMA', 'ALTER USER', 'ANALYSE', 'ANALYZE', 'ANALYSE COMPRESSION', 'ANALYZE COMPRESSION', 'BEGIN', 'CALL', 'CANCEL', 'CLOSE', 'COMMENT', 'COMMIT', 'COPY', 'CREATE DATABASE', 'CREATE DATASHARE', 'CREATE EXTERNAL FUNCTION', 'CREATE EXTERNAL SCHEMA', 'CREATE EXTERNAL TABLE', 'CREATE FUNCTION', 'CREATE GROUP', 'CREATE LIBRARY', 'CREATE MODEL', 'CREATE PROCEDURE', 'CREATE SCHEMA', 'CREATE USER', 'DEALLOCATE', 'DECLARE', 'DESC DATASHARE', 'DROP DATABASE', 'DROP DATASHARE', 'DROP FUNCTION', 'DROP GROUP', 'DROP LIBRARY', 'DROP MODEL', 'DROP MATERIALIZED VIEW', 'DROP PROCEDURE', 'DROP SCHEMA', 'DROP USER', 'DROP VIEW', 'DROP', 'EXECUTE', 'EXPLAIN', 'FETCH', 'GRANT', 'LOCK', 'PREPARE', 'REFRESH MATERIALIZED VIEW', 'RESET', 'REVOKE', 'ROLLBACK', 'SELECT INTO', 'SET SESSION AUTHORIZATION', 'SET SESSION CHARACTERISTICS', 'SHOW', 'SHOW EXTERNAL TABLE', 'SHOW MODEL', 'SHOW DATASHARES', 'SHOW PROCEDURE', 'SHOW TABLE', 'SHOW VIEW', 'START TRANSACTION', 'UNLOAD', 'VACUUM', // other\n'ALTER COLUMN']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL]', 'EXCEPT', 'INTERSECT', 'MINUS']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)([// https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n'NULL AS', // https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html\n'DATA CATALOG', 'HIVE METASTORE', // in window specifications\n'{ROWS | RANGE} BETWEEN']); // https://docs.aws.amazon.com/redshift/latest/dg/cm_chap_SQLCommandRef.html\n\nvar RedshiftFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(RedshiftFormatter, _Formatter);\n\n  var _super = _createSuper(RedshiftFormatter);\n\n  function RedshiftFormatter() {\n    _classCallCheck(this, RedshiftFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RedshiftFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _redshift2.keywords,\n        reservedFunctionNames: _redshift.functions,\n        stringTypes: [\"''-qq\"],\n        identTypes: [\"\\\"\\\"-qq\"],\n        identChars: {\n          first: '#'\n        },\n        paramTypes: {\n          numbered: ['$']\n        },\n        operators: ['^', '%', '@', '|/', '||/', '&', '|', // '#', conflicts with first char of identifier\n        '~', '<<', '>>', '||', '::']\n      });\n    }\n  }]);\n\n  return RedshiftFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = RedshiftFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=redshift.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.functions.js":
/*!**********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.functions.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Aggregate_Functions.html\n  aggregate: ['ANY_VALUE', 'APPROXIMATE PERCENTILE_DISC', 'AVG', 'COUNT', 'LISTAGG', 'MAX', 'MEDIAN', 'MIN', 'PERCENTILE_CONT', 'STDDEV_SAMP', 'STDDEV_POP', 'SUM', 'VAR_SAMP', 'VAR_POP'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Array_Functions.html\n  array: ['array', 'array_concat', 'array_flatten', 'get_array_length', 'split_to_array', 'subarray'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_bitwise_aggregate_functions.html\n  bitwise: ['BIT_AND', 'BIT_OR', 'BOOL_AND', 'BOOL_OR'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_conditional_expressions.html\n  conditional: ['COALESCE', 'DECODE', 'GREATEST', 'LEAST', 'NVL', 'NVL2', 'NULLIF'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/Date_functions_header.html\n  dateTime: ['ADD_MONTHS', 'AT TIME ZONE', 'CONVERT_TIMEZONE', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATE_CMP', 'DATE_CMP_TIMESTAMP', 'DATE_CMP_TIMESTAMPTZ', 'DATE_PART_YEAR', 'DATEADD', 'DATEDIFF', 'DATE_PART', 'DATE_TRUNC', 'EXTRACT', 'GETDATE', 'INTERVAL_CMP', 'LAST_DAY', 'MONTHS_BETWEEN', 'NEXT_DAY', 'SYSDATE', 'TIMEOFDAY', 'TIMESTAMP_CMP', 'TIMESTAMP_CMP_DATE', 'TIMESTAMP_CMP_TIMESTAMPTZ', 'TIMESTAMPTZ_CMP', 'TIMESTAMPTZ_CMP_DATE', 'TIMESTAMPTZ_CMP_TIMESTAMP', 'TIMEZONE', 'TO_TIMESTAMP', 'TRUNC'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/geospatial-functions.html\n  spatial: ['AddBBox', 'DropBBox', 'GeometryType', 'ST_AddPoint', 'ST_Angle', 'ST_Area', 'ST_AsBinary', 'ST_AsEWKB', 'ST_AsEWKT', 'ST_AsGeoJSON', 'ST_AsText', 'ST_Azimuth', 'ST_Boundary', 'ST_Collect', 'ST_Contains', 'ST_ContainsProperly', 'ST_ConvexHull', 'ST_CoveredBy', 'ST_Covers', 'ST_Crosses', 'ST_Dimension', 'ST_Disjoint', 'ST_Distance', 'ST_DistanceSphere', 'ST_DWithin', 'ST_EndPoint', 'ST_Envelope', 'ST_Equals', 'ST_ExteriorRing', 'ST_Force2D', 'ST_Force3D', 'ST_Force3DM', 'ST_Force3DZ', 'ST_Force4D', 'ST_GeometryN', 'ST_GeometryType', 'ST_GeomFromEWKB', 'ST_GeomFromEWKT', 'ST_GeomFromText', 'ST_GeomFromWKB', 'ST_InteriorRingN', 'ST_Intersects', 'ST_IsPolygonCCW', 'ST_IsPolygonCW', 'ST_IsClosed', 'ST_IsCollection', 'ST_IsEmpty', 'ST_IsSimple', 'ST_IsValid', 'ST_Length', 'ST_LengthSphere', 'ST_Length2D', 'ST_LineFromMultiPoint', 'ST_LineInterpolatePoint', 'ST_M', 'ST_MakeEnvelope', 'ST_MakeLine', 'ST_MakePoint', 'ST_MakePolygon', 'ST_MemSize', 'ST_MMax', 'ST_MMin', 'ST_Multi', 'ST_NDims', 'ST_NPoints', 'ST_NRings', 'ST_NumGeometries', 'ST_NumInteriorRings', 'ST_NumPoints', 'ST_Perimeter', 'ST_Perimeter2D', 'ST_Point', 'ST_PointN', 'ST_Points', 'ST_Polygon', 'ST_RemovePoint', 'ST_Reverse', 'ST_SetPoint', 'ST_SetSRID', 'ST_Simplify', 'ST_SRID', 'ST_StartPoint', 'ST_Touches', 'ST_Within', 'ST_X', 'ST_XMax', 'ST_XMin', 'ST_Y', 'ST_YMax', 'ST_YMin', 'ST_Z', 'ST_ZMax', 'ST_ZMin', 'SupportsBBox'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/hash-functions.html\n  hash: ['CHECKSUM', 'FUNC_SHA1', 'FNV_HASH', 'MD5', 'SHA', 'SHA1', 'SHA2'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/hyperloglog-functions.html\n  hyperLogLog: ['HLL', 'HLL_CREATE_SKETCH', 'HLL_CARDINALITY', 'HLL_COMBINE'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/json-functions.html\n  json: ['IS_VALID_JSON', 'IS_VALID_JSON_ARRAY', 'JSON_ARRAY_LENGTH', 'JSON_EXTRACT_ARRAY_ELEMENT_TEXT', 'JSON_EXTRACT_PATH_TEXT', 'JSON_PARSE', 'JSON_SERIALIZE'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/Math_functions.html\n  math: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'ATAN2', 'CBRT', 'CEILING', 'CEIL', 'COS', 'COT', 'DEGREES', 'DEXP', 'DLOG1', 'DLOG10', 'EXP', 'FLOOR', 'LN', 'LOG', 'MOD', 'PI', 'POWER', 'RADIANS', 'RANDOM', 'ROUND', 'SIN', 'SIGN', 'SQRT', 'TAN', 'TO_HEX', 'TRUNC'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/ml-function.html\n  machineLearning: ['EXPLAIN_MODEL'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/String_functions_header.html\n  string: ['ASCII', 'BPCHARCMP', 'BTRIM', 'BTTEXT_PATTERN_CMP', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHARINDEX', 'CHR', 'COLLATE', 'CONCAT', 'CRC32', 'DIFFERENCE', 'INITCAP', 'LEFT', 'RIGHT', 'LEN', 'LENGTH', 'LOWER', 'LPAD', 'RPAD', 'LTRIM', 'OCTETINDEX', 'OCTET_LENGTH', 'POSITION', 'QUOTE_IDENT', 'QUOTE_LITERAL', 'REGEXP_COUNT', 'REGEXP_INSTR', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPEAT', 'REPLACE', 'REPLICATE', 'REVERSE', 'RTRIM', 'SOUNDEX', 'SPLIT_PART', 'STRPOS', 'STRTOL', 'SUBSTRING', 'TEXTLEN', 'TRANSLATE', 'TRIM', 'UPPER'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Type_Info_Functions.html\n  superType: ['decimal_precision', 'decimal_scale', 'is_array', 'is_bigint', 'is_boolean', 'is_char', 'is_decimal', 'is_float', 'is_integer', 'is_object', 'is_scalar', 'is_smallint', 'is_varchar', 'json_typeof'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Window_functions.html\n  window: ['AVG', 'COUNT', 'CUME_DIST', 'DENSE_RANK', 'FIRST_VALUE', 'LAST_VALUE', 'LAG', 'LEAD', 'LISTAGG', 'MAX', 'MEDIAN', 'MIN', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'RANK', 'RATIO_TO_REPORT', 'ROW_NUMBER', 'STDDEV_SAMP', 'STDDEV_POP', 'SUM', 'VAR_SAMP', 'VAR_POP'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_Data_type_formatting.html\n  dataType: ['CAST', 'CONVERT', 'TO_CHAR', 'TO_DATE', 'TO_NUMBER', 'TEXT_TO_INT_ALT', 'TEXT_TO_NUMERIC_ALT'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_System_administration_functions.html\n  sysAdmin: ['CHANGE_QUERY_PRIORITY', 'CHANGE_SESSION_PRIORITY', 'CHANGE_USER_PRIORITY', 'CURRENT_SETTING', 'PG_CANCEL_BACKEND', 'PG_TERMINATE_BACKEND', 'REBOOT_CLUSTER', 'SET_CONFIG'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_System_information_functions.html\n  sysInfo: ['CURRENT_AWS_ACCOUNT', 'CURRENT_DATABASE', 'CURRENT_NAMESPACE', 'CURRENT_SCHEMA', 'CURRENT_SCHEMAS', 'CURRENT_USER', 'CURRENT_USER_ID', 'HAS_ASSUMEROLE_PRIVILEGE', 'HAS_DATABASE_PRIVILEGE', 'HAS_SCHEMA_PRIVILEGE', 'HAS_TABLE_PRIVILEGE', 'PG_BACKEND_PID', 'PG_GET_COLS', 'PG_GET_GRANTEE_BY_IAM_ROLE', 'PG_GET_IAM_ROLE_BY_USER', 'PG_GET_LATE_BINDING_VIEW_COLS', 'PG_LAST_COPY_COUNT', 'PG_LAST_COPY_ID', 'PG_LAST_UNLOAD_ID', 'PG_LAST_QUERY_ID', 'PG_LAST_UNLOAD_COUNT', 'SESSION_USER', 'SLICE_NUM', 'USER', 'VERSION'],\n  dataTypes: ['DECIMAL', 'NUMERIC', 'CHAR', 'CHARACTER', 'VARCHAR', 'CHARACTER VARYING', 'NCHAR', 'NVARCHAR', 'VARBYTE']\n});\nexports.functions = functions;\n//# sourceMappingURL=redshift.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.keywords.js":
/*!*********************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.keywords.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html\n  standard: ['AES128', 'AES256', 'ALL', 'ALLOWOVERWRITE', 'ANY', 'ARRAY', 'AS', 'ASC', 'AUTHORIZATION', 'BACKUP', 'BETWEEN', 'BINARY', 'BOTH', 'CHECK', 'COLUMN', 'CONSTRAINT', 'CREATE', 'CROSS', 'DEFAULT', 'DEFERRABLE', 'DEFLATE', 'DEFRAG', 'DESC', 'DISABLE', 'DISTINCT', 'DO', 'ENABLE', 'ENCODE', 'ENCRYPT', 'ENCRYPTION', 'EXPLICIT', 'FALSE', 'FOR', 'FOREIGN', 'FREEZE', 'FROM', 'FULL', 'GLOBALDICT256', 'GLOBALDICT64K', 'GROUP', 'IDENTITY', 'IGNORE', 'ILIKE', 'IN', 'INITIALLY', 'INNER', 'INTO', 'IS', 'ISNULL', 'LANGUAGE', 'LEADING', 'LIKE', 'LIMIT', 'LOCALTIME', 'LOCALTIMESTAMP', 'LUN', 'LUNS', 'MINUS', 'NATURAL', 'NEW', 'NOT', 'NOTNULL', 'NULL', 'NULLS', 'OFF', 'OFFLINE', 'OFFSET', 'OID', 'OLD', 'ON', 'ONLY', 'OPEN', 'ORDER', 'OUTER', 'OVERLAPS', 'PARALLEL', 'PARTITION', 'PERCENT', 'PERMISSIONS', 'PLACING', 'PRIMARY', 'RECOVER', 'REFERENCES', 'REJECTLOG', 'RESORT', 'RESPECT', 'RESTORE', 'SIMILAR', 'SNAPSHOT', 'SOME', 'SYSTEM', 'TABLE', 'TAG', 'TDES', 'THEN', 'TIMESTAMP', 'TO', 'TOP', 'TRAILING', 'TRUE', 'UNIQUE', 'USING', 'VERBOSE', 'WALLET', 'WITHOUT'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n  dataConversionParams: ['ACCEPTANYDATE', 'ACCEPTINVCHARS', 'BLANKSASNULL', 'DATEFORMAT', 'EMPTYASNULL', 'ENCODING', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'REMOVEQUOTES', 'ROUNDEC', 'TIMEFORMAT', 'TRIMBLANKS', 'TRUNCATECOLUMNS'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-load.html\n  dataLoadParams: ['COMPROWS', 'COMPUPDATE', 'MAXERROR', 'NOLOAD', 'STATUPDATE'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-format.html\n  dataFormatParams: ['FORMAT', 'CSV', 'DELIMITER', 'FIXEDWIDTH', 'SHAPEFILE', 'AVRO', 'JSON', 'PARQUET', 'ORC'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-authorization.html\n  copyAuthParams: ['ACCESS_KEY_ID', 'CREDENTIALS', 'ENCRYPTED', 'IAM_ROLE', 'MASTER_SYMMETRIC_KEY', 'SECRET_ACCESS_KEY', 'SESSION_TOKEN'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-file-compression.html\n  copyCompressionParams: ['BZIP2', 'GZIP', 'LZOP', 'ZSTD'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_COPY-alphabetical-parm-list.html\n  copyMiscParams: ['MANIFEST', 'READRATIO', 'REGION', 'SSH'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html\n  compressionEncodings: ['RAW', 'AZ64', 'BYTEDICT', 'DELTA', 'DELTA32K', 'LZO', 'MOSTLY8', 'MOSTLY16', 'MOSTLY32', 'RUNLENGTH', 'TEXT255', 'TEXT32K'],\n  misc: [// CREATE EXTERNAL SCHEMA (https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html)\n  'CATALOG_ROLE', 'SECRET_ARN', 'EXTERNAL', // https://docs.aws.amazon.com/redshift/latest/dg/c_choosing_dist_sort.html\n  'AUTO', 'EVEN', 'KEY', 'PREDICATE', // ANALYZE | ANALYSE (https://docs.aws.amazon.com/redshift/latest/dg/r_ANALYZE.html)\n  // unknown\n  'COMPRESSION'],\n\n  /**\n   * Other keywords not included:\n   * STL: https://docs.aws.amazon.com/redshift/latest/dg/c_intro_STL_tables.html\n   * SVCS: https://docs.aws.amazon.com/redshift/latest/dg/svcs_views.html\n   * SVL: https://docs.aws.amazon.com/redshift/latest/dg/svl_views.html\n   * SVV: https://docs.aws.amazon.com/redshift/latest/dg/svv_views.html\n   */\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_Character_types.html#r_Character_types-text-and-bpchar-types\n  dataTypes: ['BPCHAR', 'TEXT']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=redshift.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9yZWRzaGlmdC9yZWRzaGlmdC5rZXl3b3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvcmVkc2hpZnQvcmVkc2hpZnQua2V5d29yZHMuanM/M2VjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBrZXl3b3JkcyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvcl9wZ19rZXl3b3Jkcy5odG1sXG4gIHN0YW5kYXJkOiBbJ0FFUzEyOCcsICdBRVMyNTYnLCAnQUxMJywgJ0FMTE9XT1ZFUldSSVRFJywgJ0FOWScsICdBUlJBWScsICdBUycsICdBU0MnLCAnQVVUSE9SSVpBVElPTicsICdCQUNLVVAnLCAnQkVUV0VFTicsICdCSU5BUlknLCAnQk9USCcsICdDSEVDSycsICdDT0xVTU4nLCAnQ09OU1RSQUlOVCcsICdDUkVBVEUnLCAnQ1JPU1MnLCAnREVGQVVMVCcsICdERUZFUlJBQkxFJywgJ0RFRkxBVEUnLCAnREVGUkFHJywgJ0RFU0MnLCAnRElTQUJMRScsICdESVNUSU5DVCcsICdETycsICdFTkFCTEUnLCAnRU5DT0RFJywgJ0VOQ1JZUFQnLCAnRU5DUllQVElPTicsICdFWFBMSUNJVCcsICdGQUxTRScsICdGT1InLCAnRk9SRUlHTicsICdGUkVFWkUnLCAnRlJPTScsICdGVUxMJywgJ0dMT0JBTERJQ1QyNTYnLCAnR0xPQkFMRElDVDY0SycsICdHUk9VUCcsICdJREVOVElUWScsICdJR05PUkUnLCAnSUxJS0UnLCAnSU4nLCAnSU5JVElBTExZJywgJ0lOTkVSJywgJ0lOVE8nLCAnSVMnLCAnSVNOVUxMJywgJ0xBTkdVQUdFJywgJ0xFQURJTkcnLCAnTElLRScsICdMSU1JVCcsICdMT0NBTFRJTUUnLCAnTE9DQUxUSU1FU1RBTVAnLCAnTFVOJywgJ0xVTlMnLCAnTUlOVVMnLCAnTkFUVVJBTCcsICdORVcnLCAnTk9UJywgJ05PVE5VTEwnLCAnTlVMTCcsICdOVUxMUycsICdPRkYnLCAnT0ZGTElORScsICdPRkZTRVQnLCAnT0lEJywgJ09MRCcsICdPTicsICdPTkxZJywgJ09QRU4nLCAnT1JERVInLCAnT1VURVInLCAnT1ZFUkxBUFMnLCAnUEFSQUxMRUwnLCAnUEFSVElUSU9OJywgJ1BFUkNFTlQnLCAnUEVSTUlTU0lPTlMnLCAnUExBQ0lORycsICdQUklNQVJZJywgJ1JFQ09WRVInLCAnUkVGRVJFTkNFUycsICdSRUpFQ1RMT0cnLCAnUkVTT1JUJywgJ1JFU1BFQ1QnLCAnUkVTVE9SRScsICdTSU1JTEFSJywgJ1NOQVBTSE9UJywgJ1NPTUUnLCAnU1lTVEVNJywgJ1RBQkxFJywgJ1RBRycsICdUREVTJywgJ1RIRU4nLCAnVElNRVNUQU1QJywgJ1RPJywgJ1RPUCcsICdUUkFJTElORycsICdUUlVFJywgJ1VOSVFVRScsICdVU0lORycsICdWRVJCT1NFJywgJ1dBTExFVCcsICdXSVRIT1VUJ10sXG4gIC8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvY29weS1wYXJhbWV0ZXJzLWRhdGEtY29udmVyc2lvbi5odG1sXG4gIGRhdGFDb252ZXJzaW9uUGFyYW1zOiBbJ0FDQ0VQVEFOWURBVEUnLCAnQUNDRVBUSU5WQ0hBUlMnLCAnQkxBTktTQVNOVUxMJywgJ0RBVEVGT1JNQVQnLCAnRU1QVFlBU05VTEwnLCAnRU5DT0RJTkcnLCAnRVNDQVBFJywgJ0VYUExJQ0lUX0lEUycsICdGSUxMUkVDT1JEJywgJ0lHTk9SRUJMQU5LTElORVMnLCAnSUdOT1JFSEVBREVSJywgJ1JFTU9WRVFVT1RFUycsICdST1VOREVDJywgJ1RJTUVGT1JNQVQnLCAnVFJJTUJMQU5LUycsICdUUlVOQ0FURUNPTFVNTlMnXSxcbiAgLy8gaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL3JlZHNoaWZ0L2xhdGVzdC9kZy9jb3B5LXBhcmFtZXRlcnMtZGF0YS1sb2FkLmh0bWxcbiAgZGF0YUxvYWRQYXJhbXM6IFsnQ09NUFJPV1MnLCAnQ09NUFVQREFURScsICdNQVhFUlJPUicsICdOT0xPQUQnLCAnU1RBVFVQREFURSddLFxuICAvLyBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vcmVkc2hpZnQvbGF0ZXN0L2RnL2NvcHktcGFyYW1ldGVycy1kYXRhLWZvcm1hdC5odG1sXG4gIGRhdGFGb3JtYXRQYXJhbXM6IFsnRk9STUFUJywgJ0NTVicsICdERUxJTUlURVInLCAnRklYRURXSURUSCcsICdTSEFQRUZJTEUnLCAnQVZSTycsICdKU09OJywgJ1BBUlFVRVQnLCAnT1JDJ10sXG4gIC8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvY29weS1wYXJhbWV0ZXJzLWF1dGhvcml6YXRpb24uaHRtbFxuICBjb3B5QXV0aFBhcmFtczogWydBQ0NFU1NfS0VZX0lEJywgJ0NSRURFTlRJQUxTJywgJ0VOQ1JZUFRFRCcsICdJQU1fUk9MRScsICdNQVNURVJfU1lNTUVUUklDX0tFWScsICdTRUNSRVRfQUNDRVNTX0tFWScsICdTRVNTSU9OX1RPS0VOJ10sXG4gIC8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvY29weS1wYXJhbWV0ZXJzLWZpbGUtY29tcHJlc3Npb24uaHRtbFxuICBjb3B5Q29tcHJlc3Npb25QYXJhbXM6IFsnQlpJUDInLCAnR1pJUCcsICdMWk9QJywgJ1pTVEQnXSxcbiAgLy8gaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL3JlZHNoaWZ0L2xhdGVzdC9kZy9yX0NPUFktYWxwaGFiZXRpY2FsLXBhcm0tbGlzdC5odG1sXG4gIGNvcHlNaXNjUGFyYW1zOiBbJ01BTklGRVNUJywgJ1JFQURSQVRJTycsICdSRUdJT04nLCAnU1NIJ10sXG4gIC8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvY19Db21wcmVzc2lvbl9lbmNvZGluZ3MuaHRtbFxuICBjb21wcmVzc2lvbkVuY29kaW5nczogWydSQVcnLCAnQVo2NCcsICdCWVRFRElDVCcsICdERUxUQScsICdERUxUQTMySycsICdMWk8nLCAnTU9TVExZOCcsICdNT1NUTFkxNicsICdNT1NUTFkzMicsICdSVU5MRU5HVEgnLCAnVEVYVDI1NScsICdURVhUMzJLJ10sXG4gIG1pc2M6IFsvLyBDUkVBVEUgRVhURVJOQUwgU0NIRU1BIChodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vcmVkc2hpZnQvbGF0ZXN0L2RnL3JfQ1JFQVRFX0VYVEVSTkFMX1NDSEVNQS5odG1sKVxuICAnQ0FUQUxPR19ST0xFJywgJ1NFQ1JFVF9BUk4nLCAnRVhURVJOQUwnLCAvLyBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vcmVkc2hpZnQvbGF0ZXN0L2RnL2NfY2hvb3NpbmdfZGlzdF9zb3J0Lmh0bWxcbiAgJ0FVVE8nLCAnRVZFTicsICdLRVknLCAnUFJFRElDQVRFJywgLy8gQU5BTFlaRSB8IEFOQUxZU0UgKGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvcl9BTkFMWVpFLmh0bWwpXG4gIC8vIHVua25vd25cbiAgJ0NPTVBSRVNTSU9OJ10sXG5cbiAgLyoqXG4gICAqIE90aGVyIGtleXdvcmRzIG5vdCBpbmNsdWRlZDpcbiAgICogU1RMOiBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vcmVkc2hpZnQvbGF0ZXN0L2RnL2NfaW50cm9fU1RMX3RhYmxlcy5odG1sXG4gICAqIFNWQ1M6IGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvc3Zjc192aWV3cy5odG1sXG4gICAqIFNWTDogaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL3JlZHNoaWZ0L2xhdGVzdC9kZy9zdmxfdmlld3MuaHRtbFxuICAgKiBTVlY6IGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvc3Z2X3ZpZXdzLmh0bWxcbiAgICovXG4gIC8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9yZWRzaGlmdC9sYXRlc3QvZGcvcl9DaGFyYWN0ZXJfdHlwZXMuaHRtbCNyX0NoYXJhY3Rlcl90eXBlcy10ZXh0LWFuZC1icGNoYXItdHlwZXNcbiAgZGF0YVR5cGVzOiBbJ0JQQ0hBUicsICdURVhUJ11cbn0pO1xuZXhwb3J0cy5rZXl3b3JkcyA9IGtleXdvcmRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkc2hpZnQua2V5d29yZHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.formatter.js":
/*!********************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.formatter.js ***!
  \********************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _token = __webpack_require__(/*! ../../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar _singlestoredb = __webpack_require__(/*! ./singlestoredb.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.keywords.js\");\n\nvar _singlestoredb2 = __webpack_require__(/*! ./singlestoredb.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.functions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT [IGNORE] [INTO]', 'VALUES', 'REPLACE [INTO]', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE VIEW', 'CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]', 'CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]', 'CREATE [OR REPLACE] [EXTERNAL] FUNCTION', 'DROP [TEMPORARY] TABLE [IF EXISTS]', // - alter table:\n'ALTER [ONLINE] TABLE', 'ADD [COLUMN]', 'ADD [UNIQUE] {INDEX | KEY}', 'DROP [COLUMN]', 'MODIFY [COLUMN]', 'CHANGE', 'RENAME [TO | AS]', // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html\n'ADD AGGREGATOR', 'ADD LEAF', 'AGGREGATOR SET AS MASTER', 'ALTER DATABASE', 'ALTER PIPELINE', 'ALTER RESOURCE POOL', 'ALTER USER', 'ALTER VIEW', 'ANALYZE TABLE', 'ATTACH DATABASE', 'ATTACH LEAF', 'ATTACH LEAF ALL', 'BACKUP DATABASE', 'BINLOG', 'BOOTSTRAP AGGREGATOR', 'CACHE INDEX', 'CALL', 'CHANGE', 'CHANGE MASTER TO', 'CHANGE REPLICATION FILTER', 'CHANGE REPLICATION SOURCE TO', 'CHECK BLOB CHECKSUM', 'CHECK TABLE', 'CHECKSUM TABLE', 'CLEAR ORPHAN DATABASES', 'CLONE', 'COMMIT', 'CREATE DATABASE', 'CREATE GROUP', 'CREATE INDEX', 'CREATE LINK', 'CREATE MILESTONE', 'CREATE PIPELINE', 'CREATE RESOURCE POOL', 'CREATE ROLE', 'CREATE USER', 'DEALLOCATE PREPARE', 'DESCRIBE', 'DETACH DATABASE', 'DETACH PIPELINE', 'DO', 'DROP DATABASE', 'DROP FUNCTION', 'DROP INDEX', 'DROP LINK', 'DROP PIPELINE', 'DROP PROCEDURE', 'DROP RESOURCE POOL', 'DROP ROLE', 'DROP USER', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FLUSH', 'FORCE', 'GRANT', 'HANDLER', 'HELP', 'KILL CONNECTION', 'KILLALL QUERIES', 'LOAD DATA', 'LOAD INDEX INTO CACHE', 'LOAD XML', 'LOCK INSTANCE FOR BACKUP', 'LOCK TABLES', 'MASTER_POS_WAIT', 'OPTIMIZE TABLE', 'PREPARE', 'PURGE BINARY LOGS', 'REBALANCE PARTITIONS', 'RELEASE SAVEPOINT', 'REMOVE AGGREGATOR', 'REMOVE LEAF', 'REPAIR TABLE', 'REPLACE', 'REPLICATE DATABASE', 'RESET', 'RESET MASTER', 'RESET PERSIST', 'RESET REPLICA', 'RESET SLAVE', 'RESTART', 'RESTORE DATABASE', 'RESTORE REDUNDANCY', 'REVOKE', 'ROLLBACK', 'ROLLBACK TO SAVEPOINT', 'SAVEPOINT', 'SET CHARACTER SET', 'SET DEFAULT ROLE', 'SET NAMES', 'SET PASSWORD', 'SET RESOURCE GROUP', 'SET ROLE', 'SET TRANSACTION', 'SHOW', 'SHOW CHARACTER SET', 'SHOW COLLATION', 'SHOW COLUMNS', 'SHOW CREATE DATABASE', 'SHOW CREATE FUNCTION', 'SHOW CREATE PIPELINE', 'SHOW CREATE PROCEDURE', 'SHOW CREATE TABLE', 'SHOW CREATE USER', 'SHOW CREATE VIEW', 'SHOW DATABASES', 'SHOW ENGINE', 'SHOW ENGINES', 'SHOW ERRORS', 'SHOW FUNCTION CODE', 'SHOW FUNCTION STATUS', 'SHOW GRANTS', 'SHOW INDEX', 'SHOW MASTER STATUS', 'SHOW OPEN TABLES', 'SHOW PLUGINS', 'SHOW PRIVILEGES', 'SHOW PROCEDURE CODE', 'SHOW PROCEDURE STATUS', 'SHOW PROCESSLIST', 'SHOW PROFILE', 'SHOW PROFILES', 'SHOW RELAYLOG EVENTS', 'SHOW REPLICA STATUS', 'SHOW REPLICAS', 'SHOW SLAVE', 'SHOW SLAVE HOSTS', 'SHOW STATUS', 'SHOW TABLE STATUS', 'SHOW TABLES', 'SHOW VARIABLES', 'SHOW WARNINGS', 'SHUTDOWN', 'SNAPSHOT DATABASE', 'SOURCE_POS_WAIT', 'START GROUP_REPLICATION', 'START PIPELINE', 'START REPLICA', 'START SLAVE', 'START TRANSACTION', 'STOP GROUP_REPLICATION', 'STOP PIPELINE', 'STOP REPLICA', 'STOP REPLICATING', 'STOP SLAVE', 'TEST PIPELINE', 'TRUNCATE TABLE', 'UNLOCK INSTANCE', 'UNLOCK TABLES', 'USE', 'XA', // flow control\n'ITERATE', 'LEAVE', 'LOOP', 'REPEAT', 'RETURN', 'WHILE']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]', 'EXCEPT', 'INTERSECT', 'MINUS']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL {LEFT | RIGHT} [OUTER] JOIN', // non-standard joins\n'STRAIGHT_JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', 'CHARACTER SET', '{ROWS | RANGE} BETWEEN']);\n\nvar SingleStoreDbFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(SingleStoreDbFormatter, _Formatter);\n\n  var _super = _createSuper(SingleStoreDbFormatter);\n\n  function SingleStoreDbFormatter() {\n    _classCallCheck(this, SingleStoreDbFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SingleStoreDbFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE', 'ELSEIF'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _singlestoredb.keywords,\n        reservedFunctionNames: _singlestoredb2.functions,\n        // TODO: support _binary\"some string\" prefix\n        stringTypes: ['\"\"-qq-bs', \"''-qq-bs\", {\n          quote: \"''-raw\",\n          prefixes: ['B', 'X'],\n          requirePrefix: true\n        }],\n        identTypes: ['``'],\n        identChars: {\n          first: '$',\n          rest: '$',\n          allowFirstCharNumber: true\n        },\n        variableTypes: [{\n          regex: '@@?[A-Za-z0-9_$]+'\n        }, {\n          quote: '``',\n          prefixes: ['@'],\n          requirePrefix: true\n        }],\n        lineCommentTypes: ['--', '#'],\n        operators: [':=', '&', '|', '^', '~', '<<', '>>', '<=>', '&&', '||'],\n        postProcess: postProcess\n      });\n    }\n  }]);\n\n  return SingleStoreDbFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = SingleStoreDbFormatter;\n\nfunction postProcess(tokens) {\n  return tokens.map(function (token, i) {\n    var nextToken = tokens[i + 1] || _token.EOF_TOKEN;\n\n    if (_token.isToken.SET(token) && nextToken.text === '(') {\n      // This is SET datatype, not SET statement\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.RESERVED_FUNCTION_NAME\n      });\n    }\n\n    return token;\n  });\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=singlestoredb.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.functions.js":
/*!********************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.functions.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/vector-functions/vector-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/window-functions/window-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/string-functions/string-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/conditional-functions/conditional-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/numeric-functions/numeric-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/geospatial-functions/geospatial-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/json-functions/json-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/information-functions/information-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/aggregate-functions/aggregate-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/time-series-functions/time-series-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/identifier-generation-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/date-and-time-functions/date-and-time-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/distinct-count-estimation-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/full-text-search-functions/full-text-search-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/regular-expression-functions.html\n  all: ['ABS', 'ACOS', 'ADDDATE', 'ADDTIME', 'AES_DECRYPT', 'AES_ENCRYPT', 'ANY_VALUE', 'APPROX_COUNT_DISTINCT', 'APPROX_COUNT_DISTINCT_ACCUMULATE', 'APPROX_COUNT_DISTINCT_COMBINE', 'APPROX_COUNT_DISTINCT_ESTIMATE', 'APPROX_GEOGRAPHY_INTERSECTS', 'APPROX_PERCENTILE', 'ASCII', 'ASIN', 'ATAN', 'ATAN2', 'AVG', 'BIN', 'BINARY', 'BIT_AND', 'BIT_COUNT', 'BIT_OR', 'BIT_XOR', 'CAST', 'CEIL', 'CEILING', 'CHAR', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHARSET', 'COALESCE', 'COERCIBILITY', 'COLLATION', 'COLLECT', 'CONCAT', 'CONCAT_WS', 'CONNECTION_ID', 'CONV', 'CONVERT', 'CONVERT_TZ', 'COS', 'COT', 'COUNT', 'CUME_DIST', 'CURDATE', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURTIME', 'DATABASE', 'DATE', 'DATE_ADD', 'DATEDIFF', 'DATE_FORMAT', 'DATE_SUB', 'DATE_TRUNC', 'DAY', 'DAYNAME', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'DECODE', 'DEFAULT', 'DEGREES', 'DENSE_RANK', 'DIV', 'DOT_PRODUCT', 'ELT', 'EUCLIDEAN_DISTANCE', 'EXP', 'EXTRACT', 'FIELD', 'FIRST', 'FIRST_VALUE', 'FLOOR', 'FORMAT', 'FOUND_ROWS', 'FROM_BASE64', 'FROM_DAYS', 'FROM_UNIXTIME', 'GEOGRAPHY_AREA', 'GEOGRAPHY_CONTAINS', 'GEOGRAPHY_DISTANCE', 'GEOGRAPHY_INTERSECTS', 'GEOGRAPHY_LATITUDE', 'GEOGRAPHY_LENGTH', 'GEOGRAPHY_LONGITUDE', 'GEOGRAPHY_POINT', 'GEOGRAPHY_WITHIN_DISTANCE', 'GEOMETRY_AREA', 'GEOMETRY_CONTAINS', 'GEOMETRY_DISTANCE', 'GEOMETRY_FILTER', 'GEOMETRY_INTERSECTS', 'GEOMETRY_LENGTH', 'GEOMETRY_POINT', 'GEOMETRY_WITHIN_DISTANCE', 'GEOMETRY_X', 'GEOMETRY_Y', 'GREATEST', 'GROUPING', 'GROUP_CONCAT', 'HEX', 'HIGHLIGHT', 'HOUR', 'ICU_VERSION', 'IF', 'IFNULL', 'INET_ATON', 'INET_NTOA', 'INET6_ATON', 'INET6_NTOA', 'INITCAP', 'INSERT', 'INSTR', 'INTERVAL', 'IS', 'IS NULL', 'JSON_AGG', 'JSON_ARRAY_CONTAINS_DOUBLE', 'JSON_ARRAY_CONTAINS_JSON', 'JSON_ARRAY_CONTAINS_STRING', 'JSON_ARRAY_PUSH_DOUBLE', 'JSON_ARRAY_PUSH_JSON', 'JSON_ARRAY_PUSH_STRING', 'JSON_DELETE_KEY', 'JSON_EXTRACT_DOUBLE', 'JSON_EXTRACT_JSON', 'JSON_EXTRACT_STRING', 'JSON_EXTRACT_BIGINT', 'JSON_GET_TYPE', 'JSON_LENGTH', 'JSON_SET_DOUBLE', 'JSON_SET_JSON', 'JSON_SET_STRING', 'JSON_SPLICE_DOUBLE', 'JSON_SPLICE_JSON', 'JSON_SPLICE_STRING', 'LAG', 'LAST_DAY', 'LAST_VALUE', 'LCASE', 'LEAD', 'LEAST', 'LEFT', 'LENGTH', 'LIKE', 'LN', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATE', 'LOG', 'LOG10', 'LOG2', 'LPAD', 'LTRIM', 'MATCH', 'MAX', 'MD5', 'MEDIAN', 'MICROSECOND', 'MIN', 'MINUTE', 'MOD', 'MONTH', 'MONTHNAME', 'MONTHS_BETWEEN', 'NOT', 'NOW', 'NTH_VALUE', 'NTILE', 'NULLIF', 'OCTET_LENGTH', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PI', 'PIVOT', 'POSITION', 'POW', 'POWER', 'QUARTER', 'QUOTE', 'RADIANS', 'RAND', 'RANK', 'REGEXP', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RLIKE', 'ROUND', 'ROW_COUNT', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'SCALAR', 'SCHEMA', 'SEC_TO_TIME', 'SHA1', 'SHA2', 'SIGMOID', 'SIGN', 'SIN', 'SLEEP', 'SPLIT', 'SOUNDEX', 'SOUNDS LIKE', 'SOURCE_POS_WAIT', 'SPACE', 'SQRT', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STR_TO_DATE', 'SUBDATE', 'SUBSTR', 'SUBSTRING', 'SUBSTRING_INDEX', 'SUM', 'SYS_GUID', 'TAN', 'TIME', 'TIMEDIFF', 'TIME_BUCKET', 'TIME_FORMAT', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TIME_TO_SEC', 'TO_BASE64', 'TO_CHAR', 'TO_DAYS', 'TO_JSON', 'TO_NUMBER', 'TO_SECONDS', 'TO_TIMESTAMP', 'TRIM', 'TRUNC', 'TRUNCATE', 'UCASE', 'UNHEX', 'UNIX_TIMESTAMP', 'UPDATEXML', 'UPPER', 'USER', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'UUID', 'VALUES', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'VECTOR_SUB', 'VERSION', 'WEEK', 'WEEKDAY', 'WEEKOFYEAR', 'YEAR', // Data types with parameters\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/data-types.html\n  'BIT', 'TINYINT', 'SMALLINT', 'MEDIUMINT', 'INT', 'INTEGER', 'BIGINT', 'DECIMAL', 'DEC', 'NUMERIC', 'FIXED', 'FLOAT', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'DATETIME', 'TIMESTAMP', 'TIME', 'YEAR', 'CHAR', 'NATIONAL CHAR', 'VARCHAR', 'NATIONAL VARCHAR', 'BINARY', 'VARBINARY', 'BLOB', 'TEXT', 'ENUM']\n});\nexports.functions = functions;\n//# sourceMappingURL=singlestoredb.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.keywords.js":
/*!*******************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.keywords.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/restricted-keywords/list-of-restricted-keywords.html\n  all: ['ABORT', 'ABSOLUTE', 'ACCESS', 'ACCESSIBLE', 'ACCOUNT', 'ACTION', 'ACTIVE', 'ADD', 'ADMIN', 'AFTER', 'AGAINST', 'AGGREGATE', 'AGGREGATES', 'AGGREGATOR', 'AGGREGATOR_ID', 'AGGREGATOR_PLAN_HASH', 'AGGREGATORS', 'ALGORITHM', 'ALL', 'ALSO', 'ALTER', 'ALWAYS', 'ANALYZE', 'AND', 'ANY', 'ARGHISTORY', 'ARRANGE', 'ARRANGEMENT', 'ARRAY', 'AS', 'ASC', 'ASCII', 'ASENSITIVE', 'ASM', 'ASSERTION', 'ASSIGNMENT', 'AST', 'ASYMMETRIC', 'ASYNC', 'AT', 'ATTACH', 'ATTRIBUTE', 'AUTHORIZATION', 'AUTO', 'AUTO_INCREMENT', 'AUTO_REPROVISION', 'AUTOSTATS', 'AUTOSTATS_CARDINALITY_MODE', 'AUTOSTATS_ENABLED', 'AUTOSTATS_HISTOGRAM_MODE', 'AUTOSTATS_SAMPLING', 'AVAILABILITY', 'AVG', 'AVG_ROW_LENGTH', 'AVRO', 'AZURE', 'BACKGROUND', '_BACKGROUND_THREADS_FOR_CLEANUP', 'BACKUP', 'BACKUP_HISTORY', 'BACKUP_ID', 'BACKWARD', 'BATCH', 'BATCHES', 'BATCH_INTERVAL', '_BATCH_SIZE_LIMIT', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', '_BINARY', 'BIT', 'BLOB', 'BOOL', 'BOOLEAN', 'BOOTSTRAP', 'BOTH', '_BT', 'BTREE', 'BUCKET_COUNT', 'BUCKETS', 'BY', 'BYTE', 'BYTE_LENGTH', 'CACHE', 'CALL', 'CALL_FOR_PIPELINE', 'CALLED', 'CAPTURE', 'CASCADE', 'CASCADED', 'CASE', 'CATALOG', 'CHAIN', 'CHANGE', 'CHAR', 'CHARACTER', 'CHARACTERISTICS', 'CHARSET', 'CHECK', 'CHECKPOINT', '_CHECK_CAN_CONNECT', '_CHECK_CONSISTENCY', 'CHECKSUM', '_CHECKSUM', 'CLASS', 'CLEAR', 'CLIENT', 'CLIENT_FOUND_ROWS', 'CLOSE', 'CLUSTER', 'CLUSTERED', 'CNF', 'COALESCE', 'COLLATE', 'COLLATION', 'COLUMN', 'COLUMNAR', 'COLUMNS', 'COLUMNSTORE', 'COLUMNSTORE_SEGMENT_ROWS', 'COMMENT', 'COMMENTS', 'COMMIT', 'COMMITTED', '_COMMIT_LOG_TAIL', 'COMPACT', 'COMPILE', 'COMPRESSED', 'COMPRESSION', 'CONCURRENT', 'CONCURRENTLY', 'CONDITION', 'CONFIGURATION', 'CONNECTION', 'CONNECTIONS', 'CONFIG', 'CONSTRAINT', 'CONTAINS', 'CONTENT', 'CONTINUE', '_CONTINUE_REPLAY', 'CONVERSION', 'CONVERT', 'COPY', '_CORE', 'COST', 'CREATE', 'CREDENTIALS', 'CROSS', 'CUBE', 'CSV', 'CUME_DIST', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_SCHEMA', 'CURRENT_SECURITY_GROUPS', 'CURRENT_SECURITY_ROLES', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DATABASES', 'DATE', 'DATETIME', 'DAY', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFAULTS', 'DEFERRABLE', 'DEFERRED', 'DEFINED', 'DEFINER', 'DELAYED', 'DELAY_KEY_WRITE', 'DELETE', 'DELIMITER', 'DELIMITERS', 'DENSE_RANK', 'DESC', 'DESCRIBE', 'DETACH', 'DETERMINISTIC', 'DICTIONARY', 'DIFFERENTIAL', 'DIRECTORY', 'DISABLE', 'DISCARD', '_DISCONNECT', 'DISK', 'DISTINCT', 'DISTINCTROW', 'DISTRIBUTED_JOINS', 'DIV', 'DO', 'DOCUMENT', 'DOMAIN', 'DOUBLE', 'DROP', '_DROP_PROFILE', 'DUAL', 'DUMP', 'DUPLICATE', 'DURABILITY', 'DYNAMIC', 'EARLIEST', 'EACH', 'ECHO', 'ELECTION', 'ELSE', 'ELSEIF', 'ENABLE', 'ENCLOSED', 'ENCODING', 'ENCRYPTED', 'END', 'ENGINE', 'ENGINES', 'ENUM', 'ERRORS', 'ESCAPE', 'ESCAPED', 'ESTIMATE', 'EVENT', 'EVENTS', 'EXCEPT', 'EXCLUDE', 'EXCLUDING', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXIT', 'EXPLAIN', 'EXTENDED', 'EXTENSION', 'EXTERNAL', 'EXTERNAL_HOST', 'EXTERNAL_PORT', 'EXTRACTOR', 'EXTRACTORS', 'EXTRA_JOIN', '_FAILOVER', 'FAILED_LOGIN_ATTEMPTS', 'FAILURE', 'FALSE', 'FAMILY', 'FAULT', 'FETCH', 'FIELDS', 'FILE', 'FILES', 'FILL', 'FIX_ALTER', 'FIXED', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FLUSH', 'FOLLOWING', 'FOR', 'FORCE', 'FORCE_COMPILED_MODE', 'FORCE_INTERPRETER_MODE', 'FOREGROUND', 'FOREIGN', 'FORMAT', 'FORWARD', 'FREEZE', 'FROM', 'FS', '_FSYNC', 'FULL', 'FULLTEXT', 'FUNCTION', 'FUNCTIONS', 'GC', 'GCS', 'GET_FORMAT', '_GC', '_GCX', 'GENERATE', 'GEOGRAPHY', 'GEOGRAPHYPOINT', 'GEOMETRY', 'GEOMETRYPOINT', 'GLOBAL', '_GLOBAL_VERSION_TIMESTAMP', 'GRANT', 'GRANTED', 'GRANTS', 'GROUP', 'GROUPING', 'GROUPS', 'GZIP', 'HANDLE', 'HANDLER', 'HARD_CPU_LIMIT_PERCENTAGE', 'HASH', 'HAS_TEMP_TABLES', 'HAVING', 'HDFS', 'HEADER', 'HEARTBEAT_NO_LOGGING', 'HIGH_PRIORITY', 'HISTOGRAM', 'HOLD', 'HOLDING', 'HOST', 'HOSTS', 'HOUR', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', 'IDENTIFIED', 'IDENTITY', 'IF', 'IGNORE', 'ILIKE', 'IMMEDIATE', 'IMMUTABLE', 'IMPLICIT', 'IMPORT', 'IN', 'INCLUDING', 'INCREMENT', 'INCREMENTAL', 'INDEX', 'INDEXES', 'INFILE', 'INHERIT', 'INHERITS', '_INIT_PROFILE', 'INIT', 'INITIALIZE', 'INITIALLY', 'INJECT', 'INLINE', 'INNER', 'INOUT', 'INPUT', 'INSENSITIVE', 'INSERT', 'INSERT_METHOD', 'INSTANCE', 'INSTEAD', 'IN', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', '_INTERNAL_DYNAMIC_TYPECAST', 'INTERPRETER_MODE', 'INTERSECT', 'INTERVAL', 'INTO', 'INVOKER', 'ISOLATION', 'ITERATE', 'JOIN', 'JSON', 'KAFKA', 'KEY', 'KEY_BLOCK_SIZE', 'KEYS', 'KILL', 'KILLALL', 'LABEL', 'LAG', 'LANGUAGE', 'LARGE', 'LAST', 'LAST_VALUE', 'LATERAL', 'LATEST', 'LC_COLLATE', 'LC_CTYPE', 'LEAD', 'LEADING', 'LEAF', 'LEAKPROOF', 'LEAVE', 'LEAVES', 'LEFT', 'LEVEL', 'LICENSE', 'LIKE', 'LIMIT', 'LINES', 'LISTEN', 'LLVM', 'LOADDATA_WHERE', 'LOAD', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATION', 'LOCK', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', '_LS', 'LZ4', 'MANAGEMENT', '_MANAGEMENT_THREAD', 'MAPPING', 'MASTER', 'MATCH', 'MATERIALIZED', 'MAXVALUE', 'MAX_CONCURRENCY', 'MAX_ERRORS', 'MAX_PARTITIONS_PER_BATCH', 'MAX_QUEUE_DEPTH', 'MAX_RETRIES_PER_BATCH_PARTITION', 'MAX_ROWS', 'MBC', 'MPL', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MEMBER', 'MEMORY', 'MEMORY_PERCENTAGE', '_MEMSQL_TABLE_ID_LOOKUP', 'MEMSQL', 'MEMSQL_DESERIALIZE', 'MEMSQL_IMITATING_KAFKA', 'MEMSQL_SERIALIZE', 'MERGE', 'METADATA', 'MICROSECOND', 'MIDDLEINT', 'MIN_ROWS', 'MINUS', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MINVALUE', 'MOD', 'MODE', 'MODEL', 'MODIFIES', 'MODIFY', 'MONTH', 'MOVE', 'MPL', 'NAMES', 'NAMED', 'NAMESPACE', 'NATIONAL', 'NATURAL', 'NCHAR', 'NEXT', 'NO', 'NODE', 'NONE', 'NO_QUERY_REWRITE', 'NOPARAM', 'NOT', 'NOTHING', 'NOTIFY', 'NOWAIT', 'NO_WRITE_TO_BINLOG', 'NO_QUERY_REWRITE', 'NORELY', 'NTH_VALUE', 'NTILE', 'NULL', 'NULLCOLS', 'NULLS', 'NUMERIC', 'NVARCHAR', 'OBJECT', 'OF', 'OFF', 'OFFLINE', 'OFFSET', 'OFFSETS', 'OIDS', 'ON', 'ONLINE', 'ONLY', 'OPEN', 'OPERATOR', 'OPTIMIZATION', 'OPTIMIZE', 'OPTIMIZER', 'OPTIMIZER_STATE', 'OPTION', 'OPTIONS', 'OPTIONALLY', 'OR', 'ORDER', 'ORDERED_SERIALIZE', 'ORPHAN', 'OUT', 'OUT_OF_ORDER', 'OUTER', 'OUTFILE', 'OVER', 'OVERLAPS', 'OVERLAY', 'OWNED', 'OWNER', 'PACK_KEYS', 'PAIRED', 'PARSER', 'PARQUET', 'PARTIAL', 'PARTITION', 'PARTITION_ID', 'PARTITIONING', 'PARTITIONS', 'PASSING', 'PASSWORD', 'PASSWORD_LOCK_TIME', 'PAUSE', '_PAUSE_REPLAY', 'PERIODIC', 'PERSISTED', 'PIPELINE', 'PIPELINES', 'PLACING', 'PLAN', 'PLANS', 'PLANCACHE', 'PLUGINS', 'POOL', 'POOLS', 'PORT', 'PRECEDING', 'PRECISION', 'PREPARE', 'PRESERVE', 'PRIMARY', 'PRIOR', 'PRIVILEGES', 'PROCEDURAL', 'PROCEDURE', 'PROCEDURES', 'PROCESS', 'PROCESSLIST', 'PROFILE', 'PROFILES', 'PROGRAM', 'PROMOTE', 'PROXY', 'PURGE', 'QUARTER', 'QUERIES', 'QUERY', 'QUERY_TIMEOUT', 'QUEUE', 'RANGE', 'RANK', 'READ', '_READ', 'READS', 'REAL', 'REASSIGN', 'REBALANCE', 'RECHECK', 'RECORD', 'RECURSIVE', 'REDUNDANCY', 'REDUNDANT', 'REF', 'REFERENCE', 'REFERENCES', 'REFRESH', 'REGEXP', 'REINDEX', 'RELATIVE', 'RELEASE', 'RELOAD', 'RELY', 'REMOTE', 'REMOVE', 'RENAME', 'REPAIR', '_REPAIR_TABLE', 'REPEAT', 'REPEATABLE', '_REPL', '_REPROVISIONING', 'REPLACE', 'REPLICA', 'REPLICATE', 'REPLICATING', 'REPLICATION', 'REQUIRE', 'RESOURCE', 'RESOURCE_POOL', 'RESET', 'RESTART', 'RESTORE', 'RESTRICT', 'RESULT', '_RESURRECT', 'RETRY', 'RETURN', 'RETURNING', 'RETURNS', 'REVERSE', 'RG_POOL', 'REVOKE', 'RIGHT', 'RIGHT_ANTI_JOIN', 'RIGHT_SEMI_JOIN', 'RIGHT_STRAIGHT_JOIN', 'RLIKE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROW', 'ROW_COUNT', 'ROW_FORMAT', 'ROW_NUMBER', 'ROWS', 'ROWSTORE', 'RULE', '_RPC', 'RUNNING', 'S3', 'SAFE', 'SAVE', 'SAVEPOINT', 'SCALAR', 'SCHEMA', 'SCHEMAS', 'SCHEMA_BINDING', 'SCROLL', 'SEARCH', 'SECOND', 'SECOND_MICROSECOND', 'SECURITY', 'SELECT', 'SEMI_JOIN', '_SEND_THREADS', 'SENSITIVE', 'SEPARATOR', 'SEQUENCE', 'SEQUENCES', 'SERIAL', 'SERIALIZABLE', 'SERIES', 'SERVICE_USER', 'SERVER', 'SESSION', 'SESSION_USER', 'SET', 'SETOF', 'SECURITY_LISTS_INTERSECT', 'SHA', 'SHARD', 'SHARDED', 'SHARDED_ID', 'SHARE', 'SHOW', 'SHUTDOWN', 'SIGNAL', 'SIGNED', 'SIMILAR', 'SIMPLE', 'SITE', 'SKIP', 'SKIPPED_BATCHES', '__SLEEP', 'SMALLINT', 'SNAPSHOT', '_SNAPSHOT', '_SNAPSHOTS', 'SOFT_CPU_LIMIT_PERCENTAGE', 'SOME', 'SONAME', 'SPARSE', 'SPATIAL', 'SPATIAL_CHECK_INDEX', 'SPECIFIC', 'SQL', 'SQL_BIG_RESULT', 'SQL_BUFFER_RESULT', 'SQL_CACHE', 'SQL_CALC_FOUND_ROWS', 'SQLEXCEPTION', 'SQL_MODE', 'SQL_NO_CACHE', 'SQL_NO_LOGGING', 'SQL_SMALL_RESULT', 'SQLSTATE', 'SQLWARNING', 'STDIN', 'STDOUT', 'STOP', 'STORAGE', 'STRAIGHT_JOIN', 'STRICT', 'STRING', 'STRIP', 'SUCCESS', 'SUPER', 'SYMMETRIC', 'SYNC_SNAPSHOT', 'SYNC', '_SYNC', '_SYNC2', '_SYNC_PARTITIONS', '_SYNC_SNAPSHOT', 'SYNCHRONIZE', 'SYSID', 'SYSTEM', 'TABLE', 'TABLE_CHECKSUM', 'TABLES', 'TABLESPACE', 'TAGS', 'TARGET_SIZE', 'TASK', 'TEMP', 'TEMPLATE', 'TEMPORARY', 'TEMPTABLE', '_TERM_BUMP', 'TERMINATE', 'TERMINATED', 'TEXT', 'THEN', 'TIME', 'TIMEOUT', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TIMEZONE', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRACELOGS', 'TRADITIONAL', 'TRAILING', 'TRANSFORM', 'TRANSACTION', '_TRANSACTIONS_EXPERIMENTAL', 'TREAT', 'TRIGGER', 'TRIGGERS', 'TRUE', 'TRUNC', 'TRUNCATE', 'TRUSTED', 'TWO_PHASE', '_TWOPCID', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNCOMMITTED', 'UNDEFINED', 'UNDO', 'UNENCRYPTED', 'UNENFORCED', 'UNHOLD', 'UNICODE', 'UNION', 'UNIQUE', '_UNITTEST', 'UNKNOWN', 'UNLISTEN', '_UNLOAD', 'UNLOCK', 'UNLOGGED', 'UNPIVOT', 'UNSIGNED', 'UNTIL', 'UPDATE', 'UPGRADE', 'USAGE', 'USE', 'USER', 'USERS', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', '_UTF8', 'VACUUM', 'VALID', 'VALIDATE', 'VALIDATOR', 'VALUE', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARIABLES', 'VARIADIC', 'VARYING', 'VERBOSE', 'VIEW', 'VOID', 'VOLATILE', 'VOTING', 'WAIT', '_WAKE', 'WARNINGS', 'WEEK', 'WHEN', 'WHERE', 'WHILE', 'WHITESPACE', 'WINDOW', 'WITH', 'WITHOUT', 'WITHIN', '_WM_HEARTBEAT', 'WORK', 'WORKLOAD', 'WRAPPER', 'WRITE', 'XACT_ID', 'XOR', 'YEAR', 'YEAR_MONTH', 'YES', 'ZEROFILL', 'ZONE']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=singlestoredb.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/spark/spark.formatter.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/spark/spark.formatter.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _token = __webpack_require__(/*! ../../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar _spark = __webpack_require__(/*! ./spark.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/spark/spark.keywords.js\");\n\nvar _spark2 = __webpack_require__(/*! ./spark.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/spark/spark.functions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// http://spark.apache.org/docs/latest/sql-ref-syntax.html\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'SORT BY', 'CLUSTER BY', 'DISTRIBUTE BY', 'LIMIT', // Data manipulation\n// - insert:\n'INSERT [INTO | OVERWRITE] [TABLE]', 'VALUES', // - truncate:\n'TRUNCATE TABLE', // - insert overwrite directory:\n//   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-insert-overwrite-directory.html\n'INSERT OVERWRITE [LOCAL] DIRECTORY', // - load:\n//   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-load.html\n'LOAD DATA [LOCAL] INPATH', '[OVERWRITE] INTO TABLE', // Data definition\n'CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]', 'CREATE [EXTERNAL] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD COLUMNS', 'DROP {COLUMN | COLUMNS}', 'RENAME TO', 'RENAME COLUMN', 'ALTER COLUMN', 'ALTER DATABASE', 'ALTER VIEW', 'CREATE DATABASE', 'CREATE FUNCTION', 'DROP DATABASE', 'DROP FUNCTION', 'DROP VIEW', 'REPAIR TABLE', 'USE DATABASE', // Data Retrieval\n'TABLESAMPLE', 'PIVOT', 'TRANSFORM', 'EXPLAIN', // Auxiliary\n'ADD FILE', 'ADD JAR', 'ANALYZE TABLE', 'CACHE TABLE', 'CLEAR CACHE', 'DESCRIBE DATABASE', 'DESCRIBE FUNCTION', 'DESCRIBE QUERY', 'DESCRIBE TABLE', 'LIST FILE', 'LIST JAR', 'REFRESH', 'REFRESH TABLE', 'REFRESH FUNCTION', 'RESET', 'SHOW COLUMNS', 'SHOW CREATE TABLE', 'SHOW DATABASES', 'SHOW FUNCTIONS', 'SHOW PARTITIONS', 'SHOW TABLE EXTENDED', 'SHOW TABLES', 'SHOW TBLPROPERTIES', 'SHOW VIEWS', 'UNCACHE TABLE', // other\n'LATERAL VIEW']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN', // non-standard-joins\n'[LEFT] {ANTI | SEMI} JOIN', 'NATURAL [LEFT] {ANTI | SEMI} JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', 'CURRENT ROW', '{ROWS | RANGE} BETWEEN']); // http://spark.apache.org/docs/latest/sql-programming-guide.html\n\nvar SparkFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(SparkFormatter, _Formatter);\n\n  var _super = _createSuper(SparkFormatter);\n\n  function SparkFormatter() {\n    _classCallCheck(this, SparkFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SparkFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: _spark.keywords,\n        reservedFunctionNames: _spark2.functions,\n        extraParens: ['[]'],\n        stringTypes: [\"''-bs\", '\"\"-bs', {\n          quote: \"''-raw\",\n          prefixes: ['R', 'X'],\n          requirePrefix: true\n        }, {\n          quote: '\"\"-raw',\n          prefixes: ['R', 'X'],\n          requirePrefix: true\n        }],\n        identTypes: ['``'],\n        variableTypes: [{\n          quote: '{}',\n          prefixes: ['$'],\n          requirePrefix: true\n        }],\n        operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||', '->'],\n        postProcess: postProcess\n      });\n    }\n  }]);\n\n  return SparkFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = SparkFormatter;\n\nfunction postProcess(tokens) {\n  return tokens.map(function (token, i) {\n    var prevToken = tokens[i - 1] || _token.EOF_TOKEN;\n    var nextToken = tokens[i + 1] || _token.EOF_TOKEN; // [WINDOW](...)\n\n    if (_token.isToken.WINDOW(token) && nextToken.type === _token.TokenType.OPEN_PAREN) {\n      // This is a function call, treat it as a reserved function name\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.RESERVED_FUNCTION_NAME\n      });\n    } // TODO: deprecate this once ITEMS is merged with COLLECTION\n\n\n    if (token.text === 'ITEMS' && token.type === _token.TokenType.RESERVED_KEYWORD) {\n      if (!(prevToken.text === 'COLLECTION' && nextToken.text === 'TERMINATED')) {\n        // this is a word and not COLLECTION ITEMS\n        return _objectSpread(_objectSpread({}, token), {}, {\n          type: _token.TokenType.IDENTIFIER,\n          text: token.raw\n        });\n      }\n    }\n\n    return token;\n  });\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=spark.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/spark/spark.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/spark/spark.functions.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/spark/spark.functions.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // http://spark.apache.org/docs/latest/sql-ref-functions.html\n  //\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#aggregate-functions\n  aggregate: [// 'ANY',\n  'APPROX_COUNT_DISTINCT', 'APPROX_PERCENTILE', 'AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'BOOL_AND', 'BOOL_OR', 'COLLECT_LIST', 'COLLECT_SET', 'CORR', 'COUNT', 'COUNT', 'COUNT', 'COUNT_IF', 'COUNT_MIN_SKETCH', 'COVAR_POP', 'COVAR_SAMP', 'EVERY', 'FIRST', 'FIRST_VALUE', 'GROUPING', 'GROUPING_ID', 'KURTOSIS', 'LAST', 'LAST_VALUE', 'MAX', 'MAX_BY', 'MEAN', 'MIN', 'MIN_BY', 'PERCENTILE', 'PERCENTILE', 'PERCENTILE_APPROX', 'SKEWNESS', // 'SOME',\n  'STD', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#window-functions\n  window: ['CUME_DIST', 'DENSE_RANK', 'LAG', 'LEAD', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'RANK', 'ROW_NUMBER'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#array-functions\n  array: ['ARRAY', 'ARRAY_CONTAINS', 'ARRAY_DISTINCT', 'ARRAY_EXCEPT', 'ARRAY_INTERSECT', 'ARRAY_JOIN', 'ARRAY_MAX', 'ARRAY_MIN', 'ARRAY_POSITION', 'ARRAY_REMOVE', 'ARRAY_REPEAT', 'ARRAY_UNION', 'ARRAYS_OVERLAP', 'ARRAYS_ZIP', 'FLATTEN', 'SEQUENCE', 'SHUFFLE', 'SLICE', 'SORT_ARRAY'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#map-functions\n  map: ['ELEMENT_AT', 'ELEMENT_AT', 'MAP', 'MAP_CONCAT', 'MAP_ENTRIES', 'MAP_FROM_ARRAYS', 'MAP_FROM_ENTRIES', 'MAP_KEYS', 'MAP_VALUES', 'STR_TO_MAP'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#date-and-timestamp-functions\n  datetime: ['ADD_MONTHS', 'CURRENT_DATE', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'DATE_ADD', 'DATE_FORMAT', 'DATE_FROM_UNIX_DATE', 'DATE_PART', 'DATE_SUB', 'DATE_TRUNC', 'DATEDIFF', 'DAY', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'EXTRACT', 'FROM_UNIXTIME', 'FROM_UTC_TIMESTAMP', 'HOUR', 'LAST_DAY', 'MAKE_DATE', 'MAKE_DT_INTERVAL', 'MAKE_INTERVAL', 'MAKE_TIMESTAMP', 'MAKE_YM_INTERVAL', 'MINUTE', 'MONTH', 'MONTHS_BETWEEN', 'NEXT_DAY', 'NOW', 'QUARTER', 'SECOND', 'SESSION_WINDOW', 'TIMESTAMP_MICROS', 'TIMESTAMP_MILLIS', 'TIMESTAMP_SECONDS', 'TO_DATE', 'TO_TIMESTAMP', 'TO_UNIX_TIMESTAMP', 'TO_UTC_TIMESTAMP', 'TRUNC', 'UNIX_DATE', 'UNIX_MICROS', 'UNIX_MILLIS', 'UNIX_SECONDS', 'UNIX_TIMESTAMP', 'WEEKDAY', 'WEEKOFYEAR', 'WINDOW', 'YEAR'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#json-functions\n  json: ['FROM_JSON', 'GET_JSON_OBJECT', 'JSON_ARRAY_LENGTH', 'JSON_OBJECT_KEYS', 'JSON_TUPLE', 'SCHEMA_OF_JSON', 'TO_JSON'],\n  // http://spark.apache.org/docs/latest/api/sql/index.html\n  misc: ['ABS', 'ACOS', 'ACOSH', 'AGGREGATE', 'ARRAY_SORT', 'ASCII', 'ASIN', 'ASINH', 'ASSERT_TRUE', 'ATAN', 'ATAN2', 'ATANH', 'BASE64', 'BIGINT', 'BIN', 'BINARY', 'BIT_COUNT', 'BIT_GET', 'BIT_LENGTH', 'BOOLEAN', 'BROUND', 'BTRIM', 'CARDINALITY', 'CBRT', 'CEIL', 'CEILING', 'CHAR', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHR', 'CONCAT', 'CONCAT_WS', 'CONV', 'COS', 'COSH', 'COT', 'CRC32', 'CURRENT_CATALOG', 'CURRENT_DATABASE', 'CURRENT_USER', 'DATE', 'DECIMAL', 'DEGREES', 'DOUBLE', // 'E',\n  'ELT', 'EXP', 'EXPM1', 'FACTORIAL', 'FIND_IN_SET', 'FLOAT', 'FLOOR', 'FORALL', 'FORMAT_NUMBER', 'FORMAT_STRING', 'FROM_CSV', 'GETBIT', 'HASH', 'HEX', 'HYPOT', 'INITCAP', 'INLINE', 'INLINE_OUTER', 'INPUT_FILE_BLOCK_LENGTH', 'INPUT_FILE_BLOCK_START', 'INPUT_FILE_NAME', 'INSTR', 'INT', 'ISNAN', 'ISNOTNULL', 'ISNULL', 'JAVA_METHOD', 'LCASE', 'LEFT', 'LENGTH', 'LEVENSHTEIN', 'LN', 'LOCATE', 'LOG', 'LOG10', 'LOG1P', 'LOG2', 'LOWER', 'LPAD', 'LTRIM', 'MAP_FILTER', 'MAP_ZIP_WITH', 'MD5', 'MOD', 'MONOTONICALLY_INCREASING_ID', 'NAMED_STRUCT', 'NANVL', 'NEGATIVE', 'NVL', 'NVL2', 'OCTET_LENGTH', 'OVERLAY', 'PARSE_URL', 'PI', 'PMOD', 'POSEXPLODE', 'POSEXPLODE_OUTER', 'POSITION', 'POSITIVE', 'POW', 'POWER', 'PRINTF', 'RADIANS', 'RAISE_ERROR', 'RAND', 'RANDN', 'RANDOM', 'REFLECT', 'REGEXP_EXTRACT', 'REGEXP_EXTRACT_ALL', 'REGEXP_LIKE', 'REGEXP_REPLACE', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RINT', 'ROUND', 'RPAD', 'RTRIM', 'SCHEMA_OF_CSV', 'SENTENCES', 'SHA', 'SHA1', 'SHA2', 'SHIFTLEFT', 'SHIFTRIGHT', 'SHIFTRIGHTUNSIGNED', 'SIGN', 'SIGNUM', 'SIN', 'SINH', 'SMALLINT', 'SOUNDEX', 'SPACE', 'SPARK_PARTITION_ID', 'SPLIT', 'SQRT', 'STACK', 'SUBSTR', 'SUBSTRING', 'SUBSTRING_INDEX', 'TAN', 'TANH', 'TIMESTAMP', 'TINYINT', 'TO_CSV', 'TRANSFORM_KEYS', 'TRANSFORM_VALUES', 'TRANSLATE', 'TRIM', 'TRY_ADD', 'TRY_DIVIDE', 'TYPEOF', 'UCASE', 'UNBASE64', 'UNHEX', 'UPPER', 'UUID', 'VERSION', 'WIDTH_BUCKET', 'XPATH', 'XPATH_BOOLEAN', 'XPATH_DOUBLE', 'XPATH_FLOAT', 'XPATH_INT', 'XPATH_LONG', 'XPATH_NUMBER', 'XPATH_SHORT', 'XPATH_STRING', 'XXHASH64', 'ZIP_WITH'],\n  cast: ['CAST'],\n  // Shorthand functions to use in place of CASE expression\n  caseAbbrev: ['COALESCE', 'NULLIF'],\n  // Parameterized data types\n  // https://spark.apache.org/docs/latest/sql-ref-datatypes.html\n  dataTypes: ['DECIMAL', 'DEC', 'NUMERIC', // No varchar type in Spark, only STRING. Added for the sake of tests\n  'VARCHAR']\n});\nexports.functions = functions;\n//# sourceMappingURL=spark.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcGFyay9zcGFyay5mdW5jdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvc3Bhcmsvc3BhcmsuZnVuY3Rpb25zLmpzPzVjOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZ1bmN0aW9ucyA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcblxudmFyIGZ1bmN0aW9ucyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHA6Ly9zcGFyay5hcGFjaGUub3JnL2RvY3MvbGF0ZXN0L3NxbC1yZWYtZnVuY3Rpb25zLmh0bWxcbiAgLy9cbiAgLy8gaHR0cDovL3NwYXJrLmFwYWNoZS5vcmcvZG9jcy9sYXRlc3Qvc3FsLXJlZi1mdW5jdGlvbnMtYnVpbHRpbi5odG1sI2FnZ3JlZ2F0ZS1mdW5jdGlvbnNcbiAgYWdncmVnYXRlOiBbLy8gJ0FOWScsXG4gICdBUFBST1hfQ09VTlRfRElTVElOQ1QnLCAnQVBQUk9YX1BFUkNFTlRJTEUnLCAnQVZHJywgJ0JJVF9BTkQnLCAnQklUX09SJywgJ0JJVF9YT1InLCAnQk9PTF9BTkQnLCAnQk9PTF9PUicsICdDT0xMRUNUX0xJU1QnLCAnQ09MTEVDVF9TRVQnLCAnQ09SUicsICdDT1VOVCcsICdDT1VOVCcsICdDT1VOVCcsICdDT1VOVF9JRicsICdDT1VOVF9NSU5fU0tFVENIJywgJ0NPVkFSX1BPUCcsICdDT1ZBUl9TQU1QJywgJ0VWRVJZJywgJ0ZJUlNUJywgJ0ZJUlNUX1ZBTFVFJywgJ0dST1VQSU5HJywgJ0dST1VQSU5HX0lEJywgJ0tVUlRPU0lTJywgJ0xBU1QnLCAnTEFTVF9WQUxVRScsICdNQVgnLCAnTUFYX0JZJywgJ01FQU4nLCAnTUlOJywgJ01JTl9CWScsICdQRVJDRU5USUxFJywgJ1BFUkNFTlRJTEUnLCAnUEVSQ0VOVElMRV9BUFBST1gnLCAnU0tFV05FU1MnLCAvLyAnU09NRScsXG4gICdTVEQnLCAnU1REREVWJywgJ1NURERFVl9QT1AnLCAnU1REREVWX1NBTVAnLCAnU1VNJywgJ1ZBUl9QT1AnLCAnVkFSX1NBTVAnLCAnVkFSSUFOQ0UnXSxcbiAgLy8gaHR0cDovL3NwYXJrLmFwYWNoZS5vcmcvZG9jcy9sYXRlc3Qvc3FsLXJlZi1mdW5jdGlvbnMtYnVpbHRpbi5odG1sI3dpbmRvdy1mdW5jdGlvbnNcbiAgd2luZG93OiBbJ0NVTUVfRElTVCcsICdERU5TRV9SQU5LJywgJ0xBRycsICdMRUFEJywgJ05USF9WQUxVRScsICdOVElMRScsICdQRVJDRU5UX1JBTksnLCAnUkFOSycsICdST1dfTlVNQkVSJ10sXG4gIC8vIGh0dHA6Ly9zcGFyay5hcGFjaGUub3JnL2RvY3MvbGF0ZXN0L3NxbC1yZWYtZnVuY3Rpb25zLWJ1aWx0aW4uaHRtbCNhcnJheS1mdW5jdGlvbnNcbiAgYXJyYXk6IFsnQVJSQVknLCAnQVJSQVlfQ09OVEFJTlMnLCAnQVJSQVlfRElTVElOQ1QnLCAnQVJSQVlfRVhDRVBUJywgJ0FSUkFZX0lOVEVSU0VDVCcsICdBUlJBWV9KT0lOJywgJ0FSUkFZX01BWCcsICdBUlJBWV9NSU4nLCAnQVJSQVlfUE9TSVRJT04nLCAnQVJSQVlfUkVNT1ZFJywgJ0FSUkFZX1JFUEVBVCcsICdBUlJBWV9VTklPTicsICdBUlJBWVNfT1ZFUkxBUCcsICdBUlJBWVNfWklQJywgJ0ZMQVRURU4nLCAnU0VRVUVOQ0UnLCAnU0hVRkZMRScsICdTTElDRScsICdTT1JUX0FSUkFZJ10sXG4gIC8vIGh0dHA6Ly9zcGFyay5hcGFjaGUub3JnL2RvY3MvbGF0ZXN0L3NxbC1yZWYtZnVuY3Rpb25zLWJ1aWx0aW4uaHRtbCNtYXAtZnVuY3Rpb25zXG4gIG1hcDogWydFTEVNRU5UX0FUJywgJ0VMRU1FTlRfQVQnLCAnTUFQJywgJ01BUF9DT05DQVQnLCAnTUFQX0VOVFJJRVMnLCAnTUFQX0ZST01fQVJSQVlTJywgJ01BUF9GUk9NX0VOVFJJRVMnLCAnTUFQX0tFWVMnLCAnTUFQX1ZBTFVFUycsICdTVFJfVE9fTUFQJ10sXG4gIC8vIGh0dHA6Ly9zcGFyay5hcGFjaGUub3JnL2RvY3MvbGF0ZXN0L3NxbC1yZWYtZnVuY3Rpb25zLWJ1aWx0aW4uaHRtbCNkYXRlLWFuZC10aW1lc3RhbXAtZnVuY3Rpb25zXG4gIGRhdGV0aW1lOiBbJ0FERF9NT05USFMnLCAnQ1VSUkVOVF9EQVRFJywgJ0NVUlJFTlRfREFURScsICdDVVJSRU5UX1RJTUVTVEFNUCcsICdDVVJSRU5UX1RJTUVTVEFNUCcsICdDVVJSRU5UX1RJTUVaT05FJywgJ0RBVEVfQUREJywgJ0RBVEVfRk9STUFUJywgJ0RBVEVfRlJPTV9VTklYX0RBVEUnLCAnREFURV9QQVJUJywgJ0RBVEVfU1VCJywgJ0RBVEVfVFJVTkMnLCAnREFURURJRkYnLCAnREFZJywgJ0RBWU9GTU9OVEgnLCAnREFZT0ZXRUVLJywgJ0RBWU9GWUVBUicsICdFWFRSQUNUJywgJ0ZST01fVU5JWFRJTUUnLCAnRlJPTV9VVENfVElNRVNUQU1QJywgJ0hPVVInLCAnTEFTVF9EQVknLCAnTUFLRV9EQVRFJywgJ01BS0VfRFRfSU5URVJWQUwnLCAnTUFLRV9JTlRFUlZBTCcsICdNQUtFX1RJTUVTVEFNUCcsICdNQUtFX1lNX0lOVEVSVkFMJywgJ01JTlVURScsICdNT05USCcsICdNT05USFNfQkVUV0VFTicsICdORVhUX0RBWScsICdOT1cnLCAnUVVBUlRFUicsICdTRUNPTkQnLCAnU0VTU0lPTl9XSU5ET1cnLCAnVElNRVNUQU1QX01JQ1JPUycsICdUSU1FU1RBTVBfTUlMTElTJywgJ1RJTUVTVEFNUF9TRUNPTkRTJywgJ1RPX0RBVEUnLCAnVE9fVElNRVNUQU1QJywgJ1RPX1VOSVhfVElNRVNUQU1QJywgJ1RPX1VUQ19USU1FU1RBTVAnLCAnVFJVTkMnLCAnVU5JWF9EQVRFJywgJ1VOSVhfTUlDUk9TJywgJ1VOSVhfTUlMTElTJywgJ1VOSVhfU0VDT05EUycsICdVTklYX1RJTUVTVEFNUCcsICdXRUVLREFZJywgJ1dFRUtPRllFQVInLCAnV0lORE9XJywgJ1lFQVInXSxcbiAgLy8gaHR0cDovL3NwYXJrLmFwYWNoZS5vcmcvZG9jcy9sYXRlc3Qvc3FsLXJlZi1mdW5jdGlvbnMtYnVpbHRpbi5odG1sI2pzb24tZnVuY3Rpb25zXG4gIGpzb246IFsnRlJPTV9KU09OJywgJ0dFVF9KU09OX09CSkVDVCcsICdKU09OX0FSUkFZX0xFTkdUSCcsICdKU09OX09CSkVDVF9LRVlTJywgJ0pTT05fVFVQTEUnLCAnU0NIRU1BX09GX0pTT04nLCAnVE9fSlNPTiddLFxuICAvLyBodHRwOi8vc3BhcmsuYXBhY2hlLm9yZy9kb2NzL2xhdGVzdC9hcGkvc3FsL2luZGV4Lmh0bWxcbiAgbWlzYzogWydBQlMnLCAnQUNPUycsICdBQ09TSCcsICdBR0dSRUdBVEUnLCAnQVJSQVlfU09SVCcsICdBU0NJSScsICdBU0lOJywgJ0FTSU5IJywgJ0FTU0VSVF9UUlVFJywgJ0FUQU4nLCAnQVRBTjInLCAnQVRBTkgnLCAnQkFTRTY0JywgJ0JJR0lOVCcsICdCSU4nLCAnQklOQVJZJywgJ0JJVF9DT1VOVCcsICdCSVRfR0VUJywgJ0JJVF9MRU5HVEgnLCAnQk9PTEVBTicsICdCUk9VTkQnLCAnQlRSSU0nLCAnQ0FSRElOQUxJVFknLCAnQ0JSVCcsICdDRUlMJywgJ0NFSUxJTkcnLCAnQ0hBUicsICdDSEFSX0xFTkdUSCcsICdDSEFSQUNURVJfTEVOR1RIJywgJ0NIUicsICdDT05DQVQnLCAnQ09OQ0FUX1dTJywgJ0NPTlYnLCAnQ09TJywgJ0NPU0gnLCAnQ09UJywgJ0NSQzMyJywgJ0NVUlJFTlRfQ0FUQUxPRycsICdDVVJSRU5UX0RBVEFCQVNFJywgJ0NVUlJFTlRfVVNFUicsICdEQVRFJywgJ0RFQ0lNQUwnLCAnREVHUkVFUycsICdET1VCTEUnLCAvLyAnRScsXG4gICdFTFQnLCAnRVhQJywgJ0VYUE0xJywgJ0ZBQ1RPUklBTCcsICdGSU5EX0lOX1NFVCcsICdGTE9BVCcsICdGTE9PUicsICdGT1JBTEwnLCAnRk9STUFUX05VTUJFUicsICdGT1JNQVRfU1RSSU5HJywgJ0ZST01fQ1NWJywgJ0dFVEJJVCcsICdIQVNIJywgJ0hFWCcsICdIWVBPVCcsICdJTklUQ0FQJywgJ0lOTElORScsICdJTkxJTkVfT1VURVInLCAnSU5QVVRfRklMRV9CTE9DS19MRU5HVEgnLCAnSU5QVVRfRklMRV9CTE9DS19TVEFSVCcsICdJTlBVVF9GSUxFX05BTUUnLCAnSU5TVFInLCAnSU5UJywgJ0lTTkFOJywgJ0lTTk9UTlVMTCcsICdJU05VTEwnLCAnSkFWQV9NRVRIT0QnLCAnTENBU0UnLCAnTEVGVCcsICdMRU5HVEgnLCAnTEVWRU5TSFRFSU4nLCAnTE4nLCAnTE9DQVRFJywgJ0xPRycsICdMT0cxMCcsICdMT0cxUCcsICdMT0cyJywgJ0xPV0VSJywgJ0xQQUQnLCAnTFRSSU0nLCAnTUFQX0ZJTFRFUicsICdNQVBfWklQX1dJVEgnLCAnTUQ1JywgJ01PRCcsICdNT05PVE9OSUNBTExZX0lOQ1JFQVNJTkdfSUQnLCAnTkFNRURfU1RSVUNUJywgJ05BTlZMJywgJ05FR0FUSVZFJywgJ05WTCcsICdOVkwyJywgJ09DVEVUX0xFTkdUSCcsICdPVkVSTEFZJywgJ1BBUlNFX1VSTCcsICdQSScsICdQTU9EJywgJ1BPU0VYUExPREUnLCAnUE9TRVhQTE9ERV9PVVRFUicsICdQT1NJVElPTicsICdQT1NJVElWRScsICdQT1cnLCAnUE9XRVInLCAnUFJJTlRGJywgJ1JBRElBTlMnLCAnUkFJU0VfRVJST1InLCAnUkFORCcsICdSQU5ETicsICdSQU5ET00nLCAnUkVGTEVDVCcsICdSRUdFWFBfRVhUUkFDVCcsICdSRUdFWFBfRVhUUkFDVF9BTEwnLCAnUkVHRVhQX0xJS0UnLCAnUkVHRVhQX1JFUExBQ0UnLCAnUkVQRUFUJywgJ1JFUExBQ0UnLCAnUkVWRVJTRScsICdSSUdIVCcsICdSSU5UJywgJ1JPVU5EJywgJ1JQQUQnLCAnUlRSSU0nLCAnU0NIRU1BX09GX0NTVicsICdTRU5URU5DRVMnLCAnU0hBJywgJ1NIQTEnLCAnU0hBMicsICdTSElGVExFRlQnLCAnU0hJRlRSSUdIVCcsICdTSElGVFJJR0hUVU5TSUdORUQnLCAnU0lHTicsICdTSUdOVU0nLCAnU0lOJywgJ1NJTkgnLCAnU01BTExJTlQnLCAnU09VTkRFWCcsICdTUEFDRScsICdTUEFSS19QQVJUSVRJT05fSUQnLCAnU1BMSVQnLCAnU1FSVCcsICdTVEFDSycsICdTVUJTVFInLCAnU1VCU1RSSU5HJywgJ1NVQlNUUklOR19JTkRFWCcsICdUQU4nLCAnVEFOSCcsICdUSU1FU1RBTVAnLCAnVElOWUlOVCcsICdUT19DU1YnLCAnVFJBTlNGT1JNX0tFWVMnLCAnVFJBTlNGT1JNX1ZBTFVFUycsICdUUkFOU0xBVEUnLCAnVFJJTScsICdUUllfQUREJywgJ1RSWV9ESVZJREUnLCAnVFlQRU9GJywgJ1VDQVNFJywgJ1VOQkFTRTY0JywgJ1VOSEVYJywgJ1VQUEVSJywgJ1VVSUQnLCAnVkVSU0lPTicsICdXSURUSF9CVUNLRVQnLCAnWFBBVEgnLCAnWFBBVEhfQk9PTEVBTicsICdYUEFUSF9ET1VCTEUnLCAnWFBBVEhfRkxPQVQnLCAnWFBBVEhfSU5UJywgJ1hQQVRIX0xPTkcnLCAnWFBBVEhfTlVNQkVSJywgJ1hQQVRIX1NIT1JUJywgJ1hQQVRIX1NUUklORycsICdYWEhBU0g2NCcsICdaSVBfV0lUSCddLFxuICBjYXN0OiBbJ0NBU1QnXSxcbiAgLy8gU2hvcnRoYW5kIGZ1bmN0aW9ucyB0byB1c2UgaW4gcGxhY2Ugb2YgQ0FTRSBleHByZXNzaW9uXG4gIGNhc2VBYmJyZXY6IFsnQ09BTEVTQ0UnLCAnTlVMTElGJ10sXG4gIC8vIFBhcmFtZXRlcml6ZWQgZGF0YSB0eXBlc1xuICAvLyBodHRwczovL3NwYXJrLmFwYWNoZS5vcmcvZG9jcy9sYXRlc3Qvc3FsLXJlZi1kYXRhdHlwZXMuaHRtbFxuICBkYXRhVHlwZXM6IFsnREVDSU1BTCcsICdERUMnLCAnTlVNRVJJQycsIC8vIE5vIHZhcmNoYXIgdHlwZSBpbiBTcGFyaywgb25seSBTVFJJTkcuIEFkZGVkIGZvciB0aGUgc2FrZSBvZiB0ZXN0c1xuICAnVkFSQ0hBUiddXG59KTtcbmV4cG9ydHMuZnVuY3Rpb25zID0gZnVuY3Rpb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BhcmsuZnVuY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/spark/spark.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/spark/spark.keywords.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/spark/spark.keywords.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://deepkb.com/CO_000013/en/kb/IMPORT-fbfa59f0-2bf1-31fe-bb7b-0f9efe9932c6/spark-sql-keywords\n  all: ['ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANTI', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', 'DATABASES', 'DAY', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DIV', 'DROP', 'ESCAPE', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILTER', 'FILEFORMAT', 'FIRST', 'FIRST_VALUE', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HOUR', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INNER', 'INPATH', 'INPUTFORMAT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'KEYS', 'LAST', 'LAST_VALUE', 'LATERAL', 'LAZY', 'LEADING', 'LEFT', 'LIKE', 'LINES', 'LIST', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MATCHED', 'MERGE', 'MINUTE', 'MONTH', 'MSCK', 'NAMESPACE', 'NAMESPACES', 'NATURAL', 'NO', 'NOT', 'NULL', 'NULLS', 'OF', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERWRITE', 'OWNER', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PLACING', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PROPERTIES', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'RENAME', 'REPAIR', 'REPLACE', 'RESPECT', 'RESTRICT', 'REVOKE', 'RIGHT', 'RLIKE', 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SELECT', 'SEMI', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TBLPROPERTIES', 'TEMPORARY', 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRIM', 'TRUE', 'TRUNCATE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNSET', 'USE', 'USER', 'USING', 'VIEW', 'WINDOW', 'YEAR', // other\n  'ANALYSE', 'ARRAY_ZIP', 'COALESCE', 'CONTAINS', 'CONVERT', 'DAYS', 'DAY_HOUR', 'DAY_MINUTE', 'DAY_SECOND', 'DECODE', 'DEFAULT', 'DISTINCTROW', 'ENCODE', 'EXPLODE', 'EXPLODE_OUTER', 'FIXED', 'GREATEST', 'GROUP_CONCAT', 'HOURS', 'HOUR_MINUTE', 'HOUR_SECOND', 'IFNULL', 'LEAST', 'LEVEL', 'MINUTE_SECOND', 'NULLIF', 'OFFSET', 'ON', 'OPTIMIZE', 'REGEXP', 'SEPARATOR', 'SIZE', 'STRING', 'TYPE', 'TYPES', 'UNSIGNED', 'VARIABLES', 'YEAR_MONTH']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=spark.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcGFyay9zcGFyay5rZXl3b3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL3NwYXJrL3NwYXJrLmtleXdvcmRzLmpzPzM2YzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmtleXdvcmRzID0gdm9pZCAwO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzXCIpO1xuXG52YXIga2V5d29yZHMgPSAoMCwgX3V0aWxzLmZsYXRLZXl3b3JkTGlzdCkoe1xuICAvLyBodHRwczovL2RlZXBrYi5jb20vQ09fMDAwMDEzL2VuL2tiL0lNUE9SVC1mYmZhNTlmMC0yYmYxLTMxZmUtYmI3Yi0wZjllZmU5OTMyYzYvc3Bhcmstc3FsLWtleXdvcmRzXG4gIGFsbDogWydBREQnLCAnQUZURVInLCAnQUxMJywgJ0FMVEVSJywgJ0FOQUxZWkUnLCAnQU5EJywgJ0FOVEknLCAnQU5ZJywgJ0FSQ0hJVkUnLCAnQVJSQVknLCAnQVMnLCAnQVNDJywgJ0FUJywgJ0FVVEhPUklaQVRJT04nLCAnQkVUV0VFTicsICdCT1RIJywgJ0JVQ0tFVCcsICdCVUNLRVRTJywgJ0JZJywgJ0NBQ0hFJywgJ0NBU0NBREUnLCAnQ0FTVCcsICdDSEFOR0UnLCAnQ0hFQ0snLCAnQ0xFQVInLCAnQ0xVU1RFUicsICdDTFVTVEVSRUQnLCAnQ09ERUdFTicsICdDT0xMQVRFJywgJ0NPTExFQ1RJT04nLCAnQ09MVU1OJywgJ0NPTFVNTlMnLCAnQ09NTUVOVCcsICdDT01NSVQnLCAnQ09NUEFDVCcsICdDT01QQUNUSU9OUycsICdDT01QVVRFJywgJ0NPTkNBVEVOQVRFJywgJ0NPTlNUUkFJTlQnLCAnQ09TVCcsICdDUkVBVEUnLCAnQ1JPU1MnLCAnQ1VCRScsICdDVVJSRU5UJywgJ0NVUlJFTlRfREFURScsICdDVVJSRU5UX1RJTUUnLCAnQ1VSUkVOVF9USU1FU1RBTVAnLCAnQ1VSUkVOVF9VU0VSJywgJ0RBVEEnLCAnREFUQUJBU0UnLCAnREFUQUJBU0VTJywgJ0RBWScsICdEQlBST1BFUlRJRVMnLCAnREVGSU5FRCcsICdERUxFVEUnLCAnREVMSU1JVEVEJywgJ0RFU0MnLCAnREVTQ1JJQkUnLCAnREZTJywgJ0RJUkVDVE9SSUVTJywgJ0RJUkVDVE9SWScsICdESVNUSU5DVCcsICdESVNUUklCVVRFJywgJ0RJVicsICdEUk9QJywgJ0VTQ0FQRScsICdFU0NBUEVEJywgJ0VYQ0VQVCcsICdFWENIQU5HRScsICdFWElTVFMnLCAnRVhQT1JUJywgJ0VYVEVOREVEJywgJ0VYVEVSTkFMJywgJ0VYVFJBQ1QnLCAnRkFMU0UnLCAnRkVUQ0gnLCAnRklFTERTJywgJ0ZJTFRFUicsICdGSUxFRk9STUFUJywgJ0ZJUlNUJywgJ0ZJUlNUX1ZBTFVFJywgJ0ZPTExPV0lORycsICdGT1InLCAnRk9SRUlHTicsICdGT1JNQVQnLCAnRk9STUFUVEVEJywgJ0ZVTEwnLCAnRlVOQ1RJT04nLCAnRlVOQ1RJT05TJywgJ0dMT0JBTCcsICdHUkFOVCcsICdHUk9VUCcsICdHUk9VUElORycsICdIT1VSJywgJ0lGJywgJ0lHTk9SRScsICdJTVBPUlQnLCAnSU4nLCAnSU5ERVgnLCAnSU5ERVhFUycsICdJTk5FUicsICdJTlBBVEgnLCAnSU5QVVRGT1JNQVQnLCAnSU5URVJTRUNUJywgJ0lOVEVSVkFMJywgJ0lOVE8nLCAnSVMnLCAnSVRFTVMnLCAnS0VZUycsICdMQVNUJywgJ0xBU1RfVkFMVUUnLCAnTEFURVJBTCcsICdMQVpZJywgJ0xFQURJTkcnLCAnTEVGVCcsICdMSUtFJywgJ0xJTkVTJywgJ0xJU1QnLCAnTE9DQUwnLCAnTE9DQVRJT04nLCAnTE9DSycsICdMT0NLUycsICdMT0dJQ0FMJywgJ01BQ1JPJywgJ01BUCcsICdNQVRDSEVEJywgJ01FUkdFJywgJ01JTlVURScsICdNT05USCcsICdNU0NLJywgJ05BTUVTUEFDRScsICdOQU1FU1BBQ0VTJywgJ05BVFVSQUwnLCAnTk8nLCAnTk9UJywgJ05VTEwnLCAnTlVMTFMnLCAnT0YnLCAnT05MWScsICdPUFRJT04nLCAnT1BUSU9OUycsICdPUicsICdPUkRFUicsICdPVVQnLCAnT1VURVInLCAnT1VUUFVURk9STUFUJywgJ09WRVInLCAnT1ZFUkxBUFMnLCAnT1ZFUkxBWScsICdPVkVSV1JJVEUnLCAnT1dORVInLCAnUEFSVElUSU9OJywgJ1BBUlRJVElPTkVEJywgJ1BBUlRJVElPTlMnLCAnUEVSQ0VOVCcsICdQTEFDSU5HJywgJ1BPU0lUSU9OJywgJ1BSRUNFRElORycsICdQUklNQVJZJywgJ1BSSU5DSVBBTFMnLCAnUFJPUEVSVElFUycsICdQVVJHRScsICdRVUVSWScsICdSQU5HRScsICdSRUNPUkRSRUFERVInLCAnUkVDT1JEV1JJVEVSJywgJ1JFQ09WRVInLCAnUkVEVUNFJywgJ1JFRkVSRU5DRVMnLCAnUkVOQU1FJywgJ1JFUEFJUicsICdSRVBMQUNFJywgJ1JFU1BFQ1QnLCAnUkVTVFJJQ1QnLCAnUkVWT0tFJywgJ1JJR0hUJywgJ1JMSUtFJywgJ1JPTEUnLCAnUk9MRVMnLCAnUk9MTEJBQ0snLCAnUk9MTFVQJywgJ1JPVycsICdST1dTJywgJ1NDSEVNQScsICdTRUNPTkQnLCAnU0VMRUNUJywgJ1NFTUknLCAnU0VQQVJBVEVEJywgJ1NFUkRFJywgJ1NFUkRFUFJPUEVSVElFUycsICdTRVNTSU9OX1VTRVInLCAnU0VUUycsICdTSE9XJywgJ1NLRVdFRCcsICdTT01FJywgJ1NPUlQnLCAnU09SVEVEJywgJ1NUQVJUJywgJ1NUQVRJU1RJQ1MnLCAnU1RPUkVEJywgJ1NUUkFUSUZZJywgJ1NUUlVDVCcsICdTVUJTVFInLCAnU1VCU1RSSU5HJywgJ1RBQkxFJywgJ1RBQkxFUycsICdUQkxQUk9QRVJUSUVTJywgJ1RFTVBPUkFSWScsICdURVJNSU5BVEVEJywgJ1RIRU4nLCAnVE8nLCAnVE9VQ0gnLCAnVFJBSUxJTkcnLCAnVFJBTlNBQ1RJT04nLCAnVFJBTlNBQ1RJT05TJywgJ1RSSU0nLCAnVFJVRScsICdUUlVOQ0FURScsICdVTkFSQ0hJVkUnLCAnVU5CT1VOREVEJywgJ1VOQ0FDSEUnLCAnVU5JUVVFJywgJ1VOS05PV04nLCAnVU5MT0NLJywgJ1VOU0VUJywgJ1VTRScsICdVU0VSJywgJ1VTSU5HJywgJ1ZJRVcnLCAnV0lORE9XJywgJ1lFQVInLCAvLyBvdGhlclxuICAnQU5BTFlTRScsICdBUlJBWV9aSVAnLCAnQ09BTEVTQ0UnLCAnQ09OVEFJTlMnLCAnQ09OVkVSVCcsICdEQVlTJywgJ0RBWV9IT1VSJywgJ0RBWV9NSU5VVEUnLCAnREFZX1NFQ09ORCcsICdERUNPREUnLCAnREVGQVVMVCcsICdESVNUSU5DVFJPVycsICdFTkNPREUnLCAnRVhQTE9ERScsICdFWFBMT0RFX09VVEVSJywgJ0ZJWEVEJywgJ0dSRUFURVNUJywgJ0dST1VQX0NPTkNBVCcsICdIT1VSUycsICdIT1VSX01JTlVURScsICdIT1VSX1NFQ09ORCcsICdJRk5VTEwnLCAnTEVBU1QnLCAnTEVWRUwnLCAnTUlOVVRFX1NFQ09ORCcsICdOVUxMSUYnLCAnT0ZGU0VUJywgJ09OJywgJ09QVElNSVpFJywgJ1JFR0VYUCcsICdTRVBBUkFUT1InLCAnU0laRScsICdTVFJJTkcnLCAnVFlQRScsICdUWVBFUycsICdVTlNJR05FRCcsICdWQVJJQUJMRVMnLCAnWUVBUl9NT05USCddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwYXJrLmtleXdvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/spark/spark.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/sql/sql.formatter.js":
/*!************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/sql/sql.formatter.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _sql = __webpack_require__(/*! ./sql.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/sql/sql.functions.js\");\n\nvar _sql2 = __webpack_require__(/*! ./sql.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/sql/sql.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY [ALL | DISTINCT]', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', 'WHERE CURRENT OF', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE TABLE', // Data definition\n'CREATE [RECURSIVE] VIEW', 'CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE', 'DROP TABLE', // - alter table:\n'ALTER TABLE', 'ADD COLUMN', 'DROP [COLUMN]', 'RENAME COLUMN', 'RENAME TO', 'ALTER [COLUMN]', '{SET | DROP} DEFAULT', // for alter column\n'ADD SCOPE', // for alter column\n'DROP SCOPE {CASCADE | RESTRICT}', // for alter column\n'RESTART WITH', // for alter column\n// other\n'SET SCHEMA']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', '{ROWS | RANGE} BETWEEN']);\n\nvar SqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(SqlFormatter, _Formatter);\n\n  var _super = _createSuper(SqlFormatter);\n\n  function SqlFormatter() {\n    _classCallCheck(this, SqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _sql2.keywords,\n        reservedFunctionNames: _sql.functions,\n        stringTypes: [{\n          quote: \"''-qq-bs\",\n          prefixes: ['N', 'U&']\n        }, {\n          quote: \"''-raw\",\n          prefixes: ['X'],\n          requirePrefix: true\n        }],\n        identTypes: [\"\\\"\\\"-qq\", '``'],\n        paramTypes: {\n          positional: true\n        },\n        operators: ['||']\n      });\n    }\n  }]);\n\n  return SqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = SqlFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=sql.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcWwvc3FsLmZvcm1hdHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL3NxbC9zcWwuZm9ybWF0dGVyLmpzP2JkZjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX2V4cGFuZFBocmFzZXMgPSByZXF1aXJlKFwiLi4vLi4vZXhwYW5kUGhyYXNlc1wiKTtcblxudmFyIF9Gb3JtYXR0ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vZm9ybWF0dGVyL0Zvcm1hdHRlclwiKSk7XG5cbnZhciBfVG9rZW5pemVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vbGV4ZXIvVG9rZW5pemVyXCIpKTtcblxudmFyIF9zcWwgPSByZXF1aXJlKFwiLi9zcWwuZnVuY3Rpb25zXCIpO1xuXG52YXIgX3NxbDIgPSByZXF1aXJlKFwiLi9zcWwua2V5d29yZHNcIik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzdWJDbGFzcywgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogZmFsc2UgfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gZWxzZSBpZiAoY2FsbCAhPT0gdm9pZCAwKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbnZhciByZXNlcnZlZFNlbGVjdCA9ICgwLCBfZXhwYW5kUGhyYXNlcy5leHBhbmRQaHJhc2VzKShbJ1NFTEVDVCBbQUxMIHwgRElTVElOQ1RdJ10pO1xudmFyIHJlc2VydmVkQ29tbWFuZHMgPSAoMCwgX2V4cGFuZFBocmFzZXMuZXhwYW5kUGhyYXNlcykoWy8vIHF1ZXJpZXNcbidXSVRIIFtSRUNVUlNJVkVdJywgJ0ZST00nLCAnV0hFUkUnLCAnR1JPVVAgQlkgW0FMTCB8IERJU1RJTkNUXScsICdIQVZJTkcnLCAnV0lORE9XJywgJ1BBUlRJVElPTiBCWScsICdPUkRFUiBCWScsICdMSU1JVCcsICdPRkZTRVQnLCAnRkVUQ0gge0ZJUlNUIHwgTkVYVH0nLCAvLyBEYXRhIG1hbmlwdWxhdGlvblxuLy8gLSBpbnNlcnQ6XG4nSU5TRVJUIElOVE8nLCAnVkFMVUVTJywgLy8gLSB1cGRhdGU6XG4nVVBEQVRFJywgJ1NFVCcsICdXSEVSRSBDVVJSRU5UIE9GJywgLy8gLSBkZWxldGU6XG4nREVMRVRFIEZST00nLCAvLyAtIHRydW5jYXRlOlxuJ1RSVU5DQVRFIFRBQkxFJywgLy8gRGF0YSBkZWZpbml0aW9uXG4nQ1JFQVRFIFtSRUNVUlNJVkVdIFZJRVcnLCAnQ1JFQVRFIFtHTE9CQUwgVEVNUE9SQVJZIHwgTE9DQUwgVEVNUE9SQVJZXSBUQUJMRScsICdEUk9QIFRBQkxFJywgLy8gLSBhbHRlciB0YWJsZTpcbidBTFRFUiBUQUJMRScsICdBREQgQ09MVU1OJywgJ0RST1AgW0NPTFVNTl0nLCAnUkVOQU1FIENPTFVNTicsICdSRU5BTUUgVE8nLCAnQUxURVIgW0NPTFVNTl0nLCAne1NFVCB8IERST1B9IERFRkFVTFQnLCAvLyBmb3IgYWx0ZXIgY29sdW1uXG4nQUREIFNDT1BFJywgLy8gZm9yIGFsdGVyIGNvbHVtblxuJ0RST1AgU0NPUEUge0NBU0NBREUgfCBSRVNUUklDVH0nLCAvLyBmb3IgYWx0ZXIgY29sdW1uXG4nUkVTVEFSVCBXSVRIJywgLy8gZm9yIGFsdGVyIGNvbHVtblxuLy8gb3RoZXJcbidTRVQgU0NIRU1BJ10pO1xudmFyIHJlc2VydmVkU2V0T3BlcmF0aW9ucyA9ICgwLCBfZXhwYW5kUGhyYXNlcy5leHBhbmRQaHJhc2VzKShbJ1VOSU9OIFtBTEwgfCBESVNUSU5DVF0nLCAnRVhDRVBUIFtBTEwgfCBESVNUSU5DVF0nLCAnSU5URVJTRUNUIFtBTEwgfCBESVNUSU5DVF0nXSk7XG52YXIgcmVzZXJ2ZWRKb2lucyA9ICgwLCBfZXhwYW5kUGhyYXNlcy5leHBhbmRQaHJhc2VzKShbJ0pPSU4nLCAne0xFRlQgfCBSSUdIVCB8IEZVTEx9IFtPVVRFUl0gSk9JTicsICd7SU5ORVIgfCBDUk9TU30gSk9JTicsICdOQVRVUkFMIFtJTk5FUl0gSk9JTicsICdOQVRVUkFMIHtMRUZUIHwgUklHSFQgfCBGVUxMfSBbT1VURVJdIEpPSU4nXSk7XG52YXIgcmVzZXJ2ZWRQaHJhc2VzID0gKDAsIF9leHBhbmRQaHJhc2VzLmV4cGFuZFBocmFzZXMpKFsnT04gREVMRVRFJywgJ09OIFVQREFURScsICd7Uk9XUyB8IFJBTkdFfSBCRVRXRUVOJ10pO1xuXG52YXIgU3FsRm9ybWF0dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRm9ybWF0dGVyKSB7XG4gIF9pbmhlcml0cyhTcWxGb3JtYXR0ZXIsIF9Gb3JtYXR0ZXIpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoU3FsRm9ybWF0dGVyKTtcblxuICBmdW5jdGlvbiBTcWxGb3JtYXR0ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNxbEZvcm1hdHRlcik7XG5cbiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoU3FsRm9ybWF0dGVyLCBbe1xuICAgIGtleTogXCJ0b2tlbml6ZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9rZW5pemVyKCkge1xuICAgICAgcmV0dXJuIG5ldyBfVG9rZW5pemVyW1wiZGVmYXVsdFwiXSh7XG4gICAgICAgIHJlc2VydmVkQ29tbWFuZHM6IHJlc2VydmVkQ29tbWFuZHMsXG4gICAgICAgIHJlc2VydmVkU2VsZWN0OiByZXNlcnZlZFNlbGVjdCxcbiAgICAgICAgcmVzZXJ2ZWRTZXRPcGVyYXRpb25zOiByZXNlcnZlZFNldE9wZXJhdGlvbnMsXG4gICAgICAgIHJlc2VydmVkSm9pbnM6IHJlc2VydmVkSm9pbnMsXG4gICAgICAgIHJlc2VydmVkRGVwZW5kZW50Q2xhdXNlczogWydXSEVOJywgJ0VMU0UnXSxcbiAgICAgICAgcmVzZXJ2ZWRQaHJhc2VzOiByZXNlcnZlZFBocmFzZXMsXG4gICAgICAgIHJlc2VydmVkS2V5d29yZHM6IF9zcWwyLmtleXdvcmRzLFxuICAgICAgICByZXNlcnZlZEZ1bmN0aW9uTmFtZXM6IF9zcWwuZnVuY3Rpb25zLFxuICAgICAgICBzdHJpbmdUeXBlczogW3tcbiAgICAgICAgICBxdW90ZTogXCInJy1xcS1ic1wiLFxuICAgICAgICAgIHByZWZpeGVzOiBbJ04nLCAnVSYnXVxuICAgICAgICB9LCB7XG4gICAgICAgICAgcXVvdGU6IFwiJyctcmF3XCIsXG4gICAgICAgICAgcHJlZml4ZXM6IFsnWCddLFxuICAgICAgICAgIHJlcXVpcmVQcmVmaXg6IHRydWVcbiAgICAgICAgfV0sXG4gICAgICAgIGlkZW50VHlwZXM6IFtcIlxcXCJcXFwiLXFxXCIsICdgYCddLFxuICAgICAgICBwYXJhbVR5cGVzOiB7XG4gICAgICAgICAgcG9zaXRpb25hbDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBvcGVyYXRvcnM6IFsnfHwnXVxuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNxbEZvcm1hdHRlcjtcbn0oX0Zvcm1hdHRlcjJbXCJkZWZhdWx0XCJdKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBTcWxGb3JtYXR0ZXI7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNxbC5mb3JtYXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/sql/sql.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/sql/sql.functions.js":
/*!************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/sql/sql.functions.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_9_set_function_specification\n  set: ['GROUPING'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_10_window_function\n  window: ['RANK', 'DENSE_RANK', 'PERCENT_RANK', 'CUME_DIST', 'ROW_NUMBER'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_27_numeric_value_function\n  numeric: ['POSITION', 'OCCURRENCES_REGEX', 'POSITION_REGEX', 'EXTRACT', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'OCTET_LENGTH', 'CARDINALITY', 'ABS', 'MOD', 'LN', 'EXP', 'POWER', 'SQRT', 'FLOOR', 'CEIL', 'CEILING', 'WIDTH_BUCKET'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_29_string_value_function\n  string: ['SUBSTRING', 'SUBSTRING_REGEX', 'UPPER', 'LOWER', 'CONVERT', 'TRANSLATE', 'TRANSLATE_REGEX', 'TRIM', 'OVERLAY', 'NORMALIZE', 'SPECIFICTYPE'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_31_datetime_value_function\n  datetime: ['CURRENT_DATE', 'CURRENT_TIME', 'LOCALTIME', 'CURRENT_TIMESTAMP', 'LOCALTIMESTAMP'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_38_multiset_value_function\n  // SET serves multiple roles: a SET() function and a SET keyword e.g. in UPDATE table SET ...\n  // multiset: ['SET'], (disabled for now)\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_10_9_aggregate_function\n  aggregate: ['COUNT', 'AVG', 'MAX', 'MIN', 'SUM', // 'EVERY',\n  // 'ANY',\n  // 'SOME',\n  'STDDEV_POP', 'STDDEV_SAMP', 'VAR_SAMP', 'VAR_POP', 'COLLECT', 'FUSION', 'INTERSECTION', 'COVAR_POP', 'COVAR_SAMP', 'CORR', 'REGR_SLOPE', 'REGR_INTERCEPT', 'REGR_COUNT', 'REGR_R2', 'REGR_AVGX', 'REGR_AVGY', 'REGR_SXX', 'REGR_SYY', 'REGR_SXY', 'PERCENTILE_CONT', 'PERCENTILE_DISC'],\n  // CAST is a pretty complex case, involving multiple forms:\n  // - CAST(col AS int)\n  // - CAST(...) WITH ...\n  // - CAST FROM int\n  // - CREATE CAST(mycol AS int) WITH ...\n  cast: ['CAST'],\n  // Shorthand functions to use in place of CASE expression\n  caseAbbrev: ['COALESCE', 'NULLIF'],\n  // Non-standard functions that have widespread support\n  nonStandard: ['ROUND', 'SIN', 'COS', 'TAN', 'ASIN', 'ACOS', 'ATAN'],\n  // Data types with parameters like VARCHAR(100)\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#predefined-type\n  dataTypes: ['CHARACTER', 'CHAR', 'CHARACTER VARYING', 'CHAR VARYING', 'VARCHAR', 'CHARACTER LARGE OBJECT', 'CHAR LARGE OBJECT', 'CLOB', 'NATIONAL CHARACTER', 'NATIONAL CHAR', 'NCHAR', 'NATIONAL CHARACTER VARYING', 'NATIONAL CHAR VARYING', 'NCHAR VARYING', 'NATIONAL CHARACTER LARGE OBJECT', 'NCHAR LARGE OBJECT', 'NCLOB', 'BINARY', 'BINARY VARYING', 'VARBINARY', 'BINARY LARGE OBJECT', 'BLOB', 'NUMERIC', 'DECIMAL', 'DEC', 'TIME', 'TIMESTAMP']\n});\nexports.functions = functions;\n//# sourceMappingURL=sql.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcWwvc3FsLmZ1bmN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvc3FsL3NxbC5mdW5jdGlvbnMuanM/NzM1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZnVuY3Rpb25zID0gdm9pZCAwO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzXCIpO1xuXG52YXIgZnVuY3Rpb25zID0gKDAsIF91dGlscy5mbGF0S2V5d29yZExpc3QpKHtcbiAgLy8gaHR0cHM6Ly9qYWtld2hlYXQuZ2l0aHViLmlvL3NxbC1vdmVydmlldy9zcWwtMjAwOC1mb3VuZGF0aW9uLWdyYW1tYXIuaHRtbCNfNl85X3NldF9mdW5jdGlvbl9zcGVjaWZpY2F0aW9uXG4gIHNldDogWydHUk9VUElORyddLFxuICAvLyBodHRwczovL2pha2V3aGVhdC5naXRodWIuaW8vc3FsLW92ZXJ2aWV3L3NxbC0yMDA4LWZvdW5kYXRpb24tZ3JhbW1hci5odG1sI182XzEwX3dpbmRvd19mdW5jdGlvblxuICB3aW5kb3c6IFsnUkFOSycsICdERU5TRV9SQU5LJywgJ1BFUkNFTlRfUkFOSycsICdDVU1FX0RJU1QnLCAnUk9XX05VTUJFUiddLFxuICAvLyBodHRwczovL2pha2V3aGVhdC5naXRodWIuaW8vc3FsLW92ZXJ2aWV3L3NxbC0yMDA4LWZvdW5kYXRpb24tZ3JhbW1hci5odG1sI182XzI3X251bWVyaWNfdmFsdWVfZnVuY3Rpb25cbiAgbnVtZXJpYzogWydQT1NJVElPTicsICdPQ0NVUlJFTkNFU19SRUdFWCcsICdQT1NJVElPTl9SRUdFWCcsICdFWFRSQUNUJywgJ0NIQVJfTEVOR1RIJywgJ0NIQVJBQ1RFUl9MRU5HVEgnLCAnT0NURVRfTEVOR1RIJywgJ0NBUkRJTkFMSVRZJywgJ0FCUycsICdNT0QnLCAnTE4nLCAnRVhQJywgJ1BPV0VSJywgJ1NRUlQnLCAnRkxPT1InLCAnQ0VJTCcsICdDRUlMSU5HJywgJ1dJRFRIX0JVQ0tFVCddLFxuICAvLyBodHRwczovL2pha2V3aGVhdC5naXRodWIuaW8vc3FsLW92ZXJ2aWV3L3NxbC0yMDA4LWZvdW5kYXRpb24tZ3JhbW1hci5odG1sI182XzI5X3N0cmluZ192YWx1ZV9mdW5jdGlvblxuICBzdHJpbmc6IFsnU1VCU1RSSU5HJywgJ1NVQlNUUklOR19SRUdFWCcsICdVUFBFUicsICdMT1dFUicsICdDT05WRVJUJywgJ1RSQU5TTEFURScsICdUUkFOU0xBVEVfUkVHRVgnLCAnVFJJTScsICdPVkVSTEFZJywgJ05PUk1BTElaRScsICdTUEVDSUZJQ1RZUEUnXSxcbiAgLy8gaHR0cHM6Ly9qYWtld2hlYXQuZ2l0aHViLmlvL3NxbC1vdmVydmlldy9zcWwtMjAwOC1mb3VuZGF0aW9uLWdyYW1tYXIuaHRtbCNfNl8zMV9kYXRldGltZV92YWx1ZV9mdW5jdGlvblxuICBkYXRldGltZTogWydDVVJSRU5UX0RBVEUnLCAnQ1VSUkVOVF9USU1FJywgJ0xPQ0FMVElNRScsICdDVVJSRU5UX1RJTUVTVEFNUCcsICdMT0NBTFRJTUVTVEFNUCddLFxuICAvLyBodHRwczovL2pha2V3aGVhdC5naXRodWIuaW8vc3FsLW92ZXJ2aWV3L3NxbC0yMDA4LWZvdW5kYXRpb24tZ3JhbW1hci5odG1sI182XzM4X211bHRpc2V0X3ZhbHVlX2Z1bmN0aW9uXG4gIC8vIFNFVCBzZXJ2ZXMgbXVsdGlwbGUgcm9sZXM6IGEgU0VUKCkgZnVuY3Rpb24gYW5kIGEgU0VUIGtleXdvcmQgZS5nLiBpbiBVUERBVEUgdGFibGUgU0VUIC4uLlxuICAvLyBtdWx0aXNldDogWydTRVQnXSwgKGRpc2FibGVkIGZvciBub3cpXG4gIC8vIGh0dHBzOi8vamFrZXdoZWF0LmdpdGh1Yi5pby9zcWwtb3ZlcnZpZXcvc3FsLTIwMDgtZm91bmRhdGlvbi1ncmFtbWFyLmh0bWwjXzEwXzlfYWdncmVnYXRlX2Z1bmN0aW9uXG4gIGFnZ3JlZ2F0ZTogWydDT1VOVCcsICdBVkcnLCAnTUFYJywgJ01JTicsICdTVU0nLCAvLyAnRVZFUlknLFxuICAvLyAnQU5ZJyxcbiAgLy8gJ1NPTUUnLFxuICAnU1REREVWX1BPUCcsICdTVERERVZfU0FNUCcsICdWQVJfU0FNUCcsICdWQVJfUE9QJywgJ0NPTExFQ1QnLCAnRlVTSU9OJywgJ0lOVEVSU0VDVElPTicsICdDT1ZBUl9QT1AnLCAnQ09WQVJfU0FNUCcsICdDT1JSJywgJ1JFR1JfU0xPUEUnLCAnUkVHUl9JTlRFUkNFUFQnLCAnUkVHUl9DT1VOVCcsICdSRUdSX1IyJywgJ1JFR1JfQVZHWCcsICdSRUdSX0FWR1knLCAnUkVHUl9TWFgnLCAnUkVHUl9TWVknLCAnUkVHUl9TWFknLCAnUEVSQ0VOVElMRV9DT05UJywgJ1BFUkNFTlRJTEVfRElTQyddLFxuICAvLyBDQVNUIGlzIGEgcHJldHR5IGNvbXBsZXggY2FzZSwgaW52b2x2aW5nIG11bHRpcGxlIGZvcm1zOlxuICAvLyAtIENBU1QoY29sIEFTIGludClcbiAgLy8gLSBDQVNUKC4uLikgV0lUSCAuLi5cbiAgLy8gLSBDQVNUIEZST00gaW50XG4gIC8vIC0gQ1JFQVRFIENBU1QobXljb2wgQVMgaW50KSBXSVRIIC4uLlxuICBjYXN0OiBbJ0NBU1QnXSxcbiAgLy8gU2hvcnRoYW5kIGZ1bmN0aW9ucyB0byB1c2UgaW4gcGxhY2Ugb2YgQ0FTRSBleHByZXNzaW9uXG4gIGNhc2VBYmJyZXY6IFsnQ09BTEVTQ0UnLCAnTlVMTElGJ10sXG4gIC8vIE5vbi1zdGFuZGFyZCBmdW5jdGlvbnMgdGhhdCBoYXZlIHdpZGVzcHJlYWQgc3VwcG9ydFxuICBub25TdGFuZGFyZDogWydST1VORCcsICdTSU4nLCAnQ09TJywgJ1RBTicsICdBU0lOJywgJ0FDT1MnLCAnQVRBTiddLFxuICAvLyBEYXRhIHR5cGVzIHdpdGggcGFyYW1ldGVycyBsaWtlIFZBUkNIQVIoMTAwKVxuICAvLyBodHRwczovL2pha2V3aGVhdC5naXRodWIuaW8vc3FsLW92ZXJ2aWV3L3NxbC0yMDA4LWZvdW5kYXRpb24tZ3JhbW1hci5odG1sI3ByZWRlZmluZWQtdHlwZVxuICBkYXRhVHlwZXM6IFsnQ0hBUkFDVEVSJywgJ0NIQVInLCAnQ0hBUkFDVEVSIFZBUllJTkcnLCAnQ0hBUiBWQVJZSU5HJywgJ1ZBUkNIQVInLCAnQ0hBUkFDVEVSIExBUkdFIE9CSkVDVCcsICdDSEFSIExBUkdFIE9CSkVDVCcsICdDTE9CJywgJ05BVElPTkFMIENIQVJBQ1RFUicsICdOQVRJT05BTCBDSEFSJywgJ05DSEFSJywgJ05BVElPTkFMIENIQVJBQ1RFUiBWQVJZSU5HJywgJ05BVElPTkFMIENIQVIgVkFSWUlORycsICdOQ0hBUiBWQVJZSU5HJywgJ05BVElPTkFMIENIQVJBQ1RFUiBMQVJHRSBPQkpFQ1QnLCAnTkNIQVIgTEFSR0UgT0JKRUNUJywgJ05DTE9CJywgJ0JJTkFSWScsICdCSU5BUlkgVkFSWUlORycsICdWQVJCSU5BUlknLCAnQklOQVJZIExBUkdFIE9CSkVDVCcsICdCTE9CJywgJ05VTUVSSUMnLCAnREVDSU1BTCcsICdERUMnLCAnVElNRScsICdUSU1FU1RBTVAnXVxufSk7XG5leHBvcnRzLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNxbC5mdW5jdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/sql/sql.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/sql/sql.keywords.js":
/*!***********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/sql/sql.keywords.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#reserved-word\n  all: ['ALL', 'ALLOCATE', 'ALTER', 'ANY', // <- moved over from functions\n  'ARE', 'ARRAY', 'AS', 'ASENSITIVE', 'ASYMMETRIC', 'AT', 'ATOMIC', 'AUTHORIZATION', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOOLEAN', 'BOTH', 'BY', 'CALL', 'CALLED', 'CASCADED', 'CAST', 'CHAR', 'CHARACTER', 'CHECK', 'CLOB', 'CLOSE', 'COALESCE', 'COLLATE', 'COLUMN', 'COMMIT', 'CONDITION', 'CONNECT', 'CONSTRAINT', 'CORRESPONDING', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DEFAULT_TRANSFORM_GROUP', 'CURRENT_PATH', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_TRANSFORM_GROUP_FOR_TYPE', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELETE', 'DEREF', 'DESCRIBE', 'DETERMINISTIC', 'DISCONNECT', 'DISTINCT', 'DOUBLE', 'DROP', 'DYNAMIC', 'EACH', 'ELEMENT', 'END-EXEC', 'ESCAPE', 'EVERY', // <- moved over from functions\n  'EXCEPT', 'EXEC', 'EXECUTE', 'EXISTS', 'EXTERNAL', 'FALSE', 'FETCH', 'FILTER', 'FLOAT', 'FOR', 'FOREIGN', 'FREE', 'FROM', 'FULL', 'FUNCTION', 'GET', 'GLOBAL', 'GRANT', 'GROUP', 'HAVING', 'HOLD', 'HOUR', 'IDENTITY', 'IN', 'INDICATOR', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'LANGUAGE', 'LARGE', 'LATERAL', 'LEADING', 'LEFT', 'LIKE', 'LIKE_REGEX', 'LOCAL', 'MATCH', 'MEMBER', 'MERGE', 'METHOD', 'MINUTE', 'MODIFIES', 'MODULE', 'MONTH', 'MULTISET', 'NATIONAL', 'NATURAL', 'NCHAR', 'NCLOB', 'NEW', 'NO', 'NONE', 'NOT', 'NULL', 'NULLIF', 'NUMERIC', 'OF', 'OLD', 'ON', 'ONLY', 'OPEN', 'ORDER', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'PARAMETER', 'PARTITION', 'PRECISION', 'PREPARE', 'PRIMARY', 'PROCEDURE', 'RANGE', 'READS', 'REAL', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'RELEASE', 'RESULT', 'RETURN', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SAVEPOINT', 'SCOPE', 'SCROLL', 'SEARCH', 'SECOND', 'SELECT', 'SENSITIVE', 'SESSION_USER', 'SET', 'SIMILAR', 'SMALLINT', 'SOME', // <- moved over from functions\n  'SPECIFIC', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'START', 'STATIC', 'SUBMULTISET', 'SYMMETRIC', 'SYSTEM', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSLATION', 'TREAT', 'TRIGGER', 'TRUE', 'UESCAPE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UPDATE', 'USER', 'USING', 'VALUE', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARYING', 'WHENEVER', 'WINDOW', 'WITHIN', 'WITHOUT', 'YEAR']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=sql.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcWwvc3FsLmtleXdvcmRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL3NxbC9zcWwua2V5d29yZHMuanM/YmNhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBrZXl3b3JkcyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vamFrZXdoZWF0LmdpdGh1Yi5pby9zcWwtb3ZlcnZpZXcvc3FsLTIwMDgtZm91bmRhdGlvbi1ncmFtbWFyLmh0bWwjcmVzZXJ2ZWQtd29yZFxuICBhbGw6IFsnQUxMJywgJ0FMTE9DQVRFJywgJ0FMVEVSJywgJ0FOWScsIC8vIDwtIG1vdmVkIG92ZXIgZnJvbSBmdW5jdGlvbnNcbiAgJ0FSRScsICdBUlJBWScsICdBUycsICdBU0VOU0lUSVZFJywgJ0FTWU1NRVRSSUMnLCAnQVQnLCAnQVRPTUlDJywgJ0FVVEhPUklaQVRJT04nLCAnQkVHSU4nLCAnQkVUV0VFTicsICdCSUdJTlQnLCAnQklOQVJZJywgJ0JMT0InLCAnQk9PTEVBTicsICdCT1RIJywgJ0JZJywgJ0NBTEwnLCAnQ0FMTEVEJywgJ0NBU0NBREVEJywgJ0NBU1QnLCAnQ0hBUicsICdDSEFSQUNURVInLCAnQ0hFQ0snLCAnQ0xPQicsICdDTE9TRScsICdDT0FMRVNDRScsICdDT0xMQVRFJywgJ0NPTFVNTicsICdDT01NSVQnLCAnQ09ORElUSU9OJywgJ0NPTk5FQ1QnLCAnQ09OU1RSQUlOVCcsICdDT1JSRVNQT05ESU5HJywgJ0NSRUFURScsICdDUk9TUycsICdDVUJFJywgJ0NVUlJFTlQnLCAnQ1VSUkVOVF9DQVRBTE9HJywgJ0NVUlJFTlRfREVGQVVMVF9UUkFOU0ZPUk1fR1JPVVAnLCAnQ1VSUkVOVF9QQVRIJywgJ0NVUlJFTlRfUk9MRScsICdDVVJSRU5UX1NDSEVNQScsICdDVVJSRU5UX1RSQU5TRk9STV9HUk9VUF9GT1JfVFlQRScsICdDVVJSRU5UX1VTRVInLCAnQ1VSU09SJywgJ0NZQ0xFJywgJ0RBVEUnLCAnREFZJywgJ0RFQUxMT0NBVEUnLCAnREVDJywgJ0RFQ0lNQUwnLCAnREVDTEFSRScsICdERUZBVUxUJywgJ0RFTEVURScsICdERVJFRicsICdERVNDUklCRScsICdERVRFUk1JTklTVElDJywgJ0RJU0NPTk5FQ1QnLCAnRElTVElOQ1QnLCAnRE9VQkxFJywgJ0RST1AnLCAnRFlOQU1JQycsICdFQUNIJywgJ0VMRU1FTlQnLCAnRU5ELUVYRUMnLCAnRVNDQVBFJywgJ0VWRVJZJywgLy8gPC0gbW92ZWQgb3ZlciBmcm9tIGZ1bmN0aW9uc1xuICAnRVhDRVBUJywgJ0VYRUMnLCAnRVhFQ1VURScsICdFWElTVFMnLCAnRVhURVJOQUwnLCAnRkFMU0UnLCAnRkVUQ0gnLCAnRklMVEVSJywgJ0ZMT0FUJywgJ0ZPUicsICdGT1JFSUdOJywgJ0ZSRUUnLCAnRlJPTScsICdGVUxMJywgJ0ZVTkNUSU9OJywgJ0dFVCcsICdHTE9CQUwnLCAnR1JBTlQnLCAnR1JPVVAnLCAnSEFWSU5HJywgJ0hPTEQnLCAnSE9VUicsICdJREVOVElUWScsICdJTicsICdJTkRJQ0FUT1InLCAnSU5ORVInLCAnSU5PVVQnLCAnSU5TRU5TSVRJVkUnLCAnSU5TRVJUJywgJ0lOVCcsICdJTlRFR0VSJywgJ0lOVEVSU0VDVCcsICdJTlRFUlZBTCcsICdJTlRPJywgJ0lTJywgJ0xBTkdVQUdFJywgJ0xBUkdFJywgJ0xBVEVSQUwnLCAnTEVBRElORycsICdMRUZUJywgJ0xJS0UnLCAnTElLRV9SRUdFWCcsICdMT0NBTCcsICdNQVRDSCcsICdNRU1CRVInLCAnTUVSR0UnLCAnTUVUSE9EJywgJ01JTlVURScsICdNT0RJRklFUycsICdNT0RVTEUnLCAnTU9OVEgnLCAnTVVMVElTRVQnLCAnTkFUSU9OQUwnLCAnTkFUVVJBTCcsICdOQ0hBUicsICdOQ0xPQicsICdORVcnLCAnTk8nLCAnTk9ORScsICdOT1QnLCAnTlVMTCcsICdOVUxMSUYnLCAnTlVNRVJJQycsICdPRicsICdPTEQnLCAnT04nLCAnT05MWScsICdPUEVOJywgJ09SREVSJywgJ09VVCcsICdPVVRFUicsICdPVkVSJywgJ09WRVJMQVBTJywgJ1BBUkFNRVRFUicsICdQQVJUSVRJT04nLCAnUFJFQ0lTSU9OJywgJ1BSRVBBUkUnLCAnUFJJTUFSWScsICdQUk9DRURVUkUnLCAnUkFOR0UnLCAnUkVBRFMnLCAnUkVBTCcsICdSRUNVUlNJVkUnLCAnUkVGJywgJ1JFRkVSRU5DRVMnLCAnUkVGRVJFTkNJTkcnLCAnUkVMRUFTRScsICdSRVNVTFQnLCAnUkVUVVJOJywgJ1JFVFVSTlMnLCAnUkVWT0tFJywgJ1JJR0hUJywgJ1JPTExCQUNLJywgJ1JPTExVUCcsICdST1cnLCAnUk9XUycsICdTQVZFUE9JTlQnLCAnU0NPUEUnLCAnU0NST0xMJywgJ1NFQVJDSCcsICdTRUNPTkQnLCAnU0VMRUNUJywgJ1NFTlNJVElWRScsICdTRVNTSU9OX1VTRVInLCAnU0VUJywgJ1NJTUlMQVInLCAnU01BTExJTlQnLCAnU09NRScsIC8vIDwtIG1vdmVkIG92ZXIgZnJvbSBmdW5jdGlvbnNcbiAgJ1NQRUNJRklDJywgJ1NRTCcsICdTUUxFWENFUFRJT04nLCAnU1FMU1RBVEUnLCAnU1FMV0FSTklORycsICdTVEFSVCcsICdTVEFUSUMnLCAnU1VCTVVMVElTRVQnLCAnU1lNTUVUUklDJywgJ1NZU1RFTScsICdTWVNURU1fVVNFUicsICdUQUJMRScsICdUQUJMRVNBTVBMRScsICdUSEVOJywgJ1RJTUUnLCAnVElNRVNUQU1QJywgJ1RJTUVaT05FX0hPVVInLCAnVElNRVpPTkVfTUlOVVRFJywgJ1RPJywgJ1RSQUlMSU5HJywgJ1RSQU5TTEFUSU9OJywgJ1RSRUFUJywgJ1RSSUdHRVInLCAnVFJVRScsICdVRVNDQVBFJywgJ1VOSU9OJywgJ1VOSVFVRScsICdVTktOT1dOJywgJ1VOTkVTVCcsICdVUERBVEUnLCAnVVNFUicsICdVU0lORycsICdWQUxVRScsICdWQUxVRVMnLCAnVkFSQklOQVJZJywgJ1ZBUkNIQVInLCAnVkFSWUlORycsICdXSEVORVZFUicsICdXSU5ET1cnLCAnV0lUSElOJywgJ1dJVEhPVVQnLCAnWUVBUiddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNxbC5rZXl3b3Jkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/sql/sql.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.formatter.js":
/*!******************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.formatter.js ***!
  \******************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _sqlite = __webpack_require__(/*! ./sqlite.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.functions.js\");\n\nvar _sqlite2 = __webpack_require__(/*! ./sqlite.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO', 'REPLACE INTO', 'VALUES', // - update:\n'UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]', 'SET', // - delete:\n'DELETE FROM', // Data definition\n'CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]', 'CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD [COLUMN]', 'DROP [COLUMN]', 'RENAME [COLUMN]', 'RENAME TO', // other\n'SET SCHEMA']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL]', 'EXCEPT', 'INTERSECT']); // joins - https://www.sqlite.org/syntax/join-operator.html\n\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', '{ROWS | RANGE | GROUPS} BETWEEN']);\n\nvar SqliteFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(SqliteFormatter, _Formatter);\n\n  var _super = _createSuper(SqliteFormatter);\n\n  function SqliteFormatter() {\n    _classCallCheck(this, SqliteFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SqliteFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _sqlite2.keywords,\n        reservedFunctionNames: _sqlite.functions,\n        stringTypes: [\"''-qq\", {\n          quote: \"''-raw\",\n          prefixes: ['X'],\n          requirePrefix: true\n        } // Depending on context SQLite also supports double-quotes for strings,\n        // and single-quotes for identifiers.\n        ],\n        identTypes: [\"\\\"\\\"-qq\", '``', '[]'],\n        // https://www.sqlite.org/lang_expr.html#parameters\n        paramTypes: {\n          positional: true,\n          numbered: ['?'],\n          named: [':', '@', '$']\n        },\n        operators: ['%', '~', '&', '|', '<<', '>>', '==', '->', '->>', '||']\n      });\n    }\n  }]);\n\n  return SqliteFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = SqliteFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=sqlite.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.functions.js":
/*!******************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.functions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://www.sqlite.org/lang_corefunc.html\n  scalar: ['ABS', 'CHANGES', 'CHAR', 'COALESCE', 'FORMAT', 'GLOB', 'HEX', 'IFNULL', 'IIF', 'INSTR', 'LAST_INSERT_ROWID', 'LENGTH', 'LIKE', 'LIKELIHOOD', 'LIKELY', 'LOAD_EXTENSION', 'LOWER', 'LTRIM', 'NULLIF', 'PRINTF', 'QUOTE', 'RANDOM', 'RANDOMBLOB', 'REPLACE', 'ROUND', 'RTRIM', 'SIGN', 'SOUNDEX', 'SQLITE_COMPILEOPTION_GET', 'SQLITE_COMPILEOPTION_USED', 'SQLITE_OFFSET', 'SQLITE_SOURCE_ID', 'SQLITE_VERSION', 'SUBSTR', 'SUBSTRING', 'TOTAL_CHANGES', 'TRIM', 'TYPEOF', 'UNICODE', 'UNLIKELY', 'UPPER', 'ZEROBLOB'],\n  // https://www.sqlite.org/lang_aggfunc.html\n  aggregate: ['AVG', 'COUNT', 'GROUP_CONCAT', 'MAX', 'MIN', 'SUM', 'TOTAL'],\n  // https://www.sqlite.org/lang_datefunc.html\n  datetime: ['DATE', 'TIME', 'DATETIME', 'JULIANDAY', 'UNIXEPOCH', 'STRFTIME'],\n  // https://www.sqlite.org/windowfunctions.html#biwinfunc\n  window: ['row_number', 'rank', 'dense_rank', 'percent_rank', 'cume_dist', 'ntile', 'lag', 'lead', 'first_value', 'last_value', 'nth_value'],\n  // https://www.sqlite.org/lang_mathfunc.html\n  math: ['ACOS', 'ACOSH', 'ASIN', 'ASINH', 'ATAN', 'ATAN2', 'ATANH', 'CEIL', 'CEILING', 'COS', 'COSH', 'DEGREES', 'EXP', 'FLOOR', 'LN', 'LOG', 'LOG', 'LOG10', 'LOG2', 'MOD', 'PI', 'POW', 'POWER', 'RADIANS', 'SIN', 'SINH', 'SQRT', 'TAN', 'TANH', 'TRUNC'],\n  // https://www.sqlite.org/json1.html\n  json: ['JSON', 'JSON_ARRAY', 'JSON_ARRAY_LENGTH', 'JSON_ARRAY_LENGTH', 'JSON_EXTRACT', 'JSON_INSERT', 'JSON_OBJECT', 'JSON_PATCH', 'JSON_REMOVE', 'JSON_REPLACE', 'JSON_SET', 'JSON_TYPE', 'JSON_TYPE', 'JSON_VALID', 'JSON_QUOTE', 'JSON_GROUP_ARRAY', 'JSON_GROUP_OBJECT', 'JSON_EACH', 'JSON_TREE'],\n  cast: ['CAST'],\n  // SQLite allows parameters for all data types\n  // Well, in fact it allows any word as a data type, e.g. CREATE TABLE foo (col1 madeupname(123));\n  // https://www.sqlite.org/datatype3.html\n  dataTypes: ['CHARACTER', 'VARCHAR', 'VARYING CHARACTER', 'NCHAR', 'NATIVE CHARACTER', 'NVARCHAR', 'NUMERIC', 'DECIMAL']\n});\nexports.functions = functions;\n//# sourceMappingURL=sqlite.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcWxpdGUvc3FsaXRlLmZ1bmN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcWxpdGUvc3FsaXRlLmZ1bmN0aW9ucy5qcz9iMDFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBmdW5jdGlvbnMgPSAoMCwgX3V0aWxzLmZsYXRLZXl3b3JkTGlzdCkoe1xuICAvLyBodHRwczovL3d3dy5zcWxpdGUub3JnL2xhbmdfY29yZWZ1bmMuaHRtbFxuICBzY2FsYXI6IFsnQUJTJywgJ0NIQU5HRVMnLCAnQ0hBUicsICdDT0FMRVNDRScsICdGT1JNQVQnLCAnR0xPQicsICdIRVgnLCAnSUZOVUxMJywgJ0lJRicsICdJTlNUUicsICdMQVNUX0lOU0VSVF9ST1dJRCcsICdMRU5HVEgnLCAnTElLRScsICdMSUtFTElIT09EJywgJ0xJS0VMWScsICdMT0FEX0VYVEVOU0lPTicsICdMT1dFUicsICdMVFJJTScsICdOVUxMSUYnLCAnUFJJTlRGJywgJ1FVT1RFJywgJ1JBTkRPTScsICdSQU5ET01CTE9CJywgJ1JFUExBQ0UnLCAnUk9VTkQnLCAnUlRSSU0nLCAnU0lHTicsICdTT1VOREVYJywgJ1NRTElURV9DT01QSUxFT1BUSU9OX0dFVCcsICdTUUxJVEVfQ09NUElMRU9QVElPTl9VU0VEJywgJ1NRTElURV9PRkZTRVQnLCAnU1FMSVRFX1NPVVJDRV9JRCcsICdTUUxJVEVfVkVSU0lPTicsICdTVUJTVFInLCAnU1VCU1RSSU5HJywgJ1RPVEFMX0NIQU5HRVMnLCAnVFJJTScsICdUWVBFT0YnLCAnVU5JQ09ERScsICdVTkxJS0VMWScsICdVUFBFUicsICdaRVJPQkxPQiddLFxuICAvLyBodHRwczovL3d3dy5zcWxpdGUub3JnL2xhbmdfYWdnZnVuYy5odG1sXG4gIGFnZ3JlZ2F0ZTogWydBVkcnLCAnQ09VTlQnLCAnR1JPVVBfQ09OQ0FUJywgJ01BWCcsICdNSU4nLCAnU1VNJywgJ1RPVEFMJ10sXG4gIC8vIGh0dHBzOi8vd3d3LnNxbGl0ZS5vcmcvbGFuZ19kYXRlZnVuYy5odG1sXG4gIGRhdGV0aW1lOiBbJ0RBVEUnLCAnVElNRScsICdEQVRFVElNRScsICdKVUxJQU5EQVknLCAnVU5JWEVQT0NIJywgJ1NUUkZUSU1FJ10sXG4gIC8vIGh0dHBzOi8vd3d3LnNxbGl0ZS5vcmcvd2luZG93ZnVuY3Rpb25zLmh0bWwjYml3aW5mdW5jXG4gIHdpbmRvdzogWydyb3dfbnVtYmVyJywgJ3JhbmsnLCAnZGVuc2VfcmFuaycsICdwZXJjZW50X3JhbmsnLCAnY3VtZV9kaXN0JywgJ250aWxlJywgJ2xhZycsICdsZWFkJywgJ2ZpcnN0X3ZhbHVlJywgJ2xhc3RfdmFsdWUnLCAnbnRoX3ZhbHVlJ10sXG4gIC8vIGh0dHBzOi8vd3d3LnNxbGl0ZS5vcmcvbGFuZ19tYXRoZnVuYy5odG1sXG4gIG1hdGg6IFsnQUNPUycsICdBQ09TSCcsICdBU0lOJywgJ0FTSU5IJywgJ0FUQU4nLCAnQVRBTjInLCAnQVRBTkgnLCAnQ0VJTCcsICdDRUlMSU5HJywgJ0NPUycsICdDT1NIJywgJ0RFR1JFRVMnLCAnRVhQJywgJ0ZMT09SJywgJ0xOJywgJ0xPRycsICdMT0cnLCAnTE9HMTAnLCAnTE9HMicsICdNT0QnLCAnUEknLCAnUE9XJywgJ1BPV0VSJywgJ1JBRElBTlMnLCAnU0lOJywgJ1NJTkgnLCAnU1FSVCcsICdUQU4nLCAnVEFOSCcsICdUUlVOQyddLFxuICAvLyBodHRwczovL3d3dy5zcWxpdGUub3JnL2pzb24xLmh0bWxcbiAganNvbjogWydKU09OJywgJ0pTT05fQVJSQVknLCAnSlNPTl9BUlJBWV9MRU5HVEgnLCAnSlNPTl9BUlJBWV9MRU5HVEgnLCAnSlNPTl9FWFRSQUNUJywgJ0pTT05fSU5TRVJUJywgJ0pTT05fT0JKRUNUJywgJ0pTT05fUEFUQ0gnLCAnSlNPTl9SRU1PVkUnLCAnSlNPTl9SRVBMQUNFJywgJ0pTT05fU0VUJywgJ0pTT05fVFlQRScsICdKU09OX1RZUEUnLCAnSlNPTl9WQUxJRCcsICdKU09OX1FVT1RFJywgJ0pTT05fR1JPVVBfQVJSQVknLCAnSlNPTl9HUk9VUF9PQkpFQ1QnLCAnSlNPTl9FQUNIJywgJ0pTT05fVFJFRSddLFxuICBjYXN0OiBbJ0NBU1QnXSxcbiAgLy8gU1FMaXRlIGFsbG93cyBwYXJhbWV0ZXJzIGZvciBhbGwgZGF0YSB0eXBlc1xuICAvLyBXZWxsLCBpbiBmYWN0IGl0IGFsbG93cyBhbnkgd29yZCBhcyBhIGRhdGEgdHlwZSwgZS5nLiBDUkVBVEUgVEFCTEUgZm9vIChjb2wxIG1hZGV1cG5hbWUoMTIzKSk7XG4gIC8vIGh0dHBzOi8vd3d3LnNxbGl0ZS5vcmcvZGF0YXR5cGUzLmh0bWxcbiAgZGF0YVR5cGVzOiBbJ0NIQVJBQ1RFUicsICdWQVJDSEFSJywgJ1ZBUllJTkcgQ0hBUkFDVEVSJywgJ05DSEFSJywgJ05BVElWRSBDSEFSQUNURVInLCAnTlZBUkNIQVInLCAnTlVNRVJJQycsICdERUNJTUFMJ11cbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSBmdW5jdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcWxpdGUuZnVuY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.keywords.js":
/*!*****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.keywords.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://www.sqlite.org/lang_keywords.html\n  all: ['ABORT', 'ACTION', 'ADD', 'AFTER', 'ALL', 'ALTER', 'AND', 'ANY', 'ARE', 'ARRAY', 'ALWAYS', 'ANALYZE', 'AS', 'ASC', 'ATTACH', 'AUTOINCREMENT', 'BEFORE', 'BEGIN', 'BETWEEN', 'BY', 'CASCADE', 'CASE', 'CAST', 'CHECK', 'COLLATE', 'COLUMN', 'COMMIT', 'CONFLICT', 'CONSTRAINT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATABASE', 'DEFAULT', 'DEFERRABLE', 'DEFERRED', 'DELETE', 'DESC', 'DETACH', 'DISTINCT', 'DO', 'DROP', 'EACH', 'ELSE', 'END', 'ESCAPE', 'EXCEPT', 'EXCLUDE', 'EXCLUSIVE', 'EXISTS', 'EXPLAIN', 'FAIL', 'FILTER', 'FIRST', 'FOLLOWING', 'FOR', 'FOREIGN', 'FROM', 'FULL', 'GENERATED', 'GLOB', 'GROUP', 'GROUPS', 'HAVING', 'IF', 'IGNORE', 'IMMEDIATE', 'IN', 'INDEX', 'INDEXED', 'INITIALLY', 'INNER', 'INSERT', 'INSTEAD', 'INTERSECT', 'INTO', 'IS', 'ISNULL', 'JOIN', 'KEY', 'LAST', 'LEFT', 'LIKE', 'LIMIT', 'MATCH', 'MATERIALIZED', 'NATURAL', 'NO', 'NOT', 'NOTHING', 'NOTNULL', 'NULL', 'NULLS', 'OF', 'OFFSET', 'ON', 'ONLY', 'OPEN', 'OR', 'ORDER', 'OTHERS', 'OUTER', 'OVER', 'PARTITION', 'PLAN', 'PRAGMA', 'PRECEDING', 'PRIMARY', 'QUERY', 'RAISE', 'RANGE', 'RECURSIVE', 'REFERENCES', 'REGEXP', 'REINDEX', 'RELEASE', 'RENAME', 'REPLACE', 'RESTRICT', 'RETURNING', 'RIGHT', 'ROLLBACK', 'ROW', 'ROWS', 'SAVEPOINT', 'SELECT', 'SET', 'TABLE', 'TEMP', 'TEMPORARY', 'THEN', 'TIES', 'TO', 'TRANSACTION', 'TRIGGER', 'UNBOUNDED', 'UNION', 'UNIQUE', 'UPDATE', 'USING', 'VACUUM', 'VALUES', 'VIEW', 'VIRTUAL', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'WITHOUT']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=sqlite.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9zcWxpdGUvc3FsaXRlLmtleXdvcmRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL3NxbGl0ZS9zcWxpdGUua2V5d29yZHMuanM/Y2UzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBrZXl3b3JkcyA9ICgwLCBfdXRpbHMuZmxhdEtleXdvcmRMaXN0KSh7XG4gIC8vIGh0dHBzOi8vd3d3LnNxbGl0ZS5vcmcvbGFuZ19rZXl3b3Jkcy5odG1sXG4gIGFsbDogWydBQk9SVCcsICdBQ1RJT04nLCAnQUREJywgJ0FGVEVSJywgJ0FMTCcsICdBTFRFUicsICdBTkQnLCAnQU5ZJywgJ0FSRScsICdBUlJBWScsICdBTFdBWVMnLCAnQU5BTFlaRScsICdBUycsICdBU0MnLCAnQVRUQUNIJywgJ0FVVE9JTkNSRU1FTlQnLCAnQkVGT1JFJywgJ0JFR0lOJywgJ0JFVFdFRU4nLCAnQlknLCAnQ0FTQ0FERScsICdDQVNFJywgJ0NBU1QnLCAnQ0hFQ0snLCAnQ09MTEFURScsICdDT0xVTU4nLCAnQ09NTUlUJywgJ0NPTkZMSUNUJywgJ0NPTlNUUkFJTlQnLCAnQ1JFQVRFJywgJ0NST1NTJywgJ0NVUlJFTlQnLCAnQ1VSUkVOVF9EQVRFJywgJ0NVUlJFTlRfVElNRScsICdDVVJSRU5UX1RJTUVTVEFNUCcsICdEQVRBQkFTRScsICdERUZBVUxUJywgJ0RFRkVSUkFCTEUnLCAnREVGRVJSRUQnLCAnREVMRVRFJywgJ0RFU0MnLCAnREVUQUNIJywgJ0RJU1RJTkNUJywgJ0RPJywgJ0RST1AnLCAnRUFDSCcsICdFTFNFJywgJ0VORCcsICdFU0NBUEUnLCAnRVhDRVBUJywgJ0VYQ0xVREUnLCAnRVhDTFVTSVZFJywgJ0VYSVNUUycsICdFWFBMQUlOJywgJ0ZBSUwnLCAnRklMVEVSJywgJ0ZJUlNUJywgJ0ZPTExPV0lORycsICdGT1InLCAnRk9SRUlHTicsICdGUk9NJywgJ0ZVTEwnLCAnR0VORVJBVEVEJywgJ0dMT0InLCAnR1JPVVAnLCAnR1JPVVBTJywgJ0hBVklORycsICdJRicsICdJR05PUkUnLCAnSU1NRURJQVRFJywgJ0lOJywgJ0lOREVYJywgJ0lOREVYRUQnLCAnSU5JVElBTExZJywgJ0lOTkVSJywgJ0lOU0VSVCcsICdJTlNURUFEJywgJ0lOVEVSU0VDVCcsICdJTlRPJywgJ0lTJywgJ0lTTlVMTCcsICdKT0lOJywgJ0tFWScsICdMQVNUJywgJ0xFRlQnLCAnTElLRScsICdMSU1JVCcsICdNQVRDSCcsICdNQVRFUklBTElaRUQnLCAnTkFUVVJBTCcsICdOTycsICdOT1QnLCAnTk9USElORycsICdOT1ROVUxMJywgJ05VTEwnLCAnTlVMTFMnLCAnT0YnLCAnT0ZGU0VUJywgJ09OJywgJ09OTFknLCAnT1BFTicsICdPUicsICdPUkRFUicsICdPVEhFUlMnLCAnT1VURVInLCAnT1ZFUicsICdQQVJUSVRJT04nLCAnUExBTicsICdQUkFHTUEnLCAnUFJFQ0VESU5HJywgJ1BSSU1BUlknLCAnUVVFUlknLCAnUkFJU0UnLCAnUkFOR0UnLCAnUkVDVVJTSVZFJywgJ1JFRkVSRU5DRVMnLCAnUkVHRVhQJywgJ1JFSU5ERVgnLCAnUkVMRUFTRScsICdSRU5BTUUnLCAnUkVQTEFDRScsICdSRVNUUklDVCcsICdSRVRVUk5JTkcnLCAnUklHSFQnLCAnUk9MTEJBQ0snLCAnUk9XJywgJ1JPV1MnLCAnU0FWRVBPSU5UJywgJ1NFTEVDVCcsICdTRVQnLCAnVEFCTEUnLCAnVEVNUCcsICdURU1QT1JBUlknLCAnVEhFTicsICdUSUVTJywgJ1RPJywgJ1RSQU5TQUNUSU9OJywgJ1RSSUdHRVInLCAnVU5CT1VOREVEJywgJ1VOSU9OJywgJ1VOSVFVRScsICdVUERBVEUnLCAnVVNJTkcnLCAnVkFDVVVNJywgJ1ZBTFVFUycsICdWSUVXJywgJ1ZJUlRVQUwnLCAnV0hFTicsICdXSEVSRScsICdXSU5ET1cnLCAnV0lUSCcsICdXSVRIT1VUJ11cbn0pO1xuZXhwb3J0cy5rZXl3b3JkcyA9IGtleXdvcmRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3FsaXRlLmtleXdvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.formatter.js":
/*!****************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.formatter.js ***!
  \****************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _transactsql = __webpack_require__(/*! ./transactsql.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.functions.js\");\n\nvar _transactsql2 = __webpack_require__(/*! ./transactsql.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']);\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT [INTO]', 'VALUES', // - update:\n'UPDATE', 'SET', 'WHERE CURRENT OF', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE TABLE', // - merge:\n'MERGE [INTO]', 'WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]', 'UPDATE SET', // Data definition\n'CREATE [OR ALTER] [MATERIALIZED] VIEW', 'CREATE TABLE', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD', 'DROP COLUMN [IF EXISTS]', 'ALTER COLUMN', // https://docs.microsoft.com/en-us/sql/t-sql/statements/statements?view=sql-server-ver15\n'ADD SENSITIVITY CLASSIFICATION', 'ADD SIGNATURE', 'AGGREGATE', 'ANSI_DEFAULTS', 'ANSI_NULLS', 'ANSI_NULL_DFLT_OFF', 'ANSI_NULL_DFLT_ON', 'ANSI_PADDING', 'ANSI_WARNINGS', 'APPLICATION ROLE', 'ARITHABORT', 'ARITHIGNORE', 'ASSEMBLY', 'ASYMMETRIC KEY', 'AUTHORIZATION', 'AVAILABILITY GROUP', 'BACKUP', 'BACKUP CERTIFICATE', 'BACKUP MASTER KEY', 'BACKUP SERVICE MASTER KEY', 'BEGIN CONVERSATION TIMER', 'BEGIN DIALOG CONVERSATION', 'BROKER PRIORITY', 'BULK INSERT', 'CERTIFICATE', 'CLOSE MASTER KEY', 'CLOSE SYMMETRIC KEY', 'COLLATE', 'COLUMN ENCRYPTION KEY', 'COLUMN MASTER KEY', 'COLUMNSTORE INDEX', 'CONCAT_NULL_YIELDS_NULL', 'CONTEXT_INFO', 'CONTRACT', 'CREDENTIAL', 'CRYPTOGRAPHIC PROVIDER', 'CURSOR_CLOSE_ON_COMMIT', 'DATABASE', 'DATABASE AUDIT SPECIFICATION', 'DATABASE ENCRYPTION KEY', 'DATABASE HADR', 'DATABASE SCOPED CONFIGURATION', 'DATABASE SCOPED CREDENTIAL', 'DATABASE SET', 'DATEFIRST', 'DATEFORMAT', 'DEADLOCK_PRIORITY', 'DENY', 'DENY XML', 'DISABLE TRIGGER', 'ENABLE TRIGGER', 'END CONVERSATION', 'ENDPOINT', 'EVENT NOTIFICATION', 'EVENT SESSION', 'EXECUTE AS', 'EXTERNAL DATA SOURCE', 'EXTERNAL FILE FORMAT', 'EXTERNAL LANGUAGE', 'EXTERNAL LIBRARY', 'EXTERNAL RESOURCE POOL', 'EXTERNAL TABLE', 'FIPS_FLAGGER', 'FMTONLY', 'FORCEPLAN', 'FULLTEXT CATALOG', 'FULLTEXT INDEX', 'FULLTEXT STOPLIST', 'FUNCTION', 'GET CONVERSATION GROUP', 'GET_TRANSMISSION_STATUS', 'GRANT', 'GRANT XML', 'IDENTITY_INSERT', 'IMPLICIT_TRANSACTIONS', 'INDEX', 'LANGUAGE', 'LOCK_TIMEOUT', 'LOGIN', 'MASTER KEY', 'MESSAGE TYPE', 'MOVE CONVERSATION', 'NOCOUNT', 'NOEXEC', 'NUMERIC_ROUNDABORT', 'OFFSETS', 'OPEN MASTER KEY', 'OPEN SYMMETRIC KEY', 'PARSEONLY', 'PARTITION FUNCTION', 'PARTITION SCHEME', 'PROCEDURE', 'QUERY_GOVERNOR_COST_LIMIT', 'QUEUE', 'QUOTED_IDENTIFIER', 'RECEIVE', 'REMOTE SERVICE BINDING', 'REMOTE_PROC_TRANSACTIONS', 'RESOURCE GOVERNOR', 'RESOURCE POOL', 'RESTORE', 'RESTORE FILELISTONLY', 'RESTORE HEADERONLY', 'RESTORE LABELONLY', 'RESTORE MASTER KEY', 'RESTORE REWINDONLY', 'RESTORE SERVICE MASTER KEY', 'RESTORE VERIFYONLY', 'REVERT', 'REVOKE', 'REVOKE XML', 'ROLE', 'ROUTE', 'ROWCOUNT', 'RULE', 'SCHEMA', 'SEARCH PROPERTY LIST', 'SECURITY POLICY', 'SELECTIVE XML INDEX', 'SEND', 'SENSITIVITY CLASSIFICATION', 'SEQUENCE', 'SERVER AUDIT', 'SERVER AUDIT SPECIFICATION', 'SERVER CONFIGURATION', 'SERVER ROLE', 'SERVICE', 'SERVICE MASTER KEY', 'SETUSER', 'SHOWPLAN_ALL', 'SHOWPLAN_TEXT', 'SHOWPLAN_XML', 'SIGNATURE', 'SPATIAL INDEX', 'STATISTICS', 'STATISTICS IO', 'STATISTICS PROFILE', 'STATISTICS TIME', 'STATISTICS XML', 'SYMMETRIC KEY', 'SYNONYM', 'TABLE', 'TABLE IDENTITY', 'TEXTSIZE', 'TRANSACTION ISOLATION LEVEL', 'TRIGGER', 'TYPE', 'UPDATE STATISTICS', 'USER', 'WORKLOAD GROUP', 'XACT_ABORT', 'XML INDEX', 'XML SCHEMA COLLECTION']);\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', // non-standard joins\n'{CROSS | OUTER} APPLY']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['ON DELETE', 'ON UPDATE', '{ROWS | RANGE} BETWEEN']); // https://docs.microsoft.com/en-us/sql/t-sql/language-reference?view=sql-server-ver15\n\nvar TransactSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(TransactSqlFormatter, _Formatter);\n\n  var _super = _createSuper(TransactSqlFormatter);\n\n  function TransactSqlFormatter() {\n    _classCallCheck(this, TransactSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TransactSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _transactsql2.keywords,\n        reservedFunctionNames: _transactsql.functions,\n        nestedBlockComments: true,\n        stringTypes: [{\n          quote: \"''-qq\",\n          prefixes: ['N']\n        }],\n        identTypes: [\"\\\"\\\"-qq\", '[]'],\n        identChars: {\n          first: '#@',\n          rest: '#@$'\n        },\n        paramTypes: {\n          named: ['@'],\n          quoted: ['@']\n        },\n        operators: ['%', '&', '|', '^', '~', '!<', '!>', '+=', '-=', '*=', '/=', '%=', '|=', '&=', '^=', '::'] // TODO: Support for money constants\n\n      });\n    }\n  }]);\n\n  return TransactSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = TransactSqlFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=transactsql.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.functions.js":
/*!****************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.functions.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://docs.microsoft.com/en-us/sql/t-sql/functions/functions?view=sql-server-ver15\n  aggregate: ['APPROX_COUNT_DISTINCT', 'AVG', 'CHECKSUM_AGG', 'COUNT', 'COUNT_BIG', 'GROUPING', 'GROUPING_ID', 'MAX', 'MIN', 'STDEV', 'STDEVP', 'SUM', 'VAR', 'VARP'],\n  analytic: ['CUME_DIST', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'Collation - COLLATIONPROPERTY', 'Collation - TERTIARY_WEIGHTS'],\n  configuration: ['@@DBTS', '@@LANGID', '@@LANGUAGE', '@@LOCK_TIMEOUT', '@@MAX_CONNECTIONS', '@@MAX_PRECISION', '@@NESTLEVEL', '@@OPTIONS', '@@REMSERVER', '@@SERVERNAME', '@@SERVICENAME', '@@SPID', '@@TEXTSIZE', '@@VERSION'],\n  conversion: ['CAST', 'CONVERT', 'PARSE', 'TRY_CAST', 'TRY_CONVERT', 'TRY_PARSE'],\n  cryptographic: ['ASYMKEY_ID', 'ASYMKEYPROPERTY', 'CERTPROPERTY', 'CERT_ID', 'CRYPT_GEN_RANDOM', 'DECRYPTBYASYMKEY', 'DECRYPTBYCERT', 'DECRYPTBYKEY', 'DECRYPTBYKEYAUTOASYMKEY', 'DECRYPTBYKEYAUTOCERT', 'DECRYPTBYPASSPHRASE', 'ENCRYPTBYASYMKEY', 'ENCRYPTBYCERT', 'ENCRYPTBYKEY', 'ENCRYPTBYPASSPHRASE', 'HASHBYTES', 'IS_OBJECTSIGNED', 'KEY_GUID', 'KEY_ID', 'KEY_NAME', 'SIGNBYASYMKEY', 'SIGNBYCERT', 'SYMKEYPROPERTY', 'VERIFYSIGNEDBYCERT', 'VERIFYSIGNEDBYASYMKEY'],\n  cursor: ['@@CURSOR_ROWS', '@@FETCH_STATUS', 'CURSOR_STATUS'],\n  dataType: ['DATALENGTH', 'IDENT_CURRENT', 'IDENT_INCR', 'IDENT_SEED', 'IDENTITY', 'SQL_VARIANT_PROPERTY'],\n  datetime: ['@@DATEFIRST', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'CURRENT_TIMEZONE_ID', 'DATEADD', 'DATEDIFF', 'DATEDIFF_BIG', 'DATEFROMPARTS', 'DATENAME', 'DATEPART', 'DATETIME2FROMPARTS', 'DATETIMEFROMPARTS', 'DATETIMEOFFSETFROMPARTS', 'DAY', 'EOMONTH', 'GETDATE', 'GETUTCDATE', 'ISDATE', 'MONTH', 'SMALLDATETIMEFROMPARTS', 'SWITCHOFFSET', 'SYSDATETIME', 'SYSDATETIMEOFFSET', 'SYSUTCDATETIME', 'TIMEFROMPARTS', 'TODATETIMEOFFSET', 'YEAR', 'JSON', 'ISJSON', 'JSON_VALUE', 'JSON_QUERY', 'JSON_MODIFY'],\n  mathematical: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'ATN2', 'CEILING', 'COS', 'COT', 'DEGREES', 'EXP', 'FLOOR', 'LOG', 'LOG10', 'PI', 'POWER', 'RADIANS', 'RAND', 'ROUND', 'SIGN', 'SIN', 'SQRT', 'SQUARE', 'TAN', 'CHOOSE', 'GREATEST', 'IIF', 'LEAST'],\n  metadata: ['@@PROCID', 'APP_NAME', 'APPLOCK_MODE', 'APPLOCK_TEST', 'ASSEMBLYPROPERTY', 'COL_LENGTH', 'COL_NAME', 'COLUMNPROPERTY', 'DATABASEPROPERTYEX', 'DB_ID', 'DB_NAME', 'FILE_ID', 'FILE_IDEX', 'FILE_NAME', 'FILEGROUP_ID', 'FILEGROUP_NAME', 'FILEGROUPPROPERTY', 'FILEPROPERTY', 'FILEPROPERTYEX', 'FULLTEXTCATALOGPROPERTY', 'FULLTEXTSERVICEPROPERTY', 'INDEX_COL', 'INDEXKEY_PROPERTY', 'INDEXPROPERTY', 'NEXT VALUE FOR', 'OBJECT_DEFINITION', 'OBJECT_ID', 'OBJECT_NAME', 'OBJECT_SCHEMA_NAME', 'OBJECTPROPERTY', 'OBJECTPROPERTYEX', 'ORIGINAL_DB_NAME', 'PARSENAME', 'SCHEMA_ID', 'SCHEMA_NAME', 'SCOPE_IDENTITY', 'SERVERPROPERTY', 'STATS_DATE', 'TYPE_ID', 'TYPE_NAME', 'TYPEPROPERTY'],\n  ranking: ['DENSE_RANK', 'NTILE', 'RANK', 'ROW_NUMBER', 'PUBLISHINGSERVERNAME'],\n  security: ['CERTENCODED', 'CERTPRIVATEKEY', 'CURRENT_USER', 'DATABASE_PRINCIPAL_ID', 'HAS_DBACCESS', 'HAS_PERMS_BY_NAME', 'IS_MEMBER', 'IS_ROLEMEMBER', 'IS_SRVROLEMEMBER', 'LOGINPROPERTY', 'ORIGINAL_LOGIN', 'PERMISSIONS', 'PWDENCRYPT', 'PWDCOMPARE', 'SESSION_USER', 'SESSIONPROPERTY', 'SUSER_ID', 'SUSER_NAME', 'SUSER_SID', 'SUSER_SNAME', 'SYSTEM_USER', 'USER', 'USER_ID', 'USER_NAME'],\n  string: ['ASCII', 'CHAR', 'CHARINDEX', 'CONCAT', 'CONCAT_WS', 'DIFFERENCE', 'FORMAT', 'LEFT', 'LEN', 'LOWER', 'LTRIM', 'NCHAR', 'PATINDEX', 'QUOTENAME', 'REPLACE', 'REPLICATE', 'REVERSE', 'RIGHT', 'RTRIM', 'SOUNDEX', 'SPACE', 'STR', 'STRING_AGG', 'STRING_ESCAPE', 'STUFF', 'SUBSTRING', 'TRANSLATE', 'TRIM', 'UNICODE', 'UPPER'],\n  system: ['$PARTITION', '@@ERROR', '@@IDENTITY', '@@PACK_RECEIVED', '@@ROWCOUNT', '@@TRANCOUNT', 'BINARY_CHECKSUM', 'CHECKSUM', 'COMPRESS', 'CONNECTIONPROPERTY', 'CONTEXT_INFO', 'CURRENT_REQUEST_ID', 'CURRENT_TRANSACTION_ID', 'DECOMPRESS', 'ERROR_LINE', 'ERROR_MESSAGE', 'ERROR_NUMBER', 'ERROR_PROCEDURE', 'ERROR_SEVERITY', 'ERROR_STATE', 'FORMATMESSAGE', 'GET_FILESTREAM_TRANSACTION_CONTEXT', 'GETANSINULL', 'HOST_ID', 'HOST_NAME', 'ISNULL', 'ISNUMERIC', 'MIN_ACTIVE_ROWVERSION', 'NEWID', 'NEWSEQUENTIALID', 'ROWCOUNT_BIG', 'SESSION_CONTEXT', 'XACT_STATE'],\n  statistical: ['@@CONNECTIONS', '@@CPU_BUSY', '@@IDLE', '@@IO_BUSY', '@@PACK_SENT', '@@PACKET_ERRORS', '@@TIMETICKS', '@@TOTAL_ERRORS', '@@TOTAL_READ', '@@TOTAL_WRITE', 'TEXTPTR', 'TEXTVALID'],\n  trigger: ['COLUMNS_UPDATED', 'EVENTDATA', 'TRIGGER_NESTLEVEL', 'UPDATE'],\n  // Shorthand functions to use in place of CASE expression\n  caseAbbrev: ['COALESCE', 'NULLIF'],\n  // Parameterized types\n  // https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15\n  dataTypes: ['DECIMAL', 'NUMERIC', 'FLOAT', 'REAL', 'DATETIME2', 'DATETIMEOFFSET', 'TIME', 'CHAR', 'VARCHAR', 'NCHAR', 'NVARCHAR', 'BINARY', 'VARBINARY']\n});\nexports.functions = functions;\n//# sourceMappingURL=transactsql.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy90cmFuc2FjdHNxbC90cmFuc2FjdHNxbC5mdW5jdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL3RyYW5zYWN0c3FsL3RyYW5zYWN0c3FsLmZ1bmN0aW9ucy5qcz8zYjIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5mdW5jdGlvbnMgPSB2b2lkIDA7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG5cbnZhciBmdW5jdGlvbnMgPSAoMCwgX3V0aWxzLmZsYXRLZXl3b3JkTGlzdCkoe1xuICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9zcWwvdC1zcWwvZnVuY3Rpb25zL2Z1bmN0aW9ucz92aWV3PXNxbC1zZXJ2ZXItdmVyMTVcbiAgYWdncmVnYXRlOiBbJ0FQUFJPWF9DT1VOVF9ESVNUSU5DVCcsICdBVkcnLCAnQ0hFQ0tTVU1fQUdHJywgJ0NPVU5UJywgJ0NPVU5UX0JJRycsICdHUk9VUElORycsICdHUk9VUElOR19JRCcsICdNQVgnLCAnTUlOJywgJ1NUREVWJywgJ1NUREVWUCcsICdTVU0nLCAnVkFSJywgJ1ZBUlAnXSxcbiAgYW5hbHl0aWM6IFsnQ1VNRV9ESVNUJywgJ0ZJUlNUX1ZBTFVFJywgJ0xBRycsICdMQVNUX1ZBTFVFJywgJ0xFQUQnLCAnUEVSQ0VOVElMRV9DT05UJywgJ1BFUkNFTlRJTEVfRElTQycsICdQRVJDRU5UX1JBTksnLCAnQ29sbGF0aW9uIC0gQ09MTEFUSU9OUFJPUEVSVFknLCAnQ29sbGF0aW9uIC0gVEVSVElBUllfV0VJR0hUUyddLFxuICBjb25maWd1cmF0aW9uOiBbJ0BAREJUUycsICdAQExBTkdJRCcsICdAQExBTkdVQUdFJywgJ0BATE9DS19USU1FT1VUJywgJ0BATUFYX0NPTk5FQ1RJT05TJywgJ0BATUFYX1BSRUNJU0lPTicsICdAQE5FU1RMRVZFTCcsICdAQE9QVElPTlMnLCAnQEBSRU1TRVJWRVInLCAnQEBTRVJWRVJOQU1FJywgJ0BAU0VSVklDRU5BTUUnLCAnQEBTUElEJywgJ0BAVEVYVFNJWkUnLCAnQEBWRVJTSU9OJ10sXG4gIGNvbnZlcnNpb246IFsnQ0FTVCcsICdDT05WRVJUJywgJ1BBUlNFJywgJ1RSWV9DQVNUJywgJ1RSWV9DT05WRVJUJywgJ1RSWV9QQVJTRSddLFxuICBjcnlwdG9ncmFwaGljOiBbJ0FTWU1LRVlfSUQnLCAnQVNZTUtFWVBST1BFUlRZJywgJ0NFUlRQUk9QRVJUWScsICdDRVJUX0lEJywgJ0NSWVBUX0dFTl9SQU5ET00nLCAnREVDUllQVEJZQVNZTUtFWScsICdERUNSWVBUQllDRVJUJywgJ0RFQ1JZUFRCWUtFWScsICdERUNSWVBUQllLRVlBVVRPQVNZTUtFWScsICdERUNSWVBUQllLRVlBVVRPQ0VSVCcsICdERUNSWVBUQllQQVNTUEhSQVNFJywgJ0VOQ1JZUFRCWUFTWU1LRVknLCAnRU5DUllQVEJZQ0VSVCcsICdFTkNSWVBUQllLRVknLCAnRU5DUllQVEJZUEFTU1BIUkFTRScsICdIQVNIQllURVMnLCAnSVNfT0JKRUNUU0lHTkVEJywgJ0tFWV9HVUlEJywgJ0tFWV9JRCcsICdLRVlfTkFNRScsICdTSUdOQllBU1lNS0VZJywgJ1NJR05CWUNFUlQnLCAnU1lNS0VZUFJPUEVSVFknLCAnVkVSSUZZU0lHTkVEQllDRVJUJywgJ1ZFUklGWVNJR05FREJZQVNZTUtFWSddLFxuICBjdXJzb3I6IFsnQEBDVVJTT1JfUk9XUycsICdAQEZFVENIX1NUQVRVUycsICdDVVJTT1JfU1RBVFVTJ10sXG4gIGRhdGFUeXBlOiBbJ0RBVEFMRU5HVEgnLCAnSURFTlRfQ1VSUkVOVCcsICdJREVOVF9JTkNSJywgJ0lERU5UX1NFRUQnLCAnSURFTlRJVFknLCAnU1FMX1ZBUklBTlRfUFJPUEVSVFknXSxcbiAgZGF0ZXRpbWU6IFsnQEBEQVRFRklSU1QnLCAnQ1VSUkVOVF9USU1FU1RBTVAnLCAnQ1VSUkVOVF9USU1FWk9ORScsICdDVVJSRU5UX1RJTUVaT05FX0lEJywgJ0RBVEVBREQnLCAnREFURURJRkYnLCAnREFURURJRkZfQklHJywgJ0RBVEVGUk9NUEFSVFMnLCAnREFURU5BTUUnLCAnREFURVBBUlQnLCAnREFURVRJTUUyRlJPTVBBUlRTJywgJ0RBVEVUSU1FRlJPTVBBUlRTJywgJ0RBVEVUSU1FT0ZGU0VURlJPTVBBUlRTJywgJ0RBWScsICdFT01PTlRIJywgJ0dFVERBVEUnLCAnR0VUVVRDREFURScsICdJU0RBVEUnLCAnTU9OVEgnLCAnU01BTExEQVRFVElNRUZST01QQVJUUycsICdTV0lUQ0hPRkZTRVQnLCAnU1lTREFURVRJTUUnLCAnU1lTREFURVRJTUVPRkZTRVQnLCAnU1lTVVRDREFURVRJTUUnLCAnVElNRUZST01QQVJUUycsICdUT0RBVEVUSU1FT0ZGU0VUJywgJ1lFQVInLCAnSlNPTicsICdJU0pTT04nLCAnSlNPTl9WQUxVRScsICdKU09OX1FVRVJZJywgJ0pTT05fTU9ESUZZJ10sXG4gIG1hdGhlbWF0aWNhbDogWydBQlMnLCAnQUNPUycsICdBU0lOJywgJ0FUQU4nLCAnQVROMicsICdDRUlMSU5HJywgJ0NPUycsICdDT1QnLCAnREVHUkVFUycsICdFWFAnLCAnRkxPT1InLCAnTE9HJywgJ0xPRzEwJywgJ1BJJywgJ1BPV0VSJywgJ1JBRElBTlMnLCAnUkFORCcsICdST1VORCcsICdTSUdOJywgJ1NJTicsICdTUVJUJywgJ1NRVUFSRScsICdUQU4nLCAnQ0hPT1NFJywgJ0dSRUFURVNUJywgJ0lJRicsICdMRUFTVCddLFxuICBtZXRhZGF0YTogWydAQFBST0NJRCcsICdBUFBfTkFNRScsICdBUFBMT0NLX01PREUnLCAnQVBQTE9DS19URVNUJywgJ0FTU0VNQkxZUFJPUEVSVFknLCAnQ09MX0xFTkdUSCcsICdDT0xfTkFNRScsICdDT0xVTU5QUk9QRVJUWScsICdEQVRBQkFTRVBST1BFUlRZRVgnLCAnREJfSUQnLCAnREJfTkFNRScsICdGSUxFX0lEJywgJ0ZJTEVfSURFWCcsICdGSUxFX05BTUUnLCAnRklMRUdST1VQX0lEJywgJ0ZJTEVHUk9VUF9OQU1FJywgJ0ZJTEVHUk9VUFBST1BFUlRZJywgJ0ZJTEVQUk9QRVJUWScsICdGSUxFUFJPUEVSVFlFWCcsICdGVUxMVEVYVENBVEFMT0dQUk9QRVJUWScsICdGVUxMVEVYVFNFUlZJQ0VQUk9QRVJUWScsICdJTkRFWF9DT0wnLCAnSU5ERVhLRVlfUFJPUEVSVFknLCAnSU5ERVhQUk9QRVJUWScsICdORVhUIFZBTFVFIEZPUicsICdPQkpFQ1RfREVGSU5JVElPTicsICdPQkpFQ1RfSUQnLCAnT0JKRUNUX05BTUUnLCAnT0JKRUNUX1NDSEVNQV9OQU1FJywgJ09CSkVDVFBST1BFUlRZJywgJ09CSkVDVFBST1BFUlRZRVgnLCAnT1JJR0lOQUxfREJfTkFNRScsICdQQVJTRU5BTUUnLCAnU0NIRU1BX0lEJywgJ1NDSEVNQV9OQU1FJywgJ1NDT1BFX0lERU5USVRZJywgJ1NFUlZFUlBST1BFUlRZJywgJ1NUQVRTX0RBVEUnLCAnVFlQRV9JRCcsICdUWVBFX05BTUUnLCAnVFlQRVBST1BFUlRZJ10sXG4gIHJhbmtpbmc6IFsnREVOU0VfUkFOSycsICdOVElMRScsICdSQU5LJywgJ1JPV19OVU1CRVInLCAnUFVCTElTSElOR1NFUlZFUk5BTUUnXSxcbiAgc2VjdXJpdHk6IFsnQ0VSVEVOQ09ERUQnLCAnQ0VSVFBSSVZBVEVLRVknLCAnQ1VSUkVOVF9VU0VSJywgJ0RBVEFCQVNFX1BSSU5DSVBBTF9JRCcsICdIQVNfREJBQ0NFU1MnLCAnSEFTX1BFUk1TX0JZX05BTUUnLCAnSVNfTUVNQkVSJywgJ0lTX1JPTEVNRU1CRVInLCAnSVNfU1JWUk9MRU1FTUJFUicsICdMT0dJTlBST1BFUlRZJywgJ09SSUdJTkFMX0xPR0lOJywgJ1BFUk1JU1NJT05TJywgJ1BXREVOQ1JZUFQnLCAnUFdEQ09NUEFSRScsICdTRVNTSU9OX1VTRVInLCAnU0VTU0lPTlBST1BFUlRZJywgJ1NVU0VSX0lEJywgJ1NVU0VSX05BTUUnLCAnU1VTRVJfU0lEJywgJ1NVU0VSX1NOQU1FJywgJ1NZU1RFTV9VU0VSJywgJ1VTRVInLCAnVVNFUl9JRCcsICdVU0VSX05BTUUnXSxcbiAgc3RyaW5nOiBbJ0FTQ0lJJywgJ0NIQVInLCAnQ0hBUklOREVYJywgJ0NPTkNBVCcsICdDT05DQVRfV1MnLCAnRElGRkVSRU5DRScsICdGT1JNQVQnLCAnTEVGVCcsICdMRU4nLCAnTE9XRVInLCAnTFRSSU0nLCAnTkNIQVInLCAnUEFUSU5ERVgnLCAnUVVPVEVOQU1FJywgJ1JFUExBQ0UnLCAnUkVQTElDQVRFJywgJ1JFVkVSU0UnLCAnUklHSFQnLCAnUlRSSU0nLCAnU09VTkRFWCcsICdTUEFDRScsICdTVFInLCAnU1RSSU5HX0FHRycsICdTVFJJTkdfRVNDQVBFJywgJ1NUVUZGJywgJ1NVQlNUUklORycsICdUUkFOU0xBVEUnLCAnVFJJTScsICdVTklDT0RFJywgJ1VQUEVSJ10sXG4gIHN5c3RlbTogWyckUEFSVElUSU9OJywgJ0BARVJST1InLCAnQEBJREVOVElUWScsICdAQFBBQ0tfUkVDRUlWRUQnLCAnQEBST1dDT1VOVCcsICdAQFRSQU5DT1VOVCcsICdCSU5BUllfQ0hFQ0tTVU0nLCAnQ0hFQ0tTVU0nLCAnQ09NUFJFU1MnLCAnQ09OTkVDVElPTlBST1BFUlRZJywgJ0NPTlRFWFRfSU5GTycsICdDVVJSRU5UX1JFUVVFU1RfSUQnLCAnQ1VSUkVOVF9UUkFOU0FDVElPTl9JRCcsICdERUNPTVBSRVNTJywgJ0VSUk9SX0xJTkUnLCAnRVJST1JfTUVTU0FHRScsICdFUlJPUl9OVU1CRVInLCAnRVJST1JfUFJPQ0VEVVJFJywgJ0VSUk9SX1NFVkVSSVRZJywgJ0VSUk9SX1NUQVRFJywgJ0ZPUk1BVE1FU1NBR0UnLCAnR0VUX0ZJTEVTVFJFQU1fVFJBTlNBQ1RJT05fQ09OVEVYVCcsICdHRVRBTlNJTlVMTCcsICdIT1NUX0lEJywgJ0hPU1RfTkFNRScsICdJU05VTEwnLCAnSVNOVU1FUklDJywgJ01JTl9BQ1RJVkVfUk9XVkVSU0lPTicsICdORVdJRCcsICdORVdTRVFVRU5USUFMSUQnLCAnUk9XQ09VTlRfQklHJywgJ1NFU1NJT05fQ09OVEVYVCcsICdYQUNUX1NUQVRFJ10sXG4gIHN0YXRpc3RpY2FsOiBbJ0BAQ09OTkVDVElPTlMnLCAnQEBDUFVfQlVTWScsICdAQElETEUnLCAnQEBJT19CVVNZJywgJ0BAUEFDS19TRU5UJywgJ0BAUEFDS0VUX0VSUk9SUycsICdAQFRJTUVUSUNLUycsICdAQFRPVEFMX0VSUk9SUycsICdAQFRPVEFMX1JFQUQnLCAnQEBUT1RBTF9XUklURScsICdURVhUUFRSJywgJ1RFWFRWQUxJRCddLFxuICB0cmlnZ2VyOiBbJ0NPTFVNTlNfVVBEQVRFRCcsICdFVkVOVERBVEEnLCAnVFJJR0dFUl9ORVNUTEVWRUwnLCAnVVBEQVRFJ10sXG4gIC8vIFNob3J0aGFuZCBmdW5jdGlvbnMgdG8gdXNlIGluIHBsYWNlIG9mIENBU0UgZXhwcmVzc2lvblxuICBjYXNlQWJicmV2OiBbJ0NPQUxFU0NFJywgJ05VTExJRiddLFxuICAvLyBQYXJhbWV0ZXJpemVkIHR5cGVzXG4gIC8vIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3NxbC90LXNxbC9kYXRhLXR5cGVzL2RhdGEtdHlwZXMtdHJhbnNhY3Qtc3FsP3ZpZXc9c3FsLXNlcnZlci12ZXIxNVxuICBkYXRhVHlwZXM6IFsnREVDSU1BTCcsICdOVU1FUklDJywgJ0ZMT0FUJywgJ1JFQUwnLCAnREFURVRJTUUyJywgJ0RBVEVUSU1FT0ZGU0VUJywgJ1RJTUUnLCAnQ0hBUicsICdWQVJDSEFSJywgJ05DSEFSJywgJ05WQVJDSEFSJywgJ0JJTkFSWScsICdWQVJCSU5BUlknXVxufSk7XG5leHBvcnRzLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zYWN0c3FsLmZ1bmN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.keywords.js":
/*!***************************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.keywords.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-ver15\n  standard: ['ADD', 'ALL', 'ALTER', 'AND', 'ANY', 'AS', 'ASC', 'AUTHORIZATION', 'BACKUP', 'BEGIN', 'BETWEEN', 'BREAK', 'BROWSE', 'BULK', 'BY', 'CASCADE', 'CHECK', 'CHECKPOINT', 'CLOSE', 'CLUSTERED', 'COALESCE', 'COLLATE', 'COLUMN', 'COMMIT', 'COMPUTE', 'CONSTRAINT', 'CONTAINS', 'CONTAINSTABLE', 'CONTINUE', 'CONVERT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATABASE', 'DBCC', 'DEALLOCATE', 'DECLARE', 'DEFAULT', 'DELETE', 'DENY', 'DESC', 'DISK', 'DISTINCT', 'DISTRIBUTED', 'DOUBLE', 'DROP', 'DUMP', 'ERRLVL', 'ESCAPE', 'EXEC', 'EXECUTE', 'EXISTS', 'EXIT', 'EXTERNAL', 'FETCH', 'FILE', 'FILLFACTOR', 'FOR', 'FOREIGN', 'FREETEXT', 'FREETEXTTABLE', 'FROM', 'FULL', 'FUNCTION', 'GOTO', 'GRANT', 'GROUP', 'HAVING', 'HOLDLOCK', 'IDENTITY', 'IDENTITYCOL', 'IDENTITY_INSERT', 'IF', 'IN', 'INDEX', 'INNER', 'INSERT', 'INTERSECT', 'INTO', 'IS', 'JOIN', 'KEY', 'KILL', 'LEFT', 'LIKE', 'LINENO', 'LOAD', 'MERGE', 'NATIONAL', 'NOCHECK', 'NONCLUSTERED', 'NOT', 'NULL', 'NULLIF', 'OF', 'OFF', 'OFFSETS', 'ON', 'OPEN', 'OPENDATASOURCE', 'OPENQUERY', 'OPENROWSET', 'OPENXML', 'OPTION', 'OR', 'ORDER', 'OUTER', 'OVER', 'PERCENT', 'PIVOT', 'PLAN', 'PRECISION', 'PRIMARY', 'PRINT', 'PROC', 'PROCEDURE', 'PUBLIC', 'RAISERROR', 'READ', 'READTEXT', 'RECONFIGURE', 'REFERENCES', 'REPLICATION', 'RESTORE', 'RESTRICT', 'RETURN', 'REVERT', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROWCOUNT', 'ROWGUIDCOL', 'RULE', 'SAVE', 'SCHEMA', 'SECURITYAUDIT', 'SELECT', 'SEMANTICKEYPHRASETABLE', 'SEMANTICSIMILARITYDETAILSTABLE', 'SEMANTICSIMILARITYTABLE', 'SESSION_USER', 'SET', 'SETUSER', 'SHUTDOWN', 'SOME', 'STATISTICS', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'TEXTSIZE', 'THEN', 'TO', 'TOP', 'TRAN', 'TRANSACTION', 'TRIGGER', 'TRUNCATE', 'TRY_CONVERT', 'TSEQUAL', 'UNION', 'UNIQUE', 'UNPIVOT', 'UPDATE', 'UPDATETEXT', 'USE', 'USER', 'VALUES', 'VARYING', 'VIEW', 'WAITFOR', 'WHERE', 'WHILE', 'WITH', 'WITHIN GROUP', 'WRITETEXT'],\n  odbc: ['ABSOLUTE', 'ACTION', 'ADA', 'ADD', 'ALL', 'ALLOCATE', 'ALTER', 'AND', 'ANY', 'ARE', 'AS', 'ASC', 'ASSERTION', 'AT', 'AUTHORIZATION', 'AVG', 'BEGIN', 'BETWEEN', 'BIT', 'BIT_LENGTH', 'BOTH', 'BY', 'CASCADE', 'CASCADED', 'CAST', 'CATALOG', 'CHAR', 'CHARACTER', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHECK', 'CLOSE', 'COALESCE', 'COLLATE', 'COLLATION', 'COLUMN', 'COMMIT', 'CONNECT', 'CONNECTION', 'CONSTRAINT', 'CONSTRAINTS', 'CONTINUE', 'CONVERT', 'CORRESPONDING', 'COUNT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFERRABLE', 'DEFERRED', 'DELETE', 'DESC', 'DESCRIBE', 'DESCRIPTOR', 'DIAGNOSTICS', 'DISCONNECT', 'DISTINCT', 'DOMAIN', 'DOUBLE', 'DROP', 'END-EXEC', 'ESCAPE', 'EXCEPTION', 'EXEC', 'EXECUTE', 'EXISTS', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIRST', 'FLOAT', 'FOR', 'FOREIGN', 'FORTRAN', 'FOUND', 'FROM', 'FULL', 'GET', 'GLOBAL', 'GO', 'GOTO', 'GRANT', 'GROUP', 'HAVING', 'HOUR', 'IDENTITY', 'IMMEDIATE', 'IN', 'INCLUDE', 'INDEX', 'INDICATOR', 'INITIALLY', 'INNER', 'INPUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ISOLATION', 'JOIN', 'KEY', 'LANGUAGE', 'LAST', 'LEADING', 'LEFT', 'LEVEL', 'LIKE', 'LOCAL', 'LOWER', 'MATCH', 'MAX', 'MIN', 'MINUTE', 'MODULE', 'MONTH', 'NAMES', 'NATIONAL', 'NATURAL', 'NCHAR', 'NEXT', 'NO', 'NONE', 'NOT', 'NULL', 'NULLIF', 'NUMERIC', 'OCTET_LENGTH', 'OF', 'ONLY', 'OPEN', 'OPTION', 'OR', 'ORDER', 'OUTER', 'OUTPUT', 'OVERLAPS', 'PAD', 'PARTIAL', 'PASCAL', 'POSITION', 'PRECISION', 'PREPARE', 'PRESERVE', 'PRIMARY', 'PRIOR', 'PRIVILEGES', 'PROCEDURE', 'PUBLIC', 'READ', 'REAL', 'REFERENCES', 'RELATIVE', 'RESTRICT', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROWS', 'SCHEMA', 'SCROLL', 'SECOND', 'SECTION', 'SELECT', 'SESSION', 'SESSION_USER', 'SET', 'SIZE', 'SMALLINT', 'SOME', 'SPACE', 'SQL', 'SQLCA', 'SQLCODE', 'SQLERROR', 'SQLSTATE', 'SQLWARNING', 'SUBSTRING', 'SUM', 'SYSTEM_USER', 'TABLE', 'TEMPORARY', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSLATE', 'TRANSLATION', 'TRIM', 'TRUE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UPDATE', 'UPPER', 'USAGE', 'USER', 'VALUE', 'VALUES', 'VARCHAR', 'VARYING', 'VIEW', 'WHENEVER', 'WHERE', 'WITH', 'WORK', 'WRITE', 'YEAR', 'ZONE']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=transactsql.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy90cmFuc2FjdHNxbC90cmFuc2FjdHNxbC5rZXl3b3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGFuZ3VhZ2VzL3RyYW5zYWN0c3FsL3RyYW5zYWN0c3FsLmtleXdvcmRzLmpzP2E4YWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmtleXdvcmRzID0gdm9pZCAwO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzXCIpO1xuXG52YXIga2V5d29yZHMgPSAoMCwgX3V0aWxzLmZsYXRLZXl3b3JkTGlzdCkoe1xuICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9zcWwvdC1zcWwvbGFuZ3VhZ2UtZWxlbWVudHMvcmVzZXJ2ZWQta2V5d29yZHMtdHJhbnNhY3Qtc3FsP3ZpZXc9c3FsLXNlcnZlci12ZXIxNVxuICBzdGFuZGFyZDogWydBREQnLCAnQUxMJywgJ0FMVEVSJywgJ0FORCcsICdBTlknLCAnQVMnLCAnQVNDJywgJ0FVVEhPUklaQVRJT04nLCAnQkFDS1VQJywgJ0JFR0lOJywgJ0JFVFdFRU4nLCAnQlJFQUsnLCAnQlJPV1NFJywgJ0JVTEsnLCAnQlknLCAnQ0FTQ0FERScsICdDSEVDSycsICdDSEVDS1BPSU5UJywgJ0NMT1NFJywgJ0NMVVNURVJFRCcsICdDT0FMRVNDRScsICdDT0xMQVRFJywgJ0NPTFVNTicsICdDT01NSVQnLCAnQ09NUFVURScsICdDT05TVFJBSU5UJywgJ0NPTlRBSU5TJywgJ0NPTlRBSU5TVEFCTEUnLCAnQ09OVElOVUUnLCAnQ09OVkVSVCcsICdDUkVBVEUnLCAnQ1JPU1MnLCAnQ1VSUkVOVCcsICdDVVJSRU5UX0RBVEUnLCAnQ1VSUkVOVF9USU1FJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ0NVUlJFTlRfVVNFUicsICdDVVJTT1InLCAnREFUQUJBU0UnLCAnREJDQycsICdERUFMTE9DQVRFJywgJ0RFQ0xBUkUnLCAnREVGQVVMVCcsICdERUxFVEUnLCAnREVOWScsICdERVNDJywgJ0RJU0snLCAnRElTVElOQ1QnLCAnRElTVFJJQlVURUQnLCAnRE9VQkxFJywgJ0RST1AnLCAnRFVNUCcsICdFUlJMVkwnLCAnRVNDQVBFJywgJ0VYRUMnLCAnRVhFQ1VURScsICdFWElTVFMnLCAnRVhJVCcsICdFWFRFUk5BTCcsICdGRVRDSCcsICdGSUxFJywgJ0ZJTExGQUNUT1InLCAnRk9SJywgJ0ZPUkVJR04nLCAnRlJFRVRFWFQnLCAnRlJFRVRFWFRUQUJMRScsICdGUk9NJywgJ0ZVTEwnLCAnRlVOQ1RJT04nLCAnR09UTycsICdHUkFOVCcsICdHUk9VUCcsICdIQVZJTkcnLCAnSE9MRExPQ0snLCAnSURFTlRJVFknLCAnSURFTlRJVFlDT0wnLCAnSURFTlRJVFlfSU5TRVJUJywgJ0lGJywgJ0lOJywgJ0lOREVYJywgJ0lOTkVSJywgJ0lOU0VSVCcsICdJTlRFUlNFQ1QnLCAnSU5UTycsICdJUycsICdKT0lOJywgJ0tFWScsICdLSUxMJywgJ0xFRlQnLCAnTElLRScsICdMSU5FTk8nLCAnTE9BRCcsICdNRVJHRScsICdOQVRJT05BTCcsICdOT0NIRUNLJywgJ05PTkNMVVNURVJFRCcsICdOT1QnLCAnTlVMTCcsICdOVUxMSUYnLCAnT0YnLCAnT0ZGJywgJ09GRlNFVFMnLCAnT04nLCAnT1BFTicsICdPUEVOREFUQVNPVVJDRScsICdPUEVOUVVFUlknLCAnT1BFTlJPV1NFVCcsICdPUEVOWE1MJywgJ09QVElPTicsICdPUicsICdPUkRFUicsICdPVVRFUicsICdPVkVSJywgJ1BFUkNFTlQnLCAnUElWT1QnLCAnUExBTicsICdQUkVDSVNJT04nLCAnUFJJTUFSWScsICdQUklOVCcsICdQUk9DJywgJ1BST0NFRFVSRScsICdQVUJMSUMnLCAnUkFJU0VSUk9SJywgJ1JFQUQnLCAnUkVBRFRFWFQnLCAnUkVDT05GSUdVUkUnLCAnUkVGRVJFTkNFUycsICdSRVBMSUNBVElPTicsICdSRVNUT1JFJywgJ1JFU1RSSUNUJywgJ1JFVFVSTicsICdSRVZFUlQnLCAnUkVWT0tFJywgJ1JJR0hUJywgJ1JPTExCQUNLJywgJ1JPV0NPVU5UJywgJ1JPV0dVSURDT0wnLCAnUlVMRScsICdTQVZFJywgJ1NDSEVNQScsICdTRUNVUklUWUFVRElUJywgJ1NFTEVDVCcsICdTRU1BTlRJQ0tFWVBIUkFTRVRBQkxFJywgJ1NFTUFOVElDU0lNSUxBUklUWURFVEFJTFNUQUJMRScsICdTRU1BTlRJQ1NJTUlMQVJJVFlUQUJMRScsICdTRVNTSU9OX1VTRVInLCAnU0VUJywgJ1NFVFVTRVInLCAnU0hVVERPV04nLCAnU09NRScsICdTVEFUSVNUSUNTJywgJ1NZU1RFTV9VU0VSJywgJ1RBQkxFJywgJ1RBQkxFU0FNUExFJywgJ1RFWFRTSVpFJywgJ1RIRU4nLCAnVE8nLCAnVE9QJywgJ1RSQU4nLCAnVFJBTlNBQ1RJT04nLCAnVFJJR0dFUicsICdUUlVOQ0FURScsICdUUllfQ09OVkVSVCcsICdUU0VRVUFMJywgJ1VOSU9OJywgJ1VOSVFVRScsICdVTlBJVk9UJywgJ1VQREFURScsICdVUERBVEVURVhUJywgJ1VTRScsICdVU0VSJywgJ1ZBTFVFUycsICdWQVJZSU5HJywgJ1ZJRVcnLCAnV0FJVEZPUicsICdXSEVSRScsICdXSElMRScsICdXSVRIJywgJ1dJVEhJTiBHUk9VUCcsICdXUklURVRFWFQnXSxcbiAgb2RiYzogWydBQlNPTFVURScsICdBQ1RJT04nLCAnQURBJywgJ0FERCcsICdBTEwnLCAnQUxMT0NBVEUnLCAnQUxURVInLCAnQU5EJywgJ0FOWScsICdBUkUnLCAnQVMnLCAnQVNDJywgJ0FTU0VSVElPTicsICdBVCcsICdBVVRIT1JJWkFUSU9OJywgJ0FWRycsICdCRUdJTicsICdCRVRXRUVOJywgJ0JJVCcsICdCSVRfTEVOR1RIJywgJ0JPVEgnLCAnQlknLCAnQ0FTQ0FERScsICdDQVNDQURFRCcsICdDQVNUJywgJ0NBVEFMT0cnLCAnQ0hBUicsICdDSEFSQUNURVInLCAnQ0hBUkFDVEVSX0xFTkdUSCcsICdDSEFSX0xFTkdUSCcsICdDSEVDSycsICdDTE9TRScsICdDT0FMRVNDRScsICdDT0xMQVRFJywgJ0NPTExBVElPTicsICdDT0xVTU4nLCAnQ09NTUlUJywgJ0NPTk5FQ1QnLCAnQ09OTkVDVElPTicsICdDT05TVFJBSU5UJywgJ0NPTlNUUkFJTlRTJywgJ0NPTlRJTlVFJywgJ0NPTlZFUlQnLCAnQ09SUkVTUE9ORElORycsICdDT1VOVCcsICdDUkVBVEUnLCAnQ1JPU1MnLCAnQ1VSUkVOVCcsICdDVVJSRU5UX0RBVEUnLCAnQ1VSUkVOVF9USU1FJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ0NVUlJFTlRfVVNFUicsICdDVVJTT1InLCAnREFURScsICdEQVknLCAnREVBTExPQ0FURScsICdERUMnLCAnREVDSU1BTCcsICdERUNMQVJFJywgJ0RFRkFVTFQnLCAnREVGRVJSQUJMRScsICdERUZFUlJFRCcsICdERUxFVEUnLCAnREVTQycsICdERVNDUklCRScsICdERVNDUklQVE9SJywgJ0RJQUdOT1NUSUNTJywgJ0RJU0NPTk5FQ1QnLCAnRElTVElOQ1QnLCAnRE9NQUlOJywgJ0RPVUJMRScsICdEUk9QJywgJ0VORC1FWEVDJywgJ0VTQ0FQRScsICdFWENFUFRJT04nLCAnRVhFQycsICdFWEVDVVRFJywgJ0VYSVNUUycsICdFWFRFUk5BTCcsICdFWFRSQUNUJywgJ0ZBTFNFJywgJ0ZFVENIJywgJ0ZJUlNUJywgJ0ZMT0FUJywgJ0ZPUicsICdGT1JFSUdOJywgJ0ZPUlRSQU4nLCAnRk9VTkQnLCAnRlJPTScsICdGVUxMJywgJ0dFVCcsICdHTE9CQUwnLCAnR08nLCAnR09UTycsICdHUkFOVCcsICdHUk9VUCcsICdIQVZJTkcnLCAnSE9VUicsICdJREVOVElUWScsICdJTU1FRElBVEUnLCAnSU4nLCAnSU5DTFVERScsICdJTkRFWCcsICdJTkRJQ0FUT1InLCAnSU5JVElBTExZJywgJ0lOTkVSJywgJ0lOUFVUJywgJ0lOU0VOU0lUSVZFJywgJ0lOU0VSVCcsICdJTlQnLCAnSU5URUdFUicsICdJTlRFUlNFQ1QnLCAnSU5URVJWQUwnLCAnSU5UTycsICdJUycsICdJU09MQVRJT04nLCAnSk9JTicsICdLRVknLCAnTEFOR1VBR0UnLCAnTEFTVCcsICdMRUFESU5HJywgJ0xFRlQnLCAnTEVWRUwnLCAnTElLRScsICdMT0NBTCcsICdMT1dFUicsICdNQVRDSCcsICdNQVgnLCAnTUlOJywgJ01JTlVURScsICdNT0RVTEUnLCAnTU9OVEgnLCAnTkFNRVMnLCAnTkFUSU9OQUwnLCAnTkFUVVJBTCcsICdOQ0hBUicsICdORVhUJywgJ05PJywgJ05PTkUnLCAnTk9UJywgJ05VTEwnLCAnTlVMTElGJywgJ05VTUVSSUMnLCAnT0NURVRfTEVOR1RIJywgJ09GJywgJ09OTFknLCAnT1BFTicsICdPUFRJT04nLCAnT1InLCAnT1JERVInLCAnT1VURVInLCAnT1VUUFVUJywgJ09WRVJMQVBTJywgJ1BBRCcsICdQQVJUSUFMJywgJ1BBU0NBTCcsICdQT1NJVElPTicsICdQUkVDSVNJT04nLCAnUFJFUEFSRScsICdQUkVTRVJWRScsICdQUklNQVJZJywgJ1BSSU9SJywgJ1BSSVZJTEVHRVMnLCAnUFJPQ0VEVVJFJywgJ1BVQkxJQycsICdSRUFEJywgJ1JFQUwnLCAnUkVGRVJFTkNFUycsICdSRUxBVElWRScsICdSRVNUUklDVCcsICdSRVZPS0UnLCAnUklHSFQnLCAnUk9MTEJBQ0snLCAnUk9XUycsICdTQ0hFTUEnLCAnU0NST0xMJywgJ1NFQ09ORCcsICdTRUNUSU9OJywgJ1NFTEVDVCcsICdTRVNTSU9OJywgJ1NFU1NJT05fVVNFUicsICdTRVQnLCAnU0laRScsICdTTUFMTElOVCcsICdTT01FJywgJ1NQQUNFJywgJ1NRTCcsICdTUUxDQScsICdTUUxDT0RFJywgJ1NRTEVSUk9SJywgJ1NRTFNUQVRFJywgJ1NRTFdBUk5JTkcnLCAnU1VCU1RSSU5HJywgJ1NVTScsICdTWVNURU1fVVNFUicsICdUQUJMRScsICdURU1QT1JBUlknLCAnVElNRScsICdUSU1FU1RBTVAnLCAnVElNRVpPTkVfSE9VUicsICdUSU1FWk9ORV9NSU5VVEUnLCAnVE8nLCAnVFJBSUxJTkcnLCAnVFJBTlNBQ1RJT04nLCAnVFJBTlNMQVRFJywgJ1RSQU5TTEFUSU9OJywgJ1RSSU0nLCAnVFJVRScsICdVTklPTicsICdVTklRVUUnLCAnVU5LTk9XTicsICdVUERBVEUnLCAnVVBQRVInLCAnVVNBR0UnLCAnVVNFUicsICdWQUxVRScsICdWQUxVRVMnLCAnVkFSQ0hBUicsICdWQVJZSU5HJywgJ1ZJRVcnLCAnV0hFTkVWRVInLCAnV0hFUkUnLCAnV0lUSCcsICdXT1JLJywgJ1dSSVRFJywgJ1lFQVInLCAnWk9ORSddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zYWN0c3FsLmtleXdvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/trino/trino.formatter.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/trino/trino.formatter.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _expandPhrases = __webpack_require__(/*! ../../expandPhrases */ \"../../../../../node_modules/sql-formatter/lib/expandPhrases.js\");\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../../formatter/Formatter */ \"../../../../../node_modules/sql-formatter/lib/formatter/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../../lexer/Tokenizer */ \"../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\"));\n\nvar _trino = __webpack_require__(/*! ./trino.functions */ \"../../../../../node_modules/sql-formatter/lib/languages/trino/trino.functions.js\");\n\nvar _trino2 = __webpack_require__(/*! ./trino.keywords */ \"../../../../../node_modules/sql-formatter/lib/languages/trino/trino.keywords.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedSelect = (0, _expandPhrases.expandPhrases)(['SELECT [ALL | DISTINCT]']); // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L41\n\nvar reservedCommands = (0, _expandPhrases.expandPhrases)([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY [ALL | DISTINCT]', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE TABLE', // Data definition\n'CREATE [OR REPLACE] [MATERIALIZED] VIEW', 'CREATE TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE [IF EXISTS]', 'ADD COLUMN [IF NOT EXISTS]', 'DROP COLUMN [IF EXISTS]', 'RENAME COLUMN [IF EXISTS]', 'RENAME TO', 'SET AUTHORIZATION [USER | ROLE]', 'SET PROPERTIES', 'EXECUTE', 'ALTER SCHEMA', 'ALTER MATERIALIZED VIEW', 'ALTER VIEW', 'CREATE SCHEMA', 'CREATE ROLE', 'DROP SCHEMA', 'DROP COLUMN', 'DROP MATERIALIZED VIEW', 'DROP VIEW', 'DROP ROLE', // Auxiliary\n'EXPLAIN', 'ANALYZE', 'EXPLAIN ANALYZE', 'EXPLAIN ANALYZE VERBOSE', 'USE', 'COMMENT ON TABLE', 'COMMENT ON COLUMN', 'DESCRIBE INPUT', 'DESCRIBE OUTPUT', 'REFRESH MATERIALIZED VIEW', 'RESET SESSION', 'SET SESSION', 'SET PATH', 'SET TIME ZONE', 'SHOW GRANTS', 'SHOW CREATE TABLE', 'SHOW CREATE SCHEMA', 'SHOW CREATE VIEW', 'SHOW CREATE MATERIALIZED VIEW', 'SHOW TABLES', 'SHOW SCHEMAS', 'SHOW CATALOGS', 'SHOW COLUMNS', 'SHOW STATS FOR', 'SHOW ROLES', 'SHOW CURRENT ROLES', 'SHOW ROLE GRANTS', 'SHOW FUNCTIONS', 'SHOW SESSION', // MATCH_RECOGNIZE\n'MATCH_RECOGNIZE', 'MEASURES', 'ONE ROW PER MATCH', 'ALL ROWS PER MATCH', 'AFTER MATCH', 'PATTERN', 'SUBSET', 'DEFINE']); // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L231-L235\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L288-L291\n\nvar reservedSetOperations = (0, _expandPhrases.expandPhrases)(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']); // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L299-L313\n\nvar reservedJoins = (0, _expandPhrases.expandPhrases)(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nvar reservedPhrases = (0, _expandPhrases.expandPhrases)(['{ROWS | RANGE | GROUPS} BETWEEN']);\n\nvar TrinoFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(TrinoFormatter, _Formatter);\n\n  var _super = _createSuper(TrinoFormatter);\n\n  function TrinoFormatter() {\n    _classCallCheck(this, TrinoFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TrinoFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedCommands: reservedCommands,\n        reservedSelect: reservedSelect,\n        reservedSetOperations: reservedSetOperations,\n        reservedJoins: reservedJoins,\n        reservedDependentClauses: ['WHEN', 'ELSE'],\n        reservedPhrases: reservedPhrases,\n        reservedKeywords: _trino2.keywords,\n        reservedFunctionNames: _trino.functions,\n        // Trino also supports {- ... -} parenthesis.\n        // The formatting of these currently works out as a result of { and -\n        // not getting a space added in-between.\n        // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-syntax\n        extraParens: ['[]', '{}'],\n        // https://trino.io/docs/current/language/types.html#string\n        // https://trino.io/docs/current/language/types.html#varbinary\n        stringTypes: [{\n          quote: \"''-qq\",\n          prefixes: ['U&']\n        }, {\n          quote: \"''-raw\",\n          prefixes: ['X'],\n          requirePrefix: true\n        }],\n        // https://trino.io/docs/current/language/reserved.html\n        identTypes: ['\"\"-qq'],\n        paramTypes: {\n          positional: true\n        },\n        operators: ['%', '->', ':', '||', // Row pattern syntax\n        '|', '^', '$' // '?', conflicts with positional placeholders\n        ]\n      });\n    }\n  }]);\n\n  return TrinoFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = TrinoFormatter;\nmodule.exports = exports.default;\n//# sourceMappingURL=trino.formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/trino/trino.formatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/trino/trino.functions.js":
/*!****************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/trino/trino.functions.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.functions = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar functions = (0, _utils.flatKeywordList)({\n  // https://github.com/trinodb/trino/tree/432d2897bdef99388c1a47188743a061c4ac1f34/docs/src/main/sphinx/functions\n  // rg '^\\.\\. function::' ./docs/src/main/sphinx/functions | cut -d' ' -f 3 | cut -d '(' -f 1 | sort | uniq\n  // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep    '\\* :func:' | cut -d'`' -f 2\n  // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep -v '\\* :func:'\n  // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep  -e '^- :func:' | cut -d'`' -f2\n  // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep -ve '^- :func:'\n  all: ['ABS', 'ACOS', 'ALL_MATCH', 'ANY_MATCH', 'APPROX_DISTINCT', 'APPROX_MOST_FREQUENT', 'APPROX_PERCENTILE', 'APPROX_SET', 'ARBITRARY', 'ARRAYS_OVERLAP', 'ARRAY_AGG', 'ARRAY_DISTINCT', 'ARRAY_EXCEPT', 'ARRAY_INTERSECT', 'ARRAY_JOIN', 'ARRAY_MAX', 'ARRAY_MIN', 'ARRAY_POSITION', 'ARRAY_REMOVE', 'ARRAY_SORT', 'ARRAY_UNION', 'ASIN', 'ATAN', 'ATAN2', 'AT_TIMEZONE', 'AVG', 'BAR', 'BETA_CDF', 'BING_TILE', 'BING_TILES_AROUND', 'BING_TILE_AT', 'BING_TILE_COORDINATES', 'BING_TILE_POLYGON', 'BING_TILE_QUADKEY', 'BING_TILE_ZOOM_LEVEL', 'BITWISE_AND', 'BITWISE_AND_AGG', 'BITWISE_LEFT_SHIFT', 'BITWISE_NOT', 'BITWISE_OR', 'BITWISE_OR_AGG', 'BITWISE_RIGHT_SHIFT', 'BITWISE_RIGHT_SHIFT_ARITHMETIC', 'BITWISE_XOR', 'BIT_COUNT', 'BOOL_AND', 'BOOL_OR', 'CARDINALITY', 'CAST', 'CBRT', 'CEIL', 'CEILING', 'CHAR2HEXINT', 'CHECKSUM', 'CHR', 'CLASSIFY', 'COALESCE', 'CODEPOINT', 'COLOR', 'COMBINATIONS', 'CONCAT', 'CONCAT_WS', 'CONTAINS', 'CONTAINS_SEQUENCE', 'CONVEX_HULL_AGG', 'CORR', 'COS', 'COSH', 'COSINE_SIMILARITY', 'COUNT', 'COUNT_IF', 'COVAR_POP', 'COVAR_SAMP', 'CRC32', 'CUME_DIST', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_GROUPS', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'CURRENT_USER', 'DATE', 'DATE_ADD', 'DATE_DIFF', 'DATE_FORMAT', 'DATE_PARSE', 'DATE_TRUNC', 'DAY', 'DAY_OF_MONTH', 'DAY_OF_WEEK', 'DAY_OF_YEAR', 'DEGREES', 'DENSE_RANK', 'DOW', 'DOY', 'E', 'ELEMENT_AT', 'EMPTY_APPROX_SET', 'EVALUATE_CLASSIFIER_PREDICTIONS', 'EVERY', 'EXP', 'EXTRACT', 'FEATURES', 'FILTER', 'FIRST_VALUE', 'FLATTEN', 'FLOOR', 'FORMAT', 'FORMAT_DATETIME', 'FORMAT_NUMBER', 'FROM_BASE', 'FROM_BASE32', 'FROM_BASE64', 'FROM_BASE64URL', 'FROM_BIG_ENDIAN_32', 'FROM_BIG_ENDIAN_64', 'FROM_ENCODED_POLYLINE', 'FROM_GEOJSON_GEOMETRY', 'FROM_HEX', 'FROM_IEEE754_32', 'FROM_IEEE754_64', 'FROM_ISO8601_DATE', 'FROM_ISO8601_TIMESTAMP', 'FROM_ISO8601_TIMESTAMP_NANOS', 'FROM_UNIXTIME', 'FROM_UNIXTIME_NANOS', 'FROM_UTF8', 'GEOMETRIC_MEAN', 'GEOMETRY_FROM_HADOOP_SHAPE', 'GEOMETRY_INVALID_REASON', 'GEOMETRY_NEAREST_POINTS', 'GEOMETRY_TO_BING_TILES', 'GEOMETRY_UNION', 'GEOMETRY_UNION_AGG', 'GREATEST', 'GREAT_CIRCLE_DISTANCE', 'HAMMING_DISTANCE', 'HASH_COUNTS', 'HISTOGRAM', 'HMAC_MD5', 'HMAC_SHA1', 'HMAC_SHA256', 'HMAC_SHA512', 'HOUR', 'HUMAN_READABLE_SECONDS', 'IF', 'INDEX', 'INFINITY', 'INTERSECTION_CARDINALITY', 'INVERSE_BETA_CDF', 'INVERSE_NORMAL_CDF', 'IS_FINITE', 'IS_INFINITE', 'IS_JSON_SCALAR', 'IS_NAN', 'JACCARD_INDEX', 'JSON_ARRAY_CONTAINS', 'JSON_ARRAY_GET', 'JSON_ARRAY_LENGTH', 'JSON_EXISTS', 'JSON_EXTRACT', 'JSON_EXTRACT_SCALAR', 'JSON_FORMAT', 'JSON_PARSE', 'JSON_QUERY', 'JSON_SIZE', 'JSON_VALUE', 'KURTOSIS', 'LAG', 'LAST_DAY_OF_MONTH', 'LAST_VALUE', 'LEAD', 'LEARN_CLASSIFIER', 'LEARN_LIBSVM_CLASSIFIER', 'LEARN_LIBSVM_REGRESSOR', 'LEARN_REGRESSOR', 'LEAST', 'LENGTH', 'LEVENSHTEIN_DISTANCE', 'LINE_INTERPOLATE_POINT', 'LINE_INTERPOLATE_POINTS', 'LINE_LOCATE_POINT', 'LISTAGG', 'LN', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOG', 'LOG10', 'LOG2', 'LOWER', 'LPAD', 'LTRIM', 'LUHN_CHECK', 'MAKE_SET_DIGEST', 'MAP', 'MAP_AGG', 'MAP_CONCAT', 'MAP_ENTRIES', 'MAP_FILTER', 'MAP_FROM_ENTRIES', 'MAP_KEYS', 'MAP_UNION', 'MAP_VALUES', 'MAP_ZIP_WITH', 'MAX', 'MAX_BY', 'MD5', 'MERGE', 'MERGE_SET_DIGEST', 'MILLISECOND', 'MIN', 'MINUTE', 'MIN_BY', 'MOD', 'MONTH', 'MULTIMAP_AGG', 'MULTIMAP_FROM_ENTRIES', 'MURMUR3', 'NAN', 'NGRAMS', 'NONE_MATCH', 'NORMALIZE', 'NORMAL_CDF', 'NOW', 'NTH_VALUE', 'NTILE', 'NULLIF', 'NUMERIC_HISTOGRAM', 'OBJECTID', 'OBJECTID_TIMESTAMP', 'PARSE_DATA_SIZE', 'PARSE_DATETIME', 'PARSE_DURATION', 'PERCENT_RANK', 'PI', 'POSITION', 'POW', 'POWER', 'QDIGEST_AGG', 'QUARTER', 'RADIANS', 'RAND', 'RANDOM', 'RANK', 'REDUCE', 'REDUCE_AGG', 'REGEXP_COUNT', 'REGEXP_EXTRACT', 'REGEXP_EXTRACT_ALL', 'REGEXP_LIKE', 'REGEXP_POSITION', 'REGEXP_REPLACE', 'REGEXP_SPLIT', 'REGRESS', 'REGR_INTERCEPT', 'REGR_SLOPE', 'RENDER', 'REPEAT', 'REPLACE', 'REVERSE', 'RGB', 'ROUND', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'SECOND', 'SEQUENCE', 'SHA1', 'SHA256', 'SHA512', 'SHUFFLE', 'SIGN', 'SIMPLIFY_GEOMETRY', 'SIN', 'SKEWNESS', 'SLICE', 'SOUNDEX', 'SPATIAL_PARTITIONING', 'SPATIAL_PARTITIONS', 'SPLIT', 'SPLIT_PART', 'SPLIT_TO_MAP', 'SPLIT_TO_MULTIMAP', 'SPOOKY_HASH_V2_32', 'SPOOKY_HASH_V2_64', 'SQRT', 'STARTS_WITH', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STRPOS', 'ST_AREA', 'ST_ASBINARY', 'ST_ASTEXT', 'ST_BOUNDARY', 'ST_BUFFER', 'ST_CENTROID', 'ST_CONTAINS', 'ST_CONVEXHULL', 'ST_COORDDIM', 'ST_CROSSES', 'ST_DIFFERENCE', 'ST_DIMENSION', 'ST_DISJOINT', 'ST_DISTANCE', 'ST_ENDPOINT', 'ST_ENVELOPE', 'ST_ENVELOPEASPTS', 'ST_EQUALS', 'ST_EXTERIORRING', 'ST_GEOMETRIES', 'ST_GEOMETRYFROMTEXT', 'ST_GEOMETRYN', 'ST_GEOMETRYTYPE', 'ST_GEOMFROMBINARY', 'ST_INTERIORRINGN', 'ST_INTERIORRINGS', 'ST_INTERSECTION', 'ST_INTERSECTS', 'ST_ISCLOSED', 'ST_ISEMPTY', 'ST_ISRING', 'ST_ISSIMPLE', 'ST_ISVALID', 'ST_LENGTH', 'ST_LINEFROMTEXT', 'ST_LINESTRING', 'ST_MULTIPOINT', 'ST_NUMGEOMETRIES', 'ST_NUMINTERIORRING', 'ST_NUMPOINTS', 'ST_OVERLAPS', 'ST_POINT', 'ST_POINTN', 'ST_POINTS', 'ST_POLYGON', 'ST_RELATE', 'ST_STARTPOINT', 'ST_SYMDIFFERENCE', 'ST_TOUCHES', 'ST_UNION', 'ST_WITHIN', 'ST_X', 'ST_XMAX', 'ST_XMIN', 'ST_Y', 'ST_YMAX', 'ST_YMIN', 'SUBSTR', 'SUBSTRING', 'SUM', 'TAN', 'TANH', 'TDIGEST_AGG', 'TIMESTAMP_OBJECTID', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO_BASE', 'TO_BASE32', 'TO_BASE64', 'TO_BASE64URL', 'TO_BIG_ENDIAN_32', 'TO_BIG_ENDIAN_64', 'TO_CHAR', 'TO_DATE', 'TO_ENCODED_POLYLINE', 'TO_GEOJSON_GEOMETRY', 'TO_GEOMETRY', 'TO_HEX', 'TO_IEEE754_32', 'TO_IEEE754_64', 'TO_ISO8601', 'TO_MILLISECONDS', 'TO_SPHERICAL_GEOGRAPHY', 'TO_TIMESTAMP', 'TO_UNIXTIME', 'TO_UTF8', 'TRANSFORM', 'TRANSFORM_KEYS', 'TRANSFORM_VALUES', 'TRANSLATE', 'TRIM', 'TRIM_ARRAY', 'TRUNCATE', 'TRY', 'TRY_CAST', 'TYPEOF', 'UPPER', 'URL_DECODE', 'URL_ENCODE', 'URL_EXTRACT_FRAGMENT', 'URL_EXTRACT_HOST', 'URL_EXTRACT_PARAMETER', 'URL_EXTRACT_PATH', 'URL_EXTRACT_PORT', 'URL_EXTRACT_PROTOCOL', 'URL_EXTRACT_QUERY', 'UUID', 'VALUES_AT_QUANTILES', 'VALUE_AT_QUANTILE', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'VERSION', 'WEEK', 'WEEK_OF_YEAR', 'WIDTH_BUCKET', 'WILSON_INTERVAL_LOWER', 'WILSON_INTERVAL_UPPER', 'WITH_TIMEZONE', 'WORD_STEM', 'XXHASH64', 'YEAR', 'YEAR_OF_WEEK', 'YOW', 'ZIP', 'ZIP_WITH'],\n  // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-recognition-expressions\n  rowPattern: ['CLASSIFIER', 'FIRST', 'LAST', 'MATCH_NUMBER', 'NEXT', 'PERMUTE', 'PREV']\n});\nexports.functions = functions;\n//# sourceMappingURL=trino.functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/trino/trino.functions.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/languages/trino/trino.keywords.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/languages/trino/trino.keywords.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.keywords = void 0;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar keywords = (0, _utils.flatKeywordList)({\n  // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L858-L1128\n  all: ['ABSENT', 'ADD', 'ADMIN', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BERNOULLI', 'BETWEEN', 'BOTH', 'BY', 'CALL', 'CASCADE', 'CASE', 'CATALOGS', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMMITTED', 'CONDITIONAL', 'CONSTRAINT', 'COPARTITION', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_PATH', 'CURRENT_ROLE', 'DATA', 'DEALLOCATE', 'DEFAULT', 'DEFINE', 'DEFINER', 'DELETE', 'DENY', 'DESC', 'DESCRIBE', 'DESCRIPTOR', 'DISTINCT', 'DISTRIBUTED', 'DOUBLE', 'DROP', 'ELSE', 'EMPTY', 'ENCODING', 'END', 'ERROR', 'ESCAPE', 'EXCEPT', 'EXCLUDING', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'FALSE', 'FETCH', 'FINAL', 'FIRST', 'FOLLOWING', 'FOR', 'FROM', 'FULL', 'FUNCTIONS', 'GRANT', 'GRANTED', 'GRANTS', 'GRAPHVIZ', 'GROUP', 'GROUPING', 'GROUPS', 'HAVING', 'IGNORE', 'IN', 'INCLUDING', 'INITIAL', 'INNER', 'INPUT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'INVOKER', 'IO', 'IS', 'ISOLATION', 'JOIN', 'JSON', 'JSON_ARRAY', 'JSON_OBJECT', 'KEEP', 'KEY', 'KEYS', 'LAST', 'LATERAL', 'LEADING', 'LEFT', 'LEVEL', 'LIKE', 'LIMIT', 'LOCAL', 'LOGICAL', 'MATCH', 'MATCHED', 'MATCHES', 'MATCH_RECOGNIZE', 'MATERIALIZED', 'MEASURES', 'NATURAL', 'NEXT', 'NFC', 'NFD', 'NFKC', 'NFKD', 'NO', 'NONE', 'NOT', 'NULL', 'NULLS', 'OBJECT', 'OF', 'OFFSET', 'OMIT', 'ON', 'ONE', 'ONLY', 'OPTION', 'OR', 'ORDER', 'ORDINALITY', 'OUTER', 'OUTPUT', 'OVER', 'OVERFLOW', 'PARTITION', 'PARTITIONS', 'PASSING', 'PAST', 'PATH', 'PATTERN', 'PER', 'PERMUTE', 'PRECEDING', 'PRECISION', 'PREPARE', 'PRIVILEGES', 'PROPERTIES', 'PRUNE', 'QUOTES', 'RANGE', 'READ', 'RECURSIVE', 'REFRESH', 'RENAME', 'REPEATABLE', 'RESET', 'RESPECT', 'RESTRICT', 'RETURNING', 'REVOKE', 'RIGHT', 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'RUNNING', 'SCALAR', 'SCHEMA', 'SCHEMAS', 'SECURITY', 'SEEK', 'SELECT', 'SERIALIZABLE', 'SESSION', 'SET', 'SETS', 'SHOW', 'SKIP', 'SOME', 'START', 'STATS', 'STRING', 'SUBSET', 'SYSTEM', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TEXT', 'THEN', 'TIES', 'TIME', 'TIMESTAMP', 'TO', 'TRAILING', 'TRANSACTION', 'TRUE', 'TYPE', 'UESCAPE', 'UNBOUNDED', 'UNCOMMITTED', 'UNCONDITIONAL', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNMATCHED', 'UNNEST', 'UPDATE', 'USE', 'USER', 'USING', 'UTF16', 'UTF32', 'UTF8', 'VALIDATE', 'VALUE', 'VALUES', 'VERBOSE', 'VIEW', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', 'ZONE'],\n  // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java#L131-L168\n  // or https://trino.io/docs/current/language/types.html\n  types: ['BIGINT', 'INT', 'INTEGER', 'SMALLINT', 'TINYINT', 'BOOLEAN', 'DATE', 'DECIMAL', 'REAL', 'DOUBLE', 'HYPERLOGLOG', 'QDIGEST', 'TDIGEST', 'P4HYPERLOGLOG', 'INTERVAL', 'TIMESTAMP', 'TIME', 'VARBINARY', 'VARCHAR', 'CHAR', 'ROW', 'ARRAY', 'MAP', 'JSON', 'JSON2016', 'IPADDRESS', 'GEOMETRY', 'UUID', 'SETDIGEST', 'JONIREGEXP', 'RE2JREGEXP', 'LIKEPATTERN', 'COLOR', 'CODEPOINTS', 'FUNCTION', 'JSONPATH']\n});\nexports.keywords = keywords;\n//# sourceMappingURL=trino.keywords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy90cmluby90cmluby5rZXl3b3Jkcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy90cmluby90cmluby5rZXl3b3Jkcy5qcz8zZTI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5rZXl3b3JkcyA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcblxudmFyIGtleXdvcmRzID0gKDAsIF91dGlscy5mbGF0S2V5d29yZExpc3QpKHtcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3RyaW5vZGIvdHJpbm8vYmxvYi80MzJkMjg5N2JkZWY5OTM4OGMxYTQ3MTg4NzQzYTA2MWM0YWMxZjM0L2NvcmUvdHJpbm8tcGFyc2VyL3NyYy9tYWluL2FudGxyNC9pby90cmluby9zcWwvcGFyc2VyL1NxbEJhc2UuZzQjTDg1OC1MMTEyOFxuICBhbGw6IFsnQUJTRU5UJywgJ0FERCcsICdBRE1JTicsICdBRlRFUicsICdBTEwnLCAnQUxURVInLCAnQU5BTFlaRScsICdBTkQnLCAnQU5ZJywgJ0FSUkFZJywgJ0FTJywgJ0FTQycsICdBVCcsICdBVVRIT1JJWkFUSU9OJywgJ0JFUk5PVUxMSScsICdCRVRXRUVOJywgJ0JPVEgnLCAnQlknLCAnQ0FMTCcsICdDQVNDQURFJywgJ0NBU0UnLCAnQ0FUQUxPR1MnLCAnQ09MVU1OJywgJ0NPTFVNTlMnLCAnQ09NTUVOVCcsICdDT01NSVQnLCAnQ09NTUlUVEVEJywgJ0NPTkRJVElPTkFMJywgJ0NPTlNUUkFJTlQnLCAnQ09QQVJUSVRJT04nLCAnQ1JFQVRFJywgJ0NST1NTJywgJ0NVQkUnLCAnQ1VSUkVOVCcsICdDVVJSRU5UX1BBVEgnLCAnQ1VSUkVOVF9ST0xFJywgJ0RBVEEnLCAnREVBTExPQ0FURScsICdERUZBVUxUJywgJ0RFRklORScsICdERUZJTkVSJywgJ0RFTEVURScsICdERU5ZJywgJ0RFU0MnLCAnREVTQ1JJQkUnLCAnREVTQ1JJUFRPUicsICdESVNUSU5DVCcsICdESVNUUklCVVRFRCcsICdET1VCTEUnLCAnRFJPUCcsICdFTFNFJywgJ0VNUFRZJywgJ0VOQ09ESU5HJywgJ0VORCcsICdFUlJPUicsICdFU0NBUEUnLCAnRVhDRVBUJywgJ0VYQ0xVRElORycsICdFWEVDVVRFJywgJ0VYSVNUUycsICdFWFBMQUlOJywgJ0ZBTFNFJywgJ0ZFVENIJywgJ0ZJTkFMJywgJ0ZJUlNUJywgJ0ZPTExPV0lORycsICdGT1InLCAnRlJPTScsICdGVUxMJywgJ0ZVTkNUSU9OUycsICdHUkFOVCcsICdHUkFOVEVEJywgJ0dSQU5UUycsICdHUkFQSFZJWicsICdHUk9VUCcsICdHUk9VUElORycsICdHUk9VUFMnLCAnSEFWSU5HJywgJ0lHTk9SRScsICdJTicsICdJTkNMVURJTkcnLCAnSU5JVElBTCcsICdJTk5FUicsICdJTlBVVCcsICdJTlNFUlQnLCAnSU5URVJTRUNUJywgJ0lOVEVSVkFMJywgJ0lOVE8nLCAnSU5WT0tFUicsICdJTycsICdJUycsICdJU09MQVRJT04nLCAnSk9JTicsICdKU09OJywgJ0pTT05fQVJSQVknLCAnSlNPTl9PQkpFQ1QnLCAnS0VFUCcsICdLRVknLCAnS0VZUycsICdMQVNUJywgJ0xBVEVSQUwnLCAnTEVBRElORycsICdMRUZUJywgJ0xFVkVMJywgJ0xJS0UnLCAnTElNSVQnLCAnTE9DQUwnLCAnTE9HSUNBTCcsICdNQVRDSCcsICdNQVRDSEVEJywgJ01BVENIRVMnLCAnTUFUQ0hfUkVDT0dOSVpFJywgJ01BVEVSSUFMSVpFRCcsICdNRUFTVVJFUycsICdOQVRVUkFMJywgJ05FWFQnLCAnTkZDJywgJ05GRCcsICdORktDJywgJ05GS0QnLCAnTk8nLCAnTk9ORScsICdOT1QnLCAnTlVMTCcsICdOVUxMUycsICdPQkpFQ1QnLCAnT0YnLCAnT0ZGU0VUJywgJ09NSVQnLCAnT04nLCAnT05FJywgJ09OTFknLCAnT1BUSU9OJywgJ09SJywgJ09SREVSJywgJ09SRElOQUxJVFknLCAnT1VURVInLCAnT1VUUFVUJywgJ09WRVInLCAnT1ZFUkZMT1cnLCAnUEFSVElUSU9OJywgJ1BBUlRJVElPTlMnLCAnUEFTU0lORycsICdQQVNUJywgJ1BBVEgnLCAnUEFUVEVSTicsICdQRVInLCAnUEVSTVVURScsICdQUkVDRURJTkcnLCAnUFJFQ0lTSU9OJywgJ1BSRVBBUkUnLCAnUFJJVklMRUdFUycsICdQUk9QRVJUSUVTJywgJ1BSVU5FJywgJ1FVT1RFUycsICdSQU5HRScsICdSRUFEJywgJ1JFQ1VSU0lWRScsICdSRUZSRVNIJywgJ1JFTkFNRScsICdSRVBFQVRBQkxFJywgJ1JFU0VUJywgJ1JFU1BFQ1QnLCAnUkVTVFJJQ1QnLCAnUkVUVVJOSU5HJywgJ1JFVk9LRScsICdSSUdIVCcsICdST0xFJywgJ1JPTEVTJywgJ1JPTExCQUNLJywgJ1JPTExVUCcsICdST1cnLCAnUk9XUycsICdSVU5OSU5HJywgJ1NDQUxBUicsICdTQ0hFTUEnLCAnU0NIRU1BUycsICdTRUNVUklUWScsICdTRUVLJywgJ1NFTEVDVCcsICdTRVJJQUxJWkFCTEUnLCAnU0VTU0lPTicsICdTRVQnLCAnU0VUUycsICdTSE9XJywgJ1NLSVAnLCAnU09NRScsICdTVEFSVCcsICdTVEFUUycsICdTVFJJTkcnLCAnU1VCU0VUJywgJ1NZU1RFTScsICdUQUJMRScsICdUQUJMRVMnLCAnVEFCTEVTQU1QTEUnLCAnVEVYVCcsICdUSEVOJywgJ1RJRVMnLCAnVElNRScsICdUSU1FU1RBTVAnLCAnVE8nLCAnVFJBSUxJTkcnLCAnVFJBTlNBQ1RJT04nLCAnVFJVRScsICdUWVBFJywgJ1VFU0NBUEUnLCAnVU5CT1VOREVEJywgJ1VOQ09NTUlUVEVEJywgJ1VOQ09ORElUSU9OQUwnLCAnVU5JT04nLCAnVU5JUVVFJywgJ1VOS05PV04nLCAnVU5NQVRDSEVEJywgJ1VOTkVTVCcsICdVUERBVEUnLCAnVVNFJywgJ1VTRVInLCAnVVNJTkcnLCAnVVRGMTYnLCAnVVRGMzInLCAnVVRGOCcsICdWQUxJREFURScsICdWQUxVRScsICdWQUxVRVMnLCAnVkVSQk9TRScsICdWSUVXJywgJ1dIRU4nLCAnV0hFUkUnLCAnV0lORE9XJywgJ1dJVEgnLCAnV0lUSElOJywgJ1dJVEhPVVQnLCAnV09SSycsICdXUkFQUEVSJywgJ1dSSVRFJywgJ1pPTkUnXSxcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3RyaW5vZGIvdHJpbm8vYmxvYi80MzJkMjg5N2JkZWY5OTM4OGMxYTQ3MTg4NzQzYTA2MWM0YWMxZjM0L2NvcmUvdHJpbm8tbWFpbi9zcmMvbWFpbi9qYXZhL2lvL3RyaW5vL21ldGFkYXRhL1R5cGVSZWdpc3RyeS5qYXZhI0wxMzEtTDE2OFxuICAvLyBvciBodHRwczovL3RyaW5vLmlvL2RvY3MvY3VycmVudC9sYW5ndWFnZS90eXBlcy5odG1sXG4gIHR5cGVzOiBbJ0JJR0lOVCcsICdJTlQnLCAnSU5URUdFUicsICdTTUFMTElOVCcsICdUSU5ZSU5UJywgJ0JPT0xFQU4nLCAnREFURScsICdERUNJTUFMJywgJ1JFQUwnLCAnRE9VQkxFJywgJ0hZUEVSTE9HTE9HJywgJ1FESUdFU1QnLCAnVERJR0VTVCcsICdQNEhZUEVSTE9HTE9HJywgJ0lOVEVSVkFMJywgJ1RJTUVTVEFNUCcsICdUSU1FJywgJ1ZBUkJJTkFSWScsICdWQVJDSEFSJywgJ0NIQVInLCAnUk9XJywgJ0FSUkFZJywgJ01BUCcsICdKU09OJywgJ0pTT04yMDE2JywgJ0lQQUREUkVTUycsICdHRU9NRVRSWScsICdVVUlEJywgJ1NFVERJR0VTVCcsICdKT05JUkVHRVhQJywgJ1JFMkpSRUdFWFAnLCAnTElLRVBBVFRFUk4nLCAnQ09MT1InLCAnQ09ERVBPSU5UUycsICdGVU5DVElPTicsICdKU09OUEFUSCddXG59KTtcbmV4cG9ydHMua2V5d29yZHMgPSBrZXl3b3Jkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyaW5vLmtleXdvcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/languages/trino/trino.keywords.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/NestedComment.js":
/*!****************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/NestedComment.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NestedComment = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-cond-assign */\nvar START = new RegExp(\"\\\\/\\\\*\", \"y\"); // matches: /*\n\nvar MIDDLE = new RegExp(\"((?:(?![\\\\*\\\\/])[\\\\s\\\\S])|\\\\*(?:(?!\\\\/)[\\\\s\\\\S])|\\\\/(?:(?!\\\\*)[\\\\s\\\\S]))+\", \"y\"); // matches text NOT containing /* or */\n\nvar END = new RegExp(\"\\\\*\\\\/\", \"y\"); // matches: */\n\n/**\n * An object mimicking a regular expression,\n * for matching nested block-comments.\n */\n\nvar NestedComment = /*#__PURE__*/function () {\n  function NestedComment() {\n    _classCallCheck(this, NestedComment);\n\n    _defineProperty(this, \"lastIndex\", 0);\n  }\n\n  _createClass(NestedComment, [{\n    key: \"exec\",\n    value: function exec(input) {\n      var result = '';\n      var match;\n      var nestLevel = 0;\n\n      if (match = this.matchSection(START, input)) {\n        result += match;\n        nestLevel++;\n      } else {\n        return null;\n      }\n\n      while (nestLevel > 0) {\n        if (match = this.matchSection(START, input)) {\n          result += match;\n          nestLevel++;\n        } else if (match = this.matchSection(END, input)) {\n          result += match;\n          nestLevel--;\n        } else if (match = this.matchSection(MIDDLE, input)) {\n          result += match;\n        } else {\n          return null;\n        }\n      }\n\n      return [result];\n    }\n  }, {\n    key: \"matchSection\",\n    value: function matchSection(regex, input) {\n      regex.lastIndex = this.lastIndex;\n      var matches = regex.exec(input);\n\n      if (matches) {\n        this.lastIndex += matches[0].length;\n      }\n\n      return matches ? matches[0] : null;\n    }\n  }]);\n\n  return NestedComment;\n}();\n\nexports.NestedComment = NestedComment;\n//# sourceMappingURL=NestedComment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xleGVyL05lc3RlZENvbW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGV4ZXIvTmVzdGVkQ29tbWVudC5qcz83MDZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5OZXN0ZWRDb21tZW50ID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbmQtYXNzaWduICovXG52YXIgU1RBUlQgPSBuZXcgUmVnRXhwKFwiXFxcXC9cXFxcKlwiLCBcInlcIik7IC8vIG1hdGNoZXM6IC8qXG5cbnZhciBNSURETEUgPSBuZXcgUmVnRXhwKFwiKCg/Oig/IVtcXFxcKlxcXFwvXSlbXFxcXHNcXFxcU10pfFxcXFwqKD86KD8hXFxcXC8pW1xcXFxzXFxcXFNdKXxcXFxcLyg/Oig/IVxcXFwqKVtcXFxcc1xcXFxTXSkpK1wiLCBcInlcIik7IC8vIG1hdGNoZXMgdGV4dCBOT1QgY29udGFpbmluZyAvKiBvciAqL1xuXG52YXIgRU5EID0gbmV3IFJlZ0V4cChcIlxcXFwqXFxcXC9cIiwgXCJ5XCIpOyAvLyBtYXRjaGVzOiAqL1xuXG4vKipcbiAqIEFuIG9iamVjdCBtaW1pY2tpbmcgYSByZWd1bGFyIGV4cHJlc3Npb24sXG4gKiBmb3IgbWF0Y2hpbmcgbmVzdGVkIGJsb2NrLWNvbW1lbnRzLlxuICovXG5cbnZhciBOZXN0ZWRDb21tZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTmVzdGVkQ29tbWVudCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTmVzdGVkQ29tbWVudCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJsYXN0SW5kZXhcIiwgMCk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTmVzdGVkQ29tbWVudCwgW3tcbiAgICBrZXk6IFwiZXhlY1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleGVjKGlucHV0KSB7XG4gICAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgICB2YXIgbWF0Y2g7XG4gICAgICB2YXIgbmVzdExldmVsID0gMDtcblxuICAgICAgaWYgKG1hdGNoID0gdGhpcy5tYXRjaFNlY3Rpb24oU1RBUlQsIGlucHV0KSkge1xuICAgICAgICByZXN1bHQgKz0gbWF0Y2g7XG4gICAgICAgIG5lc3RMZXZlbCsrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIHdoaWxlIChuZXN0TGV2ZWwgPiAwKSB7XG4gICAgICAgIGlmIChtYXRjaCA9IHRoaXMubWF0Y2hTZWN0aW9uKFNUQVJULCBpbnB1dCkpIHtcbiAgICAgICAgICByZXN1bHQgKz0gbWF0Y2g7XG4gICAgICAgICAgbmVzdExldmVsKys7XG4gICAgICAgIH0gZWxzZSBpZiAobWF0Y2ggPSB0aGlzLm1hdGNoU2VjdGlvbihFTkQsIGlucHV0KSkge1xuICAgICAgICAgIHJlc3VsdCArPSBtYXRjaDtcbiAgICAgICAgICBuZXN0TGV2ZWwtLTtcbiAgICAgICAgfSBlbHNlIGlmIChtYXRjaCA9IHRoaXMubWF0Y2hTZWN0aW9uKE1JRERMRSwgaW5wdXQpKSB7XG4gICAgICAgICAgcmVzdWx0ICs9IG1hdGNoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBbcmVzdWx0XTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibWF0Y2hTZWN0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1hdGNoU2VjdGlvbihyZWdleCwgaW5wdXQpIHtcbiAgICAgIHJlZ2V4Lmxhc3RJbmRleCA9IHRoaXMubGFzdEluZGV4O1xuICAgICAgdmFyIG1hdGNoZXMgPSByZWdleC5leGVjKGlucHV0KTtcblxuICAgICAgaWYgKG1hdGNoZXMpIHtcbiAgICAgICAgdGhpcy5sYXN0SW5kZXggKz0gbWF0Y2hlc1swXS5sZW5ndGg7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBtYXRjaGVzID8gbWF0Y2hlc1swXSA6IG51bGw7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE5lc3RlZENvbW1lbnQ7XG59KCk7XG5cbmV4cG9ydHMuTmVzdGVkQ29tbWVudCA9IE5lc3RlZENvbW1lbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OZXN0ZWRDb21tZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/NestedComment.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js":
/*!************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _token = __webpack_require__(/*! ./token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nvar regex = _interopRequireWildcard(__webpack_require__(/*! ./regexFactory */ \"../../../../../node_modules/sql-formatter/lib/lexer/regexFactory.js\"));\n\nvar _TokenizerEngine = _interopRequireDefault(__webpack_require__(/*! ./TokenizerEngine */ \"../../../../../node_modules/sql-formatter/lib/lexer/TokenizerEngine.js\"));\n\nvar _regexUtil = __webpack_require__(/*! ./regexUtil */ \"../../../../../node_modules/sql-formatter/lib/lexer/regexUtil.js\");\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar _NestedComment = __webpack_require__(/*! ./NestedComment */ \"../../../../../node_modules/sql-formatter/lib/lexer/NestedComment.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Tokenizer = /*#__PURE__*/function () {\n  function Tokenizer(cfg) {\n    _classCallCheck(this, Tokenizer);\n\n    this.cfg = cfg;\n\n    _defineProperty(this, \"rulesBeforeParams\", void 0);\n\n    _defineProperty(this, \"rulesAfterParams\", void 0);\n\n    this.rulesBeforeParams = this.buildRulesBeforeParams(cfg);\n    this.rulesAfterParams = this.buildRulesAfterParams(cfg);\n  }\n\n  _createClass(Tokenizer, [{\n    key: \"tokenize\",\n    value: function tokenize(input, paramTypesOverrides) {\n      var rules = [].concat(_toConsumableArray(this.rulesBeforeParams), _toConsumableArray(this.buildParamRules(this.cfg, paramTypesOverrides)), _toConsumableArray(this.rulesAfterParams));\n      var tokens = new _TokenizerEngine[\"default\"](rules).tokenize(input);\n      return this.cfg.postProcess ? this.cfg.postProcess(tokens) : tokens;\n    } // These rules can be cached as they only depend on\n    // the Tokenizer config options specified for each SQL dialect\n\n  }, {\n    key: \"buildRulesBeforeParams\",\n    value: function buildRulesBeforeParams(cfg) {\n      var _cfg$lineCommentTypes, _cfg$reservedPhrases;\n\n      return this.validRules([{\n        type: _token.TokenType.BLOCK_COMMENT,\n        regex: cfg.nestedBlockComments ? new _NestedComment.NestedComment() : new RegExp(\"(\\\\/\\\\*(?:(?![])[\\\\s\\\\S])*?\\\\*\\\\/)\", \"y\")\n      }, {\n        type: _token.TokenType.LINE_COMMENT,\n        regex: regex.lineComment((_cfg$lineCommentTypes = cfg.lineCommentTypes) !== null && _cfg$lineCommentTypes !== void 0 ? _cfg$lineCommentTypes : ['--'])\n      }, {\n        type: _token.TokenType.QUOTED_IDENTIFIER,\n        regex: regex.string(cfg.identTypes)\n      }, {\n        type: _token.TokenType.NUMBER,\n        regex: new RegExp(\"(?:0x[0-9A-Fa-f]+|0b[01]+|(?:\\\\x2D[\\\\t-\\\\r \\\\xA0\\\\u1680\\\\u2000-\\\\u200A\\\\u2028\\\\u2029\\\\u202F\\\\u205F\\\\u3000\\\\uFEFF]*)?[0-9]+(?:\\\\.[0-9]*)?(?:[Ee][\\\\+\\\\x2D]?[0-9]+(?:\\\\.[0-9]+)?)?)(?![0-9A-Z_a-z])\", \"y\")\n      }, // RESERVED_PHRASE is matched before all other keyword tokens\n      // to e.g. prioritize matching \"TIMESTAMP WITH TIME ZONE\" phrase over \"WITH\" command.\n      {\n        type: _token.TokenType.RESERVED_PHRASE,\n        regex: regex.reservedWord((_cfg$reservedPhrases = cfg.reservedPhrases) !== null && _cfg$reservedPhrases !== void 0 ? _cfg$reservedPhrases : [], cfg.identChars),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.CASE,\n        regex: new RegExp(\"CA[S\\\\u017F]E\\\\b\", \"iy\"),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.END,\n        regex: new RegExp(\"END\\\\b\", \"iy\"),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.BETWEEN,\n        regex: new RegExp(\"BETWEEN\\\\b\", \"iy\"),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.LIMIT,\n        regex: cfg.reservedCommands.includes('LIMIT') ? new RegExp(\"LIMIT\\\\b\", \"iy\") : undefined,\n        text: toCanonical\n      }, {\n        type: _token.TokenType.RESERVED_COMMAND,\n        regex: regex.reservedWord(cfg.reservedCommands, cfg.identChars),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.RESERVED_SELECT,\n        regex: regex.reservedWord(cfg.reservedSelect, cfg.identChars),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.RESERVED_SET_OPERATION,\n        regex: regex.reservedWord(cfg.reservedSetOperations, cfg.identChars),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.RESERVED_DEPENDENT_CLAUSE,\n        regex: regex.reservedWord(cfg.reservedDependentClauses, cfg.identChars),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.RESERVED_JOIN,\n        regex: regex.reservedWord(cfg.reservedJoins, cfg.identChars),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.AND,\n        regex: new RegExp(\"AND\\\\b\", \"iy\"),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.OR,\n        regex: new RegExp(\"OR\\\\b\", \"iy\"),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.XOR,\n        regex: cfg.supportsXor ? new RegExp(\"XOR\\\\b\", \"iy\") : undefined,\n        text: toCanonical\n      }, {\n        type: _token.TokenType.RESERVED_FUNCTION_NAME,\n        regex: regex.reservedWord(cfg.reservedFunctionNames, cfg.identChars),\n        text: toCanonical\n      }, {\n        type: _token.TokenType.RESERVED_KEYWORD,\n        regex: regex.reservedWord(cfg.reservedKeywords, cfg.identChars),\n        text: toCanonical\n      }]);\n    } // These rules can also be cached as they only depend on\n    // the Tokenizer config options specified for each SQL dialect\n\n  }, {\n    key: \"buildRulesAfterParams\",\n    value: function buildRulesAfterParams(cfg) {\n      var _cfg$operators;\n\n      return this.validRules([{\n        type: _token.TokenType.VARIABLE,\n        regex: cfg.variableTypes ? regex.variable(cfg.variableTypes) : undefined\n      }, {\n        type: _token.TokenType.STRING,\n        regex: regex.string(cfg.stringTypes)\n      }, {\n        type: _token.TokenType.IDENTIFIER,\n        regex: regex.identifier(cfg.identChars)\n      }, {\n        type: _token.TokenType.DELIMITER,\n        regex: new RegExp(\";\", \"y\")\n      }, {\n        type: _token.TokenType.COMMA,\n        regex: new RegExp(\"[,]\", \"y\")\n      }, {\n        type: _token.TokenType.OPEN_PAREN,\n        regex: regex.parenthesis('open', cfg.extraParens)\n      }, {\n        type: _token.TokenType.CLOSE_PAREN,\n        regex: regex.parenthesis('close', cfg.extraParens)\n      }, {\n        type: _token.TokenType.OPERATOR,\n        regex: regex.operator([// standard operators\n        '+', '-', '/', '>', '<', '=', '<>', '<=', '>=', '!='].concat(_toConsumableArray((_cfg$operators = cfg.operators) !== null && _cfg$operators !== void 0 ? _cfg$operators : [])))\n      }, {\n        type: _token.TokenType.ASTERISK,\n        regex: new RegExp(\"\\\\*\", \"y\")\n      }, {\n        type: _token.TokenType.DOT,\n        regex: new RegExp(\"\\\\.\", \"y\")\n      }]);\n    } // These rules can't be blindly cached as the paramTypesOverrides object\n    // can differ on each invocation of the format() function.\n\n  }, {\n    key: \"buildParamRules\",\n    value: function buildParamRules(cfg, paramTypesOverrides) {\n      var _cfg$paramTypes, _cfg$paramTypes2, _cfg$paramTypes3, _cfg$paramTypes4;\n\n      // Each dialect has its own default parameter types (if any),\n      // but these can be overriden by the user of the library.\n      var paramTypes = {\n        named: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.named) || ((_cfg$paramTypes = cfg.paramTypes) === null || _cfg$paramTypes === void 0 ? void 0 : _cfg$paramTypes.named) || [],\n        quoted: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.quoted) || ((_cfg$paramTypes2 = cfg.paramTypes) === null || _cfg$paramTypes2 === void 0 ? void 0 : _cfg$paramTypes2.quoted) || [],\n        numbered: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.numbered) || ((_cfg$paramTypes3 = cfg.paramTypes) === null || _cfg$paramTypes3 === void 0 ? void 0 : _cfg$paramTypes3.numbered) || [],\n        positional: typeof (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.positional) === 'boolean' ? paramTypesOverrides.positional : (_cfg$paramTypes4 = cfg.paramTypes) === null || _cfg$paramTypes4 === void 0 ? void 0 : _cfg$paramTypes4.positional\n      };\n      return this.validRules([{\n        type: _token.TokenType.NAMED_PARAMETER,\n        regex: regex.parameter(paramTypes.named, regex.identifierPattern(cfg.paramChars || cfg.identChars)),\n        key: function key(v) {\n          return v.slice(1);\n        }\n      }, {\n        type: _token.TokenType.QUOTED_PARAMETER,\n        regex: regex.parameter(paramTypes.quoted, regex.stringPattern(cfg.identTypes)),\n        key: function key(v) {\n          return function (_ref) {\n            var tokenKey = _ref.tokenKey,\n                quoteChar = _ref.quoteChar;\n            return tokenKey.replace(new RegExp((0, _regexUtil.escapeRegExp)('\\\\' + quoteChar), 'gu'), quoteChar);\n          }({\n            tokenKey: v.slice(2, -1),\n            quoteChar: v.slice(-1)\n          });\n        }\n      }, {\n        type: _token.TokenType.NUMBERED_PARAMETER,\n        regex: regex.parameter(paramTypes.numbered, '[0-9]+'),\n        key: function key(v) {\n          return v.slice(1);\n        }\n      }, {\n        type: _token.TokenType.POSITIONAL_PARAMETER,\n        regex: paramTypes.positional ? new RegExp(\"[?]\", \"y\") : undefined\n      }]);\n    } // filters out rules for token types whose regex is undefined\n\n  }, {\n    key: \"validRules\",\n    value: function validRules(rules) {\n      return rules.filter(function (rule) {\n        return Boolean(rule.regex);\n      });\n    }\n  }]);\n\n  return Tokenizer;\n}();\n/**\n * Converts keywords (and keyword sequences) to canonical form:\n * - in uppercase\n * - single spaces between words\n */\n\n\nexports[\"default\"] = Tokenizer;\n\nvar toCanonical = function toCanonical(v) {\n  return (0, _utils.equalizeWhitespace)(v.toUpperCase());\n};\n\nmodule.exports = exports.default;\n//# sourceMappingURL=Tokenizer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/Tokenizer.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/TokenizerEngine.js":
/*!******************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/TokenizerEngine.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _lineColFromIndex2 = __webpack_require__(/*! ./lineColFromIndex */ \"../../../../../node_modules/sql-formatter/lib/lexer/lineColFromIndex.js\");\n\nvar _regexUtil = __webpack_require__(/*! ./regexUtil */ \"../../../../../node_modules/sql-formatter/lib/lexer/regexUtil.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TokenizerEngine = /*#__PURE__*/function () {\n  // The input SQL string to process\n  // Current position in string\n  function TokenizerEngine(rules) {\n    _classCallCheck(this, TokenizerEngine);\n\n    this.rules = rules;\n\n    _defineProperty(this, \"input\", '');\n\n    _defineProperty(this, \"index\", 0);\n  }\n  /**\n   * Takes a SQL string and breaks it into tokens.\n   * Each token is an object with type and value.\n   *\n   * @param {string} input - The SQL string\n   * @returns {Token[]} output token stream\n   */\n\n\n  _createClass(TokenizerEngine, [{\n    key: \"tokenize\",\n    value: function tokenize(input) {\n      this.input = input;\n      this.index = 0;\n      var tokens = [];\n      var token; // Keep processing the string until end is reached\n\n      while (this.index < this.input.length) {\n        // skip any preceding whitespace\n        var precedingWhitespace = this.getWhitespace();\n\n        if (this.index < this.input.length) {\n          // Get the next token and the token type\n          token = this.getNextToken();\n\n          if (!token) {\n            throw this.createParseError();\n          }\n\n          tokens.push(_objectSpread(_objectSpread({}, token), {}, {\n            precedingWhitespace: precedingWhitespace\n          }));\n        }\n      }\n\n      return tokens;\n    }\n  }, {\n    key: \"createParseError\",\n    value: function createParseError() {\n      var text = this.input.slice(this.index, this.index + 10);\n\n      var _lineColFromIndex = (0, _lineColFromIndex2.lineColFromIndex)(this.input, this.index),\n          line = _lineColFromIndex.line,\n          col = _lineColFromIndex.col;\n\n      return new Error(\"Parse error: Unexpected \\\"\".concat(text, \"\\\" at line \").concat(line, \" column \").concat(col));\n    }\n  }, {\n    key: \"getWhitespace\",\n    value: function getWhitespace() {\n      _regexUtil.WHITESPACE_REGEX.lastIndex = this.index;\n\n      var matches = _regexUtil.WHITESPACE_REGEX.exec(this.input);\n\n      if (matches) {\n        // Advance current position by matched whitespace length\n        this.index += matches[0].length;\n        return matches[0];\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getNextToken\",\n    value: function getNextToken() {\n      var _iterator = _createForOfIteratorHelper(this.rules),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var rule = _step.value;\n          var token = this.match(rule);\n\n          if (token) {\n            return token;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return undefined;\n    } // Attempts to match token rule regex at current position in input\n\n  }, {\n    key: \"match\",\n    value: function match(rule) {\n      rule.regex.lastIndex = this.index;\n      var matches = rule.regex.exec(this.input);\n\n      if (matches) {\n        var matchedText = matches[0];\n        var token = {\n          type: rule.type,\n          raw: matchedText,\n          text: rule.text ? rule.text(matchedText) : matchedText,\n          start: this.index\n        };\n\n        if (rule.key) {\n          token.key = rule.key(matchedText);\n        } // Advance current position by matched token length\n\n\n        this.index += matchedText.length;\n        return token;\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return TokenizerEngine;\n}();\n\nexports[\"default\"] = TokenizerEngine;\nmodule.exports = exports.default;\n//# sourceMappingURL=TokenizerEngine.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/TokenizerEngine.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/disambiguateTokens.js":
/*!*********************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/disambiguateTokens.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.disambiguateTokens = disambiguateTokens;\n\nvar _token = __webpack_require__(/*! ./token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Ensures that no keyword token (RESERVED_*) is preceded by dot (.).\n *\n * Ensures that all RESERVED_FUNCTION_NAME tokens are followed by \"(\".\n * If they're not, converts the token to RESERVED_KEYWORD.\n *\n * When IDENTIFIER and RESERVED_KEYWORD token is followed by \"[\"\n * converts it to ARRAY_IDENTIFIER or ARRAY_KEYWORD accordingly.\n *\n * This is needed to avoid ambiguity in parser which expects function names\n * to always be followed by open-paren, and to distinguish between\n * array accessor `foo[1]` and array literal `[1, 2, 3]`.\n */\nfunction disambiguateTokens(tokens) {\n  return tokens.map(dotKeywordToIdent).map(funcNameToKeyword).map(identToArrayIdent).map(keywordToArrayKeyword);\n}\n\nvar dotKeywordToIdent = function dotKeywordToIdent(token, i, tokens) {\n  if ((0, _token.isReserved)(token.type)) {\n    var prevToken = prevNonCommentToken(tokens, i);\n\n    if (prevToken && prevToken.text === '.') {\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.IDENTIFIER,\n        text: token.raw\n      });\n    }\n  }\n\n  return token;\n};\n\nvar funcNameToKeyword = function funcNameToKeyword(token, i, tokens) {\n  if (token.type === _token.TokenType.RESERVED_FUNCTION_NAME) {\n    var nextToken = nextNonCommentToken(tokens, i);\n\n    if (!nextToken || !isOpenParen(nextToken)) {\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.RESERVED_KEYWORD\n      });\n    }\n  }\n\n  return token;\n};\n\nvar identToArrayIdent = function identToArrayIdent(token, i, tokens) {\n  if (token.type === _token.TokenType.IDENTIFIER) {\n    var nextToken = nextNonCommentToken(tokens, i);\n\n    if (nextToken && isOpenBracket(nextToken)) {\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.ARRAY_IDENTIFIER\n      });\n    }\n  }\n\n  return token;\n};\n\nvar keywordToArrayKeyword = function keywordToArrayKeyword(token, i, tokens) {\n  if (token.type === _token.TokenType.RESERVED_KEYWORD) {\n    var nextToken = nextNonCommentToken(tokens, i);\n\n    if (nextToken && isOpenBracket(nextToken)) {\n      return _objectSpread(_objectSpread({}, token), {}, {\n        type: _token.TokenType.ARRAY_KEYWORD\n      });\n    }\n  }\n\n  return token;\n};\n\nvar prevNonCommentToken = function prevNonCommentToken(tokens, index) {\n  return nextNonCommentToken(tokens, index, -1);\n};\n\nvar nextNonCommentToken = function nextNonCommentToken(tokens, index) {\n  var dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var i = 1;\n\n  while (tokens[index + i * dir] && isComment(tokens[index + i * dir])) {\n    i++;\n  }\n\n  return tokens[index + i * dir];\n};\n\nvar isOpenParen = function isOpenParen(t) {\n  return t.type === _token.TokenType.OPEN_PAREN && t.text === '(';\n};\n\nvar isOpenBracket = function isOpenBracket(t) {\n  return t.type === _token.TokenType.OPEN_PAREN && t.text === '[';\n};\n\nvar isComment = function isComment(t) {\n  return t.type === _token.TokenType.BLOCK_COMMENT || t.type === _token.TokenType.LINE_COMMENT;\n};\n//# sourceMappingURL=disambiguateTokens.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xleGVyL2Rpc2FtYmlndWF0ZVRva2Vucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sZXhlci9kaXNhbWJpZ3VhdGVUb2tlbnMuanM/Yzk1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGlzYW1iaWd1YXRlVG9rZW5zID0gZGlzYW1iaWd1YXRlVG9rZW5zO1xuXG52YXIgX3Rva2VuID0gcmVxdWlyZShcIi4vdG9rZW5cIik7XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbi8qKlxuICogRW5zdXJlcyB0aGF0IG5vIGtleXdvcmQgdG9rZW4gKFJFU0VSVkVEXyopIGlzIHByZWNlZGVkIGJ5IGRvdCAoLikuXG4gKlxuICogRW5zdXJlcyB0aGF0IGFsbCBSRVNFUlZFRF9GVU5DVElPTl9OQU1FIHRva2VucyBhcmUgZm9sbG93ZWQgYnkgXCIoXCIuXG4gKiBJZiB0aGV5J3JlIG5vdCwgY29udmVydHMgdGhlIHRva2VuIHRvIFJFU0VSVkVEX0tFWVdPUkQuXG4gKlxuICogV2hlbiBJREVOVElGSUVSIGFuZCBSRVNFUlZFRF9LRVlXT1JEIHRva2VuIGlzIGZvbGxvd2VkIGJ5IFwiW1wiXG4gKiBjb252ZXJ0cyBpdCB0byBBUlJBWV9JREVOVElGSUVSIG9yIEFSUkFZX0tFWVdPUkQgYWNjb3JkaW5nbHkuXG4gKlxuICogVGhpcyBpcyBuZWVkZWQgdG8gYXZvaWQgYW1iaWd1aXR5IGluIHBhcnNlciB3aGljaCBleHBlY3RzIGZ1bmN0aW9uIG5hbWVzXG4gKiB0byBhbHdheXMgYmUgZm9sbG93ZWQgYnkgb3Blbi1wYXJlbiwgYW5kIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW5cbiAqIGFycmF5IGFjY2Vzc29yIGBmb29bMV1gIGFuZCBhcnJheSBsaXRlcmFsIGBbMSwgMiwgM11gLlxuICovXG5mdW5jdGlvbiBkaXNhbWJpZ3VhdGVUb2tlbnModG9rZW5zKSB7XG4gIHJldHVybiB0b2tlbnMubWFwKGRvdEtleXdvcmRUb0lkZW50KS5tYXAoZnVuY05hbWVUb0tleXdvcmQpLm1hcChpZGVudFRvQXJyYXlJZGVudCkubWFwKGtleXdvcmRUb0FycmF5S2V5d29yZCk7XG59XG5cbnZhciBkb3RLZXl3b3JkVG9JZGVudCA9IGZ1bmN0aW9uIGRvdEtleXdvcmRUb0lkZW50KHRva2VuLCBpLCB0b2tlbnMpIHtcbiAgaWYgKCgwLCBfdG9rZW4uaXNSZXNlcnZlZCkodG9rZW4udHlwZSkpIHtcbiAgICB2YXIgcHJldlRva2VuID0gcHJldk5vbkNvbW1lbnRUb2tlbih0b2tlbnMsIGkpO1xuXG4gICAgaWYgKHByZXZUb2tlbiAmJiBwcmV2VG9rZW4udGV4dCA9PT0gJy4nKSB7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0b2tlbiksIHt9LCB7XG4gICAgICAgIHR5cGU6IF90b2tlbi5Ub2tlblR5cGUuSURFTlRJRklFUixcbiAgICAgICAgdGV4dDogdG9rZW4ucmF3XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdG9rZW47XG59O1xuXG52YXIgZnVuY05hbWVUb0tleXdvcmQgPSBmdW5jdGlvbiBmdW5jTmFtZVRvS2V5d29yZCh0b2tlbiwgaSwgdG9rZW5zKSB7XG4gIGlmICh0b2tlbi50eXBlID09PSBfdG9rZW4uVG9rZW5UeXBlLlJFU0VSVkVEX0ZVTkNUSU9OX05BTUUpIHtcbiAgICB2YXIgbmV4dFRva2VuID0gbmV4dE5vbkNvbW1lbnRUb2tlbih0b2tlbnMsIGkpO1xuXG4gICAgaWYgKCFuZXh0VG9rZW4gfHwgIWlzT3BlblBhcmVuKG5leHRUb2tlbikpIHtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRva2VuKSwge30sIHtcbiAgICAgICAgdHlwZTogX3Rva2VuLlRva2VuVHlwZS5SRVNFUlZFRF9LRVlXT1JEXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdG9rZW47XG59O1xuXG52YXIgaWRlbnRUb0FycmF5SWRlbnQgPSBmdW5jdGlvbiBpZGVudFRvQXJyYXlJZGVudCh0b2tlbiwgaSwgdG9rZW5zKSB7XG4gIGlmICh0b2tlbi50eXBlID09PSBfdG9rZW4uVG9rZW5UeXBlLklERU5USUZJRVIpIHtcbiAgICB2YXIgbmV4dFRva2VuID0gbmV4dE5vbkNvbW1lbnRUb2tlbih0b2tlbnMsIGkpO1xuXG4gICAgaWYgKG5leHRUb2tlbiAmJiBpc09wZW5CcmFja2V0KG5leHRUb2tlbikpIHtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRva2VuKSwge30sIHtcbiAgICAgICAgdHlwZTogX3Rva2VuLlRva2VuVHlwZS5BUlJBWV9JREVOVElGSUVSXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdG9rZW47XG59O1xuXG52YXIga2V5d29yZFRvQXJyYXlLZXl3b3JkID0gZnVuY3Rpb24ga2V5d29yZFRvQXJyYXlLZXl3b3JkKHRva2VuLCBpLCB0b2tlbnMpIHtcbiAgaWYgKHRva2VuLnR5cGUgPT09IF90b2tlbi5Ub2tlblR5cGUuUkVTRVJWRURfS0VZV09SRCkge1xuICAgIHZhciBuZXh0VG9rZW4gPSBuZXh0Tm9uQ29tbWVudFRva2VuKHRva2VucywgaSk7XG5cbiAgICBpZiAobmV4dFRva2VuICYmIGlzT3BlbkJyYWNrZXQobmV4dFRva2VuKSkge1xuICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdG9rZW4pLCB7fSwge1xuICAgICAgICB0eXBlOiBfdG9rZW4uVG9rZW5UeXBlLkFSUkFZX0tFWVdPUkRcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0b2tlbjtcbn07XG5cbnZhciBwcmV2Tm9uQ29tbWVudFRva2VuID0gZnVuY3Rpb24gcHJldk5vbkNvbW1lbnRUb2tlbih0b2tlbnMsIGluZGV4KSB7XG4gIHJldHVybiBuZXh0Tm9uQ29tbWVudFRva2VuKHRva2VucywgaW5kZXgsIC0xKTtcbn07XG5cbnZhciBuZXh0Tm9uQ29tbWVudFRva2VuID0gZnVuY3Rpb24gbmV4dE5vbkNvbW1lbnRUb2tlbih0b2tlbnMsIGluZGV4KSB7XG4gIHZhciBkaXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDE7XG4gIHZhciBpID0gMTtcblxuICB3aGlsZSAodG9rZW5zW2luZGV4ICsgaSAqIGRpcl0gJiYgaXNDb21tZW50KHRva2Vuc1tpbmRleCArIGkgKiBkaXJdKSkge1xuICAgIGkrKztcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNbaW5kZXggKyBpICogZGlyXTtcbn07XG5cbnZhciBpc09wZW5QYXJlbiA9IGZ1bmN0aW9uIGlzT3BlblBhcmVuKHQpIHtcbiAgcmV0dXJuIHQudHlwZSA9PT0gX3Rva2VuLlRva2VuVHlwZS5PUEVOX1BBUkVOICYmIHQudGV4dCA9PT0gJygnO1xufTtcblxudmFyIGlzT3BlbkJyYWNrZXQgPSBmdW5jdGlvbiBpc09wZW5CcmFja2V0KHQpIHtcbiAgcmV0dXJuIHQudHlwZSA9PT0gX3Rva2VuLlRva2VuVHlwZS5PUEVOX1BBUkVOICYmIHQudGV4dCA9PT0gJ1snO1xufTtcblxudmFyIGlzQ29tbWVudCA9IGZ1bmN0aW9uIGlzQ29tbWVudCh0KSB7XG4gIHJldHVybiB0LnR5cGUgPT09IF90b2tlbi5Ub2tlblR5cGUuQkxPQ0tfQ09NTUVOVCB8fCB0LnR5cGUgPT09IF90b2tlbi5Ub2tlblR5cGUuTElORV9DT01NRU5UO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpc2FtYmlndWF0ZVRva2Vucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/disambiguateTokens.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/lineColFromIndex.js":
/*!*******************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/lineColFromIndex.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.lineColFromIndex = lineColFromIndex;\n\n/**\n * Determines line and column number of character index in source code.\n */\nfunction lineColFromIndex(source, index) {\n  var lines = source.slice(0, index).split(/\\n/);\n  return {\n    line: lines.length,\n    col: lines[lines.length - 1].length + 1\n  };\n}\n//# sourceMappingURL=lineColFromIndex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xleGVyL2xpbmVDb2xGcm9tSW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sZXhlci9saW5lQ29sRnJvbUluZGV4LmpzP2MyNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmxpbmVDb2xGcm9tSW5kZXggPSBsaW5lQ29sRnJvbUluZGV4O1xuXG4vKipcbiAqIERldGVybWluZXMgbGluZSBhbmQgY29sdW1uIG51bWJlciBvZiBjaGFyYWN0ZXIgaW5kZXggaW4gc291cmNlIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIGxpbmVDb2xGcm9tSW5kZXgoc291cmNlLCBpbmRleCkge1xuICB2YXIgbGluZXMgPSBzb3VyY2Uuc2xpY2UoMCwgaW5kZXgpLnNwbGl0KC9cXG4vKTtcbiAgcmV0dXJuIHtcbiAgICBsaW5lOiBsaW5lcy5sZW5ndGgsXG4gICAgY29sOiBsaW5lc1tsaW5lcy5sZW5ndGggLSAxXS5sZW5ndGggKyAxXG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5lQ29sRnJvbUluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/lineColFromIndex.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/regexFactory.js":
/*!***************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/regexFactory.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.variable = exports.stringPattern = exports.string = exports.reservedWord = exports.quotePatterns = exports.parenthesis = exports.parameter = exports.operator = exports.lineComment = exports.identifierPattern = exports.identifier = void 0;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../../../../../node_modules/sql-formatter/lib/utils.js\");\n\nvar _regexUtil = __webpack_require__(/*! ./regexUtil */ \"../../../../../node_modules/sql-formatter/lib/lexer/regexUtil.js\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Builds a RegExp for valid line comments in a SQL dialect\n * @param {string[]} lineCommentTypes - list of character strings that denote line comments\n */\nvar lineComment = function lineComment(lineCommentTypes) {\n  return new RegExp(\"(?:\".concat(lineCommentTypes.map(_regexUtil.escapeRegExp).join('|'), \").*?(?=\\r\\n|\\r|\\n|$)\"), 'uy');\n};\n/**\n * Builds a RegExp for matching either open- or close-parenthesis patterns\n */\n\n\nexports.lineComment = lineComment;\n\nvar parenthesis = function parenthesis(kind) {\n  var extraParens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var index = kind === 'open' ? 0 : 1;\n  var parens = ['()'].concat(_toConsumableArray(extraParens)).map(function (pair) {\n    return pair[index];\n  });\n  return (0, _regexUtil.patternToRegex)(parens.map(_regexUtil.escapeRegExp).join('|'));\n};\n/**\n * Builds a RegExp containing all operators for a SQL dialect\n */\n\n\nexports.parenthesis = parenthesis;\n\nvar operator = function operator(operators) {\n  return (0, _regexUtil.patternToRegex)(\"\".concat((0, _utils.sortByLengthDesc)(operators).map(_regexUtil.escapeRegExp).join('|')));\n}; // Negative lookahead to avoid matching a keyword that's actually part of identifier,\n// which can happen when identifier allows word-boundary characters inside it.\n//\n// For example \"SELECT$ME\" should be tokenized as:\n// - [\"SELECT$ME\"] when $ is allowed inside identifiers\n// - [\"SELECT\", \"$\", \"ME\"] when $ can't be part of identifiers.\n\n\nexports.operator = operator;\n\nvar rejectIdentCharsPattern = function rejectIdentCharsPattern(_ref) {\n  var rest = _ref.rest,\n      dashes = _ref.dashes;\n  return rest || dashes ? \"(?![\".concat(rest || '').concat(dashes ? '-' : '', \"])\") : '';\n};\n/**\n * Builds a RegExp for all Reserved Keywords in a SQL dialect\n */\n\n\nvar reservedWord = function reservedWord(reservedKeywords) {\n  var identChars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (reservedKeywords.length === 0) {\n    return /^\\b$/;\n  }\n\n  var avoidIdentChars = rejectIdentCharsPattern(identChars);\n  var reservedKeywordsPattern = (0, _utils.sortByLengthDesc)(reservedKeywords).join('|').replace(/ /g, '\\\\s+');\n  return new RegExp(\"(?:\".concat(reservedKeywordsPattern, \")\").concat(avoidIdentChars, \"\\\\b\"), 'iuy');\n};\n/**\n * Builds a RegExp for parameter placeholder patterns\n * @param {string[]} paramTypes - list of strings that denote placeholder types\n * @param {string} pattern - string that denotes placeholder pattern\n */\n\n\nexports.reservedWord = reservedWord;\n\nvar parameter = function parameter(paramTypes, pattern) {\n  if (!paramTypes.length) {\n    return undefined;\n  }\n\n  var typesRegex = paramTypes.map(_regexUtil.escapeRegExp).join('|');\n  return (0, _regexUtil.patternToRegex)(\"(?:\".concat(typesRegex, \")(?:\").concat(pattern, \")\"));\n};\n\nexports.parameter = parameter;\n\nvar buildQStringPatterns = function buildQStringPatterns() {\n  var specialDelimiterMap = {\n    '<': '>',\n    '[': ']',\n    '(': ')',\n    '{': '}'\n  }; // base pattern for special delimiters, left must correspond with right\n\n  var singlePattern = \"{left}(?:(?!{right}').)*?{right}\"; // replace {left} and {right} with delimiters, collect as array\n\n  var patternList = Object.entries(specialDelimiterMap).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        left = _ref3[0],\n        right = _ref3[1];\n\n    return singlePattern.replace(/{left}/g, (0, _regexUtil.escapeRegExp)(left)).replace(/{right}/g, (0, _regexUtil.escapeRegExp)(right));\n  });\n  var specialDelimiters = (0, _regexUtil.escapeRegExp)(Object.keys(specialDelimiterMap).join('')); // standard pattern for common delimiters, ignores special delimiters\n\n  var standardDelimiterPattern = String.raw(_templateObject || (_templateObject = _taggedTemplateLiteral([\"(?<tag>[^s\", \"])(?:(?!k<tag>').)*?k<tag>\"], [\"(?<tag>[^\\\\s\", \"])(?:(?!\\\\k<tag>').)*?\\\\k<tag>\"])), specialDelimiters); // constructs final pattern by joining all cases\n\n  var qStringPattern = \"[Qq]'(?:\".concat(standardDelimiterPattern, \"|\").concat(patternList.join('|'), \")'\");\n  return qStringPattern;\n}; // Regex patterns for all supported quote styles.\n//\n// Most of them have a single escaping-style built in,\n// but \"\" and '' support multiple versions of escapes,\n// which must be selected with suffixes: -qq, -bs, -qq-bs, -raw\n\n\nvar quotePatterns = {\n  // - backtick quoted (using `` to escape)\n  '``': '(?:`[^`]*`)+',\n  // - Transact-SQL square bracket quoted (using ]] to escape)\n  '[]': String.raw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"(?:[[^]]*])(?:][^]]*])*\"], [\"(?:\\\\[[^\\\\]]*\\\\])(?:\\\\][^\\\\]]*\\\\])*\"]))),\n  // double-quoted\n  '\"\"-qq': String.raw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"(?:\\\"[^\\\"]*\\\")+\"]))),\n  // with repeated quote escapes\n  '\"\"-bs': String.raw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"(?:\\\"[^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*\\\")\"], [\"(?:\\\"[^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*\\\")\"]))),\n  // with backslash escapes\n  '\"\"-qq-bs': String.raw(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"(?:\\\"[^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*\\\")+\"], [\"(?:\\\"[^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*\\\")+\"]))),\n  // with repeated quote or backslash escapes\n  '\"\"-raw': String.raw(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"(?:\\\"[^\\\"]*\\\")\"]))),\n  // no escaping\n  // single-quoted\n  \"''-qq\": String.raw(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"(?:'[^']*')+\"]))),\n  // with repeated quote escapes\n  \"''-bs\": String.raw(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')\"], [\"(?:'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*')\"]))),\n  // with backslash escapes\n  \"''-qq-bs\": String.raw(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')+\"], [\"(?:'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*')+\"]))),\n  // with repeated quote or backslash escapes\n  \"''-raw\": String.raw(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"(?:'[^']*')\"]))),\n  // no escaping\n  // PostgreSQL dollar-quoted\n  '$$': String.raw(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"(?<tag>$w*$)[sS]*?k<tag>\"], [\"(?<tag>\\\\$\\\\w*\\\\$)[\\\\s\\\\S]*?\\\\k<tag>\"]))),\n  // BigQuery '''triple-quoted''' (using \\' to escape)\n  \"'''..'''\": String.raw(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"'''[^\\\\]*?(?:\\\\.[^\\\\]*?)*?'''\"], [\"'''[^\\\\\\\\]*?(?:\\\\\\\\.[^\\\\\\\\]*?)*?'''\"]))),\n  // BigQuery \"\"\"triple-quoted\"\"\" (using \\\" to escape)\n  '\"\"\"..\"\"\"': String.raw(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\\"\\\"\\\"[^\\\\]*?(?:\\\\.[^\\\\]*?)*?\\\"\\\"\\\"\"], [\"\\\"\\\"\\\"[^\\\\\\\\]*?(?:\\\\\\\\.[^\\\\\\\\]*?)*?\\\"\\\"\\\"\"]))),\n  // Hive and Spark variables: ${name}\n  '{}': String.raw(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"(?:{[^}]*})\"], [\"(?:\\\\{[^\\\\}]*\\\\})\"]))),\n  // Oracle q'' strings: q'<text>' q'|text|' ...\n  \"q''\": buildQStringPatterns()\n};\nexports.quotePatterns = quotePatterns;\n\nvar singleQuotePattern = function singleQuotePattern(quoteTypes) {\n  if (typeof quoteTypes === 'string') {\n    return quotePatterns[quoteTypes];\n  } else {\n    return (0, _regexUtil.prefixesPattern)(quoteTypes) + quotePatterns[quoteTypes.quote];\n  }\n};\n/** Builds a RegExp for matching variables */\n\n\nvar variable = function variable(varTypes) {\n  return (0, _regexUtil.patternToRegex)(varTypes.map(function (varType) {\n    return 'regex' in varType ? varType.regex : singleQuotePattern(varType);\n  }).join('|'));\n};\n/** Builds a quote-delimited pattern for matching all given quote types */\n\n\nexports.variable = variable;\n\nvar stringPattern = function stringPattern(quoteTypes) {\n  return quoteTypes.map(singleQuotePattern).join('|');\n};\n/** Builds a RegExp for matching quote-delimited patterns */\n\n\nexports.stringPattern = stringPattern;\n\nvar string = function string(quoteTypes) {\n  return (0, _regexUtil.patternToRegex)(stringPattern(quoteTypes));\n};\n/**\n * Builds a RegExp for valid identifiers in a SQL dialect\n */\n\n\nexports.string = string;\n\nvar identifier = function identifier() {\n  var specialChars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return (0, _regexUtil.patternToRegex)(identifierPattern(specialChars));\n};\n/**\n * Builds a RegExp string for valid identifiers in a SQL dialect\n */\n\n\nexports.identifier = identifier;\n\nvar identifierPattern = function identifierPattern() {\n  var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      first = _ref4.first,\n      rest = _ref4.rest,\n      dashes = _ref4.dashes,\n      allowFirstCharNumber = _ref4.allowFirstCharNumber;\n\n  // Unicode letters, diacritical marks and underscore\n  var letter = '\\\\p{Alphabetic}\\\\p{Mark}_'; // Numbers 0..9, plus various unicode numbers\n\n  var number = '\\\\p{Decimal_Number}';\n  var firstChars = (0, _regexUtil.escapeRegExp)(first !== null && first !== void 0 ? first : '');\n  var restChars = (0, _regexUtil.escapeRegExp)(rest !== null && rest !== void 0 ? rest : '');\n  var pattern = allowFirstCharNumber ? \"[\".concat(letter).concat(number).concat(firstChars, \"][\").concat(letter).concat(number).concat(restChars, \"]*\") : \"[\".concat(letter).concat(firstChars, \"][\").concat(letter).concat(number).concat(restChars, \"]*\");\n  return dashes ? (0, _regexUtil.withDashes)(pattern) : pattern;\n};\n\nexports.identifierPattern = identifierPattern;\n//# sourceMappingURL=regexFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/regexFactory.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/regexUtil.js":
/*!************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/regexUtil.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.withDashes = exports.toCaseInsensitivePattern = exports.prefixesPattern = exports.patternToRegex = exports.escapeRegExp = exports.WHITESPACE_REGEX = void 0;\n\n// Escapes regex special chars\nvar escapeRegExp = function escapeRegExp(string) {\n  return string.replace(/[\\$\\(-\\+\\.\\?\\[-\\^\\{-\\}]/g, '\\\\$&');\n};\n\nexports.escapeRegExp = escapeRegExp;\nvar WHITESPACE_REGEX = new RegExp(\"[\\\\t-\\\\r \\\\xA0\\\\u1680\\\\u2000-\\\\u200A\\\\u2028\\\\u2029\\\\u202F\\\\u205F\\\\u3000\\\\uFEFF]+\", \"y\");\nexports.WHITESPACE_REGEX = WHITESPACE_REGEX;\n\nvar patternToRegex = function patternToRegex(pattern) {\n  return new RegExp(\"(?:\".concat(pattern, \")\"), 'uy');\n}; // Converts \"ab\" to \"[Aa][Bb]\"\n\n\nexports.patternToRegex = patternToRegex;\n\nvar toCaseInsensitivePattern = function toCaseInsensitivePattern(prefix) {\n  return prefix.split('').map(function (_char) {\n    return / /g.test(_char) ? '\\\\s+' : \"[\".concat(_char.toUpperCase()).concat(_char.toLowerCase(), \"]\");\n  }).join('');\n};\n\nexports.toCaseInsensitivePattern = toCaseInsensitivePattern;\n\nvar withDashes = function withDashes(pattern) {\n  return pattern + '(?:-' + pattern + ')*';\n}; // Converts [\"a\", \"b\"] to \"(?:[Aa]|[Bb]|)\" or \"(?:[Aa]|[Bb])\" when required = true\n\n\nexports.withDashes = withDashes;\n\nvar prefixesPattern = function prefixesPattern(_ref) {\n  var prefixes = _ref.prefixes,\n      requirePrefix = _ref.requirePrefix;\n  return \"(?:\".concat(prefixes.map(toCaseInsensitivePattern).join('|')).concat(requirePrefix ? '' : '|', \")\");\n};\n\nexports.prefixesPattern = prefixesPattern;\n//# sourceMappingURL=regexUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xleGVyL3JlZ2V4VXRpbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGV4ZXIvcmVnZXhVdGlsLmpzPzliMGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLndpdGhEYXNoZXMgPSBleHBvcnRzLnRvQ2FzZUluc2Vuc2l0aXZlUGF0dGVybiA9IGV4cG9ydHMucHJlZml4ZXNQYXR0ZXJuID0gZXhwb3J0cy5wYXR0ZXJuVG9SZWdleCA9IGV4cG9ydHMuZXNjYXBlUmVnRXhwID0gZXhwb3J0cy5XSElURVNQQUNFX1JFR0VYID0gdm9pZCAwO1xuXG4vLyBFc2NhcGVzIHJlZ2V4IHNwZWNpYWwgY2hhcnNcbnZhciBlc2NhcGVSZWdFeHAgPSBmdW5jdGlvbiBlc2NhcGVSZWdFeHAoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW1xcJFxcKC1cXCtcXC5cXD9cXFstXFxeXFx7LVxcfV0vZywgJ1xcXFwkJicpO1xufTtcblxuZXhwb3J0cy5lc2NhcGVSZWdFeHAgPSBlc2NhcGVSZWdFeHA7XG52YXIgV0hJVEVTUEFDRV9SRUdFWCA9IG5ldyBSZWdFeHAoXCJbXFxcXHQtXFxcXHIgXFxcXHhBMFxcXFx1MTY4MFxcXFx1MjAwMC1cXFxcdTIwMEFcXFxcdTIwMjhcXFxcdTIwMjlcXFxcdTIwMkZcXFxcdTIwNUZcXFxcdTMwMDBcXFxcdUZFRkZdK1wiLCBcInlcIik7XG5leHBvcnRzLldISVRFU1BBQ0VfUkVHRVggPSBXSElURVNQQUNFX1JFR0VYO1xuXG52YXIgcGF0dGVyblRvUmVnZXggPSBmdW5jdGlvbiBwYXR0ZXJuVG9SZWdleChwYXR0ZXJuKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiKD86XCIuY29uY2F0KHBhdHRlcm4sIFwiKVwiKSwgJ3V5Jyk7XG59OyAvLyBDb252ZXJ0cyBcImFiXCIgdG8gXCJbQWFdW0JiXVwiXG5cblxuZXhwb3J0cy5wYXR0ZXJuVG9SZWdleCA9IHBhdHRlcm5Ub1JlZ2V4O1xuXG52YXIgdG9DYXNlSW5zZW5zaXRpdmVQYXR0ZXJuID0gZnVuY3Rpb24gdG9DYXNlSW5zZW5zaXRpdmVQYXR0ZXJuKHByZWZpeCkge1xuICByZXR1cm4gcHJlZml4LnNwbGl0KCcnKS5tYXAoZnVuY3Rpb24gKF9jaGFyKSB7XG4gICAgcmV0dXJuIC8gL2cudGVzdChfY2hhcikgPyAnXFxcXHMrJyA6IFwiW1wiLmNvbmNhdChfY2hhci50b1VwcGVyQ2FzZSgpKS5jb25jYXQoX2NoYXIudG9Mb3dlckNhc2UoKSwgXCJdXCIpO1xuICB9KS5qb2luKCcnKTtcbn07XG5cbmV4cG9ydHMudG9DYXNlSW5zZW5zaXRpdmVQYXR0ZXJuID0gdG9DYXNlSW5zZW5zaXRpdmVQYXR0ZXJuO1xuXG52YXIgd2l0aERhc2hlcyA9IGZ1bmN0aW9uIHdpdGhEYXNoZXMocGF0dGVybikge1xuICByZXR1cm4gcGF0dGVybiArICcoPzotJyArIHBhdHRlcm4gKyAnKSonO1xufTsgLy8gQ29udmVydHMgW1wiYVwiLCBcImJcIl0gdG8gXCIoPzpbQWFdfFtCYl18KVwiIG9yIFwiKD86W0FhXXxbQmJdKVwiIHdoZW4gcmVxdWlyZWQgPSB0cnVlXG5cblxuZXhwb3J0cy53aXRoRGFzaGVzID0gd2l0aERhc2hlcztcblxudmFyIHByZWZpeGVzUGF0dGVybiA9IGZ1bmN0aW9uIHByZWZpeGVzUGF0dGVybihfcmVmKSB7XG4gIHZhciBwcmVmaXhlcyA9IF9yZWYucHJlZml4ZXMsXG4gICAgICByZXF1aXJlUHJlZml4ID0gX3JlZi5yZXF1aXJlUHJlZml4O1xuICByZXR1cm4gXCIoPzpcIi5jb25jYXQocHJlZml4ZXMubWFwKHRvQ2FzZUluc2Vuc2l0aXZlUGF0dGVybikuam9pbignfCcpKS5jb25jYXQocmVxdWlyZVByZWZpeCA/ICcnIDogJ3wnLCBcIilcIik7XG59O1xuXG5leHBvcnRzLnByZWZpeGVzUGF0dGVybiA9IHByZWZpeGVzUGF0dGVybjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZ2V4VXRpbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/regexUtil.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/lexer/token.js":
/*!********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/lexer/token.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.testToken = exports.isToken = exports.isReserved = exports.isLogicalOperator = exports.createEofToken = exports.TokenType = exports.EOF_TOKEN = void 0;\n\n/** Token type enum for all possible Token categories */\nvar TokenType;\n/** Struct to store the most basic cohesive unit of language grammar */\n\nexports.TokenType = TokenType;\n\n(function (TokenType) {\n  TokenType[\"QUOTED_IDENTIFIER\"] = \"QUOTED_IDENTIFIER\";\n  TokenType[\"IDENTIFIER\"] = \"IDENTIFIER\";\n  TokenType[\"STRING\"] = \"STRING\";\n  TokenType[\"VARIABLE\"] = \"VARIABLE\";\n  TokenType[\"RESERVED_KEYWORD\"] = \"RESERVED_KEYWORD\";\n  TokenType[\"RESERVED_FUNCTION_NAME\"] = \"RESERVED_FUNCTION_NAME\";\n  TokenType[\"RESERVED_PHRASE\"] = \"RESERVED_PHRASE\";\n  TokenType[\"RESERVED_DEPENDENT_CLAUSE\"] = \"RESERVED_DEPENDENT_CLAUSE\";\n  TokenType[\"RESERVED_SET_OPERATION\"] = \"RESERVED_SET_OPERATION\";\n  TokenType[\"RESERVED_COMMAND\"] = \"RESERVED_COMMAND\";\n  TokenType[\"RESERVED_SELECT\"] = \"RESERVED_SELECT\";\n  TokenType[\"RESERVED_JOIN\"] = \"RESERVED_JOIN\";\n  TokenType[\"ARRAY_IDENTIFIER\"] = \"ARRAY_IDENTIFIER\";\n  TokenType[\"ARRAY_KEYWORD\"] = \"ARRAY_KEYWORD\";\n  TokenType[\"CASE\"] = \"CASE\";\n  TokenType[\"END\"] = \"END\";\n  TokenType[\"LIMIT\"] = \"LIMIT\";\n  TokenType[\"BETWEEN\"] = \"BETWEEN\";\n  TokenType[\"AND\"] = \"AND\";\n  TokenType[\"OR\"] = \"OR\";\n  TokenType[\"XOR\"] = \"XOR\";\n  TokenType[\"OPERATOR\"] = \"OPERATOR\";\n  TokenType[\"COMMA\"] = \"COMMA\";\n  TokenType[\"ASTERISK\"] = \"ASTERISK\";\n  TokenType[\"DOT\"] = \"DOT\";\n  TokenType[\"OPEN_PAREN\"] = \"OPEN_PAREN\";\n  TokenType[\"CLOSE_PAREN\"] = \"CLOSE_PAREN\";\n  TokenType[\"LINE_COMMENT\"] = \"LINE_COMMENT\";\n  TokenType[\"BLOCK_COMMENT\"] = \"BLOCK_COMMENT\";\n  TokenType[\"NUMBER\"] = \"NUMBER\";\n  TokenType[\"NAMED_PARAMETER\"] = \"NAMED_PARAMETER\";\n  TokenType[\"QUOTED_PARAMETER\"] = \"QUOTED_PARAMETER\";\n  TokenType[\"NUMBERED_PARAMETER\"] = \"NUMBERED_PARAMETER\";\n  TokenType[\"POSITIONAL_PARAMETER\"] = \"POSITIONAL_PARAMETER\";\n  TokenType[\"DELIMITER\"] = \"DELIMITER\";\n  TokenType[\"EOF\"] = \"EOF\";\n})(TokenType || (exports.TokenType = TokenType = {}));\n\n/** Creates EOF token positioned at given location */\nvar createEofToken = function createEofToken(index) {\n  return {\n    type: TokenType.EOF,\n    raw: '«EOF»',\n    text: '«EOF»',\n    start: index\n  };\n};\n/**\n * For use as a \"missing token\"\n * e.g. in lookAhead and lookBehind to avoid dealing with null values\n */\n\n\nexports.createEofToken = createEofToken;\nvar EOF_TOKEN = createEofToken(Infinity);\n/** Checks if two tokens are equivalent */\n\nexports.EOF_TOKEN = EOF_TOKEN;\n\nvar testToken = function testToken(compareToken) {\n  return function (token) {\n    return token.type === compareToken.type && token.text === compareToken.text;\n  };\n};\n/** Util object that allows for easy checking of Reserved Keywords */\n\n\nexports.testToken = testToken;\nvar isToken = {\n  ARRAY: testToken({\n    text: 'ARRAY',\n    type: TokenType.RESERVED_KEYWORD\n  }),\n  BY: testToken({\n    text: 'BY',\n    type: TokenType.RESERVED_KEYWORD\n  }),\n  SET: testToken({\n    text: 'SET',\n    type: TokenType.RESERVED_COMMAND\n  }),\n  STRUCT: testToken({\n    text: 'STRUCT',\n    type: TokenType.RESERVED_KEYWORD\n  }),\n  WINDOW: testToken({\n    text: 'WINDOW',\n    type: TokenType.RESERVED_COMMAND\n  })\n};\n/** Checks if token is any Reserved Keyword or Command */\n\nexports.isToken = isToken;\n\nvar isReserved = function isReserved(type) {\n  return type === TokenType.RESERVED_KEYWORD || type === TokenType.RESERVED_FUNCTION_NAME || type === TokenType.RESERVED_PHRASE || type === TokenType.RESERVED_DEPENDENT_CLAUSE || type === TokenType.RESERVED_COMMAND || type === TokenType.RESERVED_SELECT || type === TokenType.RESERVED_SET_OPERATION || type === TokenType.RESERVED_JOIN || type === TokenType.ARRAY_KEYWORD || type === TokenType.CASE || type === TokenType.END || type === TokenType.LIMIT || type === TokenType.BETWEEN || type === TokenType.AND || type === TokenType.OR || type === TokenType.XOR;\n};\n\nexports.isReserved = isReserved;\n\nvar isLogicalOperator = function isLogicalOperator(type) {\n  return type === TokenType.AND || type === TokenType.OR || type === TokenType.XOR;\n};\n\nexports.isLogicalOperator = isLogicalOperator;\n//# sourceMappingURL=token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xleGVyL3Rva2VuLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvbGV4ZXIvdG9rZW4uanM/M2EwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMudGVzdFRva2VuID0gZXhwb3J0cy5pc1Rva2VuID0gZXhwb3J0cy5pc1Jlc2VydmVkID0gZXhwb3J0cy5pc0xvZ2ljYWxPcGVyYXRvciA9IGV4cG9ydHMuY3JlYXRlRW9mVG9rZW4gPSBleHBvcnRzLlRva2VuVHlwZSA9IGV4cG9ydHMuRU9GX1RPS0VOID0gdm9pZCAwO1xuXG4vKiogVG9rZW4gdHlwZSBlbnVtIGZvciBhbGwgcG9zc2libGUgVG9rZW4gY2F0ZWdvcmllcyAqL1xudmFyIFRva2VuVHlwZTtcbi8qKiBTdHJ1Y3QgdG8gc3RvcmUgdGhlIG1vc3QgYmFzaWMgY29oZXNpdmUgdW5pdCBvZiBsYW5ndWFnZSBncmFtbWFyICovXG5cbmV4cG9ydHMuVG9rZW5UeXBlID0gVG9rZW5UeXBlO1xuXG4oZnVuY3Rpb24gKFRva2VuVHlwZSkge1xuICBUb2tlblR5cGVbXCJRVU9URURfSURFTlRJRklFUlwiXSA9IFwiUVVPVEVEX0lERU5USUZJRVJcIjtcbiAgVG9rZW5UeXBlW1wiSURFTlRJRklFUlwiXSA9IFwiSURFTlRJRklFUlwiO1xuICBUb2tlblR5cGVbXCJTVFJJTkdcIl0gPSBcIlNUUklOR1wiO1xuICBUb2tlblR5cGVbXCJWQVJJQUJMRVwiXSA9IFwiVkFSSUFCTEVcIjtcbiAgVG9rZW5UeXBlW1wiUkVTRVJWRURfS0VZV09SRFwiXSA9IFwiUkVTRVJWRURfS0VZV09SRFwiO1xuICBUb2tlblR5cGVbXCJSRVNFUlZFRF9GVU5DVElPTl9OQU1FXCJdID0gXCJSRVNFUlZFRF9GVU5DVElPTl9OQU1FXCI7XG4gIFRva2VuVHlwZVtcIlJFU0VSVkVEX1BIUkFTRVwiXSA9IFwiUkVTRVJWRURfUEhSQVNFXCI7XG4gIFRva2VuVHlwZVtcIlJFU0VSVkVEX0RFUEVOREVOVF9DTEFVU0VcIl0gPSBcIlJFU0VSVkVEX0RFUEVOREVOVF9DTEFVU0VcIjtcbiAgVG9rZW5UeXBlW1wiUkVTRVJWRURfU0VUX09QRVJBVElPTlwiXSA9IFwiUkVTRVJWRURfU0VUX09QRVJBVElPTlwiO1xuICBUb2tlblR5cGVbXCJSRVNFUlZFRF9DT01NQU5EXCJdID0gXCJSRVNFUlZFRF9DT01NQU5EXCI7XG4gIFRva2VuVHlwZVtcIlJFU0VSVkVEX1NFTEVDVFwiXSA9IFwiUkVTRVJWRURfU0VMRUNUXCI7XG4gIFRva2VuVHlwZVtcIlJFU0VSVkVEX0pPSU5cIl0gPSBcIlJFU0VSVkVEX0pPSU5cIjtcbiAgVG9rZW5UeXBlW1wiQVJSQVlfSURFTlRJRklFUlwiXSA9IFwiQVJSQVlfSURFTlRJRklFUlwiO1xuICBUb2tlblR5cGVbXCJBUlJBWV9LRVlXT1JEXCJdID0gXCJBUlJBWV9LRVlXT1JEXCI7XG4gIFRva2VuVHlwZVtcIkNBU0VcIl0gPSBcIkNBU0VcIjtcbiAgVG9rZW5UeXBlW1wiRU5EXCJdID0gXCJFTkRcIjtcbiAgVG9rZW5UeXBlW1wiTElNSVRcIl0gPSBcIkxJTUlUXCI7XG4gIFRva2VuVHlwZVtcIkJFVFdFRU5cIl0gPSBcIkJFVFdFRU5cIjtcbiAgVG9rZW5UeXBlW1wiQU5EXCJdID0gXCJBTkRcIjtcbiAgVG9rZW5UeXBlW1wiT1JcIl0gPSBcIk9SXCI7XG4gIFRva2VuVHlwZVtcIlhPUlwiXSA9IFwiWE9SXCI7XG4gIFRva2VuVHlwZVtcIk9QRVJBVE9SXCJdID0gXCJPUEVSQVRPUlwiO1xuICBUb2tlblR5cGVbXCJDT01NQVwiXSA9IFwiQ09NTUFcIjtcbiAgVG9rZW5UeXBlW1wiQVNURVJJU0tcIl0gPSBcIkFTVEVSSVNLXCI7XG4gIFRva2VuVHlwZVtcIkRPVFwiXSA9IFwiRE9UXCI7XG4gIFRva2VuVHlwZVtcIk9QRU5fUEFSRU5cIl0gPSBcIk9QRU5fUEFSRU5cIjtcbiAgVG9rZW5UeXBlW1wiQ0xPU0VfUEFSRU5cIl0gPSBcIkNMT1NFX1BBUkVOXCI7XG4gIFRva2VuVHlwZVtcIkxJTkVfQ09NTUVOVFwiXSA9IFwiTElORV9DT01NRU5UXCI7XG4gIFRva2VuVHlwZVtcIkJMT0NLX0NPTU1FTlRcIl0gPSBcIkJMT0NLX0NPTU1FTlRcIjtcbiAgVG9rZW5UeXBlW1wiTlVNQkVSXCJdID0gXCJOVU1CRVJcIjtcbiAgVG9rZW5UeXBlW1wiTkFNRURfUEFSQU1FVEVSXCJdID0gXCJOQU1FRF9QQVJBTUVURVJcIjtcbiAgVG9rZW5UeXBlW1wiUVVPVEVEX1BBUkFNRVRFUlwiXSA9IFwiUVVPVEVEX1BBUkFNRVRFUlwiO1xuICBUb2tlblR5cGVbXCJOVU1CRVJFRF9QQVJBTUVURVJcIl0gPSBcIk5VTUJFUkVEX1BBUkFNRVRFUlwiO1xuICBUb2tlblR5cGVbXCJQT1NJVElPTkFMX1BBUkFNRVRFUlwiXSA9IFwiUE9TSVRJT05BTF9QQVJBTUVURVJcIjtcbiAgVG9rZW5UeXBlW1wiREVMSU1JVEVSXCJdID0gXCJERUxJTUlURVJcIjtcbiAgVG9rZW5UeXBlW1wiRU9GXCJdID0gXCJFT0ZcIjtcbn0pKFRva2VuVHlwZSB8fCAoZXhwb3J0cy5Ub2tlblR5cGUgPSBUb2tlblR5cGUgPSB7fSkpO1xuXG4vKiogQ3JlYXRlcyBFT0YgdG9rZW4gcG9zaXRpb25lZCBhdCBnaXZlbiBsb2NhdGlvbiAqL1xudmFyIGNyZWF0ZUVvZlRva2VuID0gZnVuY3Rpb24gY3JlYXRlRW9mVG9rZW4oaW5kZXgpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBUb2tlblR5cGUuRU9GLFxuICAgIHJhdzogJ8KrRU9GwrsnLFxuICAgIHRleHQ6ICfCq0VPRsK7JyxcbiAgICBzdGFydDogaW5kZXhcbiAgfTtcbn07XG4vKipcbiAqIEZvciB1c2UgYXMgYSBcIm1pc3NpbmcgdG9rZW5cIlxuICogZS5nLiBpbiBsb29rQWhlYWQgYW5kIGxvb2tCZWhpbmQgdG8gYXZvaWQgZGVhbGluZyB3aXRoIG51bGwgdmFsdWVzXG4gKi9cblxuXG5leHBvcnRzLmNyZWF0ZUVvZlRva2VuID0gY3JlYXRlRW9mVG9rZW47XG52YXIgRU9GX1RPS0VOID0gY3JlYXRlRW9mVG9rZW4oSW5maW5pdHkpO1xuLyoqIENoZWNrcyBpZiB0d28gdG9rZW5zIGFyZSBlcXVpdmFsZW50ICovXG5cbmV4cG9ydHMuRU9GX1RPS0VOID0gRU9GX1RPS0VOO1xuXG52YXIgdGVzdFRva2VuID0gZnVuY3Rpb24gdGVzdFRva2VuKGNvbXBhcmVUb2tlbikge1xuICByZXR1cm4gZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgcmV0dXJuIHRva2VuLnR5cGUgPT09IGNvbXBhcmVUb2tlbi50eXBlICYmIHRva2VuLnRleHQgPT09IGNvbXBhcmVUb2tlbi50ZXh0O1xuICB9O1xufTtcbi8qKiBVdGlsIG9iamVjdCB0aGF0IGFsbG93cyBmb3IgZWFzeSBjaGVja2luZyBvZiBSZXNlcnZlZCBLZXl3b3JkcyAqL1xuXG5cbmV4cG9ydHMudGVzdFRva2VuID0gdGVzdFRva2VuO1xudmFyIGlzVG9rZW4gPSB7XG4gIEFSUkFZOiB0ZXN0VG9rZW4oe1xuICAgIHRleHQ6ICdBUlJBWScsXG4gICAgdHlwZTogVG9rZW5UeXBlLlJFU0VSVkVEX0tFWVdPUkRcbiAgfSksXG4gIEJZOiB0ZXN0VG9rZW4oe1xuICAgIHRleHQ6ICdCWScsXG4gICAgdHlwZTogVG9rZW5UeXBlLlJFU0VSVkVEX0tFWVdPUkRcbiAgfSksXG4gIFNFVDogdGVzdFRva2VuKHtcbiAgICB0ZXh0OiAnU0VUJyxcbiAgICB0eXBlOiBUb2tlblR5cGUuUkVTRVJWRURfQ09NTUFORFxuICB9KSxcbiAgU1RSVUNUOiB0ZXN0VG9rZW4oe1xuICAgIHRleHQ6ICdTVFJVQ1QnLFxuICAgIHR5cGU6IFRva2VuVHlwZS5SRVNFUlZFRF9LRVlXT1JEXG4gIH0pLFxuICBXSU5ET1c6IHRlc3RUb2tlbih7XG4gICAgdGV4dDogJ1dJTkRPVycsXG4gICAgdHlwZTogVG9rZW5UeXBlLlJFU0VSVkVEX0NPTU1BTkRcbiAgfSlcbn07XG4vKiogQ2hlY2tzIGlmIHRva2VuIGlzIGFueSBSZXNlcnZlZCBLZXl3b3JkIG9yIENvbW1hbmQgKi9cblxuZXhwb3J0cy5pc1Rva2VuID0gaXNUb2tlbjtcblxudmFyIGlzUmVzZXJ2ZWQgPSBmdW5jdGlvbiBpc1Jlc2VydmVkKHR5cGUpIHtcbiAgcmV0dXJuIHR5cGUgPT09IFRva2VuVHlwZS5SRVNFUlZFRF9LRVlXT1JEIHx8IHR5cGUgPT09IFRva2VuVHlwZS5SRVNFUlZFRF9GVU5DVElPTl9OQU1FIHx8IHR5cGUgPT09IFRva2VuVHlwZS5SRVNFUlZFRF9QSFJBU0UgfHwgdHlwZSA9PT0gVG9rZW5UeXBlLlJFU0VSVkVEX0RFUEVOREVOVF9DTEFVU0UgfHwgdHlwZSA9PT0gVG9rZW5UeXBlLlJFU0VSVkVEX0NPTU1BTkQgfHwgdHlwZSA9PT0gVG9rZW5UeXBlLlJFU0VSVkVEX1NFTEVDVCB8fCB0eXBlID09PSBUb2tlblR5cGUuUkVTRVJWRURfU0VUX09QRVJBVElPTiB8fCB0eXBlID09PSBUb2tlblR5cGUuUkVTRVJWRURfSk9JTiB8fCB0eXBlID09PSBUb2tlblR5cGUuQVJSQVlfS0VZV09SRCB8fCB0eXBlID09PSBUb2tlblR5cGUuQ0FTRSB8fCB0eXBlID09PSBUb2tlblR5cGUuRU5EIHx8IHR5cGUgPT09IFRva2VuVHlwZS5MSU1JVCB8fCB0eXBlID09PSBUb2tlblR5cGUuQkVUV0VFTiB8fCB0eXBlID09PSBUb2tlblR5cGUuQU5EIHx8IHR5cGUgPT09IFRva2VuVHlwZS5PUiB8fCB0eXBlID09PSBUb2tlblR5cGUuWE9SO1xufTtcblxuZXhwb3J0cy5pc1Jlc2VydmVkID0gaXNSZXNlcnZlZDtcblxudmFyIGlzTG9naWNhbE9wZXJhdG9yID0gZnVuY3Rpb24gaXNMb2dpY2FsT3BlcmF0b3IodHlwZSkge1xuICByZXR1cm4gdHlwZSA9PT0gVG9rZW5UeXBlLkFORCB8fCB0eXBlID09PSBUb2tlblR5cGUuT1IgfHwgdHlwZSA9PT0gVG9rZW5UeXBlLlhPUjtcbn07XG5cbmV4cG9ydHMuaXNMb2dpY2FsT3BlcmF0b3IgPSBpc0xvZ2ljYWxPcGVyYXRvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRva2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/lexer/token.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/parser/LexerAdapter.js":
/*!****************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/parser/LexerAdapter.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _lineColFromIndex2 = __webpack_require__(/*! ../lexer/lineColFromIndex */ \"../../../../../node_modules/sql-formatter/lib/lexer/lineColFromIndex.js\");\n\nvar _token = __webpack_require__(/*! ../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar LexerAdapter = /*#__PURE__*/function () {\n  function LexerAdapter(tokenize) {\n    _classCallCheck(this, LexerAdapter);\n\n    this.tokenize = tokenize;\n\n    _defineProperty(this, \"index\", 0);\n\n    _defineProperty(this, \"tokens\", []);\n\n    _defineProperty(this, \"input\", '');\n  }\n\n  _createClass(LexerAdapter, [{\n    key: \"reset\",\n    value: function reset(chunk, _info) {\n      this.input = chunk;\n      this.index = 0;\n      this.tokens = this.tokenize(chunk);\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      return this.tokens[this.index++];\n    }\n  }, {\n    key: \"save\",\n    value: function save() {}\n  }, {\n    key: \"formatError\",\n    value: function formatError(token) {\n      var _lineColFromIndex = (0, _lineColFromIndex2.lineColFromIndex)(this.input, token.start),\n          line = _lineColFromIndex.line,\n          col = _lineColFromIndex.col;\n\n      return \"Parse error at token: \".concat(token.text, \" at line \").concat(line, \" column \").concat(col);\n    }\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      return name in _token.TokenType;\n    }\n  }]);\n\n  return LexerAdapter;\n}();\n\nexports[\"default\"] = LexerAdapter;\nmodule.exports = exports.default;\n//# sourceMappingURL=LexerAdapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3BhcnNlci9MZXhlckFkYXB0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9wYXJzZXIvTGV4ZXJBZGFwdGVyLmpzPzEwYTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9saW5lQ29sRnJvbUluZGV4MiA9IHJlcXVpcmUoXCIuLi9sZXhlci9saW5lQ29sRnJvbUluZGV4XCIpO1xuXG52YXIgX3Rva2VuID0gcmVxdWlyZShcIi4uL2xleGVyL3Rva2VuXCIpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBMZXhlckFkYXB0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBMZXhlckFkYXB0ZXIodG9rZW5pemUpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGV4ZXJBZGFwdGVyKTtcblxuICAgIHRoaXMudG9rZW5pemUgPSB0b2tlbml6ZTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImluZGV4XCIsIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidG9rZW5zXCIsIFtdKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlucHV0XCIsICcnKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMZXhlckFkYXB0ZXIsIFt7XG4gICAga2V5OiBcInJlc2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc2V0KGNodW5rLCBfaW5mbykge1xuICAgICAgdGhpcy5pbnB1dCA9IGNodW5rO1xuICAgICAgdGhpcy5pbmRleCA9IDA7XG4gICAgICB0aGlzLnRva2VucyA9IHRoaXMudG9rZW5pemUoY2h1bmspO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJuZXh0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICByZXR1cm4gdGhpcy50b2tlbnNbdGhpcy5pbmRleCsrXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2F2ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzYXZlKCkge31cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRFcnJvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRFcnJvcih0b2tlbikge1xuICAgICAgdmFyIF9saW5lQ29sRnJvbUluZGV4ID0gKDAsIF9saW5lQ29sRnJvbUluZGV4Mi5saW5lQ29sRnJvbUluZGV4KSh0aGlzLmlucHV0LCB0b2tlbi5zdGFydCksXG4gICAgICAgICAgbGluZSA9IF9saW5lQ29sRnJvbUluZGV4LmxpbmUsXG4gICAgICAgICAgY29sID0gX2xpbmVDb2xGcm9tSW5kZXguY29sO1xuXG4gICAgICByZXR1cm4gXCJQYXJzZSBlcnJvciBhdCB0b2tlbjogXCIuY29uY2F0KHRva2VuLnRleHQsIFwiIGF0IGxpbmUgXCIpLmNvbmNhdChsaW5lLCBcIiBjb2x1bW4gXCIpLmNvbmNhdChjb2wpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzKG5hbWUpIHtcbiAgICAgIHJldHVybiBuYW1lIGluIF90b2tlbi5Ub2tlblR5cGU7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExleGVyQWRhcHRlcjtcbn0oKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBMZXhlckFkYXB0ZXI7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxleGVyQWRhcHRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/parser/LexerAdapter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/parser/ast.js":
/*!*******************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/parser/ast.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NodeType = void 0;\nvar NodeType;\nexports.NodeType = NodeType;\n\n(function (NodeType) {\n  NodeType[\"statement\"] = \"statement\";\n  NodeType[\"clause\"] = \"clause\";\n  NodeType[\"set_operation\"] = \"set_operation\";\n  NodeType[\"function_call\"] = \"function_call\";\n  NodeType[\"array_subscript\"] = \"array_subscript\";\n  NodeType[\"property_access\"] = \"property_access\";\n  NodeType[\"parenthesis\"] = \"parenthesis\";\n  NodeType[\"between_predicate\"] = \"between_predicate\";\n  NodeType[\"limit_clause\"] = \"limit_clause\";\n  NodeType[\"all_columns_asterisk\"] = \"all_columns_asterisk\";\n  NodeType[\"literal\"] = \"literal\";\n  NodeType[\"identifier\"] = \"identifier\";\n  NodeType[\"keyword\"] = \"keyword\";\n  NodeType[\"parameter\"] = \"parameter\";\n  NodeType[\"operator\"] = \"operator\";\n  NodeType[\"comma\"] = \"comma\";\n  NodeType[\"line_comment\"] = \"line_comment\";\n  NodeType[\"block_comment\"] = \"block_comment\";\n})(NodeType || (exports.NodeType = NodeType = {}));\n//# sourceMappingURL=ast.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3BhcnNlci9hc3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9wYXJzZXIvYXN0LmpzPzQ3MDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLk5vZGVUeXBlID0gdm9pZCAwO1xudmFyIE5vZGVUeXBlO1xuZXhwb3J0cy5Ob2RlVHlwZSA9IE5vZGVUeXBlO1xuXG4oZnVuY3Rpb24gKE5vZGVUeXBlKSB7XG4gIE5vZGVUeXBlW1wic3RhdGVtZW50XCJdID0gXCJzdGF0ZW1lbnRcIjtcbiAgTm9kZVR5cGVbXCJjbGF1c2VcIl0gPSBcImNsYXVzZVwiO1xuICBOb2RlVHlwZVtcInNldF9vcGVyYXRpb25cIl0gPSBcInNldF9vcGVyYXRpb25cIjtcbiAgTm9kZVR5cGVbXCJmdW5jdGlvbl9jYWxsXCJdID0gXCJmdW5jdGlvbl9jYWxsXCI7XG4gIE5vZGVUeXBlW1wiYXJyYXlfc3Vic2NyaXB0XCJdID0gXCJhcnJheV9zdWJzY3JpcHRcIjtcbiAgTm9kZVR5cGVbXCJwcm9wZXJ0eV9hY2Nlc3NcIl0gPSBcInByb3BlcnR5X2FjY2Vzc1wiO1xuICBOb2RlVHlwZVtcInBhcmVudGhlc2lzXCJdID0gXCJwYXJlbnRoZXNpc1wiO1xuICBOb2RlVHlwZVtcImJldHdlZW5fcHJlZGljYXRlXCJdID0gXCJiZXR3ZWVuX3ByZWRpY2F0ZVwiO1xuICBOb2RlVHlwZVtcImxpbWl0X2NsYXVzZVwiXSA9IFwibGltaXRfY2xhdXNlXCI7XG4gIE5vZGVUeXBlW1wiYWxsX2NvbHVtbnNfYXN0ZXJpc2tcIl0gPSBcImFsbF9jb2x1bW5zX2FzdGVyaXNrXCI7XG4gIE5vZGVUeXBlW1wibGl0ZXJhbFwiXSA9IFwibGl0ZXJhbFwiO1xuICBOb2RlVHlwZVtcImlkZW50aWZpZXJcIl0gPSBcImlkZW50aWZpZXJcIjtcbiAgTm9kZVR5cGVbXCJrZXl3b3JkXCJdID0gXCJrZXl3b3JkXCI7XG4gIE5vZGVUeXBlW1wicGFyYW1ldGVyXCJdID0gXCJwYXJhbWV0ZXJcIjtcbiAgTm9kZVR5cGVbXCJvcGVyYXRvclwiXSA9IFwib3BlcmF0b3JcIjtcbiAgTm9kZVR5cGVbXCJjb21tYVwiXSA9IFwiY29tbWFcIjtcbiAgTm9kZVR5cGVbXCJsaW5lX2NvbW1lbnRcIl0gPSBcImxpbmVfY29tbWVudFwiO1xuICBOb2RlVHlwZVtcImJsb2NrX2NvbW1lbnRcIl0gPSBcImJsb2NrX2NvbW1lbnRcIjtcbn0pKE5vZGVUeXBlIHx8IChleHBvcnRzLk5vZGVUeXBlID0gTm9kZVR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/parser/ast.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/parser/createParser.js":
/*!****************************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/parser/createParser.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createParser = createParser;\n\nvar _nearley = __webpack_require__(/*! nearley */ \"../../../../../node_modules/nearley/lib/nearley.js\");\n\nvar _disambiguateTokens = __webpack_require__(/*! ../lexer/disambiguateTokens */ \"../../../../../node_modules/sql-formatter/lib/lexer/disambiguateTokens.js\");\n\nvar _grammar = _interopRequireDefault(__webpack_require__(/*! ./grammar */ \"../../../../../node_modules/sql-formatter/lib/parser/grammar.js\"));\n\nvar _LexerAdapter = _interopRequireDefault(__webpack_require__(/*! ./LexerAdapter */ \"../../../../../node_modules/sql-formatter/lib/parser/LexerAdapter.js\"));\n\nvar _token = __webpack_require__(/*! ../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Creates a parser object which wraps the setup of Nearley parser\n */\nfunction createParser(tokenizer) {\n  var paramTypesOverrides = {};\n  var lexer = new _LexerAdapter[\"default\"](function (chunk) {\n    return [].concat(_toConsumableArray((0, _disambiguateTokens.disambiguateTokens)(tokenizer.tokenize(chunk, paramTypesOverrides))), [(0, _token.createEofToken)(chunk.length)]);\n  });\n  var parser = new _nearley.Parser(_nearley.Grammar.fromCompiled(_grammar[\"default\"]), {\n    lexer: lexer\n  });\n  return {\n    parse: function parse(sql, paramTypes) {\n      // share paramTypesOverrides with Tokenizer\n      paramTypesOverrides = paramTypes;\n\n      var _parser$feed = parser.feed(sql),\n          results = _parser$feed.results;\n\n      if (results.length === 1) {\n        return results[0];\n      } else if (results.length === 0) {\n        // Ideally we would report a line number where the parser failed,\n        // but I haven't found a way to get this info from Nearley :(\n        throw new Error('Parse error: Invalid SQL');\n      } else {\n        throw new Error('Parse error: Ambiguous grammar');\n      }\n    }\n  };\n}\n//# sourceMappingURL=createParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3BhcnNlci9jcmVhdGVQYXJzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9wYXJzZXIvY3JlYXRlUGFyc2VyLmpzPzY1OTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNyZWF0ZVBhcnNlciA9IGNyZWF0ZVBhcnNlcjtcblxudmFyIF9uZWFybGV5ID0gcmVxdWlyZShcIm5lYXJsZXlcIik7XG5cbnZhciBfZGlzYW1iaWd1YXRlVG9rZW5zID0gcmVxdWlyZShcIi4uL2xleGVyL2Rpc2FtYmlndWF0ZVRva2Vuc1wiKTtcblxudmFyIF9ncmFtbWFyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ncmFtbWFyXCIpKTtcblxudmFyIF9MZXhlckFkYXB0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0xleGVyQWRhcHRlclwiKSk7XG5cbnZhciBfdG9rZW4gPSByZXF1aXJlKFwiLi4vbGV4ZXIvdG9rZW5cIik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbi8qKlxuICogQ3JlYXRlcyBhIHBhcnNlciBvYmplY3Qgd2hpY2ggd3JhcHMgdGhlIHNldHVwIG9mIE5lYXJsZXkgcGFyc2VyXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBhcnNlcih0b2tlbml6ZXIpIHtcbiAgdmFyIHBhcmFtVHlwZXNPdmVycmlkZXMgPSB7fTtcbiAgdmFyIGxleGVyID0gbmV3IF9MZXhlckFkYXB0ZXJbXCJkZWZhdWx0XCJdKGZ1bmN0aW9uIChjaHVuaykge1xuICAgIHJldHVybiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KCgwLCBfZGlzYW1iaWd1YXRlVG9rZW5zLmRpc2FtYmlndWF0ZVRva2VucykodG9rZW5pemVyLnRva2VuaXplKGNodW5rLCBwYXJhbVR5cGVzT3ZlcnJpZGVzKSkpLCBbKDAsIF90b2tlbi5jcmVhdGVFb2ZUb2tlbikoY2h1bmsubGVuZ3RoKV0pO1xuICB9KTtcbiAgdmFyIHBhcnNlciA9IG5ldyBfbmVhcmxleS5QYXJzZXIoX25lYXJsZXkuR3JhbW1hci5mcm9tQ29tcGlsZWQoX2dyYW1tYXJbXCJkZWZhdWx0XCJdKSwge1xuICAgIGxleGVyOiBsZXhlclxuICB9KTtcbiAgcmV0dXJuIHtcbiAgICBwYXJzZTogZnVuY3Rpb24gcGFyc2Uoc3FsLCBwYXJhbVR5cGVzKSB7XG4gICAgICAvLyBzaGFyZSBwYXJhbVR5cGVzT3ZlcnJpZGVzIHdpdGggVG9rZW5pemVyXG4gICAgICBwYXJhbVR5cGVzT3ZlcnJpZGVzID0gcGFyYW1UeXBlcztcblxuICAgICAgdmFyIF9wYXJzZXIkZmVlZCA9IHBhcnNlci5mZWVkKHNxbCksXG4gICAgICAgICAgcmVzdWx0cyA9IF9wYXJzZXIkZmVlZC5yZXN1bHRzO1xuXG4gICAgICBpZiAocmVzdWx0cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdHNbMF07XG4gICAgICB9IGVsc2UgaWYgKHJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIC8vIElkZWFsbHkgd2Ugd291bGQgcmVwb3J0IGEgbGluZSBudW1iZXIgd2hlcmUgdGhlIHBhcnNlciBmYWlsZWQsXG4gICAgICAgIC8vIGJ1dCBJIGhhdmVuJ3QgZm91bmQgYSB3YXkgdG8gZ2V0IHRoaXMgaW5mbyBmcm9tIE5lYXJsZXkgOihcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQYXJzZSBlcnJvcjogSW52YWxpZCBTUUwnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUGFyc2UgZXJyb3I6IEFtYmlndW91cyBncmFtbWFyJyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlUGFyc2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/parser/createParser.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/parser/grammar.js":
/*!***********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/parser/grammar.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _LexerAdapter = _interopRequireDefault(__webpack_require__(/*! ./LexerAdapter */ \"../../../../../node_modules/sql-formatter/lib/parser/LexerAdapter.js\"));\n\nvar _ast = __webpack_require__(/*! ./ast */ \"../../../../../node_modules/sql-formatter/lib/parser/ast.js\");\n\nvar _token = __webpack_require__(/*! ../lexer/token */ \"../../../../../node_modules/sql-formatter/lib/lexer/token.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) {\n  return d[0];\n}\n\n// The lexer here is only to provide the has() method,\n// that's used inside the generated grammar definition.\n// A proper lexer gets passed to Nearley Parser constructor.\nvar lexer = new _LexerAdapter[\"default\"](function (chunk) {\n  return [];\n}); // Used for unwrapping grammar rules like:\n//\n//   rule -> ( foo | bar | baz )\n//\n// which otherwise produce single element nested inside two arrays\n\nvar unwrap = function unwrap(_ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n      _ref2$ = _slicedToArray(_ref2[0], 1),\n      el = _ref2$[0];\n\n  return el;\n};\n\nvar toKeywordNode = function toKeywordNode(token) {\n  return {\n    type: _ast.NodeType.keyword,\n    tokenType: token.type,\n    text: token.text,\n    raw: token.raw\n  };\n};\n\nvar addLeadingComments = function addLeadingComments(node, comments) {\n  return comments.length > 0 ? _objectSpread(_objectSpread({}, node), {}, {\n    leadingComments: comments\n  }) : node;\n};\n\nvar addTrailingComments = function addTrailingComments(node, comments) {\n  return comments.length > 0 ? _objectSpread(_objectSpread({}, node), {}, {\n    trailingComments: comments\n  }) : node;\n};\n\n;\n;\n;\n;\nvar grammar = {\n  Lexer: lexer,\n  ParserRules: [{\n    \"name\": \"main$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"main$ebnf$1\",\n    \"symbols\": [\"main$ebnf$1\", \"statement\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"main\",\n    \"symbols\": [\"main$ebnf$1\"],\n    \"postprocess\": function postprocess(_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          statements = _ref4[0];\n\n      var last = statements[statements.length - 1];\n\n      if (last && !last.hasSemicolon) {\n        // we have fully parsed the whole file\n        // discard the last statement when it's empty\n        return last.children.length > 0 ? statements : statements.slice(0, -1);\n      } else {\n        // parsing still in progress, do nothing\n        return statements;\n      }\n    }\n  }, {\n    \"name\": \"statement$subexpression$1\",\n    \"symbols\": [lexer.has(\"DELIMITER\") ? {\n      type: \"DELIMITER\"\n    } : DELIMITER]\n  }, {\n    \"name\": \"statement$subexpression$1\",\n    \"symbols\": [lexer.has(\"EOF\") ? {\n      type: \"EOF\"\n    } : EOF]\n  }, {\n    \"name\": \"statement\",\n    \"symbols\": [\"expressions_or_clauses\", \"statement$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          children = _ref6[0],\n          _ref6$ = _slicedToArray(_ref6[1], 1),\n          delimiter = _ref6$[0];\n\n      return {\n        type: _ast.NodeType.statement,\n        children: children,\n        hasSemicolon: delimiter.type === _token.TokenType.DELIMITER\n      };\n    }\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$1\",\n    \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$2\",\n    \"symbols\": []\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$2\",\n    \"symbols\": [\"expressions_or_clauses$ebnf$2\", \"clause\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"expressions_or_clauses\",\n    \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"expressions_or_clauses$ebnf$2\"],\n    \"postprocess\": function postprocess(_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n          expressions = _ref8[0],\n          clauses = _ref8[1];\n\n      return [].concat(_toConsumableArray(expressions), _toConsumableArray(clauses));\n    }\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"limit_clause\"]\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"select_clause\"]\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"other_clause\"]\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"set_operation\"]\n  }, {\n    \"name\": \"clause\",\n    \"symbols\": [\"clause$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"limit_clause$ebnf$1\",\n    \"symbols\": [\"expression_with_comments\"]\n  }, {\n    \"name\": \"limit_clause$ebnf$1\",\n    \"symbols\": [\"limit_clause$ebnf$1\", \"expression_with_comments\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"limit_clause$ebnf$2$subexpression$1$ebnf$1\",\n    \"symbols\": [\"expression\"]\n  }, {\n    \"name\": \"limit_clause$ebnf$2$subexpression$1$ebnf$1\",\n    \"symbols\": [\"limit_clause$ebnf$2$subexpression$1$ebnf$1\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"limit_clause$ebnf$2$subexpression$1\",\n    \"symbols\": [lexer.has(\"COMMA\") ? {\n      type: \"COMMA\"\n    } : COMMA, \"limit_clause$ebnf$2$subexpression$1$ebnf$1\"]\n  }, {\n    \"name\": \"limit_clause$ebnf$2\",\n    \"symbols\": [\"limit_clause$ebnf$2$subexpression$1\"],\n    \"postprocess\": id\n  }, {\n    \"name\": \"limit_clause$ebnf$2\",\n    \"symbols\": [],\n    \"postprocess\": function postprocess() {\n      return null;\n    }\n  }, {\n    \"name\": \"limit_clause\",\n    \"symbols\": [lexer.has(\"LIMIT\") ? {\n      type: \"LIMIT\"\n    } : LIMIT, \"_\", \"limit_clause$ebnf$1\", \"limit_clause$ebnf$2\"],\n    \"postprocess\": function postprocess(_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 4),\n          limitToken = _ref10[0],\n          _ = _ref10[1],\n          exp1 = _ref10[2],\n          optional = _ref10[3];\n\n      if (optional) {\n        var _optional = _slicedToArray(optional, 2),\n            comma = _optional[0],\n            exp2 = _optional[1];\n\n        return {\n          type: _ast.NodeType.limit_clause,\n          name: addTrailingComments(toKeywordNode(limitToken), _),\n          offset: exp1,\n          count: exp2\n        };\n      } else {\n        return {\n          type: _ast.NodeType.limit_clause,\n          name: addTrailingComments(toKeywordNode(limitToken), _),\n          count: exp1\n        };\n      }\n    }\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$1\",\n    \"symbols\": [\"select_clause$subexpression$1$ebnf$1\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"select_clause$subexpression$1\",\n    \"symbols\": [\"all_columns_asterisk\", \"select_clause$subexpression$1$ebnf$1\"]\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$2\",\n    \"symbols\": []\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$2\",\n    \"symbols\": [\"select_clause$subexpression$1$ebnf$2\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"select_clause$subexpression$1\",\n    \"symbols\": [\"asteriskless_expression\", \"select_clause$subexpression$1$ebnf$2\"]\n  }, {\n    \"name\": \"select_clause\",\n    \"symbols\": [lexer.has(\"RESERVED_SELECT\") ? {\n      type: \"RESERVED_SELECT\"\n    } : RESERVED_SELECT, \"select_clause$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n          nameToken = _ref12[0],\n          _ref12$ = _slicedToArray(_ref12[1], 2),\n          exp = _ref12$[0],\n          expressions = _ref12$[1];\n\n      return {\n        type: _ast.NodeType.clause,\n        name: toKeywordNode(nameToken),\n        children: [exp].concat(_toConsumableArray(expressions))\n      };\n    }\n  }, {\n    \"name\": \"select_clause\",\n    \"symbols\": [lexer.has(\"RESERVED_SELECT\") ? {\n      type: \"RESERVED_SELECT\"\n    } : RESERVED_SELECT],\n    \"postprocess\": function postprocess(_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 1),\n          nameToken = _ref14[0];\n\n      return {\n        type: _ast.NodeType.clause,\n        name: toKeywordNode(nameToken),\n        children: []\n      };\n    }\n  }, {\n    \"name\": \"all_columns_asterisk\",\n    \"symbols\": [lexer.has(\"ASTERISK\") ? {\n      type: \"ASTERISK\"\n    } : ASTERISK],\n    \"postprocess\": function postprocess() {\n      return {\n        type: _ast.NodeType.all_columns_asterisk\n      };\n    }\n  }, {\n    \"name\": \"other_clause$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"other_clause$ebnf$1\",\n    \"symbols\": [\"other_clause$ebnf$1\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"other_clause\",\n    \"symbols\": [lexer.has(\"RESERVED_COMMAND\") ? {\n      type: \"RESERVED_COMMAND\"\n    } : RESERVED_COMMAND, \"other_clause$ebnf$1\"],\n    \"postprocess\": function postprocess(_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 2),\n          nameToken = _ref16[0],\n          children = _ref16[1];\n\n      return {\n        type: _ast.NodeType.clause,\n        name: toKeywordNode(nameToken),\n        children: children\n      };\n    }\n  }, {\n    \"name\": \"set_operation$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"set_operation$ebnf$1\",\n    \"symbols\": [\"set_operation$ebnf$1\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"set_operation\",\n    \"symbols\": [lexer.has(\"RESERVED_SET_OPERATION\") ? {\n      type: \"RESERVED_SET_OPERATION\"\n    } : RESERVED_SET_OPERATION, \"set_operation$ebnf$1\"],\n    \"postprocess\": function postprocess(_ref17) {\n      var _ref18 = _slicedToArray(_ref17, 2),\n          nameToken = _ref18[0],\n          children = _ref18[1];\n\n      return {\n        type: _ast.NodeType.set_operation,\n        name: toKeywordNode(nameToken),\n        children: children\n      };\n    }\n  }, {\n    \"name\": \"expression_with_comments\",\n    \"symbols\": [\"simple_expression\", \"_\"],\n    \"postprocess\": function postprocess(_ref19) {\n      var _ref20 = _slicedToArray(_ref19, 2),\n          expr = _ref20[0],\n          _ = _ref20[1];\n\n      return addTrailingComments(expr, _);\n    }\n  }, {\n    \"name\": \"expression$subexpression$1\",\n    \"symbols\": [\"simple_expression\"]\n  }, {\n    \"name\": \"expression$subexpression$1\",\n    \"symbols\": [\"between_predicate\"]\n  }, {\n    \"name\": \"expression$subexpression$1\",\n    \"symbols\": [\"comma\"]\n  }, {\n    \"name\": \"expression$subexpression$1\",\n    \"symbols\": [\"comment\"]\n  }, {\n    \"name\": \"expression\",\n    \"symbols\": [\"expression$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"simple_expression_without_asterisk\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"between_predicate\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"comma\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"comment\"]\n  }, {\n    \"name\": \"asteriskless_expression\",\n    \"symbols\": [\"asteriskless_expression$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"simple_expression$subexpression$1\",\n    \"symbols\": [\"simple_expression_without_asterisk\"]\n  }, {\n    \"name\": \"simple_expression$subexpression$1\",\n    \"symbols\": [\"asterisk\"]\n  }, {\n    \"name\": \"simple_expression\",\n    \"symbols\": [\"simple_expression$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"array_subscript\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"function_call\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"property_access\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"parenthesis\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"curly_braces\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"square_brackets\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"operator\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"identifier\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"parameter\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"literal\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk$subexpression$1\",\n    \"symbols\": [\"keyword\"]\n  }, {\n    \"name\": \"simple_expression_without_asterisk\",\n    \"symbols\": [\"simple_expression_without_asterisk$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"array_subscript\",\n    \"symbols\": [lexer.has(\"ARRAY_IDENTIFIER\") ? {\n      type: \"ARRAY_IDENTIFIER\"\n    } : ARRAY_IDENTIFIER, \"_\", \"square_brackets\"],\n    \"postprocess\": function postprocess(_ref21) {\n      var _ref22 = _slicedToArray(_ref21, 3),\n          arrayToken = _ref22[0],\n          _ = _ref22[1],\n          brackets = _ref22[2];\n\n      return {\n        type: _ast.NodeType.array_subscript,\n        array: addTrailingComments({\n          type: _ast.NodeType.identifier,\n          text: arrayToken.text\n        }, _),\n        parenthesis: brackets\n      };\n    }\n  }, {\n    \"name\": \"array_subscript\",\n    \"symbols\": [lexer.has(\"ARRAY_KEYWORD\") ? {\n      type: \"ARRAY_KEYWORD\"\n    } : ARRAY_KEYWORD, \"_\", \"square_brackets\"],\n    \"postprocess\": function postprocess(_ref23) {\n      var _ref24 = _slicedToArray(_ref23, 3),\n          arrayToken = _ref24[0],\n          _ = _ref24[1],\n          brackets = _ref24[2];\n\n      return {\n        type: _ast.NodeType.array_subscript,\n        array: addTrailingComments(toKeywordNode(arrayToken), _),\n        parenthesis: brackets\n      };\n    }\n  }, {\n    \"name\": \"function_call\",\n    \"symbols\": [lexer.has(\"RESERVED_FUNCTION_NAME\") ? {\n      type: \"RESERVED_FUNCTION_NAME\"\n    } : RESERVED_FUNCTION_NAME, \"_\", \"parenthesis\"],\n    \"postprocess\": function postprocess(_ref25) {\n      var _ref26 = _slicedToArray(_ref25, 3),\n          nameToken = _ref26[0],\n          _ = _ref26[1],\n          parens = _ref26[2];\n\n      return {\n        type: _ast.NodeType.function_call,\n        name: addTrailingComments(toKeywordNode(nameToken), _),\n        parenthesis: parens\n      };\n    }\n  }, {\n    \"name\": \"parenthesis\",\n    \"symbols\": [{\n      \"literal\": \"(\"\n    }, \"expressions_or_clauses\", {\n      \"literal\": \")\"\n    }],\n    \"postprocess\": function postprocess(_ref27) {\n      var _ref28 = _slicedToArray(_ref27, 3),\n          open = _ref28[0],\n          children = _ref28[1],\n          close = _ref28[2];\n\n      return {\n        type: _ast.NodeType.parenthesis,\n        children: children,\n        openParen: \"(\",\n        closeParen: \")\"\n      };\n    }\n  }, {\n    \"name\": \"curly_braces$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"curly_braces$ebnf$1\",\n    \"symbols\": [\"curly_braces$ebnf$1\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"curly_braces\",\n    \"symbols\": [{\n      \"literal\": \"{\"\n    }, \"curly_braces$ebnf$1\", {\n      \"literal\": \"}\"\n    }],\n    \"postprocess\": function postprocess(_ref29) {\n      var _ref30 = _slicedToArray(_ref29, 3),\n          open = _ref30[0],\n          children = _ref30[1],\n          close = _ref30[2];\n\n      return {\n        type: _ast.NodeType.parenthesis,\n        children: children,\n        openParen: \"{\",\n        closeParen: \"}\"\n      };\n    }\n  }, {\n    \"name\": \"square_brackets$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"square_brackets$ebnf$1\",\n    \"symbols\": [\"square_brackets$ebnf$1\", \"expression\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"square_brackets\",\n    \"symbols\": [{\n      \"literal\": \"[\"\n    }, \"square_brackets$ebnf$1\", {\n      \"literal\": \"]\"\n    }],\n    \"postprocess\": function postprocess(_ref31) {\n      var _ref32 = _slicedToArray(_ref31, 3),\n          open = _ref32[0],\n          children = _ref32[1],\n          close = _ref32[2];\n\n      return {\n        type: _ast.NodeType.parenthesis,\n        children: children,\n        openParen: \"[\",\n        closeParen: \"]\"\n      };\n    }\n  }, {\n    \"name\": \"property_access$subexpression$1\",\n    \"symbols\": [\"identifier\"]\n  }, {\n    \"name\": \"property_access$subexpression$1\",\n    \"symbols\": [\"array_subscript\"]\n  }, {\n    \"name\": \"property_access$subexpression$1\",\n    \"symbols\": [\"all_columns_asterisk\"]\n  }, {\n    \"name\": \"property_access\",\n    \"symbols\": [\"simple_expression\", \"_\", lexer.has(\"DOT\") ? {\n      type: \"DOT\"\n    } : DOT, \"_\", \"property_access$subexpression$1\"],\n    \"postprocess\": // Allowing property to be <array_subscript> is currently a hack.\n    // A better way would be to allow <property_access> on the left side of array_subscript,\n    // but we currently can't do that because of another hack that requires\n    // %ARRAY_IDENTIFIER on the left side of <array_subscript>.\n    function postprocess(_ref33) {\n      var _ref34 = _slicedToArray(_ref33, 5),\n          object = _ref34[0],\n          _1 = _ref34[1],\n          dot = _ref34[2],\n          _2 = _ref34[3],\n          _ref34$ = _slicedToArray(_ref34[4], 1),\n          property = _ref34$[0];\n\n      return {\n        type: _ast.NodeType.property_access,\n        object: addTrailingComments(object, _1),\n        property: addLeadingComments(property, _2)\n      };\n    }\n  }, {\n    \"name\": \"between_predicate\",\n    \"symbols\": [lexer.has(\"BETWEEN\") ? {\n      type: \"BETWEEN\"\n    } : BETWEEN, \"_\", \"simple_expression\", \"_\", lexer.has(\"AND\") ? {\n      type: \"AND\"\n    } : AND, \"_\", \"simple_expression\"],\n    \"postprocess\": function postprocess(_ref35) {\n      var _ref36 = _slicedToArray(_ref35, 7),\n          betweenToken = _ref36[0],\n          _1 = _ref36[1],\n          expr1 = _ref36[2],\n          _2 = _ref36[3],\n          andToken = _ref36[4],\n          _3 = _ref36[5],\n          expr2 = _ref36[6];\n\n      return {\n        type: _ast.NodeType.between_predicate,\n        between: toKeywordNode(betweenToken),\n        expr1: [addTrailingComments(addLeadingComments(expr1, _1), _2)],\n        and: toKeywordNode(andToken),\n        expr2: [addLeadingComments(expr2, _3)]\n      };\n    }\n  }, {\n    \"name\": \"comma$subexpression$1\",\n    \"symbols\": [lexer.has(\"COMMA\") ? {\n      type: \"COMMA\"\n    } : COMMA]\n  }, {\n    \"name\": \"comma\",\n    \"symbols\": [\"comma$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref37) {\n      var _ref38 = _slicedToArray(_ref37, 1),\n          _ref38$ = _slicedToArray(_ref38[0], 1),\n          token = _ref38$[0];\n\n      return {\n        type: _ast.NodeType.comma\n      };\n    }\n  }, {\n    \"name\": \"asterisk$subexpression$1\",\n    \"symbols\": [lexer.has(\"ASTERISK\") ? {\n      type: \"ASTERISK\"\n    } : ASTERISK]\n  }, {\n    \"name\": \"asterisk\",\n    \"symbols\": [\"asterisk$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref39) {\n      var _ref40 = _slicedToArray(_ref39, 1),\n          _ref40$ = _slicedToArray(_ref40[0], 1),\n          token = _ref40$[0];\n\n      return {\n        type: _ast.NodeType.operator,\n        text: token.text\n      };\n    }\n  }, {\n    \"name\": \"operator$subexpression$1\",\n    \"symbols\": [lexer.has(\"OPERATOR\") ? {\n      type: \"OPERATOR\"\n    } : OPERATOR]\n  }, {\n    \"name\": \"operator\",\n    \"symbols\": [\"operator$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref41) {\n      var _ref42 = _slicedToArray(_ref41, 1),\n          _ref42$ = _slicedToArray(_ref42[0], 1),\n          token = _ref42$[0];\n\n      return {\n        type: _ast.NodeType.operator,\n        text: token.text\n      };\n    }\n  }, {\n    \"name\": \"identifier$subexpression$1\",\n    \"symbols\": [lexer.has(\"IDENTIFIER\") ? {\n      type: \"IDENTIFIER\"\n    } : IDENTIFIER]\n  }, {\n    \"name\": \"identifier$subexpression$1\",\n    \"symbols\": [lexer.has(\"QUOTED_IDENTIFIER\") ? {\n      type: \"QUOTED_IDENTIFIER\"\n    } : QUOTED_IDENTIFIER]\n  }, {\n    \"name\": \"identifier$subexpression$1\",\n    \"symbols\": [lexer.has(\"VARIABLE\") ? {\n      type: \"VARIABLE\"\n    } : VARIABLE]\n  }, {\n    \"name\": \"identifier\",\n    \"symbols\": [\"identifier$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref43) {\n      var _ref44 = _slicedToArray(_ref43, 1),\n          _ref44$ = _slicedToArray(_ref44[0], 1),\n          token = _ref44$[0];\n\n      return {\n        type: _ast.NodeType.identifier,\n        text: token.text\n      };\n    }\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"NAMED_PARAMETER\") ? {\n      type: \"NAMED_PARAMETER\"\n    } : NAMED_PARAMETER]\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"QUOTED_PARAMETER\") ? {\n      type: \"QUOTED_PARAMETER\"\n    } : QUOTED_PARAMETER]\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"NUMBERED_PARAMETER\") ? {\n      type: \"NUMBERED_PARAMETER\"\n    } : NUMBERED_PARAMETER]\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"POSITIONAL_PARAMETER\") ? {\n      type: \"POSITIONAL_PARAMETER\"\n    } : POSITIONAL_PARAMETER]\n  }, {\n    \"name\": \"parameter\",\n    \"symbols\": [\"parameter$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref45) {\n      var _ref46 = _slicedToArray(_ref45, 1),\n          _ref46$ = _slicedToArray(_ref46[0], 1),\n          token = _ref46$[0];\n\n      return {\n        type: _ast.NodeType.parameter,\n        key: token.key,\n        text: token.text\n      };\n    }\n  }, {\n    \"name\": \"literal$subexpression$1\",\n    \"symbols\": [lexer.has(\"NUMBER\") ? {\n      type: \"NUMBER\"\n    } : NUMBER]\n  }, {\n    \"name\": \"literal$subexpression$1\",\n    \"symbols\": [lexer.has(\"STRING\") ? {\n      type: \"STRING\"\n    } : STRING]\n  }, {\n    \"name\": \"literal\",\n    \"symbols\": [\"literal$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref47) {\n      var _ref48 = _slicedToArray(_ref47, 1),\n          _ref48$ = _slicedToArray(_ref48[0], 1),\n          token = _ref48$[0];\n\n      return {\n        type: _ast.NodeType.literal,\n        text: token.text\n      };\n    }\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"RESERVED_KEYWORD\") ? {\n      type: \"RESERVED_KEYWORD\"\n    } : RESERVED_KEYWORD]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"RESERVED_PHRASE\") ? {\n      type: \"RESERVED_PHRASE\"\n    } : RESERVED_PHRASE]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"RESERVED_DEPENDENT_CLAUSE\") ? {\n      type: \"RESERVED_DEPENDENT_CLAUSE\"\n    } : RESERVED_DEPENDENT_CLAUSE]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"RESERVED_JOIN\") ? {\n      type: \"RESERVED_JOIN\"\n    } : RESERVED_JOIN]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"CASE\") ? {\n      type: \"CASE\"\n    } : CASE]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"END\") ? {\n      type: \"END\"\n    } : END]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"AND\") ? {\n      type: \"AND\"\n    } : AND]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"OR\") ? {\n      type: \"OR\"\n    } : OR]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"XOR\") ? {\n      type: \"XOR\"\n    } : XOR]\n  }, {\n    \"name\": \"keyword\",\n    \"symbols\": [\"keyword$subexpression$1\"],\n    \"postprocess\": function postprocess(_ref49) {\n      var _ref50 = _slicedToArray(_ref49, 1),\n          _ref50$ = _slicedToArray(_ref50[0], 1),\n          token = _ref50$[0];\n\n      return toKeywordNode(token);\n    }\n  }, {\n    \"name\": \"_$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"_$ebnf$1\",\n    \"symbols\": [\"_$ebnf$1\", \"comment\"],\n    \"postprocess\": function postprocess(d) {\n      return d[0].concat([d[1]]);\n    }\n  }, {\n    \"name\": \"_\",\n    \"symbols\": [\"_$ebnf$1\"],\n    \"postprocess\": function postprocess(_ref51) {\n      var _ref52 = _slicedToArray(_ref51, 1),\n          comments = _ref52[0];\n\n      return comments;\n    }\n  }, {\n    \"name\": \"comment\",\n    \"symbols\": [lexer.has(\"LINE_COMMENT\") ? {\n      type: \"LINE_COMMENT\"\n    } : LINE_COMMENT],\n    \"postprocess\": function postprocess(_ref53) {\n      var _ref54 = _slicedToArray(_ref53, 1),\n          token = _ref54[0];\n\n      return {\n        type: _ast.NodeType.line_comment,\n        text: token.text,\n        precedingWhitespace: token.precedingWhitespace\n      };\n    }\n  }, {\n    \"name\": \"comment\",\n    \"symbols\": [lexer.has(\"BLOCK_COMMENT\") ? {\n      type: \"BLOCK_COMMENT\"\n    } : BLOCK_COMMENT],\n    \"postprocess\": function postprocess(_ref55) {\n      var _ref56 = _slicedToArray(_ref55, 1),\n          token = _ref56[0];\n\n      return {\n        type: _ast.NodeType.block_comment,\n        text: token.text\n      };\n    }\n  }],\n  ParserStart: \"main\"\n};\nvar _default = grammar;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=grammar.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3BhcnNlci9ncmFtbWFyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3JjL2RlYnVnZ2VyL2RlYnVnZ2VyLmpzLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9wYXJzZXIvZ3JhbW1hci5qcz82ODY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfTGV4ZXJBZGFwdGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9MZXhlckFkYXB0ZXJcIikpO1xuXG52YXIgX2FzdCA9IHJlcXVpcmUoXCIuL2FzdFwiKTtcblxudmFyIF90b2tlbiA9IHJlcXVpcmUoXCIuLi9sZXhlci90b2tlblwiKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxuLy8gR2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkgYnkgbmVhcmxleSwgdmVyc2lvbiAyLjIwLjFcbi8vIGh0dHA6Ly9naXRodWIuY29tL0hhcmRtYXRoMTIzL25lYXJsZXlcbi8vIEJ5cGFzc2VzIFRTNjEzMy4gQWxsb3cgZGVjbGFyZWQgYnV0IHVudXNlZCBmdW5jdGlvbnMuXG4vLyBAdHMtaWdub3JlXG5mdW5jdGlvbiBpZChkKSB7XG4gIHJldHVybiBkWzBdO1xufVxuXG4vLyBUaGUgbGV4ZXIgaGVyZSBpcyBvbmx5IHRvIHByb3ZpZGUgdGhlIGhhcygpIG1ldGhvZCxcbi8vIHRoYXQncyB1c2VkIGluc2lkZSB0aGUgZ2VuZXJhdGVkIGdyYW1tYXIgZGVmaW5pdGlvbi5cbi8vIEEgcHJvcGVyIGxleGVyIGdldHMgcGFzc2VkIHRvIE5lYXJsZXkgUGFyc2VyIGNvbnN0cnVjdG9yLlxudmFyIGxleGVyID0gbmV3IF9MZXhlckFkYXB0ZXJbXCJkZWZhdWx0XCJdKGZ1bmN0aW9uIChjaHVuaykge1xuICByZXR1cm4gW107XG59KTsgLy8gVXNlZCBmb3IgdW53cmFwcGluZyBncmFtbWFyIHJ1bGVzIGxpa2U6XG4vL1xuLy8gICBydWxlIC0+ICggZm9vIHwgYmFyIHwgYmF6IClcbi8vXG4vLyB3aGljaCBvdGhlcndpc2UgcHJvZHVjZSBzaW5nbGUgZWxlbWVudCBuZXN0ZWQgaW5zaWRlIHR3byBhcnJheXNcblxudmFyIHVud3JhcCA9IGZ1bmN0aW9uIHVud3JhcChfcmVmKSB7XG4gIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDEpLFxuICAgICAgX3JlZjIkID0gX3NsaWNlZFRvQXJyYXkoX3JlZjJbMF0sIDEpLFxuICAgICAgZWwgPSBfcmVmMiRbMF07XG5cbiAgcmV0dXJuIGVsO1xufTtcblxudmFyIHRvS2V5d29yZE5vZGUgPSBmdW5jdGlvbiB0b0tleXdvcmROb2RlKHRva2VuKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5rZXl3b3JkLFxuICAgIHRva2VuVHlwZTogdG9rZW4udHlwZSxcbiAgICB0ZXh0OiB0b2tlbi50ZXh0LFxuICAgIHJhdzogdG9rZW4ucmF3XG4gIH07XG59O1xuXG52YXIgYWRkTGVhZGluZ0NvbW1lbnRzID0gZnVuY3Rpb24gYWRkTGVhZGluZ0NvbW1lbnRzKG5vZGUsIGNvbW1lbnRzKSB7XG4gIHJldHVybiBjb21tZW50cy5sZW5ndGggPiAwID8gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBub2RlKSwge30sIHtcbiAgICBsZWFkaW5nQ29tbWVudHM6IGNvbW1lbnRzXG4gIH0pIDogbm9kZTtcbn07XG5cbnZhciBhZGRUcmFpbGluZ0NvbW1lbnRzID0gZnVuY3Rpb24gYWRkVHJhaWxpbmdDb21tZW50cyhub2RlLCBjb21tZW50cykge1xuICByZXR1cm4gY29tbWVudHMubGVuZ3RoID4gMCA/IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbm9kZSksIHt9LCB7XG4gICAgdHJhaWxpbmdDb21tZW50czogY29tbWVudHNcbiAgfSkgOiBub2RlO1xufTtcblxuO1xuO1xuO1xuO1xudmFyIGdyYW1tYXIgPSB7XG4gIExleGVyOiBsZXhlcixcbiAgUGFyc2VyUnVsZXM6IFt7XG4gICAgXCJuYW1lXCI6IFwibWFpbiRlYm5mJDFcIixcbiAgICBcInN5bWJvbHNcIjogW11cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcIm1haW4kZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcIm1haW4kZWJuZiQxXCIsIFwic3RhdGVtZW50XCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoZCkge1xuICAgICAgcmV0dXJuIGRbMF0uY29uY2F0KFtkWzFdXSk7XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwibWFpblwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJtYWluJGVibmYkMVwiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKF9yZWYzKSB7XG4gICAgICB2YXIgX3JlZjQgPSBfc2xpY2VkVG9BcnJheShfcmVmMywgMSksXG4gICAgICAgICAgc3RhdGVtZW50cyA9IF9yZWY0WzBdO1xuXG4gICAgICB2YXIgbGFzdCA9IHN0YXRlbWVudHNbc3RhdGVtZW50cy5sZW5ndGggLSAxXTtcblxuICAgICAgaWYgKGxhc3QgJiYgIWxhc3QuaGFzU2VtaWNvbG9uKSB7XG4gICAgICAgIC8vIHdlIGhhdmUgZnVsbHkgcGFyc2VkIHRoZSB3aG9sZSBmaWxlXG4gICAgICAgIC8vIGRpc2NhcmQgdGhlIGxhc3Qgc3RhdGVtZW50IHdoZW4gaXQncyBlbXB0eVxuICAgICAgICByZXR1cm4gbGFzdC5jaGlsZHJlbi5sZW5ndGggPiAwID8gc3RhdGVtZW50cyA6IHN0YXRlbWVudHMuc2xpY2UoMCwgLTEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcGFyc2luZyBzdGlsbCBpbiBwcm9ncmVzcywgZG8gbm90aGluZ1xuICAgICAgICByZXR1cm4gc3RhdGVtZW50cztcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzdGF0ZW1lbnQkc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJERUxJTUlURVJcIikgPyB7XG4gICAgICB0eXBlOiBcIkRFTElNSVRFUlwiXG4gICAgfSA6IERFTElNSVRFUl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInN0YXRlbWVudCRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIkVPRlwiKSA/IHtcbiAgICAgIHR5cGU6IFwiRU9GXCJcbiAgICB9IDogRU9GXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic3RhdGVtZW50XCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImV4cHJlc3Npb25zX29yX2NsYXVzZXNcIiwgXCJzdGF0ZW1lbnQkc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjUpIHtcbiAgICAgIHZhciBfcmVmNiA9IF9zbGljZWRUb0FycmF5KF9yZWY1LCAyKSxcbiAgICAgICAgICBjaGlsZHJlbiA9IF9yZWY2WzBdLFxuICAgICAgICAgIF9yZWY2JCA9IF9zbGljZWRUb0FycmF5KF9yZWY2WzFdLCAxKSxcbiAgICAgICAgICBkZWxpbWl0ZXIgPSBfcmVmNiRbMF07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUuc3RhdGVtZW50LFxuICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW4sXG4gICAgICAgIGhhc1NlbWljb2xvbjogZGVsaW1pdGVyLnR5cGUgPT09IF90b2tlbi5Ub2tlblR5cGUuREVMSU1JVEVSXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImV4cHJlc3Npb25zX29yX2NsYXVzZXMkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJleHByZXNzaW9uc19vcl9jbGF1c2VzJGVibmYkMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJleHByZXNzaW9uc19vcl9jbGF1c2VzJGVibmYkMVwiLCBcImV4cHJlc3Npb25cIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkKSB7XG4gICAgICByZXR1cm4gZFswXS5jb25jYXQoW2RbMV1dKTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJleHByZXNzaW9uc19vcl9jbGF1c2VzJGVibmYkMlwiLFxuICAgIFwic3ltYm9sc1wiOiBbXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiZXhwcmVzc2lvbnNfb3JfY2xhdXNlcyRlYm5mJDJcIixcbiAgICBcInN5bWJvbHNcIjogW1wiZXhwcmVzc2lvbnNfb3JfY2xhdXNlcyRlYm5mJDJcIiwgXCJjbGF1c2VcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkKSB7XG4gICAgICByZXR1cm4gZFswXS5jb25jYXQoW2RbMV1dKTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJleHByZXNzaW9uc19vcl9jbGF1c2VzXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImV4cHJlc3Npb25zX29yX2NsYXVzZXMkZWJuZiQxXCIsIFwiZXhwcmVzc2lvbnNfb3JfY2xhdXNlcyRlYm5mJDJcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmNykge1xuICAgICAgdmFyIF9yZWY4ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjcsIDIpLFxuICAgICAgICAgIGV4cHJlc3Npb25zID0gX3JlZjhbMF0sXG4gICAgICAgICAgY2xhdXNlcyA9IF9yZWY4WzFdO1xuXG4gICAgICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShleHByZXNzaW9ucyksIF90b0NvbnN1bWFibGVBcnJheShjbGF1c2VzKSk7XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiY2xhdXNlJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJsaW1pdF9jbGF1c2VcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImNsYXVzZSRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wic2VsZWN0X2NsYXVzZVwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiY2xhdXNlJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJvdGhlcl9jbGF1c2VcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImNsYXVzZSRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wic2V0X29wZXJhdGlvblwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiY2xhdXNlXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImNsYXVzZSRzdWJleHByZXNzaW9uJDFcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiB1bndyYXBcbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImxpbWl0X2NsYXVzZSRlYm5mJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiZXhwcmVzc2lvbl93aXRoX2NvbW1lbnRzXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJsaW1pdF9jbGF1c2UkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImxpbWl0X2NsYXVzZSRlYm5mJDFcIiwgXCJleHByZXNzaW9uX3dpdGhfY29tbWVudHNcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkKSB7XG4gICAgICByZXR1cm4gZFswXS5jb25jYXQoW2RbMV1dKTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJsaW1pdF9jbGF1c2UkZWJuZiQyJHN1YmV4cHJlc3Npb24kMSRlYm5mJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiZXhwcmVzc2lvblwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwibGltaXRfY2xhdXNlJGVibmYkMiRzdWJleHByZXNzaW9uJDEkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImxpbWl0X2NsYXVzZSRlYm5mJDIkc3ViZXhwcmVzc2lvbiQxJGVibmYkMVwiLCBcImV4cHJlc3Npb25cIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkKSB7XG4gICAgICByZXR1cm4gZFswXS5jb25jYXQoW2RbMV1dKTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJsaW1pdF9jbGF1c2UkZWJuZiQyJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiQ09NTUFcIikgPyB7XG4gICAgICB0eXBlOiBcIkNPTU1BXCJcbiAgICB9IDogQ09NTUEsIFwibGltaXRfY2xhdXNlJGVibmYkMiRzdWJleHByZXNzaW9uJDEkZWJuZiQxXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJsaW1pdF9jbGF1c2UkZWJuZiQyXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImxpbWl0X2NsYXVzZSRlYm5mJDIkc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogaWRcbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImxpbWl0X2NsYXVzZSRlYm5mJDJcIixcbiAgICBcInN5bWJvbHNcIjogW10sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcygpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImxpbWl0X2NsYXVzZVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiTElNSVRcIikgPyB7XG4gICAgICB0eXBlOiBcIkxJTUlUXCJcbiAgICB9IDogTElNSVQsIFwiX1wiLCBcImxpbWl0X2NsYXVzZSRlYm5mJDFcIiwgXCJsaW1pdF9jbGF1c2UkZWJuZiQyXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjkpIHtcbiAgICAgIHZhciBfcmVmMTAgPSBfc2xpY2VkVG9BcnJheShfcmVmOSwgNCksXG4gICAgICAgICAgbGltaXRUb2tlbiA9IF9yZWYxMFswXSxcbiAgICAgICAgICBfID0gX3JlZjEwWzFdLFxuICAgICAgICAgIGV4cDEgPSBfcmVmMTBbMl0sXG4gICAgICAgICAgb3B0aW9uYWwgPSBfcmVmMTBbM107XG5cbiAgICAgIGlmIChvcHRpb25hbCkge1xuICAgICAgICB2YXIgX29wdGlvbmFsID0gX3NsaWNlZFRvQXJyYXkob3B0aW9uYWwsIDIpLFxuICAgICAgICAgICAgY29tbWEgPSBfb3B0aW9uYWxbMF0sXG4gICAgICAgICAgICBleHAyID0gX29wdGlvbmFsWzFdO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5saW1pdF9jbGF1c2UsXG4gICAgICAgICAgbmFtZTogYWRkVHJhaWxpbmdDb21tZW50cyh0b0tleXdvcmROb2RlKGxpbWl0VG9rZW4pLCBfKSxcbiAgICAgICAgICBvZmZzZXQ6IGV4cDEsXG4gICAgICAgICAgY291bnQ6IGV4cDJcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5saW1pdF9jbGF1c2UsXG4gICAgICAgICAgbmFtZTogYWRkVHJhaWxpbmdDb21tZW50cyh0b0tleXdvcmROb2RlKGxpbWl0VG9rZW4pLCBfKSxcbiAgICAgICAgICBjb3VudDogZXhwMVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInNlbGVjdF9jbGF1c2Ukc3ViZXhwcmVzc2lvbiQxJGVibmYkMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2VsZWN0X2NsYXVzZSRzdWJleHByZXNzaW9uJDEkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcInNlbGVjdF9jbGF1c2Ukc3ViZXhwcmVzc2lvbiQxJGVibmYkMVwiLCBcImV4cHJlc3Npb25cIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkKSB7XG4gICAgICByZXR1cm4gZFswXS5jb25jYXQoW2RbMV1dKTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzZWxlY3RfY2xhdXNlJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJhbGxfY29sdW1uc19hc3Rlcmlza1wiLCBcInNlbGVjdF9jbGF1c2Ukc3ViZXhwcmVzc2lvbiQxJGVibmYkMVwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2VsZWN0X2NsYXVzZSRzdWJleHByZXNzaW9uJDEkZWJuZiQyXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzZWxlY3RfY2xhdXNlJHN1YmV4cHJlc3Npb24kMSRlYm5mJDJcIixcbiAgICBcInN5bWJvbHNcIjogW1wic2VsZWN0X2NsYXVzZSRzdWJleHByZXNzaW9uJDEkZWJuZiQyXCIsIFwiZXhwcmVzc2lvblwiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKGQpIHtcbiAgICAgIHJldHVybiBkWzBdLmNvbmNhdChbZFsxXV0pO1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInNlbGVjdF9jbGF1c2Ukc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImFzdGVyaXNrbGVzc19leHByZXNzaW9uXCIsIFwic2VsZWN0X2NsYXVzZSRzdWJleHByZXNzaW9uJDEkZWJuZiQyXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzZWxlY3RfY2xhdXNlXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJSRVNFUlZFRF9TRUxFQ1RcIikgPyB7XG4gICAgICB0eXBlOiBcIlJFU0VSVkVEX1NFTEVDVFwiXG4gICAgfSA6IFJFU0VSVkVEX1NFTEVDVCwgXCJzZWxlY3RfY2xhdXNlJHN1YmV4cHJlc3Npb24kMVwiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKF9yZWYxMSkge1xuICAgICAgdmFyIF9yZWYxMiA9IF9zbGljZWRUb0FycmF5KF9yZWYxMSwgMiksXG4gICAgICAgICAgbmFtZVRva2VuID0gX3JlZjEyWzBdLFxuICAgICAgICAgIF9yZWYxMiQgPSBfc2xpY2VkVG9BcnJheShfcmVmMTJbMV0sIDIpLFxuICAgICAgICAgIGV4cCA9IF9yZWYxMiRbMF0sXG4gICAgICAgICAgZXhwcmVzc2lvbnMgPSBfcmVmMTIkWzFdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLmNsYXVzZSxcbiAgICAgICAgbmFtZTogdG9LZXl3b3JkTm9kZShuYW1lVG9rZW4pLFxuICAgICAgICBjaGlsZHJlbjogW2V4cF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShleHByZXNzaW9ucykpXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInNlbGVjdF9jbGF1c2VcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIlJFU0VSVkVEX1NFTEVDVFwiKSA/IHtcbiAgICAgIHR5cGU6IFwiUkVTRVJWRURfU0VMRUNUXCJcbiAgICB9IDogUkVTRVJWRURfU0VMRUNUXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKF9yZWYxMykge1xuICAgICAgdmFyIF9yZWYxNCA9IF9zbGljZWRUb0FycmF5KF9yZWYxMywgMSksXG4gICAgICAgICAgbmFtZVRva2VuID0gX3JlZjE0WzBdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLmNsYXVzZSxcbiAgICAgICAgbmFtZTogdG9LZXl3b3JkTm9kZShuYW1lVG9rZW4pLFxuICAgICAgICBjaGlsZHJlbjogW11cbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiYWxsX2NvbHVtbnNfYXN0ZXJpc2tcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIkFTVEVSSVNLXCIpID8ge1xuICAgICAgdHlwZTogXCJBU1RFUklTS1wiXG4gICAgfSA6IEFTVEVSSVNLXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5hbGxfY29sdW1uc19hc3Rlcmlza1xuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJvdGhlcl9jbGF1c2UkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJvdGhlcl9jbGF1c2UkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcIm90aGVyX2NsYXVzZSRlYm5mJDFcIiwgXCJleHByZXNzaW9uXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoZCkge1xuICAgICAgcmV0dXJuIGRbMF0uY29uY2F0KFtkWzFdXSk7XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwib3RoZXJfY2xhdXNlXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJSRVNFUlZFRF9DT01NQU5EXCIpID8ge1xuICAgICAgdHlwZTogXCJSRVNFUlZFRF9DT01NQU5EXCJcbiAgICB9IDogUkVTRVJWRURfQ09NTUFORCwgXCJvdGhlcl9jbGF1c2UkZWJuZiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjE1KSB7XG4gICAgICB2YXIgX3JlZjE2ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjE1LCAyKSxcbiAgICAgICAgICBuYW1lVG9rZW4gPSBfcmVmMTZbMF0sXG4gICAgICAgICAgY2hpbGRyZW4gPSBfcmVmMTZbMV07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUuY2xhdXNlLFxuICAgICAgICBuYW1lOiB0b0tleXdvcmROb2RlKG5hbWVUb2tlbiksXG4gICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlblxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzZXRfb3BlcmF0aW9uJGVibmYkMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2V0X29wZXJhdGlvbiRlYm5mJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wic2V0X29wZXJhdGlvbiRlYm5mJDFcIiwgXCJleHByZXNzaW9uXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoZCkge1xuICAgICAgcmV0dXJuIGRbMF0uY29uY2F0KFtkWzFdXSk7XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2V0X29wZXJhdGlvblwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiUkVTRVJWRURfU0VUX09QRVJBVElPTlwiKSA/IHtcbiAgICAgIHR5cGU6IFwiUkVTRVJWRURfU0VUX09QRVJBVElPTlwiXG4gICAgfSA6IFJFU0VSVkVEX1NFVF9PUEVSQVRJT04sIFwic2V0X29wZXJhdGlvbiRlYm5mJDFcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmMTcpIHtcbiAgICAgIHZhciBfcmVmMTggPSBfc2xpY2VkVG9BcnJheShfcmVmMTcsIDIpLFxuICAgICAgICAgIG5hbWVUb2tlbiA9IF9yZWYxOFswXSxcbiAgICAgICAgICBjaGlsZHJlbiA9IF9yZWYxOFsxXTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5zZXRfb3BlcmF0aW9uLFxuICAgICAgICBuYW1lOiB0b0tleXdvcmROb2RlKG5hbWVUb2tlbiksXG4gICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlblxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJleHByZXNzaW9uX3dpdGhfY29tbWVudHNcIixcbiAgICBcInN5bWJvbHNcIjogW1wic2ltcGxlX2V4cHJlc3Npb25cIiwgXCJfXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjE5KSB7XG4gICAgICB2YXIgX3JlZjIwID0gX3NsaWNlZFRvQXJyYXkoX3JlZjE5LCAyKSxcbiAgICAgICAgICBleHByID0gX3JlZjIwWzBdLFxuICAgICAgICAgIF8gPSBfcmVmMjBbMV07XG5cbiAgICAgIHJldHVybiBhZGRUcmFpbGluZ0NvbW1lbnRzKGV4cHIsIF8pO1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImV4cHJlc3Npb24kc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcInNpbXBsZV9leHByZXNzaW9uXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJleHByZXNzaW9uJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJiZXR3ZWVuX3ByZWRpY2F0ZVwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiZXhwcmVzc2lvbiRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiY29tbWFcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImV4cHJlc3Npb24kc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImNvbW1lbnRcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImV4cHJlc3Npb25cIixcbiAgICBcInN5bWJvbHNcIjogW1wiZXhwcmVzc2lvbiRzdWJleHByZXNzaW9uJDFcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiB1bndyYXBcbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImFzdGVyaXNrbGVzc19leHByZXNzaW9uJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJzaW1wbGVfZXhwcmVzc2lvbl93aXRob3V0X2FzdGVyaXNrXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJhc3Rlcmlza2xlc3NfZXhwcmVzc2lvbiRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiYmV0d2Vlbl9wcmVkaWNhdGVcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImFzdGVyaXNrbGVzc19leHByZXNzaW9uJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJjb21tYVwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiYXN0ZXJpc2tsZXNzX2V4cHJlc3Npb24kc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImNvbW1lbnRcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImFzdGVyaXNrbGVzc19leHByZXNzaW9uXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImFzdGVyaXNrbGVzc19leHByZXNzaW9uJHN1YmV4cHJlc3Npb24kMVwiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IHVud3JhcFxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2ltcGxlX2V4cHJlc3Npb24kc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcInNpbXBsZV9leHByZXNzaW9uX3dpdGhvdXRfYXN0ZXJpc2tcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInNpbXBsZV9leHByZXNzaW9uJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJhc3Rlcmlza1wiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2ltcGxlX2V4cHJlc3Npb25cIixcbiAgICBcInN5bWJvbHNcIjogW1wic2ltcGxlX2V4cHJlc3Npb24kc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogdW53cmFwXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzaW1wbGVfZXhwcmVzc2lvbl93aXRob3V0X2FzdGVyaXNrJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJhcnJheV9zdWJzY3JpcHRcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInNpbXBsZV9leHByZXNzaW9uX3dpdGhvdXRfYXN0ZXJpc2skc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImZ1bmN0aW9uX2NhbGxcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInNpbXBsZV9leHByZXNzaW9uX3dpdGhvdXRfYXN0ZXJpc2skc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcInByb3BlcnR5X2FjY2Vzc1wiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2ltcGxlX2V4cHJlc3Npb25fd2l0aG91dF9hc3RlcmlzayRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wicGFyZW50aGVzaXNcIl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInNpbXBsZV9leHByZXNzaW9uX3dpdGhvdXRfYXN0ZXJpc2skc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImN1cmx5X2JyYWNlc1wiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2ltcGxlX2V4cHJlc3Npb25fd2l0aG91dF9hc3RlcmlzayRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wic3F1YXJlX2JyYWNrZXRzXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzaW1wbGVfZXhwcmVzc2lvbl93aXRob3V0X2FzdGVyaXNrJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJvcGVyYXRvclwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2ltcGxlX2V4cHJlc3Npb25fd2l0aG91dF9hc3RlcmlzayRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiaWRlbnRpZmllclwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic2ltcGxlX2V4cHJlc3Npb25fd2l0aG91dF9hc3RlcmlzayRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wicGFyYW1ldGVyXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzaW1wbGVfZXhwcmVzc2lvbl93aXRob3V0X2FzdGVyaXNrJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJsaXRlcmFsXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzaW1wbGVfZXhwcmVzc2lvbl93aXRob3V0X2FzdGVyaXNrJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJrZXl3b3JkXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzaW1wbGVfZXhwcmVzc2lvbl93aXRob3V0X2FzdGVyaXNrXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcInNpbXBsZV9leHByZXNzaW9uX3dpdGhvdXRfYXN0ZXJpc2skc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogdW53cmFwXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJhcnJheV9zdWJzY3JpcHRcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIkFSUkFZX0lERU5USUZJRVJcIikgPyB7XG4gICAgICB0eXBlOiBcIkFSUkFZX0lERU5USUZJRVJcIlxuICAgIH0gOiBBUlJBWV9JREVOVElGSUVSLCBcIl9cIiwgXCJzcXVhcmVfYnJhY2tldHNcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmMjEpIHtcbiAgICAgIHZhciBfcmVmMjIgPSBfc2xpY2VkVG9BcnJheShfcmVmMjEsIDMpLFxuICAgICAgICAgIGFycmF5VG9rZW4gPSBfcmVmMjJbMF0sXG4gICAgICAgICAgXyA9IF9yZWYyMlsxXSxcbiAgICAgICAgICBicmFja2V0cyA9IF9yZWYyMlsyXTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5hcnJheV9zdWJzY3JpcHQsXG4gICAgICAgIGFycmF5OiBhZGRUcmFpbGluZ0NvbW1lbnRzKHtcbiAgICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLmlkZW50aWZpZXIsXG4gICAgICAgICAgdGV4dDogYXJyYXlUb2tlbi50ZXh0XG4gICAgICAgIH0sIF8pLFxuICAgICAgICBwYXJlbnRoZXNpczogYnJhY2tldHNcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiYXJyYXlfc3Vic2NyaXB0XCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJBUlJBWV9LRVlXT1JEXCIpID8ge1xuICAgICAgdHlwZTogXCJBUlJBWV9LRVlXT1JEXCJcbiAgICB9IDogQVJSQVlfS0VZV09SRCwgXCJfXCIsIFwic3F1YXJlX2JyYWNrZXRzXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjIzKSB7XG4gICAgICB2YXIgX3JlZjI0ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjIzLCAzKSxcbiAgICAgICAgICBhcnJheVRva2VuID0gX3JlZjI0WzBdLFxuICAgICAgICAgIF8gPSBfcmVmMjRbMV0sXG4gICAgICAgICAgYnJhY2tldHMgPSBfcmVmMjRbMl07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUuYXJyYXlfc3Vic2NyaXB0LFxuICAgICAgICBhcnJheTogYWRkVHJhaWxpbmdDb21tZW50cyh0b0tleXdvcmROb2RlKGFycmF5VG9rZW4pLCBfKSxcbiAgICAgICAgcGFyZW50aGVzaXM6IGJyYWNrZXRzXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImZ1bmN0aW9uX2NhbGxcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIlJFU0VSVkVEX0ZVTkNUSU9OX05BTUVcIikgPyB7XG4gICAgICB0eXBlOiBcIlJFU0VSVkVEX0ZVTkNUSU9OX05BTUVcIlxuICAgIH0gOiBSRVNFUlZFRF9GVU5DVElPTl9OQU1FLCBcIl9cIiwgXCJwYXJlbnRoZXNpc1wiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKF9yZWYyNSkge1xuICAgICAgdmFyIF9yZWYyNiA9IF9zbGljZWRUb0FycmF5KF9yZWYyNSwgMyksXG4gICAgICAgICAgbmFtZVRva2VuID0gX3JlZjI2WzBdLFxuICAgICAgICAgIF8gPSBfcmVmMjZbMV0sXG4gICAgICAgICAgcGFyZW5zID0gX3JlZjI2WzJdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLmZ1bmN0aW9uX2NhbGwsXG4gICAgICAgIG5hbWU6IGFkZFRyYWlsaW5nQ29tbWVudHModG9LZXl3b3JkTm9kZShuYW1lVG9rZW4pLCBfKSxcbiAgICAgICAgcGFyZW50aGVzaXM6IHBhcmVuc1xuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJwYXJlbnRoZXNpc1wiLFxuICAgIFwic3ltYm9sc1wiOiBbe1xuICAgICAgXCJsaXRlcmFsXCI6IFwiKFwiXG4gICAgfSwgXCJleHByZXNzaW9uc19vcl9jbGF1c2VzXCIsIHtcbiAgICAgIFwibGl0ZXJhbFwiOiBcIilcIlxuICAgIH1dLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjI3KSB7XG4gICAgICB2YXIgX3JlZjI4ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjI3LCAzKSxcbiAgICAgICAgICBvcGVuID0gX3JlZjI4WzBdLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3JlZjI4WzFdLFxuICAgICAgICAgIGNsb3NlID0gX3JlZjI4WzJdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLnBhcmVudGhlc2lzLFxuICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW4sXG4gICAgICAgIG9wZW5QYXJlbjogXCIoXCIsXG4gICAgICAgIGNsb3NlUGFyZW46IFwiKVwiXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImN1cmx5X2JyYWNlcyRlYm5mJDFcIixcbiAgICBcInN5bWJvbHNcIjogW11cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImN1cmx5X2JyYWNlcyRlYm5mJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiY3VybHlfYnJhY2VzJGVibmYkMVwiLCBcImV4cHJlc3Npb25cIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkKSB7XG4gICAgICByZXR1cm4gZFswXS5jb25jYXQoW2RbMV1dKTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJjdXJseV9icmFjZXNcIixcbiAgICBcInN5bWJvbHNcIjogW3tcbiAgICAgIFwibGl0ZXJhbFwiOiBcIntcIlxuICAgIH0sIFwiY3VybHlfYnJhY2VzJGVibmYkMVwiLCB7XG4gICAgICBcImxpdGVyYWxcIjogXCJ9XCJcbiAgICB9XSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKF9yZWYyOSkge1xuICAgICAgdmFyIF9yZWYzMCA9IF9zbGljZWRUb0FycmF5KF9yZWYyOSwgMyksXG4gICAgICAgICAgb3BlbiA9IF9yZWYzMFswXSxcbiAgICAgICAgICBjaGlsZHJlbiA9IF9yZWYzMFsxXSxcbiAgICAgICAgICBjbG9zZSA9IF9yZWYzMFsyXTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5wYXJlbnRoZXNpcyxcbiAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgICAgICBvcGVuUGFyZW46IFwie1wiLFxuICAgICAgICBjbG9zZVBhcmVuOiBcIn1cIlxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzcXVhcmVfYnJhY2tldHMkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJzcXVhcmVfYnJhY2tldHMkZWJuZiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcInNxdWFyZV9icmFja2V0cyRlYm5mJDFcIiwgXCJleHByZXNzaW9uXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoZCkge1xuICAgICAgcmV0dXJuIGRbMF0uY29uY2F0KFtkWzFdXSk7XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwic3F1YXJlX2JyYWNrZXRzXCIsXG4gICAgXCJzeW1ib2xzXCI6IFt7XG4gICAgICBcImxpdGVyYWxcIjogXCJbXCJcbiAgICB9LCBcInNxdWFyZV9icmFja2V0cyRlYm5mJDFcIiwge1xuICAgICAgXCJsaXRlcmFsXCI6IFwiXVwiXG4gICAgfV0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmMzEpIHtcbiAgICAgIHZhciBfcmVmMzIgPSBfc2xpY2VkVG9BcnJheShfcmVmMzEsIDMpLFxuICAgICAgICAgIG9wZW4gPSBfcmVmMzJbMF0sXG4gICAgICAgICAgY2hpbGRyZW4gPSBfcmVmMzJbMV0sXG4gICAgICAgICAgY2xvc2UgPSBfcmVmMzJbMl07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUucGFyZW50aGVzaXMsXG4gICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICAgICAgb3BlblBhcmVuOiBcIltcIixcbiAgICAgICAgY2xvc2VQYXJlbjogXCJdXCJcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwicHJvcGVydHlfYWNjZXNzJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJpZGVudGlmaWVyXCJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJwcm9wZXJ0eV9hY2Nlc3Mkc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImFycmF5X3N1YnNjcmlwdFwiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwicHJvcGVydHlfYWNjZXNzJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJhbGxfY29sdW1uc19hc3Rlcmlza1wiXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwicHJvcGVydHlfYWNjZXNzXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcInNpbXBsZV9leHByZXNzaW9uXCIsIFwiX1wiLCBsZXhlci5oYXMoXCJET1RcIikgPyB7XG4gICAgICB0eXBlOiBcIkRPVFwiXG4gICAgfSA6IERPVCwgXCJfXCIsIFwicHJvcGVydHlfYWNjZXNzJHN1YmV4cHJlc3Npb24kMVwiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IC8vIEFsbG93aW5nIHByb3BlcnR5IHRvIGJlIDxhcnJheV9zdWJzY3JpcHQ+IGlzIGN1cnJlbnRseSBhIGhhY2suXG4gICAgLy8gQSBiZXR0ZXIgd2F5IHdvdWxkIGJlIHRvIGFsbG93IDxwcm9wZXJ0eV9hY2Nlc3M+IG9uIHRoZSBsZWZ0IHNpZGUgb2YgYXJyYXlfc3Vic2NyaXB0LFxuICAgIC8vIGJ1dCB3ZSBjdXJyZW50bHkgY2FuJ3QgZG8gdGhhdCBiZWNhdXNlIG9mIGFub3RoZXIgaGFjayB0aGF0IHJlcXVpcmVzXG4gICAgLy8gJUFSUkFZX0lERU5USUZJRVIgb24gdGhlIGxlZnQgc2lkZSBvZiA8YXJyYXlfc3Vic2NyaXB0Pi5cbiAgICBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmMzMpIHtcbiAgICAgIHZhciBfcmVmMzQgPSBfc2xpY2VkVG9BcnJheShfcmVmMzMsIDUpLFxuICAgICAgICAgIG9iamVjdCA9IF9yZWYzNFswXSxcbiAgICAgICAgICBfMSA9IF9yZWYzNFsxXSxcbiAgICAgICAgICBkb3QgPSBfcmVmMzRbMl0sXG4gICAgICAgICAgXzIgPSBfcmVmMzRbM10sXG4gICAgICAgICAgX3JlZjM0JCA9IF9zbGljZWRUb0FycmF5KF9yZWYzNFs0XSwgMSksXG4gICAgICAgICAgcHJvcGVydHkgPSBfcmVmMzQkWzBdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLnByb3BlcnR5X2FjY2VzcyxcbiAgICAgICAgb2JqZWN0OiBhZGRUcmFpbGluZ0NvbW1lbnRzKG9iamVjdCwgXzEpLFxuICAgICAgICBwcm9wZXJ0eTogYWRkTGVhZGluZ0NvbW1lbnRzKHByb3BlcnR5LCBfMilcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiYmV0d2Vlbl9wcmVkaWNhdGVcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIkJFVFdFRU5cIikgPyB7XG4gICAgICB0eXBlOiBcIkJFVFdFRU5cIlxuICAgIH0gOiBCRVRXRUVOLCBcIl9cIiwgXCJzaW1wbGVfZXhwcmVzc2lvblwiLCBcIl9cIiwgbGV4ZXIuaGFzKFwiQU5EXCIpID8ge1xuICAgICAgdHlwZTogXCJBTkRcIlxuICAgIH0gOiBBTkQsIFwiX1wiLCBcInNpbXBsZV9leHByZXNzaW9uXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjM1KSB7XG4gICAgICB2YXIgX3JlZjM2ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjM1LCA3KSxcbiAgICAgICAgICBiZXR3ZWVuVG9rZW4gPSBfcmVmMzZbMF0sXG4gICAgICAgICAgXzEgPSBfcmVmMzZbMV0sXG4gICAgICAgICAgZXhwcjEgPSBfcmVmMzZbMl0sXG4gICAgICAgICAgXzIgPSBfcmVmMzZbM10sXG4gICAgICAgICAgYW5kVG9rZW4gPSBfcmVmMzZbNF0sXG4gICAgICAgICAgXzMgPSBfcmVmMzZbNV0sXG4gICAgICAgICAgZXhwcjIgPSBfcmVmMzZbNl07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUuYmV0d2Vlbl9wcmVkaWNhdGUsXG4gICAgICAgIGJldHdlZW46IHRvS2V5d29yZE5vZGUoYmV0d2VlblRva2VuKSxcbiAgICAgICAgZXhwcjE6IFthZGRUcmFpbGluZ0NvbW1lbnRzKGFkZExlYWRpbmdDb21tZW50cyhleHByMSwgXzEpLCBfMildLFxuICAgICAgICBhbmQ6IHRvS2V5d29yZE5vZGUoYW5kVG9rZW4pLFxuICAgICAgICBleHByMjogW2FkZExlYWRpbmdDb21tZW50cyhleHByMiwgXzMpXVxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJjb21tYSRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIkNPTU1BXCIpID8ge1xuICAgICAgdHlwZTogXCJDT01NQVwiXG4gICAgfSA6IENPTU1BXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiY29tbWFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiY29tbWEkc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjM3KSB7XG4gICAgICB2YXIgX3JlZjM4ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjM3LCAxKSxcbiAgICAgICAgICBfcmVmMzgkID0gX3NsaWNlZFRvQXJyYXkoX3JlZjM4WzBdLCAxKSxcbiAgICAgICAgICB0b2tlbiA9IF9yZWYzOCRbMF07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUuY29tbWFcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiYXN0ZXJpc2skc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJBU1RFUklTS1wiKSA/IHtcbiAgICAgIHR5cGU6IFwiQVNURVJJU0tcIlxuICAgIH0gOiBBU1RFUklTS11cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcImFzdGVyaXNrXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImFzdGVyaXNrJHN1YmV4cHJlc3Npb24kMVwiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKF9yZWYzOSkge1xuICAgICAgdmFyIF9yZWY0MCA9IF9zbGljZWRUb0FycmF5KF9yZWYzOSwgMSksXG4gICAgICAgICAgX3JlZjQwJCA9IF9zbGljZWRUb0FycmF5KF9yZWY0MFswXSwgMSksXG4gICAgICAgICAgdG9rZW4gPSBfcmVmNDAkWzBdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLm9wZXJhdG9yLFxuICAgICAgICB0ZXh0OiB0b2tlbi50ZXh0XG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcIm9wZXJhdG9yJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiT1BFUkFUT1JcIikgPyB7XG4gICAgICB0eXBlOiBcIk9QRVJBVE9SXCJcbiAgICB9IDogT1BFUkFUT1JdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJvcGVyYXRvclwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJvcGVyYXRvciRzdWJleHByZXNzaW9uJDFcIl0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmNDEpIHtcbiAgICAgIHZhciBfcmVmNDIgPSBfc2xpY2VkVG9BcnJheShfcmVmNDEsIDEpLFxuICAgICAgICAgIF9yZWY0MiQgPSBfc2xpY2VkVG9BcnJheShfcmVmNDJbMF0sIDEpLFxuICAgICAgICAgIHRva2VuID0gX3JlZjQyJFswXTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogX2FzdC5Ob2RlVHlwZS5vcGVyYXRvcixcbiAgICAgICAgdGV4dDogdG9rZW4udGV4dFxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJpZGVudGlmaWVyJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiSURFTlRJRklFUlwiKSA/IHtcbiAgICAgIHR5cGU6IFwiSURFTlRJRklFUlwiXG4gICAgfSA6IElERU5USUZJRVJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJpZGVudGlmaWVyJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiUVVPVEVEX0lERU5USUZJRVJcIikgPyB7XG4gICAgICB0eXBlOiBcIlFVT1RFRF9JREVOVElGSUVSXCJcbiAgICB9IDogUVVPVEVEX0lERU5USUZJRVJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJpZGVudGlmaWVyJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiVkFSSUFCTEVcIikgPyB7XG4gICAgICB0eXBlOiBcIlZBUklBQkxFXCJcbiAgICB9IDogVkFSSUFCTEVdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJpZGVudGlmaWVyXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImlkZW50aWZpZXIkc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjQzKSB7XG4gICAgICB2YXIgX3JlZjQ0ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQzLCAxKSxcbiAgICAgICAgICBfcmVmNDQkID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQ0WzBdLCAxKSxcbiAgICAgICAgICB0b2tlbiA9IF9yZWY0NCRbMF07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUuaWRlbnRpZmllcixcbiAgICAgICAgdGV4dDogdG9rZW4udGV4dFxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJwYXJhbWV0ZXIkc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJOQU1FRF9QQVJBTUVURVJcIikgPyB7XG4gICAgICB0eXBlOiBcIk5BTUVEX1BBUkFNRVRFUlwiXG4gICAgfSA6IE5BTUVEX1BBUkFNRVRFUl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInBhcmFtZXRlciRzdWJleHByZXNzaW9uJDFcIixcbiAgICBcInN5bWJvbHNcIjogW2xleGVyLmhhcyhcIlFVT1RFRF9QQVJBTUVURVJcIikgPyB7XG4gICAgICB0eXBlOiBcIlFVT1RFRF9QQVJBTUVURVJcIlxuICAgIH0gOiBRVU9URURfUEFSQU1FVEVSXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwicGFyYW1ldGVyJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiTlVNQkVSRURfUEFSQU1FVEVSXCIpID8ge1xuICAgICAgdHlwZTogXCJOVU1CRVJFRF9QQVJBTUVURVJcIlxuICAgIH0gOiBOVU1CRVJFRF9QQVJBTUVURVJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJwYXJhbWV0ZXIkc3ViZXhwcmVzc2lvbiQxXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJQT1NJVElPTkFMX1BBUkFNRVRFUlwiKSA/IHtcbiAgICAgIHR5cGU6IFwiUE9TSVRJT05BTF9QQVJBTUVURVJcIlxuICAgIH0gOiBQT1NJVElPTkFMX1BBUkFNRVRFUl1cbiAgfSwge1xuICAgIFwibmFtZVwiOiBcInBhcmFtZXRlclwiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJwYXJhbWV0ZXIkc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjQ1KSB7XG4gICAgICB2YXIgX3JlZjQ2ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQ1LCAxKSxcbiAgICAgICAgICBfcmVmNDYkID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQ2WzBdLCAxKSxcbiAgICAgICAgICB0b2tlbiA9IF9yZWY0NiRbMF07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUucGFyYW1ldGVyLFxuICAgICAgICBrZXk6IHRva2VuLmtleSxcbiAgICAgICAgdGV4dDogdG9rZW4udGV4dFxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJsaXRlcmFsJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiTlVNQkVSXCIpID8ge1xuICAgICAgdHlwZTogXCJOVU1CRVJcIlxuICAgIH0gOiBOVU1CRVJdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJsaXRlcmFsJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiU1RSSU5HXCIpID8ge1xuICAgICAgdHlwZTogXCJTVFJJTkdcIlxuICAgIH0gOiBTVFJJTkddXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJsaXRlcmFsXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImxpdGVyYWwkc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjQ3KSB7XG4gICAgICB2YXIgX3JlZjQ4ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQ3LCAxKSxcbiAgICAgICAgICBfcmVmNDgkID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQ4WzBdLCAxKSxcbiAgICAgICAgICB0b2tlbiA9IF9yZWY0OCRbMF07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IF9hc3QuTm9kZVR5cGUubGl0ZXJhbCxcbiAgICAgICAgdGV4dDogdG9rZW4udGV4dFxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiUkVTRVJWRURfS0VZV09SRFwiKSA/IHtcbiAgICAgIHR5cGU6IFwiUkVTRVJWRURfS0VZV09SRFwiXG4gICAgfSA6IFJFU0VSVkVEX0tFWVdPUkRdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiUkVTRVJWRURfUEhSQVNFXCIpID8ge1xuICAgICAgdHlwZTogXCJSRVNFUlZFRF9QSFJBU0VcIlxuICAgIH0gOiBSRVNFUlZFRF9QSFJBU0VdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiUkVTRVJWRURfREVQRU5ERU5UX0NMQVVTRVwiKSA/IHtcbiAgICAgIHR5cGU6IFwiUkVTRVJWRURfREVQRU5ERU5UX0NMQVVTRVwiXG4gICAgfSA6IFJFU0VSVkVEX0RFUEVOREVOVF9DTEFVU0VdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiUkVTRVJWRURfSk9JTlwiKSA/IHtcbiAgICAgIHR5cGU6IFwiUkVTRVJWRURfSk9JTlwiXG4gICAgfSA6IFJFU0VSVkVEX0pPSU5dXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiQ0FTRVwiKSA/IHtcbiAgICAgIHR5cGU6IFwiQ0FTRVwiXG4gICAgfSA6IENBU0VdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiRU5EXCIpID8ge1xuICAgICAgdHlwZTogXCJFTkRcIlxuICAgIH0gOiBFTkRdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiQU5EXCIpID8ge1xuICAgICAgdHlwZTogXCJBTkRcIlxuICAgIH0gOiBBTkRdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiT1JcIikgPyB7XG4gICAgICB0eXBlOiBcIk9SXCJcbiAgICB9IDogT1JdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkJHN1YmV4cHJlc3Npb24kMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbbGV4ZXIuaGFzKFwiWE9SXCIpID8ge1xuICAgICAgdHlwZTogXCJYT1JcIlxuICAgIH0gOiBYT1JdXG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJrZXl3b3JkXCIsXG4gICAgXCJzeW1ib2xzXCI6IFtcImtleXdvcmQkc3ViZXhwcmVzc2lvbiQxXCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoX3JlZjQ5KSB7XG4gICAgICB2YXIgX3JlZjUwID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQ5LCAxKSxcbiAgICAgICAgICBfcmVmNTAkID0gX3NsaWNlZFRvQXJyYXkoX3JlZjUwWzBdLCAxKSxcbiAgICAgICAgICB0b2tlbiA9IF9yZWY1MCRbMF07XG5cbiAgICAgIHJldHVybiB0b0tleXdvcmROb2RlKHRva2VuKTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJfJGVibmYkMVwiLFxuICAgIFwic3ltYm9sc1wiOiBbXVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiXyRlYm5mJDFcIixcbiAgICBcInN5bWJvbHNcIjogW1wiXyRlYm5mJDFcIiwgXCJjb21tZW50XCJdLFxuICAgIFwicG9zdHByb2Nlc3NcIjogZnVuY3Rpb24gcG9zdHByb2Nlc3MoZCkge1xuICAgICAgcmV0dXJuIGRbMF0uY29uY2F0KFtkWzFdXSk7XG4gICAgfVxuICB9LCB7XG4gICAgXCJuYW1lXCI6IFwiX1wiLFxuICAgIFwic3ltYm9sc1wiOiBbXCJfJGVibmYkMVwiXSxcbiAgICBcInBvc3Rwcm9jZXNzXCI6IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKF9yZWY1MSkge1xuICAgICAgdmFyIF9yZWY1MiA9IF9zbGljZWRUb0FycmF5KF9yZWY1MSwgMSksXG4gICAgICAgICAgY29tbWVudHMgPSBfcmVmNTJbMF07XG5cbiAgICAgIHJldHVybiBjb21tZW50cztcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJjb21tZW50XCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJMSU5FX0NPTU1FTlRcIikgPyB7XG4gICAgICB0eXBlOiBcIkxJTkVfQ09NTUVOVFwiXG4gICAgfSA6IExJTkVfQ09NTUVOVF0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmNTMpIHtcbiAgICAgIHZhciBfcmVmNTQgPSBfc2xpY2VkVG9BcnJheShfcmVmNTMsIDEpLFxuICAgICAgICAgIHRva2VuID0gX3JlZjU0WzBdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLmxpbmVfY29tbWVudCxcbiAgICAgICAgdGV4dDogdG9rZW4udGV4dCxcbiAgICAgICAgcHJlY2VkaW5nV2hpdGVzcGFjZTogdG9rZW4ucHJlY2VkaW5nV2hpdGVzcGFjZVxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBcIm5hbWVcIjogXCJjb21tZW50XCIsXG4gICAgXCJzeW1ib2xzXCI6IFtsZXhlci5oYXMoXCJCTE9DS19DT01NRU5UXCIpID8ge1xuICAgICAgdHlwZTogXCJCTE9DS19DT01NRU5UXCJcbiAgICB9IDogQkxPQ0tfQ09NTUVOVF0sXG4gICAgXCJwb3N0cHJvY2Vzc1wiOiBmdW5jdGlvbiBwb3N0cHJvY2VzcyhfcmVmNTUpIHtcbiAgICAgIHZhciBfcmVmNTYgPSBfc2xpY2VkVG9BcnJheShfcmVmNTUsIDEpLFxuICAgICAgICAgIHRva2VuID0gX3JlZjU2WzBdO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBfYXN0Lk5vZGVUeXBlLmJsb2NrX2NvbW1lbnQsXG4gICAgICAgIHRleHQ6IHRva2VuLnRleHRcbiAgICAgIH07XG4gICAgfVxuICB9XSxcbiAgUGFyc2VyU3RhcnQ6IFwibWFpblwiXG59O1xudmFyIF9kZWZhdWx0ID0gZ3JhbW1hcjtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyYW1tYXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/parser/grammar.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/sqlFormatter.js":
/*!*********************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/sqlFormatter.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.supportedDialects = exports.formatters = exports.format = exports.ConfigError = void 0;\n\nvar _bigquery = _interopRequireDefault(__webpack_require__(/*! ./languages/bigquery/bigquery.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.formatter.js\"));\n\nvar _db = _interopRequireDefault(__webpack_require__(/*! ./languages/db2/db2.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/db2/db2.formatter.js\"));\n\nvar _hive = _interopRequireDefault(__webpack_require__(/*! ./languages/hive/hive.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/hive/hive.formatter.js\"));\n\nvar _mariadb = _interopRequireDefault(__webpack_require__(/*! ./languages/mariadb/mariadb.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.formatter.js\"));\n\nvar _mysql = _interopRequireDefault(__webpack_require__(/*! ./languages/mysql/mysql.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/mysql/mysql.formatter.js\"));\n\nvar _n1ql = _interopRequireDefault(__webpack_require__(/*! ./languages/n1ql/n1ql.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.formatter.js\"));\n\nvar _plsql = _interopRequireDefault(__webpack_require__(/*! ./languages/plsql/plsql.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/plsql/plsql.formatter.js\"));\n\nvar _postgresql = _interopRequireDefault(__webpack_require__(/*! ./languages/postgresql/postgresql.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.formatter.js\"));\n\nvar _redshift = _interopRequireDefault(__webpack_require__(/*! ./languages/redshift/redshift.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/redshift/redshift.formatter.js\"));\n\nvar _spark = _interopRequireDefault(__webpack_require__(/*! ./languages/spark/spark.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/spark/spark.formatter.js\"));\n\nvar _sqlite = _interopRequireDefault(__webpack_require__(/*! ./languages/sqlite/sqlite.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.formatter.js\"));\n\nvar _sql = _interopRequireDefault(__webpack_require__(/*! ./languages/sql/sql.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/sql/sql.formatter.js\"));\n\nvar _trino = _interopRequireDefault(__webpack_require__(/*! ./languages/trino/trino.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/trino/trino.formatter.js\"));\n\nvar _transactsql = _interopRequireDefault(__webpack_require__(/*! ./languages/transactsql/transactsql.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.formatter.js\"));\n\nvar _singlestoredb = _interopRequireDefault(__webpack_require__(/*! ./languages/singlestoredb/singlestoredb.formatter */ \"../../../../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.formatter.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar formatters = {\n  bigquery: _bigquery[\"default\"],\n  db2: _db[\"default\"],\n  hive: _hive[\"default\"],\n  mariadb: _mariadb[\"default\"],\n  mysql: _mysql[\"default\"],\n  n1ql: _n1ql[\"default\"],\n  plsql: _plsql[\"default\"],\n  postgresql: _postgresql[\"default\"],\n  redshift: _redshift[\"default\"],\n  singlestoredb: _singlestoredb[\"default\"],\n  spark: _spark[\"default\"],\n  sql: _sql[\"default\"],\n  sqlite: _sqlite[\"default\"],\n  transactsql: _transactsql[\"default\"],\n  trino: _trino[\"default\"],\n  tsql: _transactsql[\"default\"] // alias for transactsql\n\n};\nexports.formatters = formatters;\nvar supportedDialects = Object.keys(formatters);\nexports.supportedDialects = supportedDialects;\nvar defaultOptions = {\n  language: 'sql',\n  tabWidth: 2,\n  useTabs: false,\n  keywordCase: 'preserve',\n  indentStyle: 'standard',\n  logicalOperatorNewline: 'before',\n  tabulateAlias: false,\n  commaPosition: 'after',\n  expressionWidth: 50,\n  linesBetweenQueries: 1,\n  denseOperators: false,\n  newlineBeforeSemicolon: false\n};\n/**\n * Format whitespace in a query to make it easier to read.\n *\n * @param {string} query - input SQL query string\n * @param {FormatOptions} cfg Configuration options (see docs in README)\n * @return {string} formatted query\n */\n\nvar format = function format(query) {\n  var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof query !== 'string') {\n    throw new Error('Invalid query argument. Expected string, instead got ' + _typeof(query));\n  }\n\n  var options = validateConfig(_objectSpread(_objectSpread({}, defaultOptions), cfg));\n  var FormatterCls = typeof options.language === 'string' ? formatters[options.language] : options.language;\n  return new FormatterCls(options).format(query);\n};\n\nexports.format = format;\n\nvar ConfigError = /*#__PURE__*/function (_Error) {\n  _inherits(ConfigError, _Error);\n\n  var _super = _createSuper(ConfigError);\n\n  function ConfigError() {\n    _classCallCheck(this, ConfigError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(ConfigError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.ConfigError = ConfigError;\n\nfunction validateConfig(cfg) {\n  if (typeof cfg.language === 'string' && !supportedDialects.includes(cfg.language)) {\n    throw new ConfigError(\"Unsupported SQL dialect: \".concat(cfg.language));\n  }\n\n  if ('multilineLists' in cfg) {\n    throw new ConfigError('multilineLists config is no more supported.');\n  }\n\n  if ('newlineBeforeOpenParen' in cfg) {\n    throw new ConfigError('newlineBeforeOpenParen config is no more supported.');\n  }\n\n  if ('newlineBeforeCloseParen' in cfg) {\n    throw new ConfigError('newlineBeforeCloseParen config is no more supported.');\n  }\n\n  if ('aliasAs' in cfg) {\n    throw new ConfigError('aliasAs config is no more supported.');\n  }\n\n  if (cfg.expressionWidth <= 0) {\n    throw new ConfigError(\"expressionWidth config must be positive number. Received \".concat(cfg.expressionWidth, \" instead.\"));\n  }\n\n  if (cfg.commaPosition === 'before' && cfg.useTabs) {\n    throw new ConfigError('commaPosition: before does not work when tabs are used for indentation.');\n  }\n\n  if (cfg.params && !validateParams(cfg.params)) {\n    // eslint-disable-next-line no-console\n    console.warn('WARNING: All \"params\" option values should be strings.');\n  }\n\n  return cfg;\n}\n\nfunction validateParams(params) {\n  var paramValues = params instanceof Array ? params : Object.values(params);\n  return paramValues.every(function (p) {\n    return typeof p === 'string';\n  });\n}\n//# sourceMappingURL=sqlFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/sqlFormatter.js\n");

/***/ }),

/***/ "../../../../../node_modules/sql-formatter/lib/utils.js":
/*!**************************************************************!*\
  !*** ../../../../../node_modules/sql-formatter/lib/utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.sum = exports.sortByLengthDesc = exports.maxLength = exports.last = exports.flatKeywordList = exports.equalizeWhitespace = exports.dedupe = void 0;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar dedupe = function dedupe(arr) {\n  return _toConsumableArray(new Set(arr));\n}; // Last element from array\n\n\nexports.dedupe = dedupe;\n\nvar last = function last(arr) {\n  return arr[arr.length - 1];\n}; // Sorts strings by length, so that longer ones are first\n// Also sorts alphabetically after sorting by length.\n\n\nexports.last = last;\n\nvar sortByLengthDesc = function sortByLengthDesc(strings) {\n  return strings.sort(function (a, b) {\n    return b.length - a.length || a.localeCompare(b);\n  });\n};\n/** Get length of longest string in list of strings */\n\n\nexports.sortByLengthDesc = sortByLengthDesc;\n\nvar maxLength = function maxLength(strings) {\n  return strings.reduce(function (max, cur) {\n    return Math.max(max, cur.length);\n  }, 0);\n}; // replaces long whitespace sequences with just one space\n\n\nexports.maxLength = maxLength;\n\nvar equalizeWhitespace = function equalizeWhitespace(s) {\n  return s.replace(/[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+/g, ' ');\n}; // Adds up all values in array\n\n\nexports.equalizeWhitespace = equalizeWhitespace;\n\nvar sum = function sum(arr) {\n  var total = 0;\n\n  var _iterator = _createForOfIteratorHelper(arr),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var x = _step.value;\n      total += x;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return total;\n}; // Used for flattening keyword lists\n\n\nexports.sum = sum;\n\nvar flatKeywordList = function flatKeywordList(obj) {\n  return dedupe(Object.values(obj).flat());\n}; // Given a type and a field name, returns a type where this field is optional\n//\n// For example, these two type definitions are equivalent:\n//\n//   type Foo = Optional<{ foo: string, bar: number }, 'foo'>;\n//   type Foo = { foo?: string, bar: number };\n//\n\n\nexports.flatKeywordList = flatKeywordList;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmMvZGVidWdnZXIvZGVidWdnZXIuanMvLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3V0aWxzLmpzPzU1NGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnN1bSA9IGV4cG9ydHMuc29ydEJ5TGVuZ3RoRGVzYyA9IGV4cG9ydHMubWF4TGVuZ3RoID0gZXhwb3J0cy5sYXN0ID0gZXhwb3J0cy5mbGF0S2V5d29yZExpc3QgPSBleHBvcnRzLmVxdWFsaXplV2hpdGVzcGFjZSA9IGV4cG9ydHMuZGVkdXBlID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihvLCBhbGxvd0FycmF5TGlrZSkgeyB2YXIgaXQgPSB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXSB8fCBvW1wiQEBpdGVyYXRvclwiXTsgaWYgKCFpdCkgeyBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobykpIHx8IGFsbG93QXJyYXlMaWtlICYmIG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSB7IGlmIChpdCkgbyA9IGl0OyB2YXIgaSA9IDA7IHZhciBGID0gZnVuY3Rpb24gRigpIHt9OyByZXR1cm4geyBzOiBGLCBuOiBmdW5jdGlvbiBuKCkgeyBpZiAoaSA+PSBvLmxlbmd0aCkgcmV0dXJuIHsgZG9uZTogdHJ1ZSB9OyByZXR1cm4geyBkb25lOiBmYWxzZSwgdmFsdWU6IG9baSsrXSB9OyB9LCBlOiBmdW5jdGlvbiBlKF9lKSB7IHRocm93IF9lOyB9LCBmOiBGIH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9IHZhciBub3JtYWxDb21wbGV0aW9uID0gdHJ1ZSwgZGlkRXJyID0gZmFsc2UsIGVycjsgcmV0dXJuIHsgczogZnVuY3Rpb24gcygpIHsgaXQgPSBpdC5jYWxsKG8pOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgc3RlcCA9IGl0Lm5leHQoKTsgbm9ybWFsQ29tcGxldGlvbiA9IHN0ZXAuZG9uZTsgcmV0dXJuIHN0ZXA7IH0sIGU6IGZ1bmN0aW9uIGUoX2UyKSB7IGRpZEVyciA9IHRydWU7IGVyciA9IF9lMjsgfSwgZjogZnVuY3Rpb24gZigpIHsgdHJ5IHsgaWYgKCFub3JtYWxDb21wbGV0aW9uICYmIGl0W1wicmV0dXJuXCJdICE9IG51bGwpIGl0W1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChkaWRFcnIpIHRocm93IGVycjsgfSB9IH07IH1cblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG52YXIgZGVkdXBlID0gZnVuY3Rpb24gZGVkdXBlKGFycikge1xuICByZXR1cm4gX3RvQ29uc3VtYWJsZUFycmF5KG5ldyBTZXQoYXJyKSk7XG59OyAvLyBMYXN0IGVsZW1lbnQgZnJvbSBhcnJheVxuXG5cbmV4cG9ydHMuZGVkdXBlID0gZGVkdXBlO1xuXG52YXIgbGFzdCA9IGZ1bmN0aW9uIGxhc3QoYXJyKSB7XG4gIHJldHVybiBhcnJbYXJyLmxlbmd0aCAtIDFdO1xufTsgLy8gU29ydHMgc3RyaW5ncyBieSBsZW5ndGgsIHNvIHRoYXQgbG9uZ2VyIG9uZXMgYXJlIGZpcnN0XG4vLyBBbHNvIHNvcnRzIGFscGhhYmV0aWNhbGx5IGFmdGVyIHNvcnRpbmcgYnkgbGVuZ3RoLlxuXG5cbmV4cG9ydHMubGFzdCA9IGxhc3Q7XG5cbnZhciBzb3J0QnlMZW5ndGhEZXNjID0gZnVuY3Rpb24gc29ydEJ5TGVuZ3RoRGVzYyhzdHJpbmdzKSB7XG4gIHJldHVybiBzdHJpbmdzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gYi5sZW5ndGggLSBhLmxlbmd0aCB8fCBhLmxvY2FsZUNvbXBhcmUoYik7XG4gIH0pO1xufTtcbi8qKiBHZXQgbGVuZ3RoIG9mIGxvbmdlc3Qgc3RyaW5nIGluIGxpc3Qgb2Ygc3RyaW5ncyAqL1xuXG5cbmV4cG9ydHMuc29ydEJ5TGVuZ3RoRGVzYyA9IHNvcnRCeUxlbmd0aERlc2M7XG5cbnZhciBtYXhMZW5ndGggPSBmdW5jdGlvbiBtYXhMZW5ndGgoc3RyaW5ncykge1xuICByZXR1cm4gc3RyaW5ncy5yZWR1Y2UoZnVuY3Rpb24gKG1heCwgY3VyKSB7XG4gICAgcmV0dXJuIE1hdGgubWF4KG1heCwgY3VyLmxlbmd0aCk7XG4gIH0sIDApO1xufTsgLy8gcmVwbGFjZXMgbG9uZyB3aGl0ZXNwYWNlIHNlcXVlbmNlcyB3aXRoIGp1c3Qgb25lIHNwYWNlXG5cblxuZXhwb3J0cy5tYXhMZW5ndGggPSBtYXhMZW5ndGg7XG5cbnZhciBlcXVhbGl6ZVdoaXRlc3BhY2UgPSBmdW5jdGlvbiBlcXVhbGl6ZVdoaXRlc3BhY2Uocykge1xuICByZXR1cm4gcy5yZXBsYWNlKC9bXFx0LVxcciBcXHhBMFxcdTE2ODBcXHUyMDAwLVxcdTIwMEFcXHUyMDI4XFx1MjAyOVxcdTIwMkZcXHUyMDVGXFx1MzAwMFxcdUZFRkZdKy9nLCAnICcpO1xufTsgLy8gQWRkcyB1cCBhbGwgdmFsdWVzIGluIGFycmF5XG5cblxuZXhwb3J0cy5lcXVhbGl6ZVdoaXRlc3BhY2UgPSBlcXVhbGl6ZVdoaXRlc3BhY2U7XG5cbnZhciBzdW0gPSBmdW5jdGlvbiBzdW0oYXJyKSB7XG4gIHZhciB0b3RhbCA9IDA7XG5cbiAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGFyciksXG4gICAgICBfc3RlcDtcblxuICB0cnkge1xuICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7XG4gICAgICB2YXIgeCA9IF9zdGVwLnZhbHVlO1xuICAgICAgdG90YWwgKz0geDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9pdGVyYXRvci5lKGVycik7XG4gIH0gZmluYWxseSB7XG4gICAgX2l0ZXJhdG9yLmYoKTtcbiAgfVxuXG4gIHJldHVybiB0b3RhbDtcbn07IC8vIFVzZWQgZm9yIGZsYXR0ZW5pbmcga2V5d29yZCBsaXN0c1xuXG5cbmV4cG9ydHMuc3VtID0gc3VtO1xuXG52YXIgZmxhdEtleXdvcmRMaXN0ID0gZnVuY3Rpb24gZmxhdEtleXdvcmRMaXN0KG9iaikge1xuICByZXR1cm4gZGVkdXBlKE9iamVjdC52YWx1ZXMob2JqKS5mbGF0KCkpO1xufTsgLy8gR2l2ZW4gYSB0eXBlIGFuZCBhIGZpZWxkIG5hbWUsIHJldHVybnMgYSB0eXBlIHdoZXJlIHRoaXMgZmllbGQgaXMgb3B0aW9uYWxcbi8vXG4vLyBGb3IgZXhhbXBsZSwgdGhlc2UgdHdvIHR5cGUgZGVmaW5pdGlvbnMgYXJlIGVxdWl2YWxlbnQ6XG4vL1xuLy8gICB0eXBlIEZvbyA9IE9wdGlvbmFsPHsgZm9vOiBzdHJpbmcsIGJhcjogbnVtYmVyIH0sICdmb28nPjtcbi8vICAgdHlwZSBGb28gPSB7IGZvbz86IHN0cmluZywgYmFyOiBudW1iZXIgfTtcbi8vXG5cblxuZXhwb3J0cy5mbGF0S2V5d29yZExpc3QgPSBmbGF0S2V5d29yZExpc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/sql-formatter/lib/utils.js\n");

/***/ }),

/***/ "../../../../../node_modules/vue-loader/dist/exportHelper.js":
/*!*******************************************************************!*\
  !*** ../../../../../node_modules/vue-loader/dist/exportHelper.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports[\"default\"] = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9leHBvcnRIZWxwZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NyYy9kZWJ1Z2dlci9kZWJ1Z2dlci5qcy8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yYzZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../../../node_modules/vue-loader/dist/exportHelper.js\n");

/***/ })

}]);