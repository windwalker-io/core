{"version":3,"file":"index.js","sources":["../src/enum/MinifyOptions.ts","../src/utilities/arr.ts","../src/utilities/output.ts","../src/utilities/utilities.ts","../src/utilities/vite.ts","../src/processors/css.ts","../src/processors/js.ts","../src/processors/vue.ts","../src/params.js","../src/index.ts"],"sourcesContent":["export enum MinifyOptions {\r\n  NONE = 'none',\r\n  SAME_FILE = 'same_file',\r\n  SEPARATE_FILE = 'separate_file',\r\n}\r\n","import { MaybeArray } from 'rollup';\r\n\r\nexport function forceArray<T>(item: T | T[]): T[] {\r\n  if (Array.isArray(item)) {\r\n    return item;\r\n  } else {\r\n    return [item];\r\n  }\r\n}\r\n\r\n\r\nexport function handleMaybeArray<T, R>(\r\n  items: T | T[],\r\n  callback: (item: T) => R\r\n): T extends any[] ? R[] : R {\r\n  if (Array.isArray(items)) {\r\n    return items.map(callback) as any;\r\n  } else {\r\n    return callback(items as T) as any;\r\n  }\r\n}\r\n\r\nexport function appendToMaybeArray<T>(items: MaybeArray<T>, value: T): T[] {\r\n  if (Array.isArray(items)) {\r\n    items.push(value);\r\n\r\n    return items;\r\n  } else {\r\n    return [items, value];\r\n  }\r\n}\r\n","import { TaskOutput } from '@/types';\r\nimport { forceArray, handleMaybeArray } from '@/utilities/arr';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { dirname, normalize } from 'node:path';\r\n\r\nexport function normalizeOutputs(\r\n  output: TaskOutput,\r\n  defaultOptions: Record<string, any> = {}\r\n): OutputOptions[] {\r\n  output = handleMaybeArray(output, (output) => {\r\n    if (typeof output === 'string') {\r\n      if (output.endsWith('/')) {\r\n        output = {\r\n          dir: output,\r\n          ...defaultOptions\r\n        };\r\n      } else {\r\n        output = {\r\n          dir: dirname(output),\r\n          // Get file name with node library, consider Windows\r\n          entryFileNames: normalize(output).replace(/\\\\/g, '/').split('/').pop(),\r\n          ...defaultOptions\r\n        };\r\n      }\r\n    }\r\n\r\n    return output;\r\n  });\r\n\r\n  return forceArray(output);\r\n}\r\n\r\nfunction normalizeOutputObject(output: OutputOptions | string, defaultOptions: Record<string, any> = {}) {\r\n  if (typeof output === 'string') {\r\n    if (output.endsWith('/')) {\r\n      output = {\r\n        dir: output,\r\n        ...defaultOptions\r\n      };\r\n    } else {\r\n      output = {\r\n        file: output,\r\n        ...defaultOptions\r\n      };\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n","import { OverrideOptions } from '@/types';\r\nimport { cloneDeep, merge } from 'lodash-es';\r\nimport { OutputOptions } from 'rollup';\r\nimport { UserConfig } from 'vite';\r\n\r\nexport function mergeOptions<T = UserConfig>(\r\n  base: Partial<T> | undefined,\r\n  ...overrides: (OverrideOptions<T> | undefined)[]\r\n): Partial<T> {\r\n  base ??= {};\r\n\r\n  if (!overrides.length) {\r\n    return base;\r\n  }\r\n\r\n  for (const override of overrides) {\r\n    if (!override) {\r\n      continue;\r\n    }\r\n\r\n    if (typeof override === 'function') {\r\n      base = override(base) ?? base;\r\n    } else {\r\n      base = merge(base, override);\r\n    }\r\n  }\r\n\r\n  return base;\r\n}\r\n\r\nexport function appendMinFileName(output: OutputOptions): OutputOptions {\r\n  output = cloneDeep(output);\r\n\r\n  if (output.file) {\r\n    const parts = output.file.split('.');\r\n    const ext = parts.pop();\r\n    output.file = `${parts.join('.')}.min.${ext}`;\r\n  } else if (output.dir && typeof output.entryFileNames === 'string') {\r\n    const parts = output.entryFileNames.split('.');\r\n    const ext = parts.pop();\r\n    output.entryFileNames = `${parts.join('.')}.min.${ext}`;\r\n  }\r\n\r\n  return output;\r\n}\r\n","import { OverrideOptions, TaskInput } from '@/types';\r\nimport { mergeOptions } from '@/utilities/utilities';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { defineConfig, LibraryOptions, PluginOption, UserConfig } from 'vite';\r\n\r\nexport function defineAllConfigs(configs: UserConfig[]) {\r\n  return configs.map(defineConfig);\r\n}\r\n\r\nexport function createViteLibOptions(input: TaskInput, extraOptions?: OverrideOptions<LibraryOptions>): LibraryOptions {\r\n  return mergeOptions<LibraryOptions>(\r\n    {\r\n      entry: input,\r\n    },\r\n    extraOptions\r\n  ) as LibraryOptions;\r\n}\r\n\r\nexport function createViteOptions(\r\n  lib?: LibraryOptions,\r\n  output?: MaybeArray<OutputOptions>,\r\n  plugins: PluginOption[] = [],\r\n  override?: OverrideOptions<UserConfig>\r\n): Partial<UserConfig> {\r\n  return mergeOptions(\r\n    {\r\n      resolve: {},\r\n      build: {\r\n        lib,\r\n        rollupOptions: {\r\n          output,\r\n        },\r\n        emptyOutDir: false,\r\n        target: 'esnext',\r\n      },\r\n      plugins\r\n    },\r\n    override\r\n  );\r\n}\r\n\r\n","import { MinifyOptions } from '@/enum';\r\nimport { isVerbose } from '@/index';\r\nimport { CssOptions, OverrideOptions, TaskInput, TaskOutput } from '@/types';\r\nimport { forceArray } from '@/utilities/arr';\r\nimport { normalizeOutputs } from '@/utilities/output';\r\nimport { appendMinFileName, mergeOptions } from '@/utilities/utilities';\r\nimport { createViteOptions } from '@/utilities/vite';\r\nimport autoprefixer from 'autoprefixer';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport type { AcceptedPlugin, ProcessOptions } from 'postcss';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { UserConfig } from 'vite';\r\n\r\nexport async function css(\r\n  input: TaskInput,\r\n  output: TaskOutput,\r\n  options: CssOptions = {}\r\n): Promise<MaybeArray<UserConfig>> {\r\n  options.verbose ??= isVerbose;\r\n\r\n  let outputs = normalizeOutputs(output, { format: 'es' });\r\n\r\n  const all = [];\r\n\r\n  for (const output of outputs) {\r\n    const opt = createOptions(\r\n      input,\r\n      outputs,\r\n      options,\r\n      (config) => {\r\n        config.build!.minify = options.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n        config.build!.cssMinify = options.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n\r\n        return config;\r\n      },\r\n    );\r\n\r\n    all.push(mergeOptions(opt, options?.vite));\r\n\r\n    if (options?.minify === MinifyOptions.SEPARATE_FILE) {\r\n      const minOutput = appendMinFileName(output);\r\n\r\n      const opt = createOptions(\r\n        input,\r\n        minOutput,\r\n        options,\r\n        (config) => {\r\n          config.build!.minify = 'esbuild';\r\n          config.build!.cssMinify = 'esbuild';\r\n\r\n          return config;\r\n        },\r\n      );\r\n\r\n      all.push(mergeOptions(opt, options?.vite));\r\n    }\r\n  }\r\n\r\n  return all;\r\n}\r\n\r\nfunction createOptions(\r\n  input: TaskInput,\r\n  output: MaybeArray<OutputOptions>,\r\n  options: CssOptions,\r\n  override?: OverrideOptions<UserConfig>\r\n): Partial<UserConfig> {\r\n  output = cloneDeep(output);\r\n\r\n  const config = createViteOptions(\r\n    undefined,\r\n    output,\r\n    [],\r\n    (config) => {\r\n      config.build!.rollupOptions!.input = input;\r\n      config.build!.emptyOutDir = options.clean ?? false;\r\n\r\n      for (const o of forceArray(config.build!.rollupOptions!.output) as OutputOptions[]) {\r\n        o.assetFileNames = String(o.entryFileNames);\r\n\r\n        delete o.entryFileNames;\r\n      }\r\n\r\n      config.build!.cssCodeSplit = true;\r\n      config.css = {\r\n        // modules: {\r\n        //   scopeBehaviour: 'global', // 或是 'global'\r\n        // },\r\n        transformer: 'postcss',\r\n        postcss: mergeOptions<ProcessOptions & AcceptedPlugin>(\r\n          {\r\n            plugins: [\r\n              autoprefixer({ overrideBrowserslist: options.browserslist })\r\n            ]\r\n          },\r\n          options.postcss\r\n        ),\r\n      };\r\n\r\n      return config;\r\n    }\r\n  );\r\n\r\n  return mergeOptions(\r\n    config,\r\n    override,\r\n    options.vite\r\n  );\r\n}\r\n","import { MinifyOptions } from '@/enum';\r\nimport { isVerbose } from '@/index';\r\nimport { JsOptions, TaskInput, TaskOutput } from '@/types';\r\nimport { handleMaybeArray } from '@/utilities/arr';\r\nimport { normalizeOutputs } from '@/utilities/output';\r\nimport { appendMinFileName, mergeOptions } from '@/utilities/utilities';\r\nimport { createViteLibOptions, createViteOptions } from '@/utilities/vite';\r\nimport { resolve } from 'path';\r\nimport { OutputOptions } from 'rollup';\r\nimport { ESBuildOptions, mergeConfig, UserConfig } from 'vite';\r\n\r\nexport async function js(input: TaskInput, output: TaskOutput, options: JsOptions = {}): Promise<UserConfig[]> {\r\n  // if (typeof options.tsconfig === 'string') {\r\n  //   esbuild.tsconfig = options.tsconfig;\r\n  // } else if (typeof options.tsconfig === 'object') {\r\n  //   esbuild.tsconfigRaw = options.tsconfig;\r\n  // }\r\n\r\n  return useJsProcessor(\r\n    output,\r\n    options,\r\n    (output, isMinify) => {\r\n      if (isMinify) {\r\n        return createViteOptions(\r\n          createViteLibOptions(input),\r\n          output,\r\n          [],\r\n          (config) => {\r\n            return overrideViteJsOptions(config, options);\r\n          }\r\n        );\r\n      }\r\n\r\n      return createViteOptions(\r\n        createViteLibOptions(input),\r\n        output,\r\n        [],\r\n        (config) => {\r\n          return overrideViteJsOptions(config, options);\r\n        }\r\n      );\r\n    }\r\n  );\r\n}\r\n\r\nexport function useJsProcessor(\r\n  output: TaskOutput,\r\n  options: JsOptions,\r\n  createOptions: (outputs: OutputOptions[], isMinify: boolean) => UserConfig\r\n) {\r\n  options.verbose ??= isVerbose;\r\n\r\n  const outputs = normalizeOutputs(output, { format: options?.format || 'es' });\r\n\r\n  for (const output of outputs) {\r\n    if (output.format === 'umd') {\r\n      output.name = options?.umdName;\r\n    }\r\n  }\r\n\r\n  const all: UserConfig[] = [];\r\n\r\n  const opt = createOptions(outputs, false);\r\n  all.push(mergeOptions(opt, options.vite));\r\n\r\n  if (options?.minify === MinifyOptions.SEPARATE_FILE) {\r\n    const minOutputs = outputs.map((output) => {\r\n      return appendMinFileName(output);\r\n    });\r\n\r\n    const minOptions = createOptions(minOutputs, true);\r\n\r\n    all.push(mergeOptions(minOptions, options?.vite));\r\n  }\r\n\r\n  return all;\r\n}\r\n\r\nexport function overrideViteJsOptions(config: UserConfig, options: JsOptions) {\r\n  const esbuild = mergeOptions<ESBuildOptions>(\r\n    {\r\n      target: options?.target || 'esnext',\r\n    },\r\n    options?.esbuild\r\n  );\r\n\r\n  config.build!.minify = options?.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n  config.build!.emptyOutDir = options.clean || false;\r\n  config.build!.target = options.target || 'esnext';\r\n  config.esbuild = esbuild;\r\n\r\n  config = addExternals(config, options.externals);\r\n\r\n  if (options.path) {\r\n    config = mergeConfig(config, { resolve: { alias: {}, } });\r\n\r\n    if (typeof options.path === 'string') {\r\n      config.resolve!.alias = {\r\n        '@': resolve(options.path)\r\n      };\r\n    } else {\r\n      const aliases: Record<string, string> = {};\r\n\r\n      for (const alias in options.path) {\r\n        aliases[alias] = resolve(options.path[alias]);\r\n      }\r\n\r\n      config.resolve!.alias = aliases;\r\n    }\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nexport function addExternals(config: UserConfig, externals?: Record<string, string>) {\r\n  if (!externals) {\r\n    return config;\r\n  }\r\n\r\n  config = mergeConfig(config, { build: { rollupOptions: { external: [] } } });\r\n\r\n  if (!Array.isArray(config.build!.rollupOptions!.external)) {\r\n    throw new Error('Only array externals are supported now.');\r\n  }\r\n\r\n  for (const ext in externals) {\r\n    if (!config.build!.rollupOptions!.external.includes(ext)) {\r\n      config.build!.rollupOptions!.external.push(ext);\r\n    }\r\n  }\r\n\r\n  config.build!.rollupOptions!.output = handleMaybeArray(config.build!.rollupOptions!.output, (output) => {\r\n    output!.globals = {\r\n      ...output!.globals,\r\n        ...externals\r\n    };\r\n    return output;\r\n  });\r\n\r\n  return config;\r\n\r\n}\r\n","import { isDev, isProd } from '@/index';\r\nimport { addExternals, overrideViteJsOptions, useJsProcessor } from '@/processors/js';\r\nimport { TaskInput, TaskOutput } from '@/types';\r\nimport { VueOptions } from '@/types/vue';\r\nimport { handleMaybeArray } from '@/utilities/arr';\r\nimport { createViteLibOptions, createViteOptions } from '@/utilities/vite';\r\nimport vuePlugin from '@vitejs/plugin-vue';\r\nimport { inspect } from 'node:util';\r\nimport { mergeConfig, UserConfig } from 'vite';\r\n\r\nexport async function vue(input: TaskInput, output: TaskOutput, options: VueOptions = {}): Promise<UserConfig[]> {\r\n  return useJsProcessor(\r\n    output,\r\n    options,\r\n    (output, isMinify) => {\r\n      return createViteOptions(\r\n        createViteLibOptions(input),\r\n        output,\r\n        [\r\n          vuePlugin()\r\n        ],\r\n        (config) => {\r\n          config = overrideViteJsOptions(config, options);\r\n          config.build!.sourcemap = isDev ? 'inline' : false;\r\n          return config;\r\n        }\r\n      );\r\n    }\r\n  );\r\n}\r\n","let params = undefined;\nexport function prepareParams(p) {\n    params = p;\n    isVerbose = params?.verbose ? params?.verbose > 0 : false;\n    return p;\n}\nlet isVerbose = false;\nconst isProd = process.env.NODE_ENV === 'production';\nconst isDev = !isProd;\nexport { isVerbose, isDev, isProd, params };\n//# sourceMappingURL=params.js.map","export * from '@/dep';\r\nimport * as fusion from '@/dep';\r\nimport { parseArgv, runApp } from '@/runner/app';\r\nimport { FusionVitePluginOptions } from '@/types';\r\nimport { fileURLToPath } from 'node:url';\r\nimport { prepareParams } from '@/params';\r\nimport { PluginOption } from 'vite';\r\n\r\nexport default fusion;\r\n//\r\n// const isCliRunning = process.argv[1] && fileURLToPath(import.meta.url) === process.argv[1];\r\n//\r\n// if (isCliRunning) {\r\n//   const params = prepareParams(parseArgv());\r\n//\r\n//   runApp(params!);\r\n// }\r\n\r\nexport function useFusion(options: FusionVitePluginOptions = {}): PluginOption {\r\n  return {\r\n    name: 'fusion',\r\n    config(config, env) {\r\n      console.log(env);\r\n    }\r\n  };\r\n}\r\n"],"names":["MinifyOptions","forceArray","item","handleMaybeArray","items","callback","normalizeOutputs","output","defaultOptions","dirname","normalize","mergeOptions","base","overrides","override","merge","appendMinFileName","cloneDeep","parts","ext","createViteLibOptions","input","extraOptions","createViteOptions","lib","plugins","css","options","isVerbose","outputs","all","opt","createOptions","config","minOutput","o","autoprefixer","js","useJsProcessor","isMinify","overrideViteJsOptions","minOutputs","minOptions","esbuild","addExternals","mergeConfig","resolve","aliases","alias","externals","vue","vuePlugin","isDev","isProd","useFusion","env"],"mappings":"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"}