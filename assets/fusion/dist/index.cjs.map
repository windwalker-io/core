{"version":3,"file":"index.cjs","sources":["../src/enum/MinifyOptions.ts","../src/utilities/arr.ts","../src/utilities/output.ts","../src/utilities/utilities.ts","../src/utilities/vite.ts","../src/processors/css.ts","../src/processors/js.ts","../src/processors/vue.ts","../src/params.js","../src/index.ts"],"sourcesContent":["export enum MinifyOptions {\r\n  NONE = 'none',\r\n  SAME_FILE = 'same_file',\r\n  SEPARATE_FILE = 'separate_file',\r\n}\r\n","import { MaybeArray } from 'rollup';\r\n\r\nexport function forceArray<T>(item: T | T[]): T[] {\r\n  if (Array.isArray(item)) {\r\n    return item;\r\n  } else {\r\n    return [item];\r\n  }\r\n}\r\n\r\n\r\nexport function handleMaybeArray<T, R>(\r\n  items: T | T[],\r\n  callback: (item: T) => R\r\n): T extends any[] ? R[] : R {\r\n  if (Array.isArray(items)) {\r\n    return items.map(callback) as any;\r\n  } else {\r\n    return callback(items as T) as any;\r\n  }\r\n}\r\n\r\nexport function appendToMaybeArray<T>(items: MaybeArray<T>, value: T): T[] {\r\n  if (Array.isArray(items)) {\r\n    items.push(value);\r\n\r\n    return items;\r\n  } else {\r\n    return [items, value];\r\n  }\r\n}\r\n","import { TaskOutput } from '@/types';\r\nimport { forceArray, handleMaybeArray } from '@/utilities/arr';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { dirname, normalize } from 'node:path';\r\n\r\nexport function normalizeOutputs(\r\n  output: TaskOutput,\r\n  defaultOptions: Record<string, any> = {}\r\n): OutputOptions[] {\r\n  output = handleMaybeArray(output, (output) => {\r\n    if (typeof output === 'string') {\r\n      if (output.endsWith('/')) {\r\n        output = {\r\n          dir: output,\r\n          ...defaultOptions\r\n        };\r\n      } else {\r\n        output = {\r\n          dir: dirname(output),\r\n          // Get file name with node library, consider Windows\r\n          entryFileNames: normalize(output).replace(/\\\\/g, '/').split('/').pop(),\r\n          ...defaultOptions\r\n        };\r\n      }\r\n    }\r\n\r\n    return output;\r\n  });\r\n\r\n  return forceArray(output);\r\n}\r\n\r\nfunction normalizeOutputObject(output: OutputOptions | string, defaultOptions: Record<string, any> = {}) {\r\n  if (typeof output === 'string') {\r\n    if (output.endsWith('/')) {\r\n      output = {\r\n        dir: output,\r\n        ...defaultOptions\r\n      };\r\n    } else {\r\n      output = {\r\n        file: output,\r\n        ...defaultOptions\r\n      };\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n","import { OverrideOptions } from '@/types';\r\nimport { cloneDeep, merge } from 'lodash-es';\r\nimport { OutputOptions } from 'rollup';\r\nimport { UserConfig } from 'vite';\r\n\r\nexport function mergeOptions<T = UserConfig>(\r\n  base: Partial<T> | undefined,\r\n  ...overrides: (OverrideOptions<T> | undefined)[]\r\n): Partial<T> {\r\n  base ??= {};\r\n\r\n  if (!overrides.length) {\r\n    return base;\r\n  }\r\n\r\n  for (const override of overrides) {\r\n    if (!override) {\r\n      continue;\r\n    }\r\n\r\n    if (typeof override === 'function') {\r\n      base = override(base) ?? base;\r\n    } else {\r\n      base = merge(base, override);\r\n    }\r\n  }\r\n\r\n  return base;\r\n}\r\n\r\nexport function appendMinFileName(output: OutputOptions): OutputOptions {\r\n  output = cloneDeep(output);\r\n\r\n  if (output.file) {\r\n    const parts = output.file.split('.');\r\n    const ext = parts.pop();\r\n    output.file = `${parts.join('.')}.min.${ext}`;\r\n  } else if (output.dir && typeof output.entryFileNames === 'string') {\r\n    const parts = output.entryFileNames.split('.');\r\n    const ext = parts.pop();\r\n    output.entryFileNames = `${parts.join('.')}.min.${ext}`;\r\n  }\r\n\r\n  return output;\r\n}\r\n","import { OverrideOptions, TaskInput } from '@/types';\r\nimport { mergeOptions } from '@/utilities/utilities';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { defineConfig, LibraryOptions, PluginOption, UserConfig } from 'vite';\r\n\r\nexport function defineAllConfigs(configs: UserConfig[]) {\r\n  return configs.map(defineConfig);\r\n}\r\n\r\nexport function createViteLibOptions(input: TaskInput, extraOptions?: OverrideOptions<LibraryOptions>): LibraryOptions {\r\n  return mergeOptions<LibraryOptions>(\r\n    {\r\n      entry: input,\r\n    },\r\n    extraOptions\r\n  ) as LibraryOptions;\r\n}\r\n\r\nexport function createViteOptions(\r\n  lib?: LibraryOptions,\r\n  output?: MaybeArray<OutputOptions>,\r\n  plugins: PluginOption[] = [],\r\n  override?: OverrideOptions<UserConfig>\r\n): Partial<UserConfig> {\r\n  return mergeOptions(\r\n    {\r\n      resolve: {},\r\n      build: {\r\n        lib,\r\n        rollupOptions: {\r\n          output,\r\n        },\r\n        emptyOutDir: false,\r\n        target: 'esnext',\r\n      },\r\n      plugins\r\n    },\r\n    override\r\n  );\r\n}\r\n\r\n","import { MinifyOptions } from '@/enum';\r\nimport { isVerbose } from '@/index';\r\nimport { CssOptions, OverrideOptions, TaskInput, TaskOutput } from '@/types';\r\nimport { forceArray } from '@/utilities/arr';\r\nimport { normalizeOutputs } from '@/utilities/output';\r\nimport { appendMinFileName, mergeOptions } from '@/utilities/utilities';\r\nimport { createViteOptions } from '@/utilities/vite';\r\nimport autoprefixer from 'autoprefixer';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport type { AcceptedPlugin, ProcessOptions } from 'postcss';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { UserConfig } from 'vite';\r\n\r\nexport async function css(\r\n  input: TaskInput,\r\n  output: TaskOutput,\r\n  options: CssOptions = {}\r\n): Promise<MaybeArray<UserConfig>> {\r\n  options.verbose ??= isVerbose;\r\n\r\n  let outputs = normalizeOutputs(output, { format: 'es' });\r\n\r\n  const all = [];\r\n\r\n  for (const output of outputs) {\r\n    const opt = createOptions(\r\n      input,\r\n      outputs,\r\n      options,\r\n      (config) => {\r\n        config.build!.minify = options.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n        config.build!.cssMinify = options.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n\r\n        return config;\r\n      },\r\n    );\r\n\r\n    all.push(mergeOptions(opt, options?.vite));\r\n\r\n    if (options?.minify === MinifyOptions.SEPARATE_FILE) {\r\n      const minOutput = appendMinFileName(output);\r\n\r\n      const opt = createOptions(\r\n        input,\r\n        minOutput,\r\n        options,\r\n        (config) => {\r\n          config.build!.minify = 'esbuild';\r\n          config.build!.cssMinify = 'esbuild';\r\n\r\n          return config;\r\n        },\r\n      );\r\n\r\n      all.push(mergeOptions(opt, options?.vite));\r\n    }\r\n  }\r\n\r\n  return all;\r\n}\r\n\r\nfunction createOptions(\r\n  input: TaskInput,\r\n  output: MaybeArray<OutputOptions>,\r\n  options: CssOptions,\r\n  override?: OverrideOptions<UserConfig>\r\n): Partial<UserConfig> {\r\n  output = cloneDeep(output);\r\n\r\n  const config = createViteOptions(\r\n    undefined,\r\n    output,\r\n    [],\r\n    (config) => {\r\n      config.build!.rollupOptions!.input = input;\r\n      config.build!.emptyOutDir = options.clean ?? false;\r\n\r\n      for (const o of forceArray(config.build!.rollupOptions!.output) as OutputOptions[]) {\r\n        o.assetFileNames = String(o.entryFileNames);\r\n\r\n        delete o.entryFileNames;\r\n      }\r\n\r\n      config.build!.cssCodeSplit = true;\r\n      config.css = {\r\n        // modules: {\r\n        //   scopeBehaviour: 'global', // 或是 'global'\r\n        // },\r\n        transformer: 'postcss',\r\n        postcss: mergeOptions<ProcessOptions & AcceptedPlugin>(\r\n          {\r\n            plugins: [\r\n              autoprefixer({ overrideBrowserslist: options.browserslist })\r\n            ]\r\n          },\r\n          options.postcss\r\n        ),\r\n      };\r\n\r\n      return config;\r\n    }\r\n  );\r\n\r\n  return mergeOptions(\r\n    config,\r\n    override,\r\n    options.vite\r\n  );\r\n}\r\n","import { MinifyOptions } from '@/enum';\r\nimport { isVerbose } from '@/index';\r\nimport { JsOptions, TaskInput, TaskOutput } from '@/types';\r\nimport { handleMaybeArray } from '@/utilities/arr';\r\nimport { normalizeOutputs } from '@/utilities/output';\r\nimport { appendMinFileName, mergeOptions } from '@/utilities/utilities';\r\nimport { createViteLibOptions, createViteOptions } from '@/utilities/vite';\r\nimport { resolve } from 'path';\r\nimport { OutputOptions } from 'rollup';\r\nimport { ESBuildOptions, mergeConfig, UserConfig } from 'vite';\r\n\r\nexport async function js(input: TaskInput, output: TaskOutput, options: JsOptions = {}): Promise<UserConfig[]> {\r\n  // if (typeof options.tsconfig === 'string') {\r\n  //   esbuild.tsconfig = options.tsconfig;\r\n  // } else if (typeof options.tsconfig === 'object') {\r\n  //   esbuild.tsconfigRaw = options.tsconfig;\r\n  // }\r\n\r\n  return useJsProcessor(\r\n    output,\r\n    options,\r\n    (output, isMinify) => {\r\n      if (isMinify) {\r\n        return createViteOptions(\r\n          createViteLibOptions(input),\r\n          output,\r\n          [],\r\n          (config) => {\r\n            return overrideViteJsOptions(config, options);\r\n          }\r\n        );\r\n      }\r\n\r\n      return createViteOptions(\r\n        createViteLibOptions(input),\r\n        output,\r\n        [],\r\n        (config) => {\r\n          return overrideViteJsOptions(config, options);\r\n        }\r\n      );\r\n    }\r\n  );\r\n}\r\n\r\nexport function useJsProcessor(\r\n  output: TaskOutput,\r\n  options: JsOptions,\r\n  createOptions: (outputs: OutputOptions[], isMinify: boolean) => UserConfig\r\n) {\r\n  options.verbose ??= isVerbose;\r\n\r\n  const outputs = normalizeOutputs(output, { format: options?.format || 'es' });\r\n\r\n  for (const output of outputs) {\r\n    if (output.format === 'umd') {\r\n      output.name = options?.umdName;\r\n    }\r\n  }\r\n\r\n  const all: UserConfig[] = [];\r\n\r\n  const opt = createOptions(outputs, false);\r\n  all.push(mergeOptions(opt, options.vite));\r\n\r\n  if (options?.minify === MinifyOptions.SEPARATE_FILE) {\r\n    const minOutputs = outputs.map((output) => {\r\n      return appendMinFileName(output);\r\n    });\r\n\r\n    const minOptions = createOptions(minOutputs, true);\r\n\r\n    all.push(mergeOptions(minOptions, options?.vite));\r\n  }\r\n\r\n  return all;\r\n}\r\n\r\nexport function overrideViteJsOptions(config: UserConfig, options: JsOptions) {\r\n  const esbuild = mergeOptions<ESBuildOptions>(\r\n    {\r\n      target: options?.target || 'esnext',\r\n    },\r\n    options?.esbuild\r\n  );\r\n\r\n  config.build!.minify = options?.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n  config.build!.emptyOutDir = options.clean || false;\r\n  config.build!.target = options.target || 'esnext';\r\n  config.esbuild = esbuild;\r\n\r\n  config = addExternals(config, options.externals);\r\n\r\n  if (options.path) {\r\n    config = mergeConfig(config, { resolve: { alias: {}, } });\r\n\r\n    if (typeof options.path === 'string') {\r\n      config.resolve!.alias = {\r\n        '@': resolve(options.path)\r\n      };\r\n    } else {\r\n      const aliases: Record<string, string> = {};\r\n\r\n      for (const alias in options.path) {\r\n        aliases[alias] = resolve(options.path[alias]);\r\n      }\r\n\r\n      config.resolve!.alias = aliases;\r\n    }\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nexport function addExternals(config: UserConfig, externals?: Record<string, string>) {\r\n  if (!externals) {\r\n    return config;\r\n  }\r\n\r\n  config = mergeConfig(config, { build: { rollupOptions: { external: [] } } });\r\n\r\n  if (!Array.isArray(config.build!.rollupOptions!.external)) {\r\n    throw new Error('Only array externals are supported now.');\r\n  }\r\n\r\n  for (const ext in externals) {\r\n    if (!config.build!.rollupOptions!.external.includes(ext)) {\r\n      config.build!.rollupOptions!.external.push(ext);\r\n    }\r\n  }\r\n\r\n  config.build!.rollupOptions!.output = handleMaybeArray(config.build!.rollupOptions!.output, (output) => {\r\n    output!.globals = {\r\n      ...output!.globals,\r\n        ...externals\r\n    };\r\n    return output;\r\n  });\r\n\r\n  return config;\r\n\r\n}\r\n","import { isDev, isProd } from '@/index';\r\nimport { addExternals, overrideViteJsOptions, useJsProcessor } from '@/processors/js';\r\nimport { TaskInput, TaskOutput } from '@/types';\r\nimport { VueOptions } from '@/types/vue';\r\nimport { handleMaybeArray } from '@/utilities/arr';\r\nimport { createViteLibOptions, createViteOptions } from '@/utilities/vite';\r\nimport vuePlugin from '@vitejs/plugin-vue';\r\nimport { inspect } from 'node:util';\r\nimport { mergeConfig, UserConfig } from 'vite';\r\n\r\nexport async function vue(input: TaskInput, output: TaskOutput, options: VueOptions = {}): Promise<UserConfig[]> {\r\n  return useJsProcessor(\r\n    output,\r\n    options,\r\n    (output, isMinify) => {\r\n      return createViteOptions(\r\n        createViteLibOptions(input),\r\n        output,\r\n        [\r\n          vuePlugin()\r\n        ],\r\n        (config) => {\r\n          config = overrideViteJsOptions(config, options);\r\n          config.build!.sourcemap = isDev ? 'inline' : false;\r\n          return config;\r\n        }\r\n      );\r\n    }\r\n  );\r\n}\r\n","let params = undefined;\nexport function prepareParams(p) {\n    params = p;\n    isVerbose = params?.verbose ? params?.verbose > 0 : false;\n    return p;\n}\nlet isVerbose = false;\nconst isProd = process.env.NODE_ENV === 'production';\nconst isDev = !isProd;\nexport { isVerbose, isDev, isProd, params };\n//# sourceMappingURL=params.js.map","export * from '@/dep';\r\nimport * as fusion from '@/dep';\r\nimport { parseArgv, runApp } from '@/runner/app';\r\nimport { FusionVitePluginOptions } from '@/types';\r\nimport { fileURLToPath } from 'node:url';\r\nimport { prepareParams } from '@/params';\r\nimport { PluginOption } from 'vite';\r\n\r\nexport default fusion;\r\n//\r\n// const isCliRunning = process.argv[1] && fileURLToPath(import.meta.url) === process.argv[1];\r\n//\r\n// if (isCliRunning) {\r\n//   const params = prepareParams(parseArgv());\r\n//\r\n//   runApp(params!);\r\n// }\r\n\r\nexport function useFusion(options: FusionVitePluginOptions = {}): PluginOption {\r\n  return {\r\n    name: 'fusion',\r\n    config(config, env) {\r\n      console.log(env);\r\n    }\r\n  };\r\n}\r\n"],"names":["MinifyOptions","forceArray","item","handleMaybeArray","items","callback","normalizeOutputs","output","defaultOptions","dirname","normalize","mergeOptions","base","overrides","override","merge","appendMinFileName","cloneDeep","parts","ext","createViteLibOptions","input","extraOptions","createViteOptions","lib","plugins","css","options","isVerbose","outputs","all","opt","createOptions","config","minOutput","o","autoprefixer","js","useJsProcessor","isMinify","overrideViteJsOptions","minOutputs","minOptions","esbuild","addExternals","mergeConfig","resolve","aliases","alias","externals","vue","vuePlugin","isDev","isProd","useFusion","env"],"mappings":"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"}