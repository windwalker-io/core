{"version":3,"file":"index.cjs","sources":["../src/enum/MinifyOptions.ts","../src/utilities/arr.ts","../src/utilities/output.ts","../src/utilities/utilities.ts","../src/utilities/vite.ts","../src/processors/css.ts","../src/processors/js.ts","../src/runner/build.ts","../src/runner/config.ts","../src/runner/describe.ts","../src/runner/tasks.ts","../src/runner/app.ts","../src/index.ts"],"sourcesContent":["export enum MinifyOptions {\r\n  NONE = 'none',\r\n  SAME_FILE = 'same_file',\r\n  SEPARATE_FILE = 'separate_file',\r\n}\r\n","import { MaybeArray } from 'rollup';\r\n\r\nexport function forceArray<T>(item: T | T[]): T[] {\r\n  if (Array.isArray(item)) {\r\n    return item;\r\n  } else {\r\n    return [item];\r\n  }\r\n}\r\n\r\n\r\nexport function handleMaybeArray<T, R>(\r\n  items: T | T[],\r\n  callback: (item: T) => R\r\n): T extends any[] ? R[] : R {\r\n  if (Array.isArray(items)) {\r\n    return items.map(callback) as any;\r\n  } else {\r\n    return callback(items as T) as any;\r\n  }\r\n}\r\n\r\nexport function appendToMaybeArray<T>(items: MaybeArray<T>, value: T): T[] {\r\n  if (Array.isArray(items)) {\r\n    items.push(value);\r\n\r\n    return items;\r\n  } else {\r\n    return [items, value];\r\n  }\r\n}\r\n","import { TaskOutput } from '@/types';\r\nimport { forceArray, handleMaybeArray } from '@/utilities/arr';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { dirname, normalize } from 'node:path';\r\n\r\nexport function normalizeOutputs(\r\n  output: TaskOutput,\r\n  defaultOptions: Record<string, any> = {}\r\n): OutputOptions[] {\r\n  output = handleMaybeArray(output, (output) => {\r\n    if (typeof output === 'string') {\r\n      if (output.endsWith('/')) {\r\n        output = {\r\n          dir: output,\r\n          ...defaultOptions\r\n        };\r\n      } else {\r\n        output = {\r\n          dir: dirname(output),\r\n          // Get file name with node library, consider Windows\r\n          entryFileNames: normalize(output).replace(/\\\\/g, '/').split('/').pop(),\r\n          ...defaultOptions\r\n        };\r\n      }\r\n    }\r\n\r\n    return output;\r\n  });\r\n\r\n  return forceArray(output);\r\n}\r\n\r\nfunction normalizeOutputObject(output: OutputOptions | string, defaultOptions: Record<string, any> = {}) {\r\n  if (typeof output === 'string') {\r\n    if (output.endsWith('/')) {\r\n      output = {\r\n        dir: output,\r\n        ...defaultOptions\r\n      };\r\n    } else {\r\n      output = {\r\n        file: output,\r\n        ...defaultOptions\r\n      };\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n","import { handleMaybeArray } from '@/utilities/arr';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { OverrideOptions } from '@/types';\r\nimport { UserConfig } from 'vite';\r\n\r\nexport function mergeOptions<T = UserConfig>(\r\n  base: Partial<T> | undefined,\r\n  ...overrides: (OverrideOptions<T> | undefined)[]\r\n): Partial<T> {\r\n  base ??= {};\r\n\r\n  if (!overrides.length) {\r\n    return base;\r\n  }\r\n\r\n  for (const override of overrides) {\r\n    if (!override) {\r\n      continue;\r\n    }\r\n\r\n    if (typeof override === 'function') {\r\n      base = override(base) ?? base;\r\n    } else {\r\n      base = { ...base, ...override };\r\n    }\r\n  }\r\n\r\n  return base;\r\n}\r\n\r\nexport function appendMinFileName(output: OutputOptions): OutputOptions {\r\n  output = cloneDeep(output);\r\n\r\n  if (output.file) {\r\n    const parts = output.file.split('.');\r\n    const ext = parts.pop();\r\n    output.file = `${parts.join('.')}.min.${ext}`;\r\n  } else if (output.dir && typeof output.entryFileNames === 'string') {\r\n    const parts = output.entryFileNames.split('.');\r\n    const ext = parts.pop();\r\n    output.entryFileNames = `${parts.join('.')}.min.${ext}`;\r\n  }\r\n\r\n  return output;\r\n}\r\n","import { OverrideOptions, TaskInput } from '@/types';\r\nimport { mergeOptions } from '@/utilities/utilities';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { defineConfig, LibraryOptions, UserConfig } from 'vite';\r\n\r\nexport function defineAllConfigs(configs: UserConfig[]) {\r\n  return configs.map(defineConfig);\r\n}\r\n\r\nexport function createViteLibOptions(input: TaskInput, extraOptions?: OverrideOptions<LibraryOptions>): LibraryOptions {\r\n  return mergeOptions<LibraryOptions>(\r\n    {\r\n      entry: input,\r\n    },\r\n    extraOptions\r\n  ) as LibraryOptions;\r\n}\r\n\r\nexport function createViteOptions(\r\n  lib?: LibraryOptions,\r\n  output?: MaybeArray<OutputOptions>,\r\n  override?: OverrideOptions<UserConfig>\r\n): Partial<UserConfig> {\r\n  return mergeOptions(\r\n    {\r\n      build: {\r\n        lib,\r\n        rollupOptions: {\r\n          output,\r\n        },\r\n        emptyOutDir: false,\r\n        target: 'esnext',\r\n      },\r\n    },\r\n    override\r\n  );\r\n}\r\n\r\n","import { MinifyOptions } from '@/enum';\r\nimport { isVerbose } from '@/index';\r\nimport { CssOptions, OverrideOptions, TaskInput, TaskOutput } from '@/types';\r\nimport { forceArray } from '@/utilities/arr';\r\nimport { normalizeOutputs } from '@/utilities/output';\r\nimport { appendMinFileName, mergeOptions } from '@/utilities/utilities';\r\nimport { createViteOptions } from '@/utilities/vite';\r\nimport autoprefixer from 'autoprefixer';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport type { AcceptedPlugin, ProcessOptions } from 'postcss';\r\nimport { MaybeArray, OutputOptions } from 'rollup';\r\nimport { UserConfig } from 'vite';\r\n\r\nexport async function css(\r\n  input: TaskInput,\r\n  output: TaskOutput,\r\n  options: CssOptions = {}\r\n): Promise<MaybeArray<UserConfig>> {\r\n  options.verbose ??= isVerbose;\r\n\r\n  let outputs = normalizeOutputs(output, { format: 'es' });\r\n\r\n  const all = [];\r\n\r\n  for (const output of outputs) {\r\n    const opt = createOptions(\r\n      input,\r\n      outputs,\r\n      options,\r\n      (config) => {\r\n        config.build!.minify = options.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n        config.build!.cssMinify = options.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n\r\n        return config;\r\n      },\r\n    );\r\n\r\n    all.push(mergeOptions(opt, options?.vite));\r\n\r\n    if (options?.minify === MinifyOptions.SEPARATE_FILE) {\r\n      const minOutput = appendMinFileName(output);\r\n\r\n      const opt = createOptions(\r\n        input,\r\n        minOutput,\r\n        options,\r\n        (config) => {\r\n          config.build!.minify = 'esbuild';\r\n          config.build!.cssMinify = 'esbuild';\r\n\r\n          return config;\r\n        },\r\n      );\r\n\r\n      all.push(mergeOptions(opt, options?.vite));\r\n    }\r\n  }\r\n\r\n  return all;\r\n}\r\n\r\nfunction createOptions(\r\n  input: TaskInput,\r\n  output: MaybeArray<OutputOptions>,\r\n  options: CssOptions,\r\n  override?: OverrideOptions<UserConfig>\r\n): Partial<UserConfig> {\r\n  output = cloneDeep(output);\r\n\r\n  const config = createViteOptions(\r\n    undefined,\r\n    output,\r\n    (config) => {\r\n      config.build!.rollupOptions!.input = input;\r\n      config.build!.emptyOutDir = options.clean ?? false;\r\n\r\n      for (const o of forceArray(config.build!.rollupOptions!.output) as OutputOptions[]) {\r\n        o.assetFileNames = String(o.entryFileNames);\r\n\r\n        delete o.entryFileNames;\r\n      }\r\n\r\n      config.build!.cssCodeSplit = true;\r\n      config.css = {\r\n        // modules: {\r\n        //   scopeBehaviour: 'global', // 或是 'global'\r\n        // },\r\n        transformer: 'postcss',\r\n        postcss: mergeOptions<ProcessOptions & AcceptedPlugin>(\r\n          {\r\n            plugins: [\r\n              autoprefixer({ overrideBrowserslist: options.browserslist })\r\n            ]\r\n          },\r\n          options.postcss\r\n        ),\r\n      };\r\n\r\n      return config;\r\n    }\r\n  );\r\n\r\n  return mergeOptions(\r\n    config,\r\n    override,\r\n    options.vite\r\n  );\r\n}\r\n","import { MinifyOptions } from '@/enum';\r\nimport { isVerbose } from '@/index';\r\nimport { JsOptions, TaskInput, TaskOutput } from '@/types';\r\nimport { normalizeOutputs } from '@/utilities/output';\r\nimport { appendMinFileName, mergeOptions } from '@/utilities/utilities';\r\nimport { createViteLibOptions, createViteOptions } from '@/utilities/vite';\r\nimport { OutputOptions } from 'rollup';\r\nimport { ESBuildOptions, UserConfig } from 'vite';\r\n\r\nexport async function js(input: TaskInput, output: TaskOutput, options: JsOptions = {}): Promise<UserConfig[]> {\r\n  const esbuild = mergeOptions<ESBuildOptions>(\r\n    {\r\n      target: options?.target || 'esnext',\r\n    },\r\n    options?.esbuild\r\n  );\r\n\r\n  // if (typeof options.tsconfig === 'string') {\r\n  //   esbuild.tsconfig = options.tsconfig;\r\n  // } else if (typeof options.tsconfig === 'object') {\r\n  //   esbuild.tsconfigRaw = options.tsconfig;\r\n  // }\r\n\r\n  return useJsProcessor(\r\n    output,\r\n    options,\r\n    (output, isMinify) => {\r\n      if (isMinify) {\r\n        return createViteOptions(\r\n          createViteLibOptions(input),\r\n          output,\r\n          (config) => {\r\n            config.build!.minify = 'esbuild';\r\n            config.build!.emptyOutDir = options.clean || false;\r\n            config.build!.target = options.target || 'esnext';\r\n            config.esbuild = esbuild;\r\n\r\n            return config;\r\n          }\r\n        );\r\n      }\r\n\r\n      return createViteOptions(\r\n        createViteLibOptions(input),\r\n        output,\r\n        (config) => {\r\n          config.build!.minify = options?.minify === MinifyOptions.SAME_FILE ? 'esbuild' : false;\r\n          config.build!.emptyOutDir = options.clean || false;\r\n          config.build!.target = options.target || 'esnext';\r\n          config.esbuild = esbuild;\r\n\r\n          return config;\r\n        }\r\n      );\r\n    }\r\n  );\r\n}\r\n\r\nfunction useJsProcessor(\r\n  output: TaskOutput,\r\n  options: JsOptions,\r\n  createOptions: (outputs: OutputOptions[], isMinify: boolean) => UserConfig\r\n) {\r\n  options.verbose ??= isVerbose;\r\n\r\n  const outputs = normalizeOutputs(output, { format: options?.format || 'es' });\r\n\r\n  for (const output of outputs) {\r\n    if (output.format === 'umd') {\r\n      output.name = options?.umdName;\r\n    }\r\n  }\r\n\r\n  const all: UserConfig[] = [];\r\n\r\n  const opt = createOptions(outputs, false);\r\n  all.push(mergeOptions(opt, options.vite));\r\n\r\n  if (options?.minify === MinifyOptions.SEPARATE_FILE) {\r\n    const minOutputs = outputs.map((output) => {\r\n      return appendMinFileName(output);\r\n    });\r\n\r\n    const minOptions = createOptions(minOutputs, true);\r\n\r\n    all.push(mergeOptions(minOptions, options?.vite));\r\n  }\r\n\r\n  return all;\r\n}\r\n","import { RunnerCliParams, RunningTasks } from '@/types';\r\nimport chalk from 'chalk';\r\nimport { type rollup, RollupWatcher, watch } from 'rollup';\r\nimport { build, defineConfig, mergeConfig, type UserConfig, type UserConfigExport } from 'vite';\r\n\r\nexport async function buildAll(runningTasks: RunningTasks, params: RunnerCliParams) {\r\n  const all = [];\r\n\r\n  for (const name in runningTasks) {\r\n    const promises = [];\r\n    const configList = runningTasks[name];\r\n\r\n    console.log(`▶️ - ${chalk.cyan(name)} Start...`);\r\n\r\n    for (const config of configList) {\r\n      const output = build(defineConfig(config));\r\n\r\n      if (params.series) {\r\n        await output;\r\n      }\r\n\r\n      promises.push(output);\r\n    }\r\n\r\n    const allPromise = Promise.all(promises).then(() => {\r\n      console.log(`✅ - ${chalk.cyan(name)} completed.`);\r\n    });\r\n\r\n    if (params.series) {\r\n      await allPromise;\r\n    }\r\n\r\n    all.push(allPromise);\r\n  }\r\n\r\n  await Promise.all(all);\r\n}\r\nexport async function watchAll(runningTasks: RunningTasks, params: RunnerCliParams) {\r\n  const all = [];\r\n  const watcherPromises: Promise<RollupWatcher>[] = [];\r\n\r\n  for (const name in runningTasks) {\r\n    const promises = [];\r\n    const configList = runningTasks[name];\r\n\r\n    console.log(`▶️ - ${chalk.cyan(name)} Start...`);\r\n\r\n    for (const config of configList) {\r\n      const watcher = build(\r\n        mergeConfig(\r\n          defineConfig(config),\r\n          {\r\n            build: { watch: {} },\r\n          }\r\n        )\r\n      ) as Promise<RollupWatcher>;\r\n\r\n      watcher.then((watcher) => {\r\n        watcher.on(\"event\", (e) => {\r\n          switch (e.code) {\r\n            case \"START\":\r\n              console.log(\"→ Start Watching...\");\r\n              break;\r\n            case \"BUNDLE_START\":\r\n              console.log(\"→ Start Bundling...\");\r\n              break;\r\n            case \"BUNDLE_END\":\r\n              console.log(`✔ Bundled, uses ${e.duration}ms`);\r\n              // Must manually close it.\r\n              e.result?.close();\r\n              break;\r\n            case \"END\":\r\n              console.log(\"Watching...\");\r\n              break;\r\n            case \"ERROR\":\r\n              console.error(\"✖ ERROR: \", e.error);\r\n              break;\r\n          }\r\n        });\r\n      });\r\n\r\n      watcherPromises.push(watcher);\r\n    }\r\n  }\r\n\r\n  const watchers: RollupWatcher[] = await Promise.all(watcherPromises);\r\n\r\n  process.on(\"SIGINT\", async () => {\r\n    for (const watcher of watchers) {\r\n      await watcher.close();\r\n    }\r\n    console.log(\"\\n🛑 STOP Watching...\");\r\n    process.exit(0);\r\n  });\r\n}\r\n\r\n","import { existsSync } from 'node:fs';\r\nimport { isAbsolute, resolve } from 'node:path';\r\nimport { MaybeArray, MaybePromise } from 'rollup';\r\nimport { UserConfig } from 'vite';\r\nimport { ConfigResult, LoadedConfigTask, RunnerCliParams } from '../types/runner';\r\n\r\nexport async function loadConfigFile(configFile: ConfigResult): Promise<Record<string, LoadedConfigTask>> {\r\n  let path = configFile.path;\r\n\r\n  // If is Windows, Add \"file://\" prefix to path\r\n  if (process.platform === 'win32') {\r\n    // Replace backslash to slash\r\n    const winPath = path.replace(/\\\\/g, '/');\r\n    // Add file:// prefix if not exists\r\n    if (!winPath.startsWith('file://')) {\r\n      // Add extra slash to make it absolute path\r\n      // e.g. C:/path/to/file\r\n      // becomes file:///C:/path/to/file\r\n      path = `file:///${winPath}`;\r\n    }\r\n  }\r\n\r\n  const modules = await import(path);\r\n\r\n  return { ...modules };\r\n}\r\n\r\nexport async function resolveTaskOptions(task: LoadedConfigTask, resolveSubFunctions = false): Promise<UserConfig[]> {\r\n  if (!resolveSubFunctions && Array.isArray(task)) {\r\n    const results = await Promise.all(task.map((task) => resolveTaskOptions(task, true)));\r\n    return results.flat();\r\n  }\r\n\r\n  if (typeof task === 'function') {\r\n    return resolvePromisesToFlatArray(await task(), task?.name);\r\n  }\r\n\r\n  return resolvePromisesToFlatArray((await task) as MaybeArray<UserConfig>, task?.name);\r\n}\r\n\r\nasync function resolvePromisesToFlatArray(tasks: MaybeArray<MaybePromise<UserConfig>>, name?: string) {\r\n  if (!Array.isArray(tasks)) {\r\n    return [await tasks];\r\n  }\r\n\r\n  const resolvedTasks = await Promise.all(tasks);\r\n  const returnTasks = [];\r\n\r\n  for (const resolvedTask of resolvedTasks) {\r\n    if (Array.isArray(resolvedTask)) {\r\n      returnTasks.push(...resolvedTask);\r\n    } else {\r\n      returnTasks.push(resolvedTask);\r\n    }\r\n  }\r\n\r\n  return returnTasks;\r\n}\r\n\r\nexport function mustGetAvailableConfigFile(root: string, params: RunnerCliParams): ConfigResult {\r\n  const found = getAvailableConfigFile(root, params);\r\n\r\n  if (!found) {\r\n    throw new Error('No config file found. Please create a fusionfile.js or fusionfile.ts in the root directory.');\r\n  }\r\n\r\n  return found;\r\n}\r\n\r\nexport function getAvailableConfigFile(root: string, params: RunnerCliParams): ConfigResult | null {\r\n  let found = params?.config;\r\n\r\n  if (found) {\r\n    // If is not absolute of system path(consider Windows), prepend root\r\n    if (!isAbsolute(found)) {\r\n      found = resolve(root, found);\r\n    }\r\n\r\n    if (existsSync(found)) {\r\n      return {\r\n        path: found,\r\n        // get filename from file path\r\n        filename: found.split('/').pop() || '',\r\n        type: getConfigModuleType(found),\r\n        ts: isConfigTypeScript(found),\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  return findDefaultConfig(root);\r\n}\r\n\r\nexport function findDefaultConfig(root: string): ConfigResult | null {\r\n  let file = resolve(root, 'fusionfile.js');\r\n\r\n  if (existsSync(file)) {\r\n    return {\r\n      path: file,\r\n      // get filename from file path\r\n      filename: file.split('/').pop() || '',\r\n      type: 'commonjs',\r\n      ts: false,\r\n    };\r\n  }\r\n\r\n  file = resolve(root, 'fusionfile.mjs');\r\n\r\n  if (existsSync(file)) {\r\n    return {\r\n      path: file,\r\n      // get filename from file path\r\n      filename: file.split('/').pop() || '',\r\n      type: 'module',\r\n      ts: false,\r\n    };\r\n  }\r\n\r\n  file = resolve(root, 'fusionfile.ts');\r\n\r\n  if (existsSync(file)) {\r\n    return {\r\n      path: file,\r\n      // get filename from file path\r\n      filename: file.split('/').pop() || '',\r\n      type: 'module',\r\n      ts: true,\r\n    };\r\n  }\r\n\r\n  file = resolve(root, 'fusionfile.mts');\r\n\r\n  if (existsSync(file)) {\r\n    return {\r\n      path: file,\r\n      // get filename from file path\r\n      filename: file.split('/').pop() || '',\r\n      type: 'module',\r\n      ts: true,\r\n    };\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getConfigModuleType(file: string) {\r\n  let type: 'commonjs' | 'module' | 'unknown' = 'unknown';\r\n\r\n  if (file.endsWith('.cjs')) {\r\n    type = 'commonjs';\r\n  } else if (file.endsWith('.mjs')) {\r\n    type = 'module';\r\n  } else if (file.endsWith('.ts') || file.endsWith('.mts')) {\r\n    type = 'module';\r\n  }\r\n\r\n  return type;\r\n}\r\n\r\nfunction isConfigTypeScript(file: string) {\r\n  return file.endsWith('.ts') || file.endsWith('.mts');\r\n}\r\n","import chalk from 'chalk';\r\nimport archy, { type Data } from 'archy';\r\nimport { shuffle } from 'lodash-es';\r\nimport { MaybeArray, OutputOptions, RollupOptions } from 'rollup';\r\nimport { LibraryOptions, UserConfig } from 'vite';\r\nimport { resolveTaskOptions } from './config';\r\nimport { LoadedConfigTask } from '../types/runner';\r\n\r\nexport async function displayAvailableTasks(tasks: Record<string, LoadedConfigTask>) {\r\n  const keys = Object.keys(tasks);\r\n\r\n  // Sort put default as first if exists\r\n  keys.sort((a, b) => {\r\n    if (a === 'default') {\r\n      return -1;\r\n    }\r\n\r\n    if (b === 'default') {\r\n      return 1;\r\n    }\r\n\r\n    return a.localeCompare(b);\r\n  });\r\n\r\n  const nodes: Array<Data | string> = [];\r\n\r\n  for (const key of keys) {\r\n    const task = tasks[key];\r\n    const taskOptions = await resolveTaskOptions(task, true);\r\n\r\n    nodes.push(await describeTasks(key, taskOptions));\r\n  }\r\n\r\n  const text = archy({\r\n    label: chalk.magenta('Available Tasks'),\r\n    nodes\r\n  });\r\n\r\n  console.log(text);\r\n}\r\n\r\nasync function describeTasks(name: string, tasks: MaybeArray<UserConfig>): Promise<Data> {\r\n  const nodes = [];\r\n  // console.log(name, tasks)\r\n  if (!Array.isArray(tasks)) {\r\n    tasks = [tasks]\r\n  }\r\n  \r\n  for (const task of tasks) {\r\n    if (typeof task === 'function') {\r\n      let taskOptions = await resolveTaskOptions(task, true);\r\n\r\n      nodes.push(\r\n        await describeTasks((task as Function).name, taskOptions)\r\n      );\r\n    } else {\r\n      nodes.push(describeTaskDetail(task));\r\n    }\r\n  }\r\n\r\n  return {\r\n    label: chalk.cyan(name),\r\n    nodes\r\n  };\r\n}\r\n\r\nfunction describeTaskDetail(task: UserConfig, indent: number = 4): string {\r\n  const str = [];\r\n\r\n  const lib = task.build?.lib;\r\n\r\n  // Input\r\n  if (lib && lib.entry) {\r\n    const entry = lib.entry;\r\n\r\n    let inputStr = '';\r\n    if (typeof entry === 'string') {\r\n      inputStr = chalk.yellow(entry);\r\n    } else if (Array.isArray(entry)) {\r\n      inputStr = chalk.yellow(entry.join(', '));\r\n    } else if (typeof entry === 'object') {\r\n      inputStr = chalk.yellow(Object.values(entry).join(', '));\r\n    }\r\n    str.push(`Input: ${inputStr}`);\r\n  }\r\n\r\n  const output = task.build?.rollupOptions?.output;\r\n\r\n  // Output\r\n  if (output) {\r\n    const outputs = Array.isArray(output) ? output : [output];\r\n    outputs.forEach((output, index) => {\r\n      let outStr = '';\r\n      if (output.file) {\r\n        outStr = chalk.green(output.file);\r\n      } else if (output.dir) {\r\n        outStr = chalk.green(output.dir);\r\n      }\r\n      str.push(`Output[${index}]: ${outStr}`);\r\n    });\r\n  }\r\n\r\n  return str.join(\" - \");\r\n}\r\n\r\nfunction countTask(task: MaybeArray<UserConfig>) {\r\n  if (Array.isArray(task)) {\r\n    return task.length;\r\n  }\r\n\r\n  return 1;\r\n}\r\n","import chalk from 'chalk';\r\nimport { uniq } from 'lodash-es';\r\nimport { MaybeArray } from 'rollup';\r\nimport { resolveTaskOptions } from '@/runner/config';\r\nimport { LoadedConfigTask, RunningTasks } from '@/types/runner';\r\nimport { UserConfig } from 'vite';\r\n\r\nexport function selectRunningTasks(\r\n  input: string[],\r\n  tasks: Record<string, LoadedConfigTask>\r\n): Record<string, LoadedConfigTask> {\r\n  input = uniq(input);\r\n\r\n  if (input.length === 0) {\r\n    input.push('default');\r\n  }\r\n\r\n  const selected: Record<string, LoadedConfigTask> = {};\r\n\r\n  for (const name of input) {\r\n    if (tasks[name]) {\r\n      selected[name] = tasks[name];\r\n    } else {\r\n      throw new Error(`Task \"${chalk.cyan(name)}\" not found in fusion config.`);\r\n    }\r\n  }\r\n\r\n  return selected;\r\n}\r\n\r\nexport async function resolveAllTasksAsOptions(tasks: Record<string, LoadedConfigTask>): Promise<RunningTasks> {\r\n  const cache: Record<string, MaybeArray<LoadedConfigTask>> = {};\r\n  const allTasks: RunningTasks = {};\r\n\r\n  for (const name in tasks) {\r\n    const task = tasks[name];\r\n\r\n    allTasks[name] = (await resolveTaskAsFlat(name, task, cache));\r\n  }\r\n\r\n  return allTasks;\r\n}\r\n\r\nexport async function resolveTaskAsFlat(\r\n  name: string,\r\n  task: LoadedConfigTask,\r\n  cache: Record<string, MaybeArray<LoadedConfigTask>>\r\n): Promise<UserConfig[]> {\r\n  const results: UserConfig[] = [];\r\n\r\n  if (Array.isArray(task)) {\r\n    for (const n in task) {\r\n      const t = task[n];\r\n      results.push(...await resolveTaskAsFlat(n, t, cache));\r\n    }\r\n  } else if (typeof task === 'function') {\r\n    name = task.name || name;\r\n\r\n    if (cache[name]) {\r\n      return [];\r\n    }\r\n\r\n    cache[name] = task;\r\n\r\n    const resolved = await resolveTaskOptions(task, true);\r\n\r\n    if (Array.isArray(resolved)) {\r\n      for (const n in resolved) {\r\n        const t = resolved[n];\r\n        results.push(...await resolveTaskAsFlat(n, t, cache));\r\n      }\r\n    }\r\n  } else {\r\n    results.push(await task);\r\n  }\r\n\r\n  return results;\r\n}\r\n","import { buildAll, watchAll } from '@/runner/build';\r\nimport { loadConfigFile, mustGetAvailableConfigFile } from '@/runner/config';\r\nimport { displayAvailableTasks } from '@/runner/describe';\r\nimport { resolveAllTasksAsOptions, selectRunningTasks } from '@/runner/tasks';\r\nimport { RunnerCliParams } from '@/types/runner';\r\nimport { defineAllConfigs } from '@/utilities/vite';\r\nimport { resolve } from 'node:path';\r\nimport { inspect } from 'node:util';\r\nimport yargs from 'yargs';\r\nimport { hideBin } from 'yargs/helpers';\r\n\r\nexport function parseArgv(): RunnerCliParams {\r\n  const app = yargs();\r\n\r\n  app.option('watch', {\r\n    alias: 'w',\r\n    type: 'boolean',\r\n    description: 'Watch files for changes and re-run the tasks',\r\n  });\r\n\r\n  app.option('cwd', {\r\n    type: 'string',\r\n    description: 'Current working directory',\r\n  });\r\n\r\n  app.option('list', {\r\n    alias: 'l',\r\n    type: 'boolean',\r\n    description: 'List all available tasks',\r\n  });\r\n\r\n  app.option('config', {\r\n    alias: 'c',\r\n    type: 'string',\r\n    description: 'Path to config file',\r\n  });\r\n\r\n  app.option('series', {\r\n    alias: 's',\r\n    type: 'boolean',\r\n    description: 'Run tasks in series instead of parallel',\r\n  });\r\n\r\n  app.option('verbose', {\r\n    alias: 'v',\r\n    type: 'count',\r\n    description: 'Increase verbosity of output. Use multiple times for more verbosity.',\r\n  });\r\n\r\n  return app.parseSync(hideBin(process.argv));\r\n}\r\n\r\nexport async function runApp(argv: RunnerCliParams) {\r\n  try {\r\n    await processApp(argv);\r\n\r\n    // Success exit\r\n    // process.exit(0);\r\n  } catch (e) {\r\n    if (e instanceof Error) {\r\n      if (argv.verbose && argv.verbose > 0) {\r\n        throw e;\r\n      } else {\r\n        console.error(e);\r\n        process.exit(1);\r\n      }\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function processApp(params: RunnerCliParams) {\r\n  let cwd = params?.cwd;\r\n  let root: string;\r\n\r\n  if (cwd) {\r\n    root = cwd = resolve(cwd);\r\n    process.chdir(cwd);\r\n  } else {\r\n    root = process.cwd();\r\n  }\r\n\r\n  // Retrieve config file\r\n  const configFile = mustGetAvailableConfigFile(root, params);\r\n\r\n  // Load config\r\n  const tasks = await loadConfigFile(configFile);\r\n\r\n  // Describe tasks\r\n  if (params.list) {\r\n    await displayAvailableTasks(tasks);\r\n    return;\r\n  }\r\n\r\n  // Select running tasks\r\n  const selectedTasks = selectRunningTasks([...params._] as string[], tasks);\r\n\r\n  const runningTasks = (await resolveAllTasksAsOptions(selectedTasks));\r\n\r\n  if (params.watch) {\r\n    await watchAll(runningTasks, params);\r\n  } else {\r\n    await buildAll(runningTasks, params);\r\n  }\r\n}\r\n","\r\nexport * from '@/dep';\r\nimport * as fusion from '@/dep';\r\nimport { parseArgv, runApp } from '@/runner/app';\r\nimport { RunnerCliParams } from '@/types/runner';\r\nimport { fileURLToPath } from 'node:url';\r\n\r\nlet params: RunnerCliParams | undefined = undefined;\r\n\r\nconst isCliRunning = process.argv[1] && fileURLToPath(import.meta.url) === process.argv[1];\r\n\r\nexport default {\r\n  ...fusion,\r\n  params,\r\n};\r\n\r\nif (isCliRunning) {\r\n  params = parseArgv();\r\n\r\n  runApp(params);\r\n}\r\n\r\nconst isVerbose = params?.verbose ? params?.verbose > 0 : false;\r\n\r\nexport { isVerbose };\r\n"],"names":["MinifyOptions","forceArray","item","handleMaybeArray","items","callback","normalizeOutputs","output","defaultOptions","dirname","normalize","mergeOptions","base","overrides","override","appendMinFileName","cloneDeep","parts","ext","createViteLibOptions","input","extraOptions","createViteOptions","lib","css","options","isVerbose","outputs","all","opt","createOptions","config","minOutput","o","autoprefixer","js","esbuild","useJsProcessor","isMinify","minOutputs","minOptions","buildAll","runningTasks","params","name","promises","configList","chalk","build","defineConfig","allPromise","watchAll","watcherPromises","watcher","mergeConfig","e","watchers","loadConfigFile","configFile","path","winPath","resolveTaskOptions","task","resolveSubFunctions","resolvePromisesToFlatArray","tasks","resolvedTasks","returnTasks","resolvedTask","mustGetAvailableConfigFile","root","found","getAvailableConfigFile","isAbsolute","resolve","existsSync","getConfigModuleType","isConfigTypeScript","findDefaultConfig","file","type","displayAvailableTasks","keys","a","b","nodes","key","taskOptions","describeTasks","text","archy","describeTaskDetail","indent","str","entry","inputStr","index","outStr","selectRunningTasks","uniq","selected","resolveAllTasksAsOptions","cache","allTasks","resolveTaskAsFlat","results","n","t","resolved","parseArgv","app","yargs","hideBin","runApp","argv","processApp","cwd","selectedTasks","isCliRunning","fileURLToPath","_documentCurrentScript","fusion"],"mappings":"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"}